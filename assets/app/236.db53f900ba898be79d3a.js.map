{"version":3,"file":"236.db53f900ba898be79d3a.js","mappings":";qGAOA,MAAMA,EAAc,EAAQ,MACtBC,EAAiB,EAAQ,OAE/BC,EAAOC,QAAU,cAAyD,EAKvEC,YAAYC,EAAKC,GAGdC,MAAMF,EAFNC,EAASA,GAAU,8CAGnB,IAAIE,EAAIC,KAAKC,QAGTC,EAAM,CACPC,UAAWH,KAAKI,OAAO,GAAGP,iBAC1BQ,MAAOL,KAAKI,OAAO,GAAGP,uBACtBS,gBAAiBN,KAAKI,OAAO,GAAGP,iCAEhCU,WAAYP,KAAKI,OAAO,GAAGP,4BAC3BW,aAAcR,KAAKI,OAAO,GAAGP,+BAIhCG,KAAKS,GAAK,CACPC,KAAM,SACNC,SAAU,SACVC,GAAIV,EAAIC,UACRU,QAAQ,EACRC,OAAO,EACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,iBACTmB,IAAK,cACLG,MAAO,UAEV,CACGX,KAAM,SACNU,MAAOrB,EAAE,SACTuB,WAAW,EACXD,MAAO,SACPE,MAAO,WACJC,EAAOhB,cACV,KASTiB,KAAM,CACHf,KAAM,aACNgB,OAAQ,IACRR,IAAK,sBACLS,YAAY,EACZF,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGnB,KAAM,aACNE,GAAIV,EAAIG,MACRe,MAAOrB,EAAE,cACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCC,QAAS,CAEN,CAAEvB,GAAI,YAAaF,KAAM,cAE5B0B,GAAI,CACDC,SAAU,SAAUzB,EAAI0B,EAAIC,GACzBf,EAAOa,SAASzB,EACnB,IAGN,CACGG,OAAQ,GACRa,KAAM,QAET,CACGlB,KAAM,YACNE,GAAIV,EAAII,gBACRkC,QAAS,EAETC,MAAO,CACJ,CACG7B,GAAI,SACJF,KAAM,QACNU,MAAOrB,EAAE,2BAIlB,CAAEgB,OAAQ,IACV,CACGI,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNiC,MAAO5C,EAAE,UACTmB,IAAK,mBACLI,WAAW,EACXC,MAAO,WACJC,EAAOhB,cACV,GAEH,CACGE,KAAM,SACNQ,IAAK,gBACLN,GAAIV,EAAIK,WACRa,MAAOrB,EAAE,cACTuB,WAAW,EACXM,KAAM,OACNL,MAAO,WACJC,EAAOjB,YACV,QAOlB6B,GAAI,CAIDQ,OAAQ,WACLpB,EAAOqB,YACV,IAIN,IAAIC,EAAc,CAAC,EACfC,EAAiB,CAAC,EAClBC,EAAoB,CAAC,EACrBC,EAAiB,KAEjBC,EAAiB,KAEjBC,EAAyB,KAEzBC,EAAW,GAEXC,EAAa,KAGjBrD,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAIxDE,MAAMhD,GAAGT,KAAKS,IACdgD,MAAMC,OAAOC,GAAGzD,EAAIC,WAAYsD,MAAMG,aAEtC,IAAIC,EAASrE,EAAesE,YAKxBC,EAAgB,CACjBrD,KAAM,YACNE,GAAIV,EAAII,gBACR0D,SAAS,EACTnC,KAAM,IAGTgC,EAAOI,SAAQ,SAAUC,GACtB,IAAIC,EAAWD,EAAEE,WAAWD,SACxBE,EAAMH,EAAEE,WAAWC,IAGvBjB,EAASkB,KAAK,CAAE1D,GAAIuD,EAAUxB,MAAOwB,IAGrC,IAAII,EAAkBL,EAAEM,oBAAoB5E,EAAKC,GAC5CsD,IACFA,EAAyBoB,GAG5BR,EAAclC,KAAKyC,KAAKC,EAAgB9D,IAExCqC,EAAYqB,GAAYD,EACxBnB,EAAeoB,GAAYI,EAC3BvB,EAAkBqB,GAAOE,CAC5B,IASAZ,GAAGzD,EAAIG,OAAOoE,OAAO,UAAWrB,GAChCO,GAAGzD,EAAIG,OAAOqE,UAGdjB,MAAMhD,GAAGsD,EAAeJ,GAAGzD,EAAII,kBAG/B,IAAK,IAAIiD,KAAKR,EACXA,EAAeQ,GAAGD,OAElBP,EAAeQ,GAAGoB,OAGrBxB,EAAuByB,OACvB3B,EAAiBE,EAGjBQ,GAAGzD,EAAIG,OAAOwE,SAASzB,EAAS,GAAGxC,GAAG,EAQzC,IAAIY,EAAUxB,KAAKwB,OAAS,CACzBsD,gBAAkBC,IAIf,IAAK,IAAIZ,KAAYpB,EAEfA,EAAeoB,IACfpB,EAAeoB,GAAU3C,OAAOsD,iBAEhC/B,EAAeoB,GAAU3C,OAAOsD,gBAAgBC,EAEtD,EAGHC,WAAaC,IAIV,IAAK,IAAId,KAHTjB,EAAiB+B,EAGIlC,EAEfA,EAAeoB,IACfpB,EAAeoB,GAAU3C,OAAOwD,YAEhCjC,EAAeoB,GAAU3C,OAAOwD,WAAW9B,EAEjD,EAGH1C,aAAc,WAIX,IAAK,IAAI+C,KAHT/B,EAAOqB,aAGOE,EACXA,EAAeQ,GAAG2B,QAIrBvB,GAAGzD,EAAIC,WAAWwE,MACrB,EAEApE,WAAY4E,iBACTxB,GAAGzD,EAAIK,YAAY6E,UAEnBzB,GAAGzD,EAAIC,WAAWkF,eAElB,IAAIC,EAASrC,EACb,GAAIqC,EAED,GAAIA,EAAOC,UAAW,CACnB,IAKIC,EALAC,EAAOzF,KAAK+B,GAAG2D,UAAUJ,EAAOK,UAEhCC,EAAQ,KACRC,EAAU,KAKd,GAAKxC,EAoEE,CAEAoC,EAAKrE,QAAOiC,EAAWjC,MAAQqE,EAAKrE,OAGxCyE,EAAUxC,EAAWyC,QAGrB,IAAIC,EAAe/F,KAAK+B,GAAG2D,UAAUG,GACrC,IAAK,IAAIxB,KAAOoB,EAEb,GACU,YAAPpB,GACAoB,EAAe,UACY,iBAApBA,EAAe,SACvB,CACCM,EAAuB,SACpBA,EAAuB,UAAK,CAAC,EAEhC,IAAK,IAAIC,KAAcP,EAAe,SACnCM,EAAuB,SAAEC,GACtBP,EAAe,SAAEO,EAE1B,MACGD,EAAa1B,GAAOoB,EAAKpB,GAI/BhB,EAAW4C,WAAWF,GAEtBH,EAAQvC,CACX,KAnGiB,CAKd,IAAIrC,EAAQ,GAA0B,IAHtC4E,EAAQ1C,EAAegD,SAAST,IAGTrE,MAAM+E,OAW7B,GAVIP,EAAMQ,SAASC,WAChBrF,GAAgB,IAEfA,EAAQ,MACTA,EAAQ,KAGX4E,EAAMQ,SAASpF,MAAQA,EAGN,iBAAb4E,EAAMvB,IAAwB,CAC/B,IAAIiC,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3Bb,EAAMQ,SAASM,SAAW,EAE1B,IAAIC,EAAaf,EAAMgB,eAGvB,IAAIC,EAAiBjB,EAAMkB,WAIxBH,EAAWI,QACPC,GAAMA,EAAEF,YAAcD,IACxBV,SAEFU,EAAiB,GAAGA,IAAiBP,KAKV,QAA3BV,EAAMQ,SAASa,UACe,QAA9BrB,EAAMQ,SAASc,cAGfL,EAAiB,GAAG3D,EAAeiE,OAAOb,KAG7Cd,EAAUmB,EAAWT,SAAS,CAG3B7B,IAAKuB,EAAMvB,IAEXyC,WAAYD,EACZzF,MAAO8B,EAAe9B,MAEtBgF,SAAU,CACPC,SAAUT,EAAMQ,SAASC,SAEzBM,WAAYf,EAAMX,OAAOrE,GACzBqG,SAAUrB,EAAMQ,SAASc,YACzBA,YAAatB,EAAMQ,SAASa,SAC5BG,WAAYxB,EAAMQ,SAASgB,WAC3BC,WAAYzB,EAAMQ,SAASiB,WAC3BC,YAAa1B,EAAMQ,SAASkB,YAC5BZ,SAAU,EACV1F,MAAOA,IAMhB,CACH,CAiCA,IAAIuG,EAAY3B,EAAML,UACtB,GAAIgC,EAAUC,OACXD,EAAUE,WAAW9D,GAAG2B,EAAO7E,GAAGG,KAI9BiF,GACDD,EAAMK,WAAWJ,GAGpBlC,GAAGzD,EAAIK,YAAYmH,SACnB/D,GAAGzD,EAAIC,WAAWwH,oBAElB,UACS/B,EAAMgC,OAEZ,IAAIC,EAAoB,KACrBlE,GAAGzD,EAAIK,YAAYmH,SACnB/D,GAAGzD,EAAIC,WAAWwH,eAClB1E,EAAeiC,QACf1D,EAAOmD,OACPnD,EAAOgC,UAAUsE,OAAOlC,EAAM,EAG7BmC,EAAgB,KAEjBvC,EAAQP,OAAO+C,QAAQtD,UAIvBkB,EAAMX,OAAO+C,QAAQtD,SAAS,EAIlB,MAAXc,GACDA,EAAQY,SAAS6B,WAAarC,EAAMhF,SAC9B4E,EAAQoC,OAGdhC,EAAMQ,SAAS6B,WAAazC,EAAQ5E,SAC9BgF,EAAMgC,OAGPvE,UACIuC,EAAMsC,sBACN1C,EAAQ0C,iBAGjBH,IACAF,KAEAA,GA6BN,CA3BE,MAAOM,GA2BT,CAEN,MACGxE,GAAGzD,EAAIK,YAAYmH,SACnB/D,GAAGzD,EAAIC,WAAWwH,oBAGrB3H,KAAK+B,GAAGqG,OAAOC,UACZ,IAAIC,MAAM,sCACV,CAAC,GAGJ3E,GAAGzD,EAAIK,YAAYmH,SACnB/D,GAAGzD,EAAIC,WAAWwH,cAgCxB,EAEAnE,UAAW,CACR+E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGH9D,KAAM,WACHhB,GAAGzD,EAAIC,WAAWwE,MACrB,EAEA+D,QAAS,SAAUC,GAQhB,GANAxF,EAAuByB,MAAK,GAAO,GACnC3B,EAAiBE,EAGbD,EAAe0F,aAAYD,EAAgB,iBAE3CA,EAAe,CAChB,IAAIE,EAAerJ,EAAesE,YAAYgF,QAC1C9B,GAAMA,EAAE5C,WAAWC,KAAOsE,IAC5B,GACF,IAAKE,EAAc,OACnB,IAAIE,EAAkBF,EAAazE,WAAWD,SAC9CR,GAAGzD,EAAIG,OAAOwE,SAASkE,GACvBpF,GAAGzD,EAAIG,OAAO+E,SACjB,MAGGzB,GAAGzD,EAAIG,OAAOqH,SAGjB/D,GAAGzD,EAAIG,OAAOuE,OAGdjB,GAAGzD,EAAIK,YAAYkE,OAAO,QAAS1E,EAAE,eACrC4D,GAAGzD,EAAIK,YAAYmE,SACtB,EAEAsE,SAAU,SAAUpD,GAKjB,IAAK,IAAIrC,KAJLN,GAAgBA,EAAe0B,OAIrB3B,EACPO,GAAKqC,EAAMvB,KACZrB,EAAkBO,GAAGqB,MAAK,GAAO,GACjC5B,EAAkBO,GAAG0F,SAASrD,GAC9B3C,EAAiBD,EAAkBO,IAEnCP,EAAkBO,GAAGoB,OAK3B,GACG1B,GACAA,EAAexC,IACfwC,EAAexC,GAAGyI,SACnB,CACC,IAAIC,EAAeC,IACZA,EAAKC,cAAgB1F,GAAGyF,EAAKxI,KAAO+C,GAAGyF,EAAKxI,IAAIwE,SACjDzB,GAAGyF,EAAKxI,IAAIwE,SACf,EAGHnC,EAAexC,GAAGyI,SAASjF,SAASmF,IACjCD,EAAYC,GAGZ,IAAIE,EAAaF,EAAKjI,MAAQiI,EAAKvH,KAC/ByH,GAAcA,EAAWrF,SAC1BqF,EAAWrF,SAASsF,IACjBJ,EAAYI,EAAU,GAE5B,GAEN,CAGA5F,GAAGzD,EAAIG,OAAOsE,OAGdhB,GAAGzD,EAAIK,YAAYkE,OAAO,QAAS1E,EAAE,SACrC4D,GAAGzD,EAAIK,YAAYmE,SACtB,EAQArC,SAAU,SAAU8E,GAGjB,IAAI7B,EAASvC,EAAeoE,GACxB7B,IACDA,EAAOV,OACP3B,EAAiBqC,EACjB3B,GAAGzD,EAAIG,OAAOmJ,OAMpB,EAEA3G,WAAY,WAET,GACGI,GACAA,EAAexC,IACfwC,EAAexC,GAAGyI,SACnB,CACC,IAAIO,EAAcL,IACXA,EAAKC,cAAgB1F,GAAGyF,EAAKxI,KAAO+C,GAAGyF,EAAKxI,IAAI8G,QACjD/D,GAAGyF,EAAKxI,IAAI8G,QACf,EAGHzE,EAAexC,GAAGyI,SAASjF,SAASmF,IACjCK,EAAWL,GAGX,IAAIE,EAAaF,EAAKjI,MAAQiI,EAAKvH,KAC/ByH,GAAcA,EAAWrF,SAC1BqF,EAAWrF,SAASsF,IACjBE,EAAWF,EAAU,GAE3B,GAEN,CAEApG,EAAuByB,OACvB3B,EAAiBE,EAGjBQ,GAAGzD,EAAIG,OAAOwE,SAASzB,EAAS,GAAGxC,GACtC,EAUAgE,KAAM,SAAUgB,EAAO8D,IACpBrG,EAAauC,GAGVpE,EAAOwH,SAASpD,GAEhBpE,EAAOkH,QAAQgB,GAGlB/F,GAAGzD,EAAIC,WAAWyE,MACrB,EAEA+E,UAAW,WAKR,IAAIC,EAAYjG,GAAGzD,EAAIG,OAAO4B,OAAO4H,KAAK,GAAGC,QAIrB,iBAAbF,IACRjG,GAAGzD,EAAIG,OAAO0J,WAAWpG,GAAGzD,EAAIG,OAAO4B,OAAO4H,KAAK,GAAGjJ,IACtDgJ,EAAYjG,GAAGzD,EAAIG,OAAO4B,OAAO4H,KAAK,GAAGC,SAGxCnG,GAAGiG,IAAYjG,GAAGiG,GAAWhF,MACpC,GAIH5E,KAAKgK,QAAQ,CAAC,GAKdhK,KAAK8E,gBAAkBtD,EAAOsD,gBAC9B9E,KAAKgF,WAAaxD,EAAOwD,WACzBhF,KAAK4E,KAAOpD,EAAOoD,IACtB,oBC/rBH,MAAMrF,EAAc,EAAQ,MAE5BE,EAAOC,QAAU,cAAuDH,EAGrEI,YAAYC,EAAKC,GAGdC,MAAMF,EAFNC,EAASA,GAAU,4CAGnB,IAAIE,EAAIC,KAAKC,QAGTC,EAAM,CACPC,UAAWH,KAAKI,OAAO,GAAGP,eAC1BoK,KAAMjK,KAAKI,OAAO,GAAGP,oBACrBqK,KAAMlK,KAAKI,OAAO,GAAGP,qBAIpBsK,EAAS,CACVzJ,KAAM,OACNE,GAAIV,EAAIgK,KAERvI,YAAY,EACZuH,SAAU,CACP,CACGxI,KAAM,SACNkB,KAAM,OACNV,IAAK,gBACLyB,MAAO5C,EAAE,gBACTqC,GAAI,CACDgI,YAAa,SAAUxJ,EAAIyJ,EAAG9H,GAC3Bf,EAAO8I,kBACP9I,EAAO+I,iBACV,MAMZvK,KAAKS,GAAK,CACPC,KAAM,QACNE,GAAIV,EAAIC,UAERa,MAAO,IACPS,KAAM0I,EACN/H,GAAI,CACDoI,OAAQ,WACLhJ,EAAOgJ,QACV,IAKNxK,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDE,MAAMhD,GAAGT,KAAKS,GAAG,EAGpB,IAAIgK,EAAgB,KAGpB,IAAIjJ,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CASRnB,SAAU,WAAa,GAQ1BiI,gBAAiB,SAAUI,EAASC,GACjC,IAAIC,EAAYjH,GAAGzD,EAAIgK,MAEnBW,EAAYD,EAAUE,gBAAgB3E,OAAS,EAC/C4E,EAAavJ,EAAOwJ,cAAa,GACrCJ,EAAUK,QACP,CACGrK,GAAI,OAAS6C,MAAMyH,MACnB/J,KAAM,CACH,CACGT,KAAM,QACNM,MAAO,IACPmB,QAAS4I,EACT3I,GAAI,CACDC,SAAU,SAAU8I,GAEjB3J,EAAO4J,cAAcD,EADZnL,KAEZ,IAGN,CACGU,KAAM,YACNM,MAAO,IACPmB,QAAS,CACN,CACGvB,GAAI,GACJ+B,MAAO5C,EAAE,yBAGfqC,GAAI,CACDC,SAAU,SAAUgJ,EAAMC,GAEvB9J,EAAO+I,iBACV,IAGN,CACG7J,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNZ,MAAO,GACPoB,GAAI,CACDgI,YAAa,WACVQ,EAAUY,WAAWxL,KAAKyL,iBAC1BjK,EAAOkK,kBAAiB,GACxBlK,EAAO+I,iBACV,MAKZM,GAICH,GACiBE,EACdE,gBACAD,GAAWC,gBAAgB,GACnBjG,SAAS6F,GAEpBC,GACmBC,EAChBE,gBACAD,GAAWC,gBAAgB,GACjBjG,SAAS8F,EAM7B,EAMAK,aAAc,SAAUW,GACJhI,GAAGzD,EAAIC,WAAxB,IACGyK,EAAYjH,GAAGzD,EAAIgK,MACnBa,EAAa,GAEhB,IAAKN,EAAc1D,SAAU,OAAOgE,EAcpC,GAXgBN,EAAc1D,SACpB9C,SAAS+C,IACZA,EAAE4E,mBACHb,EAAWzG,KAAK,CACb1D,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,OAEf,IAICuK,EAAiB,CAClB,IAAIE,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIC,EAAgBF,EAAMhB,gBAAgB,GAAGmB,WAC7C,GAAID,EAAe,CAChB,IAAIE,EAAc,KACDnB,EAAWjC,QAAO,SAAU9B,EAAG+E,GAC7C,OAAI/E,EAAEpG,IAAMoL,IACTE,EAAcH,GACP,EAIb,IAUAhB,EAAWoB,OAAOD,EAAa,EAClC,CACH,GAEN,CACA,OAAOnB,CACV,EAOA/F,WAAY,SAAUC,GACnBwF,EAAgBxF,CACnB,EAYAmH,YAAchG,IACXpG,KAAKqM,UAAYrM,KAAK+B,GAAG2D,UAAUU,EAAS,EAa/CkG,YAAa,WACV,IAAI1B,EAAYjH,GAAGzD,EAAIgK,MACpBqC,EAAa,GAEZV,EAAajB,EAAUE,gBAiB3B,OAhBIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WACnCM,EAAWjI,KAAK,CAEbD,IAAKqG,EACLC,IAAKA,GAGX,IAGI4B,CACV,EAEAnB,cAAe,SAAUD,EAAUqB,GAChC,IAAI1I,EAAY2G,EAAc1D,SAC1B0F,EAAe,GAChBC,EAAUF,EAAGf,gBAAgBX,gBAAgB,GAG7C3I,EAAU,KAQb,GANA2B,EAAUG,SAAS+C,IACZA,EAAEpG,IAAMuK,IACTsB,EAAezF,EAClB,IAGEyF,EAAL,CAEA,OAAQA,EAAapI,KAClB,IAAK,SAkBL,QACGlC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAE1B,MAjBH,IAAK,OACFoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,oBACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,qBAE1B,MACH,IAAK,SACFoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAWhC2M,EAAQjI,OAAO,UAAWtC,GAC1BuK,EAAQhI,UAORlD,EAAOkK,mBAEPlK,EAAO+I,iBAvCkB,CAwC5B,EAOAC,OAAQ,KACL,IAAII,EAAYjH,GAAGzD,EAAIgK,MAGvBzG,MAAMhD,GAAG0J,EAAQS,GAQjB,IAAI+B,EAAQ3M,KAAKqM,UACbM,GAASA,EAAM1I,SAChB0I,EAAM1I,SAAS2I,IACZpL,EAAO8I,gBAAgBsC,EAAEvI,IAAKuI,EAAEjC,IAAI,IAI7B,MAATgC,GAAiC,GAAhBA,EAAMxG,QACxB3E,EAAO8I,iBACV,EAOHoB,iBAAkB,SAAUmB,GACzB,IAAIjC,EAAYjH,GAAGzD,EAAIgK,MACpBa,EAAavJ,EAAOwJ,cAAa,GACjC8B,EAAiB,GACjBC,EAAmB,GAElBlB,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWjC,QAAO,SAAU9B,GACpC,OAAOA,EAAEpG,IAAM8J,CAClB,IAECsC,EAAS7G,OAAS,EAEnB2G,EAAexI,KAAK0I,EAAS,IAG7BD,EAAiBzI,KAAKwH,EAE5B,IAIEe,GACFE,EAAiB9I,SAAQ,SAAU6H,EAAOC,GACvCnB,EAAUY,WAAWM,EACxB,KAIHD,EAAajB,EAAUE,iBACR3E,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWjC,QAAO,SAAU9B,GACpC,OAAOA,EAAEpG,IAAM8J,CAClB,IAGCuC,EAAgCH,EAAehE,QAChD,SAAUoE,GACP,OACGC,MAAMC,QAAQJ,KACW,IAAzBA,EAASK,QAAQH,EAKvB,IAICI,EAAevC,EAAWjC,QAAO,SAAUoE,GAC5C,OACGC,MAAMC,QAAQH,KACgC,IAA9CA,EAA8BI,QAAQH,EAK5C,IAGApB,EAAMhB,gBAAgB,GAAGrG,OAAO,UAAW6I,GAC3CxB,EAAMhB,gBAAgB,GAAGpG,SAC5B,GAEN,EAMA6F,gBAAiB,KAEVvK,KAAKuN,iBAETvN,KAAKqM,UAAY7K,EAAO8K,cAExB9K,EAAOgC,UAAUnB,SAASrC,KAAKqM,WAAU,EAmB5CmB,cAAe,KACZxN,KAAKuN,gBAAiB,CAAI,EAG7BE,gBAAiB,KACdzN,KAAKuN,gBAAiB,CAAK,EAU9B3I,KAAM,CAAC8I,EAAOhD,EAASvI,KACpBX,EAAOgM,gBAEP7J,GAAGzD,EAAIC,WAAWyE,KAAK8I,EAAOvL,GAAW,MAErCuI,GACDlJ,EAAO8I,gBAAgBI,GAG1BlJ,EAAOiM,iBAAiB,EAU3BE,KAAM,SAAUC,EAAGC,GAChB,IAAIC,EAAS,EAETjC,EAAalI,GAAGzD,EAAIgK,MAAMY,gBA2C9B,OA1CIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,KAAIF,EAAW1F,OAAS,GAAK4F,GAAmB,GAAV+B,GAAtC,CAEA,IAAIpD,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WAE/BrG,EAAQ6E,EAAcsD,UAAUrD,GACpC,GAAK9E,EAAL,CAEA,IAAIoI,EAAKpI,EAAMkB,WAEXmH,EAASL,EAAEI,GACZE,EAASL,EAAEG,GAEVb,MAAMC,QAAQa,KACfA,GAAUA,GAAU,IAChBE,KAAI,SAAUC,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRnB,MAAMC,QAAQc,KACfA,GAAUA,GAAU,IAChBC,KAAI,SAAUC,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRL,GAAUC,IAERJ,EADQ,OAAPnD,EACQsD,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,EA3BpB,CANuC,CAoC5D,IAGIJ,CACV,GAIH9N,KAAKgK,QAAQ,CAAC,GAKdhK,KAAKgF,WAAaxD,EAAOwD,WACzBhF,KAAK4E,KAAOpD,EAAOoD,KACnB5E,KAAK2N,KAAOnM,EAAOmM,KAEnB3N,KAAK6E,SAAWrD,EAAO4K,YACvBpM,KAAKiM,SAAWzK,EAAO8K,WAC1B,oLC7jBCiC,EAAe,sBAyHnB,YAvHA,cAAsBA,EACnB5O,cACGG,QAEAE,KAAKwO,iBAAkB,EACvBxO,KAAKyO,QAAU,KAEfzO,KAAK0O,WAAa,KAIlB1O,KAAK2O,YAAc,KAInB3O,KAAK4O,WAAa,IAGrB,CAEAtL,KAAKvB,GAGF/B,KAAK+B,GAAKA,EACV,IAAI8M,EAAa7O,KAAK+B,GAAG+M,OAAOC,aAC5BF,IACD7O,KAAKwO,iBAAkB,EACvBxO,KAAKyO,QAAUI,GAGlB,IAAIG,EAAahP,KAAK+B,GAAG+M,OAAOG,aAehC,OAdID,IACDhP,KAAK0O,WAAaM,EAAWE,OAAS,GACtClP,KAAK2O,YAAcK,EAAWG,QAAU,GACxCnP,KAAK4O,WAAaI,EAAWI,OAAS,IAGzCpP,KAAK+B,GAAGsN,QAAQjN,GAAG,kBAAkB,CAACkN,EAASnH,EAAK0B,KAC7C1B,EACDK,QAAQ+G,MAAMpH,GAGjBnI,KAAKwP,KAAK,SAAU3F,EAAK,IAGrB4F,QAAQC,SAClB,CAEAC,gBACG,OACG3P,KAAKkP,OAAOU,GAAiB,yCAAXA,EAAEC,OAChB1J,OAAS,CAEnB,CAEA2J,gBACG,OAAO9P,KAAK+B,GAAG+M,OAAOiB,UACzB,CAEAC,mBACG,OACGhQ,KAAKkP,OAAOU,GAAiB,yCAAXA,EAAEC,OAChB1J,OAAS,CAEnB,CAEA8J,QACG,OAAOjQ,KAAKyO,SAASwB,OAAS,EACjC,CAEAC,WACG,OAAOlQ,KAAKyO,SAAS0B,cAAgB,IACxC,CAEAC,SACG,OAAOpQ,KAAK+B,GAAGsN,QAAQgB,KACpB,CACGC,IAAK,eACLzG,KAAM,CAAE0G,UAAWvQ,KAAK+B,GAAGyO,OAAOC,QAAQ,SAE7C,CACGpM,IAAK,iBACLiL,QAAS,CAAC,GAGnB,CAEAJ,MAAMwB,EAAK,MAAM,IACd,OAAQ1Q,KAAKyO,SAASS,OAAS,IAAIpG,OAAO4H,EAC7C,CACAC,WACG,OAAO3Q,KAAK0O,UACf,CAEAS,SACG,OAAOnP,KAAK2O,WACf,CAEAiC,WACG,OAAO5Q,KAAKyO,SAASmC,QACxB,CAEAC,WACG,OAAO7Q,KAAK4O,UACf,CAEAiB,OACG,OAAO7P,KAAKyO,SAASoB,IACxB,CAEAiB,UACG,OAAO9Q,KAAKyO,SAASsC,QACxB,CAEAC,yBACG,OAAOhR,KAAKyO,SAASuC,sBACxB,kBC9GH,SAKGC,MAAO,SAAUC,GACdzN,MAAM0N,MAAM,CACTC,MACGF,EAAKE,OACLrP,GAAGsP,aAAajQ,MAAM,yBAA0B,UACnDiN,KACG6C,EAAK7C,MACL6C,EAAKI,SACLvP,GAAGsP,aAAajQ,MACb,wBACA,wBAENmQ,GAAIL,EAAKK,IAAMxP,GAAGsP,aAAajQ,MAAM,sBAAuB,QAElE,EAIAoQ,QAAS,SAAUN,GAChB,IAAIE,EACDF,EAAKE,OACLrP,GAAGsP,aAAajQ,MAAM,kCAAmC,aACxDkQ,EACDJ,EAAK7C,MACL6C,EAAKI,SACLvP,GAAGsP,aAAajQ,MACb,gCACA,uCAGFqQ,EACDP,EAAKO,UACLP,EAAKK,IACLxP,GAAGsP,aAAajQ,MAAM,iBAAkB,SACvCsQ,EACDR,EAAKQ,SACLR,EAAKS,QACL5P,GAAGsP,aAAajQ,MAAM,gBAAiB,QAK1CqC,MAAMmO,QAAQ,CACXR,MAAOA,EACP/C,KAAMiD,EAENC,GAAIE,EACJE,OAAQD,EAERG,SAAU,SAAU/D,GACbA,EACGoD,EAAKY,OAAOZ,EAAKY,QAEjBZ,EAAKa,MAAMb,EAAKa,OAGnBb,EAAKW,UAAUX,EAAKW,SAAS/D,EACpC,GAmBN,EAKAkE,cAAe,SAAUd,GACtBlR,KAAKwR,QAAQ,CACVJ,MACGF,EAAKE,OACLrP,GAAGsP,aAAajQ,MACb,iCACA,oBAENmQ,GAAIL,EAAKK,IAAMxP,GAAGsP,aAAajQ,MAAM,oBAAqB,YAC1DuQ,OACGT,EAAKS,QACL5P,GAAGsP,aAAajQ,MAAM,oBAAqB,YAC9CiN,KACG6C,EAAK7C,MACL6C,EAAKI,SACLvP,GAAGsP,aAAajQ,MACb,+BACA,0CACA,CAAC,SAEPyQ,SAAU,SAAU/D,GACbA,EACGoD,EAAKY,OAAOZ,EAAKY,QAEjBZ,EAAKa,MAAMb,EAAKa,OAGnBb,EAAKW,UAAUX,EAAKW,SAAS/D,EACpC,GAEN,EAIAmE,QAAS,SAAUf,GAChB,IAAII,EAAUJ,EAAK7C,MAAQ6C,EAAKI,QAC5BY,EAAUhB,EAAKgB,SAAW,IAE9BzO,MAAM6N,QAAQ,CACXjD,KAAMiD,EACNa,OAAQD,GAEd,GCnIH,IAAIE,EAAU,EAAQ,OA2LtB,YAzLA,cAA2BA,EACxBzS,cACGG,MAAM,GAAI,CAAC,GAKXE,KAAKwO,iBAAkB,EACvBxO,KAAKyO,QAAU,KAEfzO,KAAKqS,iBAAkB,EACvBrS,KAAKsS,eAAiB,CAAC,EACvBtS,KAAKuS,qBAAuB,CAAC,CAChC,CAEAjP,KAAKvB,GAUF,OAPA/B,KAAK+B,GAAKA,EAEV/B,KAAKwS,OAASxS,KAAK+B,GAAG+M,OAAO2D,cAE7BzS,KAAK0S,aAAe,CAAC,EAGdjD,QAAQC,SAClB,CAEAiD,kBACG,OAAO3S,KAAK+B,GAAG6Q,QAAQ1C,UAC1B,CAEA9O,MAAMiD,EAAKwO,EAASlN,EAAS,GAAImN,GAAc,QAEtB,IAAXD,GAA0BxO,IAClCwO,EAAUxO,GAIW,GAApB0O,UAAU5M,QAAegH,MAAMC,QAAQyF,KACxClN,EAASkN,EACTA,EAAUxO,GAKbwO,EAAUA,EAAQG,QAAQ,KAAM,OAChC3O,EAAMA,EAAI2O,QAAQ,KAAM,OAYxB,IAAIC,EAASJ,EACI,KAAbI,EAAO,KACRA,EAASA,EAAOC,MAAM,IAEzB,IAAI9R,EAAQpB,KAAKwS,OAAOS,GAaxB,OAZK7R,IACE0R,GACD9S,KAAKmT,iBAAiB9O,EAAKwO,GAE9BzR,EAAQyR,GAGXlN,EAAO1B,SAAQ,CAACmP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACdjS,EAAQA,EAAMmS,WAAWD,EAAKF,EAAE,IAEnChS,EAAQA,EAAM4R,QAAQ,OAAQ,IAEjC,CAEAQ,YAAYC,EAAQZ,EAASlN,EAAS,IAEnC,IAAIvE,EAAQpB,KAAKoB,MAAMyR,EAASA,EAASlN,GAAQ,GAgBjD,OAfKvE,IAEFA,EAAQpB,KAAK0S,aAAae,GAAQZ,IAEhCzR,IAEFpB,KAAKuS,qBAAqBkB,GACvBzT,KAAKuS,qBAAqBkB,IAAW,CAAC,EACzCzT,KAAKuS,qBAAqBkB,GAAQZ,GAAWA,EAC7CzR,EAAQyR,GAEXlN,EAAO1B,SAAQ,CAACmP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACdjS,EAAQA,EAAMmS,WAAWD,EAAKF,EAAE,IAE5BhS,CACV,CAEAsS,YAIG,OAHAlL,QAAQ+G,MACL,mEAEI,EACV,CAEAoE,iBAAiBtP,EAAKmO,GACnBxS,KAAK0S,aAAarO,GAAOmO,CAC5B,CACAoB,kBAAkBvP,GACfmE,QAAQC,KAAK,8BAA+BpE,GAC5CmE,QAAQC,KAAK,oBAAqBzI,KAAK2S,mBACvC,IAAIH,EAASqB,KAAKC,UAAU9T,KAAKuS,qBAAqBlO,GAAM,KAAM,GAClEmE,QAAQC,KAAK+J,EAChB,CAEAW,iBAAiB9O,EAAKwO,GACf7S,KAAKqS,iBACN0B,aAAa/T,KAAKqS,iBAErB,IACI2B,EAAY,KACb,IAAIC,EAAc,GAClB,IAAIC,EAAgBC,OAAOC,KAAKpU,KAAKsS,gBAAgBnE,KACjDkG,GAAMrU,KAAKsS,eAAe+B,KAE9B,GAAIH,EAAc/N,QANH,GAOZ8N,EAAcC,EACdlU,KAAKsS,eAAiB,CAAC,OAEvB,IAAK,IAAIe,EAAI,EAAGA,GAVJ,GAUsBA,IAAK,CACpC,IAAIiB,EAAIJ,EAAcK,QACtBN,EAAY3P,KAAKgQ,UACVtU,KAAKsS,eAAegC,EAAEjQ,IAChC,CAEHrE,KAAK+B,GAAGsN,QAAQgB,KAAK,CAClBC,IAAK,8BACLzG,KAAM,CAAE2I,OAAQqB,KAAKC,UAAUG,MAE9BO,MAAK,KACCL,OAAOC,KAAKpU,KAAKsS,gBAAgBnM,OAAS,GAC3C6N,GACH,IAEFS,OAAOtM,IACUA,EAAIuM,WACRrH,QAAQ,kBAAoB,GACpC7E,QAAQ+G,MACL,8BAAgCvP,KAAK2S,kBAE3C,GACD,EAER3S,KAAKqS,gBAAkBsC,YAAW,KAC/BX,GAAW,GACX,KAEHhU,KAAKsS,eAAejO,GAAO,CAAEA,MAAKwO,UACrC,CAOA+B,UAEG,OADApM,QAAQ+G,MAAM,iDACPE,QAAQC,SAClB,CACA9H,OAEG,OADAY,QAAQ+G,MAAM,8CACPE,QAAQC,SAClB,CACA5J,QAEG,OADA0C,QAAQ+G,MAAM,+CACP,CAAC,CACX,CACAsF,eAEG,OADArM,QAAQ+G,MAAM,sDACP,CAAC,CACX,GCnLH,IAAI,EAAe,sBAWnB,MAAMuF,EAAS,EAAQ,OAGvB,IAAI,EAAS,KAoWb,QAhWA,cAA0B,EACvBnV,YAAYoV,GAGTjV,MAAM,CACHkV,UAAU,EACVC,aAAa,EACbC,aAAc,IAGjBlV,KAAKmV,QAAU,KAIfnV,KAAKoV,WAAa,EAIlBpV,KAAKqV,SAAWN,EAKhB/U,KAAKsV,YAAa,CAGrB,CASAhS,KAAKvB,EAAII,GAUN,OATAnC,KAAK+B,GAAKA,EAEV,EAAS/B,KAAK+B,GAAG+M,OAAOyG,cACxBpT,EAAUA,GAAW,CAAC,KAEnBnC,KAAKmV,QAAUhT,EAAQgT,SAAW,EAAOK,WAAWC,cACpDzV,KAAKoV,WACFjT,EAAQuT,mBAAqB,EAAOF,WAAWE,mBAE9CjG,QAAQC,SAClB,CAiBAiG,IAAIC,EAAQC,GACTD,EAAOhU,KAAOgU,EAAOhU,MAAQ,MAI7B,IAAIiI,EAAO+L,EAAO/L,MAAQ+L,EAAOA,OACjC,GAAI/L,EAAM,CACP,IAAIiM,EAAW,CAAC,SAAU,SAAU,WAChCC,EAAS5B,OAAOC,KAAKvK,GACrBsE,KAAI,SAAU9J,GACZ,IAAI2R,EAAMnM,EAAKxF,GAIf,OAHqC,GAAjCyR,EAASzI,eAAe2I,KACzBA,EAAMnC,KAAKC,UAAUkC,IAEjB3R,EAAM,IAAM4R,mBAAmBD,EACzC,IACC1H,KAAK,KAELA,EAAO,IACPsH,EAAOtF,IAAIjD,QAAQ,MAAQ,IAC5BiB,EAAO,KAEVsH,EAAOtF,IAAM,CAACsF,EAAOtF,IAAKyF,GAAQzH,KAAKA,EAC1C,CAEA,OAAOtO,KAAKkW,SAASN,EAAQC,EAChC,CAcAxF,KAAKuF,EAAQC,GAEV,OADAD,EAAOhU,KAAOgU,EAAOhU,MAAQ,OACtB5B,KAAKkW,SAASN,EAAQC,EAChC,CAcAM,IAAIP,EAAQC,GAET,OADAD,EAAOhU,KAAOgU,EAAOhU,MAAQ,MACtB5B,KAAKkW,SAASN,EAAQC,EAChC,CAcAO,OAAOR,EAAQC,GAEZ,OADAD,EAAOhU,KAAOgU,EAAOhU,MAAQ,SACtB5B,KAAKkW,SAASN,EAAQC,EAChC,CAMAQ,qBACG,OAAOrW,KAAKqV,SAASgB,oBACxB,CAEAC,QAAQV,GACL,OAAOd,EAAOc,EAAOtF,IAAKsF,GAAQpB,MAAM+B,GAK9BA,EAAO1M,MAEpB,CASAqM,SAASN,EAAQC,GAGd,GADAD,EAAOY,OAASZ,EAAOY,QAAU,EAC7BZ,EAAOY,QAAUxW,KAAKoV,WAAY,CACnC,IAAIjN,EAAM,IAAIG,MACX,qBAAqBtI,KAAKoV,mBAAmBQ,EAAOtF,OAWvD,OATAnI,EAAIsO,KAAO,kBACXzW,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,2CAGRuG,GACD7V,KAAKqV,SAASqB,gBAAgBb,EAAa1N,GAGvCsH,QAAQkH,OAAOxO,EACzB,CAEA,OAAO,IAAIsH,SAAQ,CAACC,EAASiH,KAC1Bf,EAAOtF,IAAMsF,EAAOtF,KAAO,IACN,KAAjBsF,EAAOtF,IAAI,KACZsF,EAAOtF,IAAMtQ,KAAKmV,QAAUS,EAAOtF,KAGtCsF,EAAOgB,QAAUhB,EAAOgB,SAAW,CAAC,EAChC5W,KAAK+B,GAAG6Q,QAAQiE,YACjBjB,EAAOgB,QAAQE,cAAgB9W,KAAK+B,GAAG6Q,QAAQiE,WAElDjB,EAAOgB,QAAQ,gBAAkB,mBAEjC,IAAIG,EAAW/W,KAAK+B,GAAGyO,OAAO5P,KAC1BmW,IACDnB,EAAOgB,QAAQ,gBAAkBG,GAKhC/W,KAAKqW,sBACNT,EAAOoB,OAASpB,EAAOoB,QAAUpB,EAAOhU,KACxCgU,EAAO1D,QAAU,IACjB0D,EAAO/L,KAAO+L,EAAO/L,MAAQ+L,EAAOA,cAC7BA,EAAOA,OAEd5V,KAAKsW,QAAQV,GACTpB,MAAM+B,IAKJ,IAAI1M,EAAO0M,EACPV,GACD7V,KAAKqV,SAASqB,gBAAgBb,EAAa,KAAMhM,GAEpD6F,EAAQ7F,EAAK,IAEf4K,OAAOtM,IAQL,GACqB,mBAAlBA,EAAI8O,YACH9O,EAAImJ,SAAWnJ,EAAImJ,QAAQjE,QAAQ,iBAAmB,EAyBvD,OAtBArN,KAAK+B,GAAGmV,UAAUC,IACf,0EAGHvB,EAAOY,cAGPxW,KAAKkW,SAASN,GACVpB,MAAM3K,IAEJ7J,KAAK+B,GAAG0G,KACL,wDAEHiH,EAAQ7F,EAAK,IAEf4K,OAAO2C,IACLpX,KAAK+B,GAAGqG,OAAOC,UAAU+O,EAAM,CAC5B9F,QAAS,sDAEZqF,EAAOS,EAAK,IAOA,KAAdjP,EAAIkP,OACLrX,KAAKwP,KAAK,gBAAiBrH,GACnBA,EAAIkP,QAAU,KAAOlP,EAAIkP,OAAS,IAC1CrX,KAAKwP,KAAK,mBAAoBrH,GACtBA,EAAIkP,QAAU,KACtBrX,KAAKwP,KAAK,kBAAmBrH,GAInC,IAAIoO,EAAS,KACb,GAAIpO,EAAImP,aACL,IACGf,EAAS1C,KAAK0D,MAAMpP,EAAImP,aACd,CAAX,MAAOjN,GAAI,CAGhB,GAAIkM,GAA2B,SAAjBA,EAAOc,OAElB,OAAiB,GAAbd,EAAO3V,IAA0B,YAAf2V,EAAOE,UAC1BzW,KAAKqV,SAAS7F,KAAK,WAItBxP,KAAK+B,GAAGqG,OAAOC,UAAUkO,EAAQ,CAC9BjH,QACG,mEACHzF,KAAM0M,EAAO1M,OAIZgM,GACD7V,KAAKqV,SAASqB,gBACXb,EACAU,EACA,MAGCI,EAAOJ,EAAO1M,OAGrB,IAAI0F,EAAQ,IAAIjH,MACb,GAAGH,EAAIkP,UAAUlP,EAAI8O,YAAc9O,EAAImJ,YACpCsE,EAAOoB,UACNpB,EAAOtF,OAed,OAbAf,EAAMiI,SAAWrP,EAAImP,aACrB/H,EAAMlB,KAAOlG,EAAI8O,WACjB1H,EAAMpH,IAAMA,EACZoH,EAAMe,IAAM,GAAGsF,EAAOoB,UAAUpB,EAAOtF,MACvCtQ,KAAK+B,GAAGqG,OAAOC,UAAUkH,EAAO,CAC7BD,QACG,4DAIFuG,GACD7V,KAAKqV,SAASqB,gBAAgBb,EAAatG,GAEvCoH,EAAOpH,EACjB,MAINvP,KAAK+B,GAAGmV,UAAUC,IACf,gEAEHnX,KAAKqV,SACDoC,MAAM7B,EAAQC,GACdrB,MAAK,KACH9E,EAAQ,CAAE2H,OAAQ,UAAW,IAE/B5C,MAAMkC,GACb,GAEN,CAUAe,OAAO9B,EAAQC,GAEZ,OAAO7V,KAAKkW,SAASN,EAAQC,EAChC,GCjXG8B,EAAmB,CAMtB,2BACA,2BACA,0BACA,2BACA,mBAgHH,EAzGA,cAAgC,EAC7BhY,YAAYoV,GAGTjV,MAAMiV,GAEN/U,KAAKsV,YAAa,EAKlBqC,EAAiB1T,SAAS3B,IACvBsV,GAAGC,OAAOzV,GAAGE,GAAKuH,IAIf,GAAIvH,EAAG+K,QAAQ,sBAAwB,GACvBxD,EAAKA,KACN,CACT,IAAIiO,EAAM9X,KAAK+B,GAAGgW,WAAWlO,EAAKmO,UAClC,GAAIF,EAAK,CACN,IAAI9P,EAAQ8P,EAAI9P,QACN,4BAAN1F,GACD0F,EAAMiQ,cAAcpO,EAAKA,KAC/B,CACH,CAEH7J,KAAK+B,GAAGyN,KAAKlN,EAAIuH,EAAK,GACvB,GAER,CAUAwM,qBACG,OAAOuB,GAAGC,OAAOK,aACpB,CAEA5B,QAAQV,GACL,OAAO,IAAInG,SAAQ,CAACC,EAASiH,KAC1Bf,EAAOoB,OAASpB,EAAOoB,OAAOmB,cAE9BP,GAAGC,OAAOO,QAAQxC,GAAQ,CAAC/L,EAAMwO,KAU9B,GAAIA,EAAMC,YAAc,IAAK,CAM1B,IAAIC,EAASF,EAAM9I,MAAQ8I,EAAM9I,MAAMmF,WAAa2D,EAAM5W,KAEtD0G,EAAM,IAAIG,MAAM,iBAAiBiQ,KACrCpQ,EAAIkP,OAASgB,EAAMC,WACnBnQ,EAAI8O,WAAasB,EACjBpQ,EAAImP,aAAee,EAAM5W,KAKzBkV,EAAOxO,EACV,KAAO,CAEJ,GAAI0B,aAAgBvB,MAEjB,YADAqO,EAAO9M,GAIS,iBAARA,IACRA,EAAOgK,KAAK0D,MAAM1N,IAKjBA,EAAKwN,QAAyB,SAAfxN,EAAKwN,OAErBV,EAAO,CACJU,OAAQgB,EAAMC,WACdhB,aAAczD,KAAK2E,UAAU3O,KAKhC6F,EAAQ7F,EAEd,IACD,GAER,GC3HH,IAAI,EAAe,sBA+cnB,YA1cA,cAAsB,EACnBlK,cACGG,QAEAE,KAAKyY,gBAAgB,GAGrBzY,KAAK0Y,UAAY,KAIjB1Y,KAAKyO,QAAU,KACfzO,KAAKqV,SAAW,KAMhBrV,KAAK2Y,YAAc,CAItB,CAEArV,KAAKvB,GAQF,GALA/B,KAAK+B,GAAKA,EAEV/B,KAAK0Y,UAAY,IAAI1Y,KAAK+B,GAAG6W,KAE7B5Y,KAAKyO,QAAUzO,KAAK+B,GAAG+M,OAAOyG,aAC1BvV,KAAKyO,QAAS,CACf,OAAQzO,KAAKyO,QAAQ+G,WAAWqD,aAC7B,IAAK,QAEF,MAEH,IAAK,SACF7Y,KAAKqV,SAAW,IAAI,EAAkBrV,MACtC,MAGH,QACGA,KAAKqV,SAAW,IAAI,EAAYrV,MAItC,OAAOA,KAAKqV,SAAS/R,KAAKvB,EAC7B,CAqBA,OApBGyG,QAAQ+G,MAAM,8BAMbqI,IAAMA,GAAGC,OAEVD,GAAGC,OAAOzV,GAAG,aAAa,KACvBpC,KAAK8Y,aACD9Y,KAAK+Y,oBACNhF,aAAa/T,KAAK+Y,mBAClB/Y,KAAK+Y,kBAAoB,KAC5B,KAGHvQ,QAAQ+G,MAAM,+CACdyJ,OAAOC,iBAAiB,UAAU,IAAMjZ,KAAK8Y,gBAGzCrJ,QAAQC,SAClB,CAWI4F,iBACD,OAAOtV,KAAKqV,SAASC,UACxB,CAcAK,OAAOC,GACJ,OAAO5V,KAAKqV,SAASM,OAAOC,GAAQpB,MAAM3K,GAChC7J,KAAKiY,cAAcpO,IAEhC,CAeAwG,QAAQuF,GACL,OAAO5V,KAAKqV,SAAShF,QAAQuF,GAAQpB,MAAM3K,GACjC7J,KAAKiY,cAAcpO,IAEhC,CAeAsM,OAAOP,GACJ,OAAO5V,KAAKqV,SAASc,OAAOP,GAAQpB,MAAM3K,GAChC7J,KAAKiY,cAAcpO,IAEhC,CAcAuM,UAAUR,GACP,OAAO5V,KAAKqV,SAASe,UAAUR,GAAQpB,MAAM3K,GACnC7J,KAAKiY,cAAcpO,IAEhC,CAMAqP,mBAEOlZ,KAAKqW,sBACNrW,KAAK8Y,aAAarE,OAAM,KAErBzU,KAAK+Y,kBAAoBpE,YAAW,KACjC3U,KAAKkZ,kBAAkB,GACvB,IAAI,IAEVlZ,KAAK+Y,kBAAoB,MAEzB/Y,KAAK+Y,kBAAoBpE,YAAW,KACjC3U,KAAKkZ,kBAAkB,GACvB,IAGT,CAQAC,gBACG,OAAOC,UAAUC,WAAWzX,IAC/B,CAQAyU,qBAEG,OAAIuB,IAAMA,GAAGC,QAAUD,GAAGC,OAAOK,YACvBN,GAAGC,OAAOK,cAIK,oBAAdoB,WAGDF,UAAUG,OAIbvZ,KAAKmZ,iBAAmBG,WAAWE,IAC7C,CASA9C,gBAAgBb,EAAatG,EAAO1F,GAC7BA,IACDA,EAAO7J,KAAKiY,cAAcpO,IAE7B7J,KAAKwP,KAAKqG,EAAYxR,IAAKwR,EAAYvG,QAASC,EAAO1F,EAC1D,CAEAoO,cAAcpO,GAmBX,MAAoB,UAAhBA,EAAKwN,OAECxN,EAKHA,EAAKA,MAAQA,CACvB,CAWA4P,WACG,MAAO,cACV,CAOAC,aACG,OAAO1Z,KAAK2Y,WACf,CASAlB,MAAM5N,EAAMgM,GACT,IAAI4D,EAAWzZ,KAAKyZ,WAEpB,OAAO,IAAIhK,SAAQ,CAACC,EAASiH,KAC1B3W,KAAK0Y,UACDiB,UACAnF,MAAK,IACIxU,KAAK+B,GAAG6X,QAAQjE,IAAI8D,KAE7BjF,MAAMiD,KACJA,EAAQA,GAAS,IACXnT,KAAK,CAAEuF,OAAMgM,gBACnB7V,KAAK+B,GAAGoV,IACL,QAAQM,EAAMtR,iBACXsR,EAAMtR,OAAS,EAAI,IAAM,aAG/BnG,KAAK2Y,YAAclB,EAAMtR,OAClBnG,KAAK+B,GAAG6X,QAAQC,IAAIJ,EAAUhC,MAEvCjD,MAAK,KACHxU,KAAKwP,KAAK,UAELxP,KAAK+Y,mBACP/Y,KAAKkZ,mBAERlZ,KAAK0Y,UAAUoB,UACfpK,GAAS,IAEX+E,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,8BAEZtR,KAAK+B,GAAGmV,UAAU6C,SAAS5R,GAC3BwO,EAAOxO,GAEPnI,KAAK0Y,UAAUoB,SAAS,GACzB,GAEX,CAMAhB,aACG,IAAIW,EAAWzZ,KAAKyZ,WAGpB,IAAKzZ,KAAKqW,qBAAsB,CAC7B,IAAI9G,EAAQ,IAAIjH,MAAM,kCAEtB,OADAiH,EAAMkH,KAAO,iBACNhH,QAAQkH,OAAOpH,EACzB,CAGA,OAAO,IAAIE,SAAQ,CAACC,EAASiH,KAC1B3W,KAAK0Y,UACDiB,UAKAnF,MAAK,IACIxU,KAAK+B,GAAG6X,QAAQjE,IAAI8D,KAM7BjF,MAAMiD,IAEJA,EAAQA,GAAS,GAGjB,IAAIuC,EAAkBC,IACnB,GAAoB,GAAhBxC,EAAMtR,OACP8T,QACI,CACJ,IAAIC,EAAQzC,EAAMlD,QACdqB,EAASsE,EAAMrQ,KACfsQ,EAAMD,EAAMrE,YAChB7V,KAAKqV,SACDqC,OAAO9B,EAAQuE,GACf3F,MAAK,KACHwF,EAAeC,EAAG,IAEpBxF,OAAOtM,IAEDA,GAAmB,mBAAZA,EAAIsO,KACZwD,EAAG9R,GAIN6R,EAAeC,EAAG,GAE3B,GAGH,OAAO,IAAIxK,SAAQ,CAAC2K,EAAKC,KACtBL,GAAgB7R,IACTA,EACDkS,EAAIlS,GAEJiS,GACH,GACD,GACH,IAMJ5F,MAAK,KACHxU,KAAK2Y,YAAc,EACZ3Y,KAAK+B,GAAG6X,QAAQC,IAAIJ,EAAU,OAIvCjF,MAAK,KACHxU,KAAKwP,KAAK,gBACHxP,KAAK0Y,UAAUoB,aAIxBtF,MAAK,KACH9E,GAAS,IAIX+E,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,6BAEZtR,KAAK+B,GAAGmV,UAAU6C,SAAS5R,GAE3BnI,KAAK0Y,UAAUoB,UAAUtF,MAAK,KAC3BmC,EAAOxO,EAAI,GACZ,GACH,GAEX,CAMAmS,QACG,OAAO7K,QAAQC,SAClB,CAQA9N,OACG,OAAO5B,KAAKyO,QAAQ+G,WAAWqD,WAClC,CAMA0B,YAEG,MAAO,CAAC,CACX,GCrcH,IAAI,EAAe,sBA0DnB,YAxDA,cAA2B,EACxB5a,cACGG,QAEAE,KAAKwa,cAAgB,IAKxB,CAEAlX,KAAKvB,GAGF/B,KAAK+B,GAAKA,EACV,IAAIgV,EAAW/W,KAAK+B,GAAGyO,OAAO5P,KAa9B,OAZKmW,IACFA,EAAW,UAKd/W,KAAKwa,cAAgBxa,KAAK+B,GAAG0Y,MAAMC,QAAQC,OACxC5D,EACA/W,KAAK+B,GAAG0Y,MAAMC,QAAQE,OAIlBnL,QAAQC,SAClB,CAEAmK,IAAIxV,EAAK1B,GACN,OAAO8M,QAAQC,UAAU8E,MAAK,IACpBxU,KAAKwa,cAAcrE,IAAI9R,EAAK1B,IAEzC,CAEAgT,IAAItR,GACD,OAAOoL,QAAQC,UAAU8E,MAAK,IACpBxU,KAAKwa,cAAc7E,IAAItR,IAEpC,CAEAa,MAAMb,GACH,OAAOoL,QAAQC,UAAU8E,MAAK,IACpBxU,KAAKwa,cAAcK,OAAOxW,IAEvC,CAEAyW,WACG,OAAOrL,QAAQC,UAAU8E,MAAK,IACpBxU,KAAKwa,cAActV,SAEhC,GClEH,IAAI,EAAe,sBAoDnB,YAhDA,cAAsB,EACnBvF,cACGG,QAEAE,KAAKwa,cAAgB,KACrBxa,KAAKyO,QAAU,KACfzO,KAAK+a,SAAW,IACnB,CAEAzX,KAAKvB,GAGF/B,KAAK+B,GAAKA,EACV,IAAIE,EAASjC,KAAK+B,GAAG+M,OAAOyG,aAC5B,OAAItT,GACGA,EAAOyY,SAAWzY,EAAOyY,QAAQM,WAClCxS,QAAQ+G,MAAM,qCAEdvP,KAAK+a,SAAW,GAEhB/a,KAAK+a,SAAW,EAGZ/a,KAAK+a,SAASzX,KAAKvB,KAE1ByG,QAAQ+G,MAAM,8BAGVE,QAAQC,UAClB,CAEAmK,OAAOjE,GACJ,OAAO5V,KAAK+a,SAASlB,OAAOjE,EAC/B,CAEAD,OAAOC,GACJ,OAAO5V,KAAK+a,SAASpF,OAAOC,EAC/B,CAEA1Q,SAAS0Q,GACN,OAAO5V,KAAK+a,SAAS7V,SAAS0Q,EACjC,CAEAkF,YAAYlF,GACT,OAAO5V,KAAK+a,SAASD,YAAYlF,EACpC,2BCjDC,EAAe,sBAoDnB,YAhDA,cAAqB,EAClBjW,cACGG,QAEAE,KAAKqO,MAAO,EACZrO,KAAKyO,QAAU,KACfzO,KAAKib,iBAAmB,IAC3B,CAEA3X,OACG,IAAIrB,EAAS6M,EAAA,iBACb,GAAI7M,EAAQ,CAET,GAC6B,iBAAnBA,EAAOE,SACdF,EAAOE,mBAAmB+Y,OAG1B,IACGjZ,EAAOE,QAAU0R,KAAK0D,MAAMtV,EAAOE,QAGtC,CAFE,MAAOoN,GACN/G,QAAQ+G,MAAMA,EACjB,CAEHvP,KAAKyO,QAAUxM,EACfjC,KAAKib,iBAAmBhZ,EAAOE,QAAQ8Y,gBAC1C,CAGA,OAAOxL,QAAQC,SAClB,CAEA9O,KACG,OAAKZ,KAAKyO,SAA8B,MAAnBzO,KAAKyO,QAAQ7N,GAG3BZ,KAAKyO,QAAQ7N,GAFV,IAGb,CAEA6P,QAAQpM,EAAK1B,GACV,IAAIA,EAIJ,OAAO3C,KAAKyO,QAAQtM,QAAQkC,GAHzBrE,KAAKyO,QAAQtM,QAAQkC,GAAO1B,CAIlC,GC1CH,GAEGwY,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBC,kBAAmB,IACnBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,aAAc,IACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,IACxBC,yBAA0B,IAC1BC,yBAA0B,IAC1BC,wBAAyB,GAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB3a,gBAAiB,IACjB4a,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEG/B,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB3a,gBAAiB,IACjB4a,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGjb,OAAQ,WAEL,OAAI+W,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCtuBN,MAAMC,EACH1d,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAKsd,OAAS,EACjB,CAEAC,SAASpW,EAAMmK,GACZtR,KAAKsd,OAAOhZ,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEAkM,OACG,OAA6B,GAAtBxd,KAAKsd,OAAOnX,MACtB,CAEAqB,OACG,OAAOxH,KAAKsd,OAAOnX,OAAS,CAC/B,CAEAsX,qBACG,IAAI3F,EAAM,CACPvI,MAAO,eACPmO,kBAAmB,CAAC,GAGnBC,EAAO7F,EAAI4F,kBAOf,OALA1d,KAAKsd,OAAOrZ,SAASoG,IAClBsT,EAAKtT,EAAElD,MAAQwW,EAAKtT,EAAElD,OAAS,GAC/BwW,EAAKtT,EAAElD,MAAM7C,KAAK+F,EAAE,IAGhByN,CACV,CAEArQ,WAAWyC,GACR,IAAI0T,EAAO5d,KAAKyd,qBAChBzd,KAAK+B,GAAG8b,WAAWC,sBAAsBF,EAAM1T,EAClD,CAEA6T,WAAWC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","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      console.error(\n         \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      );\n      return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\")\n                        model.normalizeData(data.data);\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (value) {\n         this._config.options[key] = value;\n         return;\n      }\n      return this._config.options[key];\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.js\";\n// NOTE: moved to require() because using import with webix_debug.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix-debug.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      console.error(\"TODO: ABFactory.notify(): pass error off to analytics\");\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   /**\n    * @method toDate\n    *\n    * @param {string} dateText\n    * @param {Object} options - {\n    *                               format: \"string\",\n    *                               ignoreTime: boolean\n    *                            }\n    * @return {Date}\n    */\n   toDate(dateText = \"\", options = {}) {\n      if (!dateText) return;\n\n      if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n      let result = options.format\n         ? moment(dateText, options.format)\n         : moment(dateText);\n\n      let supportFormats = [\n         \"YYYY-MM-DD\",\n         \"YYYY/MM/DD\",\n         \"DD/MM/YYYY\",\n         \"MM/DD/YYYY\",\n         \"DD-MM-YYYY\",\n         \"MM-DD-YYYY\",\n      ];\n\n      supportFormats.forEach((format) => {\n         if (!result || !result.isValid()) result = moment(dateText, format);\n      });\n\n      return new Date(result);\n   }\n\n   /**\n    * @method toDateFormat\n    *\n    * @param {Date} date\n    * @param {Object} options - {\n    *           format: \"string\",\n    *           localeCode: \"string\"\n    *         }\n    *\n    * @return {string}\n    */\n   toDateFormat(date, options) {\n      if (!date) return \"\";\n\n      let momentObj = moment(date);\n\n      if (options.localeCode) momentObj.locale(options.localeCode);\n\n      return momentObj.format(options.format);\n   }\n\n   /**\n    * @method subtractDate\n    *\n    * @param {Date} date\n    * @param {number} number\n    * @param {string} unit\n    *\n    * @return {Date}\n    */\n   subtractDate(date, number, unit) {\n      return moment(date).subtract(number, unit).toDate();\n   }\n\n   /**\n    * @method addDate\n    *\n    * @param {Date} date\n    * @param {number} number\n    * @param {string} unit\n    *\n    * @return {Date}\n    */\n   addDate(date, number, unit) {\n      return moment(date).add(number, unit).toDate();\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            this.AB.applications().then((apps) => {\n               // NOTE: apps is a webix datacollection\n\n               var allRemoves = [];\n\n               var appsWithObject = apps.filter((a) => {\n                  return a.datacollectionsIncluded((o) => o.id == this.id);\n               });\n               appsWithObject.forEach((app) => {\n                  allRemoves.push(app.datacollectionRemove(this));\n               });\n\n               return Promise.all(allRemoves).then(next).catch(err);\n            });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n                           model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {};\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(updateItemData);\n                     if (\n                        this.__treeCollection &&\n                        this.__treeCollection.exists(d.id)\n                     )\n                        this.__treeCollection.updateItem(d.id, updateItemData);\n\n                     if (\n                        this.__dataCollection &&\n                        this.__dataCollection.exists(d.id)\n                     ) {\n                        this.__dataCollection.updateItem(d.id, updateItemData);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(res.data[0]);\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal) &&\n                     relateVal.filter(\n                        (v) =>\n                           v == deleteId ||\n                           v.id == deleteId ||\n                           v[PK] == deleteId\n                     ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      var wheres = this.settings.objectWorkspace.filterConditions || null;\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      if (this.__filterCond) {\n         if (wheres.rules.length) {\n            // combine them together:\n            wheres = {\n               glue: \"and\",\n               rules: [wheres, this.__filterCond],\n            };\n         } else {\n            // simplify to just use filterCond\n            wheres = this.__filterCond;\n         }\n      }\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            this.__dataCollection.parse(data);\n         }\n\n         // In order to get the total_count updated I had to use .load()\n         queueOperation(() => {\n            this.__dataCollection.load(() => {\n               // If this dc loads all, then it has to filter data by the parent dc\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return data;\n            });\n         }, 1);\n\n         // In order to keep detail and graphs loading properly I had to keep .parse()\n         // queueOperation(() => {\n         //    this.__dataCollection.clearAll();\n         //    this.__dataCollection.parse(data);\n         // }, 50);\n\n         // this does nothing???\n         this.parseTreeCollection(data);\n\n         queueOperation(() => {\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n         }, 5);\n         queueOperation(() => {\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 20);\n         queueOperation(() => {\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n         }, 10);\n         queueOperation(() => {\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n         }, 5);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return null;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter((val) => (val.id || val[PK] || val) == linkCursor.id)\n               .length > 0\n         );\n      } else {\n         return (linkVal.id || linkVal[PK] || linkVal) == linkCursor.id;\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\"object\", \"query\", \"datacollection\", \"process\", \"application\"].forEach(\n         (type) => {\n            var objTypes = allDefinitions.filter((d) => d.type == type);\n            objTypes.forEach((def) => {\n               let { keyList, keyFn } = this.objectKeysByDef(def);\n               if (keyList) {\n                  this[keyList].push(this[keyFn](def.json));\n               }\n            });\n         }\n      );\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object.id;\n                  moreInfo.objectName = info[k].object.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this.emit(\n                  \"warning\",\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`,\n                  {\n                     index: this.id,\n                     field: f,\n                  }\n               );\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         this.emit(\n            \"warning\",\n            `Index[${this.name}][${this.id}] is not referencing any fields`,\n            {\n               index: this.id,\n               attributeFieldIDs: attributes.fieldIDs || [],\n            }\n         );\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, includeRelativeData: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            if (\n               objectLink &&\n               objectLink.PK() != \"id\" &&\n               d[relationName] &&\n               !d[relationName].id\n            ) {\n               // is array\n               if (d[relationName].forEach) {\n                  d[relationName].forEach((subData) => {\n                     if (subData[objectLink.PK()])\n                        subData.id = subData[objectLink.PK()];\n                  });\n               } else if (d[relationName][objectLink.PK()]) {\n                  d[relationName].id = d[relationName][objectLink.PK()];\n               }\n            }\n\n            var relatedMlFields = objectLink.multilingualFields();\n            if (relatedMlFields.length) {\n               objectLink.translate(\n                  d[relationName],\n                  d[relationName],\n                  relatedMlFields\n               );\n            }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) d[c.columnName] = d[relationName];\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.toDate(d[date.columnName], {\n                        format: \"MM/DD/YYYY\",\n                        ignoreTime: true,\n                     });\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.toDate(d[date.columnName]);\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this.emit(\n               \"warning\",\n               `O[${this.name}] is referenceing an unknown field id[${id}]`,\n               {\n                  obj: this.id,\n                  field: id,\n               }\n            );\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this.emit(\n               \"warning\",\n               `O[${this.name}] is referenceing an unknown index id[${id}]`,\n               {\n                  obj: this.id,\n                  index: id,\n               }\n            );\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this.emit(\n               \"warning\",\n               `O[${this.name}] is importing an unknown field id[${id}]`,\n               {\n                  obj: this.id,\n                  field: id,\n               }\n            );\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      // this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.emit(\n               \"warning\",\n               `IMPORT FIELDS: could not resolve object[${\n                  fieldInfo.objectID\n               }] for fieldSetting ${JSON.stringify(fieldInfo)}`,\n               {\n                  fieldInfo,\n               }\n            );\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.emit(\n               \"warning\",\n               `IMPORT FIELDS: Object[${object.id}] could not find field[${\n                  fieldInfo.fieldID\n               }] for fieldSetting ${JSON.stringify(fieldInfo)}`,\n               {\n                  object: object.toObj(),\n                  fieldInfo,\n               }\n            );\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.emit(\n               \"warning\",\n               `Field[${field.id}] referenced in fieldSetting[${JSON.stringify(\n                  fieldInfo\n               )}] did not pass .canFilterField`,\n               {\n                  field: field.toObj(),\n                  fieldInfo,\n               }\n            );\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.emit(\n               \"warning\",\n               `Field[${\n                  fieldInfo.fieldID\n               }] referenced in fieldSetting[${JSON.stringify(\n                  fieldInfo\n               )}] is a duplicate`,\n               {\n                  field: field.toObj(),\n                  fieldInfo,\n               }\n            );\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.emit(\"warning\", \"could not resolve our linkField\", {\n                  link,\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.emit(\n                  \"warning\",\n                  \"could not resolve our linked field -> linkObject\",\n                  {\n                     link,\n                  }\n               );\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.emit(\"warning\", \"could not resolve our base object\", {\n            objectID: this._joins?.objectID,\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      if (!fn)\n         fn = () => {\n            return true;\n         };\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      var task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         // get any field's it provides\n         var value = task[method].apply(task, param);\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (typeof value != \"undefined\") {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            const div = document.createElement(\"div\");\n            div.innerHTML = text;\n\n            return div.textContent || div.innerText || \"\";\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options?.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      const condition = this.condition;\n      const _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         condition == null ||\n         condition.rules == null ||\n         condition.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = value.indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = value.indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         switch (f.key) {\n            case \"boolean\":\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersBoolean(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"boolean\"];\n               break;\n            case \"connectObject\":\n               conditions = this.fieldsAddFiltersQuery(f);\n               processFieldKeys = [\"connectObject\"];\n               break;\n            case \"date\":\n            case \"datetime\":\n               type = \"date\";\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersDate(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"date\", \"datetime\"];\n               break;\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               type = \"number\";\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersNumber(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n               break;\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n            case \"AutoIndex\":\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersString(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"string\", \"LongText\", \"email\", \"AutoIndex\"];\n               break;\n            case \"list\":\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersList(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               break;\n            case \"user\":\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersUser(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"user\"];\n               break;\n            case \"uuid\":\n               conditions = conditions.concat(\n                  this.fieldsAddFiltersThisObject(f)\n               );\n               break;\n            default:\n               type = \"text\";\n               break;\n         }\n\n         if (this._isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.columnName || f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field) {\n      let connectConditions = {\n         in_query: {\n            batch: \"query\",\n            label: this.labels.component.inQuery,\n            handler: (a, b) => this.inQueryValid(a, \"in_query\", b),\n         },\n         not_in_query: {\n            batch: \"query\",\n            label: this.labels.component.notInQuery,\n            handler: (a, b) => this.inQueryValid(a, \"not_in_query\", b),\n         },\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      let result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      // Add filter options to Custom index\n      if (\n         field.settings.isCustomFK &&\n         // 1:M\n         ((field.settings.linkType == \"one\" &&\n            field.settings.linkViaType == \"many\") ||\n            // 1:1 isSource = true\n            (field.settings.linkType == \"one\" &&\n               field.settings.linkViaType == \"one\" &&\n               field.settings.isSource))\n      ) {\n         const stringResults = this.fieldsAddFiltersString(field);\n         result = stringResults.concat(result);\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQueryField(field) {\n      let queryFieldConditions = {\n         in_query_field: this.labels.component.inQueryField,\n         not_in_query_field: this.labels.component.notInQueryField,\n      };\n\n      let result = [];\n\n      for (let condKey in queryFieldConditions) {\n         result.push({\n            id: condKey,\n            value: queryFieldConditions[condKey],\n            batch: \"queryField\",\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_query: {\n            batch: \"query\",\n            label: this.labels.component.inQuery,\n         },\n         not_in_query: {\n            batch: \"query\",\n            label: this.labels.component.notInQuery,\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n            let columnName = field.columnName;\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f && f.fieldIsFilterable());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   warnings() {\n      this._warnings = [];\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.emit(\"warning\", \"dependent field not found\", {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n      // console.error(\"combinedFields:\", this.settings.combinedFields);\n\n      return this._warnings;\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   warnings() {\n      this._warnings = [];\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.emit(\n            \"warning\",\n            `ConnectField[${this.label}][${this.id}] is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.emit(\n            \"warning\",\n            `ConnectField[${this.label}][${this.id}] is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n\n      return this._warnings;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n\n      // 1:M\n      if (\n         this.settings.linkType == \"one\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         return this.datasourceLink.fields(\n            (f) => f.id == this.settings.indexField\n         )[0];\n      }\n      // 1:1\n      else if (\n         this.settings.linkType == \"one\" &&\n         this.settings.linkViaType == \"one\"\n      ) {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fields(\n               (f) => f.id == this.settings.indexField\n            )[0];\n         } else {\n            return this.object.fields(\n               (f) => f.id == this.settings.indexField\n            )[0];\n         }\n      }\n      // M:1\n      else if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"one\"\n      ) {\n         return this.object.fields((f) => f.id == this.settings.indexField)[0];\n      }\n      // M:N\n      else if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         let indexField = this.object.fields(\n            (f) => f.id == this.settings.indexField\n         )[0];\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fields(\n               (f) => f.id == this.settings.indexField\n            )[0];\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fields(\n            (f) => f.id == this.settings.indexField2\n         )[0];\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fields(\n               (f) => f.id == this.settings.indexField2\n            )[0];\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      // custom index\n      // M:N\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         ((this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"many\") ||\n            (this.settings.linkType == \"one\" &&\n               this.settings.linkViaType == \"one\" &&\n               this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"one\"\n      ) {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result = rowData[colName] || rowData.id || rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      values.settings = values.settings || {};\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (rowData[this.columnName] != null && !reCalculate && isGrouped) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fields((f) => f.id == this.settings.field)[0];\n   }\n\n   get fieldLink() {\n      const obj = this.object.AB.objects(\n         (obj) => obj.id == this.settings.object\n      )[0];\n      if (!obj) return null;\n\n      const field = obj.fields((f) => f.id == this.settings.fieldLink)[0];\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      if (\n         ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n         this.AB.Label\n      ) {\n         const L = this.AB.Label();\n         ABFieldImageDefaults.menuName = L(\n            \"ab.dataField.image.menuName\",\n            \"*Image Attachment\"\n         );\n         ABFieldImageDefaults.description = L(\n            \"ab.dataField.image.description\",\n            \"*Attach an image to this object.\"\n         );\n      }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) => elem && elem.defaults && elem.defaults.category == \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"]\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, application, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.value`,\n         label: `${this.label}->Value`\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = this.process.elements(\n         (elem) => elem && elem.defaults && elem.defaults.category == \"start\"\n      )[0];\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /*\n     fromValues(attributes) {\n         /*\n         {\n             id: uuid(),\n             name: 'name',\n             type: 'xxxxx',\n             json: \"{json}\"\n         }\n         * /\n         super.fromValues(attributes);\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             this[f] = attributes[f];\n         });\n     }\n     */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n     initState(context, val) {\n         var myDefaults = {\n             instanceVariable1: null,\n             instanceVariable2: null\n         };\n \n         super.initState(context, myDefaults, val);\n     }\n     */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n     processDataFields() {\n         // in this Task, we can return the Response to the UserForm\n         return [\n             {\n                 key: `${this.id}.[someInstanceVariableHere]`,\n                 label: `${this.label}->Response`\n             }\n         ];\n     }\n     */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n     processData(instance, key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.id) {\n             var myState = this.myState(instance);\n             return myState[parts[1]];\n         }\n         return null;\n     }\n     */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj)\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P.sub[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      let dataFieldOpt = (this.process.processDataFields(this) || []).filter(\n         (opt) => opt.key == this.parameterId\n      )[0];\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid.subProcess`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}.subProcess`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}.subProcess`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key && key.startsWith && key.startsWith(this.id)) {\n         let fieldId = key.split(\".\")[2];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (\n               dataFieldOpt &&\n               dataFieldOpt.field &&\n               dataFieldOpt.field.key == \"connectObject\"\n            ) {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      if (data == null)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null) data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field && entry.field.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (\n                        c.data &&\n                        c.data.values &&\n                        entry.field.settings.options\n                     ) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry && entry.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (\n                              o.data &&\n                              o.data.values &&\n                              entry.settings.options\n                           ) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: \"0\",\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.error(error);\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (field.key == \"connectObject\") {\n                     return (\n                        myState[\"data\"][field.columnName] ||\n                        myState[\"data\"][field.relationName()]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\"\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\"\n         }\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      this.isEnabled = JSON.parse(\n         attributes.isEnabled || ABProcessTaskTriggerLifecycleDefaults.isEnabled\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\n\nclass ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this.prevOP.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      if (typeof this.settings.width != \"undefined\") {\n         this.settings.width = parseInt(this.settings.width);\n      } else {\n         this.settings.width = ABViewCarouselPropertyComponentDefaults.width;\n      }\n      if (typeof this.settings.height != \"undefined\") {\n         this.settings.height = parseInt(this.settings.height);\n      } else {\n         this.settings.height = ABViewCarouselPropertyComponentDefaults.height;\n      }\n      try {\n         this.settings.showLabel = JSON.parse(this.settings.showLabel);\n      } catch (e) {\n         this.settings.showLabel =\n            ABViewCarouselPropertyComponentDefaults.showLabel;\n      }\n      try {\n         this.settings.hideItem = JSON.parse(this.settings.hideItem);\n      } catch (e) {\n         this.settings.hideItem =\n            ABViewCarouselPropertyComponentDefaults.hideItem;\n      }\n      try {\n         this.settings.hideButton = JSON.parse(this.settings.hideButton);\n      } catch (e) {\n         this.settings.hideButton =\n            ABViewCarouselPropertyComponentDefaults.hideButton;\n      }\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n      try {\n         this.settings.filterByCursor = JSON.parse(\n            this.settings.filterByCursor\n         );\n      } catch (e) {\n         this.settings.filterByCursor =\n            ABViewCarouselPropertyComponentDefaults.filterByCursor;\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.field)[0];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n      this.refreshData();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"],\n         allComponents = this.application.viewAll(); // ABViewManager.allViews();\n\n      const ret = allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n      return ret;\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnLabel)[0];\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnValue)[0];\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnValue2)[0];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnUser)[0];\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnComment)[0];\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnDate)[0];\n   }\n\n   getUserData() {\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = \"/opsportal/image/UserProfile/\" + item.image;\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABObject\n      let obj = dv.datasource;\n      if (obj == null) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n};\n\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = true;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = true;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      console.error(\"!!! where is this being called???\");\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      ); // ABViewManager.newView({ key: this.common().key }, application, parent);\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.AB.notify.builder(\n               new Error(\n                  `Application[${this.application.name}][${this.application.id}].View[${this.name}][${this.id}] references unknown View[${id}]`\n               ),\n               {\n                  context:\"ABViewCore:fromValues():values.viewIDs for each\",\n                  id\n               }\n            );\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    *\n    * return an flatten array of all the ABViews parents\n    *\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if ([\"page\", \"viewcontainer\"].indexOf(this.key) == -1) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages = this.application._pages.filter(\n                              (p2) => p2.id != lookUpIds[p.id]\n                           );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n      console.warn(\n         new Error(\n            \"TODO: convert ABViewDocxBuilderCore.uploadUrl() to use common url code.\"\n         )\n      );\n      // let actionKey =\n      //    \"opstool.AB_\" + this.application.name.replace(\"_\", \"\") + \".view\";\n\n      // return (\n      //    \"/\" +\n      //    [\"opsportal\", \"file\", this.application.name, actionKey, \"1\"].join(\"/\")\n      // );\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of a field.\n      // TODO\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fields((f) => f.id == this.settings.field)[0];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.allowDelete || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   moduleList: [],\n   queryList: []\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.reportsManager\" // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.moduleList =\n         this.settings.moduleList ||\n         ABViewReportManagerPropertyComponentDefaults.moduleList;\n\n      this.settings.queryList =\n         this.settings.queryList ||\n         ABViewReportManagerPropertyComponentDefaults.queryList;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      this._warnings = [];\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.emit(\n                  \"warning\",\n                  `Application is referencing a missing ${checks[k]}`,\n                  {\n                     appID: this.id,\n                     id,\n                  }\n               );\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.emit(\n            \"warning\",\n            \"Application has no Role assigned, and is unaccessible.\"\n         );\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.emit(\n               \"warning\",\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *\t\t\t.resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it witht hat field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            // copy current wheres\n            var wheres = this.AB.cloneDeep(\n               this.settings.objectWorkspace.filterConditions\n            );\n            // add bind items data as a filter to wheres\n            if (value) {\n               // don't include an empty where condition in our .rules\n               // start by replacing it with null\n               if (!wheres.rules) {\n                  wheres = null;\n               }\n\n               wheres = {\n                  glue: \"and\",\n                  rules: [\n                     wheres,\n                     {\n                        alias: fieldLink.alias, // ABObjectQuery\n                        key: Object.keys(params)[0],\n                        rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n                        value: fieldLink.getRelationValue(\n                           dataCollectionLink.__dataCollection.getItem(value)\n                        ),\n                     },\n                  ],\n               };\n\n               // remove any null in the .rules\n               wheres.rules = wheres.rules.filter((r) => r);\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (\n               JSON.stringify(this.__reloadWheres) == JSON.stringify(wheres) ||\n               (wheres.rules && wheres.rules.length == 0)\n            ) {\n               return;\n            } else {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               this.reloadWheres(wheres);\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      if (\n         this.__bindComponentIds.indexOf(component.config.id) > -1 &&\n         $$(component.config.id).data &&\n         $$(component.config.id).data.find &&\n         $$(component.config.id).data.find({}).length > 0\n      )\n         return;\n      // keep component id to an array\n      else this.__bindComponentIds.push(component.config.id);\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      const allWarnings = [].concat(this._warnings);\n\n      if (!this.datasource) {\n         allWarnings.push({\n            message: `Datacollection[${this.label}][${this.id}] doesn't have a datasource.`,\n            data: {},\n         });\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (linkDC)\n            allWarnings.push({\n               message: `Datacollection[${this.label}][${this.id}] can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`,\n               data: {},\n            });\n      }\n\n      return allWarnings;\n   }\n\n   warningsEval() {\n      // our .fromValues() has already registered any missing fields.\n      // those should get reported from warnings()\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   warnings() {\n      return this._warnings;\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      // if (\n      //    [\"datacollection\", \"object\", \"query\", \"process\"].indexOf(this.type) >\n      //    -1\n      // ) {\n      //    console.warn(\n      //       `ABML Object [${this.type}][${this.label}] has not overwritten .warningsEval()`\n      //    );\n      // }\n\n      // many of our warnings are generated during the .fromValues() method\n      // when we initialize our Objects.  So, cause this process to repeat.\n      this.fromValues(this.toObj());\n   }\n\n   warningsAll() {\n      // console.warn(\n      //    `ABML Object [${this.label}] has not overwritten .warningsAll()`\n      // );\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      if (this.fields().length == 0) {\n         allWarnings.push({ message: \"I got no fields.\", data: {} });\n      }\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings;\n   }\n\n   // warningsEval() {\n   //    // our .fromValues() has already registered any missing fields.\n   //    // those should get reported from warnings()\n   // }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.emit(\n            \"warning\",\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.emit(\"warning\", \"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   /**\n    * @method warningsAll()\n    * Compile any warnings from this Query, or any of it's fields.\n    * @return {array}\n    *         An array of warning objects.\n    *         .message {string} message to display\n    *         .data {obj} associated debug info for this warning.\n    */\n   // warningsAll() {\n   //    // report both OUR warnings, and any warnings from any of our fields\n   //    // NOTE: this will get\n   //    var allWarnings = super.warningsAll();\n\n   //    return allWarnings;\n   // }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter(\n         (f) => f.id == cond.key || f.columnName == cond.key\n      )[0];\n      cond.field = field?.columnName ?? field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.columnName == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      // Convert multi-values to a string\n      let values = cond.includes ?? [];\n      if (cond.condition.filter && values.indexOf(cond.condition.filter) < 0)\n         values.push(cond.condition.filter);\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\")) {\n               return field.exportValue(v);\n            } else if (v instanceof Date) {\n               return v.toISOString();\n            } else {\n               return v;\n            }\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      this._isRecordRule = options?.isRecordRule ?? false;\n      this._recordRuleFieldOptions = options?.fieldOptions ?? [];\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.columnName == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         this.myPopup = webix.ui(ui);\n         this.init();\n      }\n\n      if (this._Fields) {\n         this.fieldsLoad(this._Fields, this._Object);\n      }\n\n      // NOTE: do this, before the .setValue() operation, as we need to have\n      // our fields and filters defined BEFORE a setValue() is performed.\n      // this.uiInit();\n\n      if (condition) {\n         this.setValue(condition);\n      }\n\n      this.myPopup.show(...options);\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            const $customValueElem = $viewItem.getChildViews()[4];\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox = $customValueElem.getChildViews()[0];\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker = $customValueElem.getChildViews()[1];\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView = formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return { id: e.text, value: e.text };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         const $customValueElem = $viewItem.getChildViews()[4];\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static clearEditor(ids) {\n      this._CurrentField = null;\n\n      const defaultValues = {\n         label: \"\",\n         columnName: \"\",\n         showIcon: 1,\n         required: 0,\n         unique: 0,\n         validationRules: \"\",\n      };\n\n      for (const f in defaultValues) {\n         const component = $$(ids[f]);\n         if (component) component.setValue(defaultValues[f]);\n      }\n\n      // reset the validation rules UI\n      const filterViews = $$(ids.filterComplex).queryView(\n         {\n            view: \"form\",\n            css: \"abValidationForm\",\n         },\n         \"all\"\n      );\n      if (filterViews.length) {\n         filterViews.forEach((v) => {\n            $$(ids.filterComplex).removeView(v);\n         });\n      }\n\n      $$(ids.addValidation).hide();\n\n      // hide warning message of null data\n      $$(ids.numberOfNull).hide();\n   }\n\n   /**\n    * @function editorPopulate\n    *\n    * populate the form with the given ABField instance provided.\n    *\n    * @param {object} ids\n    * @param {ABField} field\n    */\n   static editorPopulate(ids, field) {\n      this._CurrentField = field;\n\n      $$(ids.label).setValue(field.label);\n      $$(ids.columnName).setValue(field.columnName);\n      $$(ids.showIcon).setValue(field.settings.showIcon);\n      $$(ids.required).setValue(field.settings.required);\n      $$(ids.unique).setValue(field.settings.unique);\n\n      if (this._CurrentField) {\n         $$(ids.addValidation).show();\n      }\n\n      if (field.settings && field.settings.validationRules) {\n         let rules = field.settings.validationRules;\n         if (typeof rules == \"string\") {\n            try {\n               rules = JSON.parse(rules);\n            } catch (e) {\n               // continue regardless of error\n            }\n         }\n         (rules || []).forEach((settings) => {\n            field.addValidation(ids, settings);\n         });\n      }\n   }\n\n   /**\n    * @function definitionEditor\n    *\n    * Many DataFields share some base information for their usage\n    * in the AppBuilder.  The UI Editors have a common header\n    * and footer format, and this function allows child DataFields\n    * to not have to define those over and over.\n    *\n    * The common layout header contains:\n    *\t\t[Menu Label]\n    *\t\t[textBox: labelName]\n    *\t\t[text:    description]\n    *\n    * The defined DataField UI will be added at the end of this.\n    *\n    * This routine actually updated the live DataField definition\n    * with the common header info.\n    *\n    * @param {DataField} field  The DataField object to work with.\n    */\n   static definitionEditor(App, ids, _logic, Field) {\n      /// TODO: maybe just pass in onChange instead of _logic\n      /// if not onChange, then use our default:\n\n      // setup our default labelOnChange functionality:\n      let labelOnChange = function (newVal, oldVal) {\n         oldVal = oldVal || \"\";\n\n         if (\n            newVal != oldVal &&\n            oldVal == $$(ids.columnName).getValue() &&\n            $$(ids.columnName).isEnabled()\n         ) {\n            $$(ids.columnName).setValue(newVal);\n         }\n      };\n\n      // if they provided a labelOnChange() override, use that:\n      if (_logic.labelOnChange) {\n         labelOnChange = _logic.labelOnChange;\n      }\n\n      let requiredOnChange = function (newVal, oldVal, ids) {\n         console.warn(\n            \"Field has not implemented .requiredOnChange() is that okay?\"\n         );\n      };\n\n      const addValidation = (ids) => {\n         return this._CurrentField.addValidation(ids);\n      };\n\n      // if the provided a requriedOnChange() override, use that:\n      if (_logic.requiredOnChange) {\n         requiredOnChange = _logic.requiredOnChange;\n      }\n\n      const getNumberOfNullValue = async (isRequired) => {\n         if (\n            isRequired &&\n            this._CurrentField &&\n            this._CurrentField.id &&\n            this._CurrentField.settings.required != isRequired\n         ) {\n            // TODO: disable save button\n\n            // get count number\n            const data = await this._CurrentField.object.model().count({\n               where: {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: this._CurrentField.id,\n                        rule: \"is_null\",\n                     },\n                  ],\n               },\n            });\n\n            if (data.count > 0) {\n               const messageTemplate = L(\n                  \"** There are {0} rows that will be updated to default value\",\n                  [data.count]\n               );\n\n               $$(ids.numberOfNull).setValue(messageTemplate);\n               $$(ids.numberOfNull).show();\n            } else {\n               $$(ids.numberOfNull).hide();\n            }\n\n            // TODO: enable save button\n         } else {\n            $$(ids.numberOfNull).hide();\n         }\n      };\n\n      const _ui = {\n         // id: ids.component,\n         rows: [\n            // {\n            // \tview: \"label\",\n            // \tlabel: \"<span class='webix_icon fa fa-{0}'></span>{1}\".replace('{0}', Field.icon).replace('{1}', Field.menuName)\n            // },\n            {\n               view: \"text\",\n               id: ids.label,\n               name: \"label\",\n               label: L(\"Label\"),\n               placeholder: L(\"Label\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               css: \"ab-new-label-name\",\n               on: {\n                  onChange: function (newVal, oldVal) {\n                     labelOnChange(newVal, oldVal);\n                  },\n               },\n            },\n            {\n               view: \"text\",\n               id: ids.columnName,\n               name: \"columnName\",\n               disallowEdit: true,\n               label: L(\"Field Name\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               placeholder: L(\"Database field name\"),\n            },\n            {\n               view: \"label\",\n               id: ids.fieldDescription,\n               label: L(\"Description\"),\n               align: \"right\",\n            },\n            {\n               view: \"checkbox\",\n               id: ids.showIcon,\n               name: \"showIcon\",\n               labelRight: App.labels.dataFieldShowIcon, // 'Show icon',\n               labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n               value: true,\n            },\n            {\n               view: \"checkbox\",\n               id: ids.required,\n               name: \"required\",\n               hidden: !Field.supportRequire,\n               labelRight: App.labels.required,\n               // disallowEdit: true,\n               labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n               on: {\n                  onChange: async (newVal, oldVal) => {\n                     requiredOnChange(newVal, oldVal, ids);\n\n                     // If check require on edit field, then show warning message\n                     await getNumberOfNullValue(newVal);\n                  },\n               },\n            },\n            // warning message: number of null value rows\n            {\n               view: \"label\",\n               id: ids.numberOfNull,\n               css: { color: \"#f00\" },\n               label: \"\",\n               hidden: true,\n            },\n\n            {\n               view: \"checkbox\",\n               id: ids.unique,\n               name: \"unique\",\n               hidden: !Field.supportUnique,\n               labelRight: App.labels.unique,\n               disallowEdit: true,\n               labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n            },\n            {\n               id: ids.filterComplex,\n               rows: [],\n            },\n            {\n               id: ids.addValidation,\n               view: \"button\",\n               label: L(\"Add Field Validation\"),\n               css: \"webix_primary\",\n               click: () => {\n                  addValidation(ids);\n               },\n            },\n            // have a hidden field to contain the validationRules\n            // value we will parse out later\n            {\n               id: ids.validationRules,\n               view: \"text\",\n               hidden: true,\n               name: \"validationRules\",\n            },\n         ],\n      };\n\n      return _ui;\n   }\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Application)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = this.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (($list?.find({}) ?? []).length) return;\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   getOptions(where, term, sort) {\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         where = where || {};\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\"\n         ) {\n            // Mar 8, 2022 I (James) removed this because we need these options\n            // to appear so we can put a checkbox next to them with the new UI\n            // where.rules.push({\n            //    key: linkedCol.id,\n            //    rule: \"is_null\",\n            // });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\"\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = `${this.id}-${JSON.stringify(where)}`;\n\n         Promise.resolve()\n            // TODO: debug the cached data + response so the droplist can display\n            // updated data.\n            .then(async () => {\n               // Get Local Storage\n\n               // We store the .findAll() results locally and return that for a\n               // quick response:\n               const storedOptions = await this.AB.Storage.get(storageID);\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n            })\n            .then(async () => {\n               try {\n                  // Pull linked object data\n                  const result = await linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n\n                  // cache linked object data\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  this.AB.Storage.set(storageID, this._options);\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(combineFilters, \"\").then((data) => {\n            this.populateOptions(theEditor, data, field, form, false);\n            resolve();\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue && theEditor.getValue()) {\n         theEditor.setValue(theEditor.getValue());\n         // } else if (this._selectedData && this._selectedData.length) {\n         //    theEditor.setValue(this.editFormat(this._selectedData));\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (options[i].id == val) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor = \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text:\n                        \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            message: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\";\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text:\n                           \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      const L = App.Label;\n\n      options = options || {};\n\n      const idBase = App.unique(this.idCustomContainer(row, options.formId));\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable = document.querySelector(\n                              \".webix_dtable\"\n                           );\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} width:${options.width}; height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      const promise = new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n      return promise;\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return \"#columnName#-#id#-tree\"\n         .replace(\"#id#\", obj.id)\n         .replace(\"#columnName#\", this.columnName.replace(/ /g, \"_\"));\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         $$(idTree).blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $$(idTree).clearAll();\n         $$(idTree).parse(options);\n         $$(idTree).refresh();\n         $$(idTree).uncheckAll();\n         $$(idTree).openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($$(idTree).exists(id)) {\n                  $$(idTree).checkItem(id);\n                  const dom = $$(idTree).getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $$(idTree).unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/opsportal/image/UserProfile/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n\n   // static propertyIDs(id) {\n   //    return {\n   //       form: `${id}_form`,\n   //       name: `${id}_name`,\n   //       role: `${id}_role`,\n   //       useRole: `${id}_useRoles`,\n   //       useAccount: `${id}_useAccounts`,\n   //       account: `${id}_account`,\n   //    };\n   // }\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      console.error(\"TODO: refactor to ABDesigner\");\n\n      var ids = ABProcessParticipant.propertyIDs(id);\n\n      var ui = {\n         id: id,\n         rows: [\n            { view: \"label\", label: `${this.type} :` },\n            {\n               view: \"form\",\n               id: ids.form,\n               // width: 300,\n               elements: [\n                  {\n                     id: ids.name,\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     value: this.name,\n                  },\n                  // { template: \"Select Users\", type: \"section\" },\n                  // {\n                  //     id: id + \"_userView\",\n                  //     cols: [\n                  //         {\n                  //             view: \"checkbox\",\n                  //             id: ids.useRole,\n                  //             labelRight: \"by Role\",\n                  //             value: this.useRole || 0\n                  //         },\n                  //         {\n                  //             id: ids.role,\n                  //             view: \"select\",\n                  //             label: \"Role\",\n                  //             value: this.role,\n                  //             options: __Roles,\n                  //             labelAlign: \"left\"\n                  //         }\n                  //     ]\n                  // }\n                  // {\n                  //     margin: 5,\n                  //     cols: [\n                  //         {\n                  //             view: \"button\",\n                  //             value: \"Login\",\n                  //             css: \"webix_primary\"\n                  //         },\n                  //         { view: \"button\", value: \"Cancel\" }\n                  //     ]\n                  // }\n               ],\n            },\n         ],\n      };\n\n      // If we don't have any sub lanes, then offer the select user options:\n      if (this.laneIDs && this.laneIDs.length == 0) {\n         var userUI = ABProcessParticipant.selectUsersUi(id, this);\n         ui.rows[1].elements.push(userUI);\n      }\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * selectUsersUi()\n    * A resuable fn to return the webix ui for a reusable Select User picker.\n    * @param {ABFactory} AB\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * @param {json} values\n    *        the current values represented for this user selection.\n    */\n   static selectUsersUi(AB, id, values) {\n      console.warn(\"!!! Where is this used???\");\n\n      var L = (...params) => {\n         return this.AB.Multilingual.label(...params);\n      };\n\n      var ids = ABProcessParticipant.propertyIDs(id);\n      var __Roles = this.AB.Account.rolesAll();\n      var __Users = this.AB.Account.userList();\n\n      __Roles.unshift({ id: \"--\", value: L(\"select a role\") });\n      __Users.unshift({ id: \"--\", value: L(\"select a user\") });\n\n      return {\n         view: \"fieldset\",\n         label: L(\"Select Users\"),\n         body: {\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"checkbox\",\n                        id: ids.useRole,\n                        labelRight: L(\"by Role\"),\n                        labelWidth: 0,\n                        width: 120,\n                        value: values.useRole ? values.useRole : 0,\n                        click: function (id /*, event */) {\n                           if ($$(id).getValue()) {\n                              $$(ids.role).enable();\n                           } else {\n                              $$(ids.role).disable();\n                           }\n                        },\n                     },\n                     {\n                        id: ids.role,\n                        view: \"select\",\n                        value: values.role ? values.role : \"\",\n                        disabled: values.useRole ? false : true,\n                        options: __Roles,\n                        labelAlign: \"left\",\n                     },\n                  ],\n               },\n               {\n                  cols: [\n                     {\n                        view: \"checkbox\",\n                        id: ids.useAccount,\n                        labelRight: L(\"by Account\"),\n                        labelWidth: 0,\n                        width: 120,\n                        value: values.useAccount ? values.useAccount : 0,\n                        click: function (id /*, event */) {\n                           if ($$(id).getValue()) {\n                              $$(ids.account).enable();\n                           } else {\n                              $$(ids.account).disable();\n                           }\n                        },\n                     },\n                     {\n                        id: ids.account,\n                        view: \"multicombo\",\n                        value: values.account ? values.account : 0,\n                        disabled: values.useAccount ? false : true,\n                        suggest: __Users,\n                        labelAlign: \"left\",\n                        placeholder: L(\"Click or type to add user...\"),\n                        stringResult: false /* returns data as an array of [id] */,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   /**\n    * selectManagersUi()\n    * A resuable fn to return the webix ui for a reusable Select Managers picker.\n    * This UI is used in the ABDesigner New Application form.\n    * @param {ABFactory} AB\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * @param {jsonobj} obj\n    *        the default values for these fields.\n    */\n\n   /*\n    * Moving this to ABDesigner/src/rootPages/Designer/forms/process\n    */\n   // static selectManagersUi(AB, id, obj) {\n   //    var L = (...params) => {\n   //       return AB.Multilingual.label(...params);\n   //    };\n\n   //    var ids = ABProcessParticipant.propertyIDs(id);\n   //    var __Roles = AB.Account.rolesAll().map((r) => {\n   //       return { id: r.id, value: r.name };\n   //    });\n   //    var __Users = AB.Account.userList().map((u) => {\n   //       return { id: u.uuid, value: u.username };\n   //    });\n\n   //    return {\n   //       type: \"form\",\n   //       css: \"no-margin\",\n   //       rows: [\n   //          {\n   //             cols: [\n   //                {\n   //                   view: \"checkbox\",\n   //                   id: ids.useRole,\n   //                   labelRight: L(\"by Role\"),\n   //                   labelWidth: 0,\n   //                   width: 120,\n   //                   value: obj.useRole == \"1\" ? 1 : 0,\n   //                   click: function (id /*, event */) {\n   //                      if ($$(id).getValue()) {\n   //                         $$(ids.role).enable();\n   //                      } else {\n   //                         $$(ids.role).disable();\n   //                      }\n   //                   },\n   //                },\n   //                {\n   //                   id: ids.role,\n   //                   view: \"multicombo\",\n   //                   value: obj.role ? obj.role : 0,\n   //                   disabled: obj.useRole == \"1\" ? false : true,\n   //                   suggest: __Roles,\n   //                   placeholder: L(\"Click or type to add role...\"),\n   //                   labelAlign: \"left\",\n   //                   stringResult: false /* returns data as an array of [id] */,\n   //                },\n   //             ],\n   //          },\n   //          {\n   //             cols: [\n   //                {\n   //                   view: \"checkbox\",\n   //                   id: ids.useAccount,\n   //                   labelRight: L(\"by Account\"),\n   //                   labelWidth: 0,\n   //                   width: 120,\n   //                   value: obj.useAccount == \"1\" ? 1 : 0,\n   //                   click: function (id /*, event */) {\n   //                      if ($$(id).getValue()) {\n   //                         $$(ids.account).enable();\n   //                      } else {\n   //                         $$(ids.account).disable();\n   //                      }\n   //                   },\n   //                },\n   //                {\n   //                   id: ids.account,\n   //                   view: \"multicombo\",\n   //                   value: obj.account ? obj.account : 0,\n   //                   disabled: obj.useAccount == \"1\" ? false : true,\n   //                   suggest: __Users,\n   //                   labelAlign: \"left\",\n   //                   placeholder: L(\"Click or type to add user...\"),\n   //                   stringResult: false /* returns data as an array of [id] */,\n   //                },\n   //             ],\n   //          },\n   //       ],\n   //    };\n   // }\n\n   /**\n    * stashUsersUi()\n    * A resuable fn to return the values from our static selectUsersUI().\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   /*\n    * Moving this to ABDesigner/src/rootPages/Designer/forms/process\n    */\n   // static stashUsersUi(id) {\n   //    var obj = {};\n   //    var ids = ABProcessParticipant.propertyIDs(id);\n\n   //    if ($$(ids.useRole)) {\n   //       obj.useRole = $$(ids.useRole).getValue();\n   //    }\n\n   //    if ($$(ids.role) && obj.useRole) {\n   //       obj.role = $$(ids.role).getValue();\n   //       if (obj.role === \"--\") obj.role = null;\n   //    } else {\n   //       obj.role = null;\n   //    }\n\n   //    if ($$(ids.useAccount)) {\n   //       obj.useAccount = $$(ids.useAccount).getValue();\n   //    }\n\n   //    if ($$(ids.account) && obj.useAccount) {\n   //       obj.account = $$(ids.account).getValue(/*{ options: true }*/);\n   //       if (obj.account === \"--\") obj.account = null;\n   //    } else {\n   //       obj.account = null;\n   //    }\n\n   //    return obj;\n   // }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = ABProcessParticipant.propertyIDs(id);\n      this.name = $$(ids.name).getValue();\n      if (this.laneIDs.length == 0) {\n         var userDef = ABProcessParticipant.stashUsersUi(id);\n         Object.keys(userDef).forEach((k) => {\n            this[k] = userDef[k];\n         });\n      }\n      this.stashed = true;\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      if (!this.name) {\n         this.emit(\"warning\", `T[${this.id}] is missing a name`, {\n            task: this.id,\n         });\n      }\n   }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id, App) {\n      var ids = this.propertyIDs(id);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n         ],\n      };\n\n      // here is how we can find out what possible process data\n      // fields are available to this task:\n      //   returns an [{ key:'{uuid}', label:\"\" field:{ABDataField} }, {}, ...]\n      var listDataFields = this.process.processDataFields(this);\n      var abFields = (listDataFields || []).map((f) => {\n         return f.field;\n      });\n\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n\n      this.__dfLookup = {};\n      this.conditions = this.conditions || {};\n      myOutgoingConnections.forEach((conn) => {\n         var condition = this.conditions[conn.id] || {};\n\n         var connectedElement = this.process.elementForDiagramID(conn.to);\n\n         var DF = this.AB.filterComplexNew(`${id}_${conn.id}_filter`);\n         // DF.applicationLoad(this.application);\n         DF.fieldsLoad(abFields);\n         this.__dfLookup[conn.id] = DF;\n\n         var connUI = {\n            view: \"fieldset\",\n            label: L(\"to {0}\", [\n               connectedElement\n                  ? connectedElement.name\n                  : L(\"unlabeled Task({0})\", [conn.id]),\n            ]),\n            body: {\n               rows: [\n                  {\n                     id: `${id}_${conn.id}_label`,\n                     view: \"text\",\n                     label: L(\"Label\"),\n                     value: condition.label || \"\",\n                  },\n                  DF.ui,\n               ],\n            },\n         };\n\n         ui.elements.push(connUI);\n      });\n\n      // DF.setValue(CurrentQuery.where);\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      // update the filters after they have been .show()n\n      myOutgoingConnections.forEach((conn) => {\n         var condition = this.conditions[conn.id] || {};\n         var DF = this.__dfLookup[conn.id];\n         if (condition.filterValue) {\n            DF.setValue(condition.filterValue);\n         }\n      });\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.conditions = {};\n\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         this.conditions[conn.id] = {};\n         this.conditions[conn.id].label = this.property(\n            `${id}_${conn.id}_label`\n         );\n         if (this.__dfLookup && this.__dfLookup[conn.id]) {\n            var DF = this.__dfLookup[conn.id];\n            this.conditions[conn.id].filterValue = DF.getValue();\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id].label,\n            },\n         });\n      });\n      return properties;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         formulaText: `${id}_formulaText`,\n\n         variablePopup: `${id}_variablePopup`,\n         operatorPopup: `${id}_operatorPopup`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let list = (this.process.processDataFields(this) || []).map((item) => {\n         return {\n            id: item.key,\n            value: item.label,\n         };\n      });\n\n      let labelWidth = 120;\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: labelWidth,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.formulaText,\n               view: \"texthighlight\",\n               height: 200,\n               label: L(\"Formula\"),\n               type: \"textarea\",\n               value: this.formulaText || \"\",\n               highlight: (text) => {\n                  list.forEach(function (item) {\n                     text = text.replace(\n                        new RegExp(`{${item.value}}`, \"g\"),\n                        `<span style='background: #90adb5; color:#000000;'>{${item.value}}</span>`\n                     );\n                  });\n                  return text;\n               },\n            },\n            {\n               cols: [\n                  {\n                     width: labelWidth,\n                     fillspace: true,\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     type: \"icon\",\n                     icon: \"fa fa-at\",\n                     label: L(\"Parameters\"),\n                     click: function () {\n                        // show popup\n                        $$(ids.variablePopup).show(this.$view);\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     type: \"icon\",\n                     icon: \"fa fa-hashtag\",\n                     label: L(\"Operators\"),\n                     click: function () {\n                        // show popup\n                        $$(ids.operatorPopup).show(this.$view);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      if ($$(ids.variablePopup) == null) {\n         webix.ui({\n            id: ids.variablePopup,\n            view: \"popup\",\n            hidden: true,\n            body: {\n               view: \"list\",\n               template: (item) => {\n                  return item.value;\n               },\n               data: list,\n               on: {\n                  onItemClick: function (id, e, node) {\n                     var component = this.getItem(id);\n\n                     insertFormula(`{${component.value}}`);\n\n                     $$(ids.variablePopup).hide();\n                  },\n               },\n            },\n         });\n      }\n\n      if ($$(ids.operatorPopup) == null) {\n         webix.ui({\n            id: ids.operatorPopup,\n            view: \"popup\",\n            hidden: true,\n            width: 180,\n            body: {\n               view: \"list\",\n               template: (item) => {\n                  var template = \"\";\n\n                  if (item.icon) {\n                     template += `<i class=\"fa fa-${item.icon}\" aria-hidden=\"true\"></i> `;\n                  }\n\n                  if (item.label) {\n                     template += item.label;\n                  }\n\n                  return template;\n               },\n               data: [\n                  {\n                     label: L(\"+ Adds\"),\n                     symbol: \"+\",\n                  },\n                  {\n                     label: L(\"- Subtracts\"),\n                     symbol: \"-\",\n                  },\n                  {\n                     label: L(\"* Multiples\"),\n                     symbol: \"*\",\n                  },\n                  {\n                     label: L(\"/ Divides\"),\n                     symbol: \"/\",\n                  },\n                  {\n                     label: L(\"( Open Bracket\"),\n                     symbol: \"(\",\n                  },\n                  {\n                     label: L(\") Closed Bracket\"),\n                     symbol: \")\",\n                  },\n               ],\n               on: {\n                  onItemClick: function (id, e, node) {\n                     var component = this.getItem(id);\n\n                     insertFormula(component.symbol);\n\n                     $$(ids.operatorPopup).hide();\n                  },\n               },\n            },\n         });\n      }\n\n      let insertFormula = (message) => {\n         let formula = $$(ids.formulaText).getValue();\n\n         $$(ids.formulaText).setValue(`${formula}${message} `);\n      };\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n\n      this.name = this.property(ids.name);\n      this.formulaText = this.property(ids.formulaText);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var ui = {\n         id: id,\n         rows: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n   }\n};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         repeatEvery: `${id}_repeatEvery`,\n         repeatTime: `${id}_repeatTime`,\n         repeatOnPanel: `${id}_repeatOnPanel`,\n         repeatDaily: `${id}_repeatDaily`,\n         repeatWeekly: `${id}_repeatWeekly`,\n         repeatMonthly: `${id}_repeatMonthly`,\n         isEnabled: `${id}_isEnabled`,\n      };\n   }\n\n   /**\n    * @function propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n      let defaultValues = ABProcessTriggerTimer.defaults();\n\n      let dayOptions = [];\n      for (let day = 1; day <= 31; day++) {\n         dayOptions.push({\n            id: day,\n            value: day,\n         });\n      }\n      // dayOptions.push({\n      //    id: \"L\",\n      //    value: \"Last\"\n      // });\n\n      const LABEL_WIDTH = 120;\n      let ui = {\n         view: \"form\",\n         id: id,\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               labelWidth: LABEL_WIDTH,\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.repeatEvery,\n               view: \"richselect\",\n               name: \"repeatEvery\",\n               label: L(\"Repeat every\"),\n               labelWidth: LABEL_WIDTH,\n               value: this.repeatEvery || defaultValues.repeatEvery,\n               options: [\n                  { id: \"daily\", value: L(\"Daily\") },\n                  {\n                     id: \"weekly\",\n                     value: L(\"Weekly\"),\n                  },\n                  {\n                     id: \"monthly\",\n                     value: L(\"Monthly\"),\n                  },\n               ],\n               on: {\n                  onChange: (repeatEvery) => {\n                     $$(ids.repeatOnPanel).showBatch(repeatEvery);\n                  },\n               },\n            },\n            {\n               id: ids.repeatTime,\n               view: \"datepicker\",\n               name: \"repeatTime\",\n               label: L(\"Time\"),\n               labelWidth: LABEL_WIDTH,\n               value: this.repeatTime || defaultValues.repeatTime,\n               timepicker: true,\n               type: \"time\",\n               multiselect: false,\n            },\n            {\n               view: \"multiview\",\n               id: ids.repeatOnPanel,\n               cells: [\n                  {\n                     view: \"radio\",\n                     id: ids.repeatDaily,\n                     label: \" \",\n                     labelWidth: LABEL_WIDTH,\n                     batch: \"daily\",\n                     vertical: true,\n                     value: this.repeatDaily || defaultValues.repeatDaily,\n                     options: [\n                        { id: \"day\", value: L(\"Day\") },\n                        { id: \"weekday\", value: L(\"Weekday\") },\n                     ],\n                  },\n                  {\n                     view: \"multiselect\",\n                     id: ids.repeatWeekly,\n                     labelWidth: LABEL_WIDTH,\n                     label: L(\"Every week on:\"),\n                     batch: \"weekly\",\n                     value: this.repeatWeekly || defaultValues.repeatWeekly,\n                     options: [\n                        {\n                           id: \"SUN\",\n                           value: L(\"Sunday\"),\n                        },\n                        {\n                           id: \"MON\",\n                           value: L(\"Monday\"),\n                        },\n                        {\n                           id: \"TUE\",\n                           value: L(\"Tuesday\"),\n                        },\n                        {\n                           id: \"WED\",\n                           value: L(\"Wednesday\"),\n                        },\n                        {\n                           id: \"THU\",\n                           value: L(\"Thursday\"),\n                        },\n                        {\n                           id: \"FRI\",\n                           value: L(\"Friday\"),\n                        },\n                        {\n                           id: \"SAT\",\n                           value: L(\"Saturday\"),\n                        },\n                     ],\n                  },\n                  {\n                     view: \"layout\",\n                     batch: \"monthly\",\n                     rows: [\n                        {\n                           id: ids.repeatMonthly,\n                           view: \"richselect\",\n                           labelWidth: LABEL_WIDTH,\n                           label: L(\"Monthly on day\"),\n                           options: dayOptions,\n                           value:\n                              this.repeatMonthly || defaultValues.repeatMonthly,\n                        },\n                     ],\n                  },\n               ],\n            },\n            {\n               id: ids.isEnabled,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               labelWidth: LABEL_WIDTH,\n               value: this.isEnabled,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n      $$(ids.repeatOnPanel).showBatch(\n         this.repeatEvery || defaultValues.repeatEvery\n      );\n   }\n\n   /**\n    * @function propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = $$(ids.name).getValue();\n      this.repeatEvery = $$(ids.repeatEvery).getValue();\n      this.repeatTime = $$(ids.repeatTime).getValue();\n      this.repeatDaily = $$(ids.repeatDaily).getValue();\n      this.repeatWeekly = $$(ids.repeatWeekly).getValue();\n      this.repeatMonthly = $$(ids.repeatMonthly).getValue();\n      this.isEnabled = $$(ids.isEnabled).getValue();\n      this.triggerKey =\n         this.triggerKey == null || this.triggerKey == \"triggerKey.??\"\n            ? `timer.${this.id || this.AB.uuid()}`\n            : this.triggerKey;\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   // constructor(attributes, parameterDefinitions, prevOP, task, application) {\n   //     super(attributes, parameterDefinitions, prevOP, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: \"continue?\",\n                           text: \"changing this rule will reset any following rules.\",\n                           ok: \"yes\",\n                           cancel: \"no\",\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      webix.ui(uiNextRow.cols[1], $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"select\",\n               label: \"Field\",\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: \"Variable\",\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: \"Enter parameter name\",\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n\n   /*\n     * parseQuery()\n     * check the given query string input and see if this object is the\n     * starting object.\n     * @param {string} query\n     *\t\t\t the entered query string operation.\n     * @return {bool}\n     * /\n    static parseQuery(query) {\n        // we want to see if the beginning of this query matches our\n        // option_begin string.\n        const begQuery = query;\n        if (query.length > this.option_begin.length) {\n            begQuery = query.slice(0, this.option_begin.length);\n        }\n        if (this.option_begin.indexOf(begQuery) === 0) {\n            return true;\n        }\n        return false;\n    }\n\n\n\n    /// ABApplication data methods\n\n    tabComplete() {\n        if (this._suggestions) {\n            // if our begin tag is  present in _suggestions\n            if (\n                this._suggestions.indexOf(this.constructor.option_begin) !== -1\n            ) {\n                // this is probably finishing out our command:\n                this.currQuery = this._suggestions;\n            } else {\n                // we are suggesting a parameter value:\n                this.currQuery = `${this.constructor.option_begin}${this._suggestions}`;\n            }\n\n            // now make sure we do another refresh to get another\n            // suggestion.\n            this.fromQuery(this.currQuery);\n        }\n    }\n\n    paramsToString() {\n        const strs = [];\n        this.parameterDefinitions.forEach((pDef) => {\n            strs.push(this.params[pDef.name]);\n            // switch (pDef.type) {\n            //     case \"objectName\":\n            //         strs.push(this.params[pDef.name]);\n            //         break;\n            // }\n        });\n\n        return strs.join(\",\");\n    }\n\n    /**\n     * @method toObj()\n     *\n     * properly compile the current state of this ABView instance\n     * into the values needed for saving to the DB.\n     *\n     * @return {json}\n     * /\n    toQuery() {\n        if (this.entryComplete) {\n            return `${this.prevOP ? this.prevOP.toQuery() : \"\"}${\n                this.constructor.option_begin\n            }${this.params ? this.paramsToString() : \"\"})`;\n        } else {\n            return `${this.prevOP ? this.prevOP.toQuery() : \"\"}${\n                this.currQuery ? this.currQuery : \"\"\n            }`;\n        }\n    }\n\n    fromQuery(queryString) {\n        const results = this.constructor.regEx.exec(queryString);\n        if (results) {\n            this.entryComplete = true;\n            this.queryValid = true;\n            this.params = {};\n\n            if (this.paramsValid(results[1])) {\n                // now progress on to any next operations:\n                const newQuery = queryString.replace(this.constructor.regEx, \"\");\n                const matchingOPs = [];\n                this.constructor.NextQLOps.forEach((OP) => {\n                    if (OP.parseQuery(newQuery)) {\n                        matchingOPs.push(OP);\n                    }\n                });\n                if (matchingOPs.length === 1) {\n                    // exact match, so add next:\n                    const qlOP = new matchingOPs[0](\n                        {},\n                        this,\n                        this.task,\n                        this.application\n                    );\n                    qlOP.fromQuery(newQuery);\n                    this.next = qlOP;\n                }\n\n                // if there were no matching OPs, then they typed an error:\n                if (matchingOPs.length === 0) {\n                    this.queryValid = false;\n                }\n            } else {\n                // I don't recoginze these params!\n                this.queryValid = false;\n                this._suggestions = \" ! Invalid Params !\";\n            }\n        } else {\n            this.currQuery = queryString;\n            this.queryValid = true; // assume true then set to false later\n            this._suggestions = null;\n\n            // calculate the processing of our command + params:\n            // if we have finished our begining\n            if (this.currQuery.indexOf(this.constructor.option_begin) === 0) {\n                const param = this.currQuery.slice(\n                    this.constructor.option_begin.length\n                );\n\n                this.paramsFromQuery(param);\n            } else {\n                // else they need to finish the beginning\n                this._suggestions = this.constructor.option_begin;\n            }\n\n            // if we didn't have any suggestions, then what they typed\n            // doesn't match, so remove the last character:\n            if (!this._suggestions) {\n                this.currQuery = this.currQuery.slice(0, -1);\n                this.queryValid = false;\n                this._suggestions = null;\n\n                // try to regenerate the suggestions again:\n                const param = this.currQuery.slice(\n                    this.constructor.option_begin.length\n                );\n\n                this.paramsFromQuery(param);\n            }\n        }\n    }\n\n    firstOP() {\n        if (!this.prevOP) {\n            return this;\n        } else {\n            return this.prevOP.firstOP();\n        }\n    }\n\n    lastOP() {\n        if (!this.entryComplete) {\n            return this;\n        } else {\n            // now figure out which of our nextOps are being used.\n            if (this.next) {\n                return this.next.lastOP();\n            } else {\n                // we haven't specified a next OP, so we are still up.\n                return this;\n            }\n        }\n    }\n\n    paramPull(paramDef, queryString) {\n        const result = { param: queryString, balance: 0 };\n        if (queryString.length > 0) {\n            switch (paramDef.type) {\n                case \"objectName\":\n                    // define a lexer for objectNames\n                    const lexerObjectName = moo.compile({\n                        comma: { match: \",\" },\n                        name: {\n                            match: /\"(?:\\\\[\"\\\\]|[^\\n\"\\\\])*\"/\n                            // value: (s) => s.slice(1, -1)\n                        },\n                        WS: /[ \\t]+/,\n                        currKey: moo.error\n                    });\n                    lexerObjectName.reset(queryString);\n                    const name = \"\";\n                    const foundObj = null;\n                    const token = lexerObjectName.next();\n\n                    if (token) {\n                        // if this is the 2nd time through, might\n                        // begin with a ','\n                        while (token.type === \"comma\") {\n                            token = lexerObjectName.next();\n                        }\n\n                        // pull the parameter from the current queryString\n                        if ([\"name\", \"currKey\"].indexOf(token.type) !== -1) {\n                            name = token.value;\n                        }\n                        result.param = name;\n                    }\n\n                    break;\n\n                case \"objectConditions\":\n                case \"objectValues\":\n                    // define a lexer for objectConditions\n                    // the goal of this lexer is to achieve json balance\n                    // ( equal # of { & }) while reaching an end condition:\n                    const lexerObjectCond = moo.compile({\n                        comma: { match: \",\" },\n                        colon: { match: \":\" },\n                        lbrace: { match: \"{\" },\n                        rbrace: { match: \"}\" },\n                        rparen: { match: \")\" },\n                        keyval: {\n                            match: /\"(?:\\\\[\"\\\\]|[^\\n\"\\\\])*\"/\n                            // value: (s) => s.slice(1, -1)\n                        },\n                        WS: /[ \\t]+/,\n                        currKey: moo.error\n                    });\n                    lexerObjectCond.reset(queryString);\n                    const balance = 0;\n                    const foundObj = null;\n                    const token = lexerObjectCond.next();\n                    const stop = false;\n                    const param = \"\";\n                    while (token && !stop) {\n                        if (token.type === \"lbrace\") {\n                            balance++;\n                        }\n                        if (token.type === \"rbrace\") {\n                            balance--;\n                        }\n\n                        // check for stop condition:\n                        // when balance is achieved and we find a \",\"\n                        if (balance === 0) {\n                            if (token.type === \"comma\") {\n                                stop = true;\n                            }\n                        }\n\n                        if (!stop) {\n                            param += token.value;\n                            token = lexerObjectCond.next();\n                        }\n                    }\n                    result.param = param;\n                    result.balance = balance;\n                    break;\n            }\n        }\n\n        return result;\n    }\n\n    suggestionComplete() {\n        const params = [];\n        this.parameterDefinitions.forEach((pDef) => {\n            params.push(this.params[pDef.name]);\n        });\n        return `${this.constructor.option_begin}${params.join(\",\")})`;\n    }\n\n    /**\n     * @method paramsFromQuery()\n     * take the given queryString value and see if it matches our\n     * possible parameter values.\n     * we update ._suggestions based upon the current param state.\n     * @param {string} queryString\n     * /\n    paramsFromQuery(queryString) {\n        const keepGoing = true;\n        const current = queryString;\n\n        // for each of our parameters,\n        this.parameterDefinitions.forEach((pDef) => {\n            if (!keepGoing) return;\n\n            // pull the current param\n            const pullResult = this.paramPull(pDef, current);\n            current = current.replace(pullResult.param, \"\");\n\n            // if this param is NOT valid\n            if (!this.paramIsValid(pDef, pullResult)) {\n                // don't keep going after this\n                keepGoing = false;\n\n                // offer suggestions for this param\n                switch (pDef.type) {\n                    case \"objectName\":\n                        // return suggestions for our parameters\n                        const suggestions = [];\n                        const objects = this.application.objects((o) => {\n                            const quotedLabel = `\"${o.label}\"`;\n                            return (\n                                pullResult.param.length === 0 ||\n                                quotedLabel.indexOf(pullResult.param) === 0\n                            );\n                        });\n                        objects.forEach((o) => {\n                            suggestions.push(`\"${o.label}\"`);\n                        });\n                        this._suggestions = suggestions.join(\"\\n\");\n                        break;\n\n                    case \"objectConditions\":\n                    case \"objectValues\":\n                        const paramComplete = false;\n                        const paramObj = null;\n                        try {\n                            paramObj = JSON.parse(pullResult.param);\n                            paramComplete = true;\n                        } catch (e) {}\n\n                        if (paramComplete) {\n                            this.paramObj = paramObj;\n                            this.params[pDef.name] = pullResult.param;\n                            // this.entryComplete = true;\n                            this._suggestions = this.suggestionComplete();\n                        } else {\n                            // define a lexer to help us parse through the provided cond string\n                            const lexer = moo.states({\n                                start: {\n                                    lbrace: { match: \"{\", push: \"key\" }\n                                },\n                                key: {\n                                    colon: { match: \":\", push: \"value\" },\n                                    rparen: { match: \")\", pop: true },\n                                    key: {\n                                        match: /\"(?:\\\\[\"\\\\]|[^\\n\"\\\\])*\"/\n                                        // value: (s) => s.slice(1, -1)\n                                    },\n                                    WS: /[ \\t]+/,\n                                    currKey: moo.error\n                                },\n                                value: {\n                                    // lbrace: { match: \"{\", push: \"complexValue\" },\n                                    rbrace: { match: \"}\", pop: true },\n                                    valueContext: {\n                                        match: /\"\\$context\\((?:\\\\[\"\\\\]|[^\\n\"\\\\])*?\\)\"/\n                                    },\n                                    value: {\n                                        match: /\"(?:\\\\[\"\\\\]|[^\\n\"\\\\])*\"/\n                                    },\n                                    comma: { match: \",\", pop: true },\n                                    currVal: moo.error\n                                }\n                            });\n\n                            // now follow our state, to figure out if we are entering a\n                            // key, or a value, and then figure out how to offer suggestions\n                            // based upon what they are entering now:\n                            const state = \"start\";\n                            lexer.reset(pullResult.param);\n                            const token = lexer.next();\n                            const lastToken = null;\n                            const lastKey = null;\n                            while (token) {\n                                switch (state) {\n                                    case \"start\":\n                                        if (token.type === \"lbrace\") {\n                                            state = \"key\";\n                                        }\n                                        break;\n                                    case \"key\":\n                                        if (token.type === \"colon\") {\n                                            state = \"value\";\n                                        }\n                                        if (token.type === \"key\") {\n                                            lastKey = token.value;\n                                        }\n                                        break;\n\n                                    case \"value\":\n                                        if (token.type === \"comma\") {\n                                            state = \"key\";\n                                        }\n                                        break;\n                                }\n                                lastToken = token;\n                                token = lexer.next();\n                            }\n\n                            // by this point, we have ended on a state, and can figure out\n                            // what to suggest:\n                            switch (state) {\n                                case \"start\":\n                                    // if we ended here, then we didn't even have our first {\n                                    this._suggestions = \"{cond}\";\n                                    break;\n\n                                case \"key\":\n                                    // we are entering a Key, so suggest the available fields\n                                    // from this object\n                                    const currKey = \"\";\n                                    const types = [\"key\", \"currKey\"];\n                                    if (types.indexOf(lastToken.type) !== -1) {\n                                        currKey = lastToken.value;\n                                    }\n                                    this._suggestions = this.fieldList(currKey);\n\n                                    // if we end up with ._suggestions === currKey\n                                    // then the key is complete, and we need to now enter \":\"\n                                    if (this._suggestions === currKey) {\n                                        this._suggestions = \":\";\n                                    }\n                                    break;\n\n                                case \"value\":\n                                    // entering a value, decide what to suggest based on what\n                                    // the current key/field we are on:\n                                    const currValue = \"\";\n                                    const types = [\n                                        \"value\",\n                                        \"valueContext\",\n                                        \"currVal\"\n                                    ];\n                                    if (types.indexOf(lastToken.type) !== -1) {\n                                        currValue = lastToken.value;\n                                    }\n                                    this._suggestions = this.valueList(\n                                        lastKey,\n                                        currValue\n                                    );\n                                    break;\n                            }\n                        }\n\n                        break;\n                }\n            }\n        });\n\n        if (keepGoing) {\n            // none of our params were invalid, so just suggest to complete our\n            this._suggestions = this.suggestionComplete();\n        }\n    }\n\n    paramIsValid(paramDef, pullResult) {\n        const isValid = true;\n        this.params = this.params ?? {};\n        switch (paramDef.type) {\n            case \"objectName\":\n                // verify it is valid\n                const param = pullResult.param;\n                const foundObj = null;\n                if (param) {\n                    // see if we find a Matching Object\n                    foundObj = this.application.objects((o) => {\n                        const quotedLabel = `\"${o.label}\"`;\n                        return (\n                            param.length === 0 || quotedLabel.indexOf(param) === 0\n                        );\n                    })[0];\n                    if (foundObj) {\n                        this.params[paramDef.name] = param;\n                        // it is NOT valid unless it is an exact match:\n                        if (`\"${foundObj.label}\"` !== param) {\n                            isValid = false;\n                        }\n                    }\n                }\n                isValid = isValid && param.length > 0 && foundObj;\n                break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n                if (pullResult.balance === 0) {\n                    this.params[paramDef.name] = pullResult.param;\n                }\n                isValid =\n                    isValid &&\n                    pullResult.balance === 0 &&\n                    pullResult.param.length > 0;\n                break;\n        }\n\n        return isValid;\n    }\n    /**\n     * @method paramsValid()\n     * parse through the given text and see if our defined parameters\n     * can be properly represented.\n     * @param {string} queryString\n     *        the current value of the text that is the parameter(s) to our\n     *        function.\n     * @return {bool}\n     *         true : if every parameter parses\n     *         false: otherwise\n     * /\n    paramsValid(queryString) {\n        // queryString represents the full text parameters. Might be > 1 params\n\n        const current = queryString;\n        const isValid = true; // so optimistic.\n\n        // for each of our defined parameters\n        this.parameterDefinitions.forEach((pDef) => {\n            const pullResult = this.paramPull(pDef, current);\n            current = current.replace(pullResult.param, \"\");\n            isValid = isValid && this.paramIsValid(pDef, pullResult);\n        });\n\n        return isValid;\n    }\n\n    suggestions() {\n        if (this.entryComplete) {\n            // return suggestions for next operations.\n            const suggestions = [];\n\n            this.constructor.NextQLOps.forEach((OP) => {\n                suggestions.push(OP.option);\n            });\n            return suggestions.join(\"\\n\");\n        } else {\n            return this._suggestions;\n        }\n    }\n    */\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   // /*\n   //  * @method isValid\n   //  * check the current values to make sure they are valid.\n   //  * Here we check the default values provided by ABView.\n   //  *\n   //  * @return {ABFactory.Validation.validator()}\n   //  */\n   // isValid() {\n   //    var validator = this.AB.Validation.validator();\n\n   //    // // labels must be unique among views on the same parent\n   //    var parent = this.parent;\n   //    // if (!parent) { parent = this.application; }\n\n   //    // if we have a parent component:\n   //    if (parent) {\n   //       var isNameUnique =\n   //          parent.views((v) => {\n   //             return (\n   //                v.id != this.id &&\n   //                v.label.toLowerCase() == this.label.toLowerCase()\n   //             );\n   //          }).length == 0;\n   //       if (!isNameUnique) {\n   //          validator.addError(\n   //             \"label\",\n   //             L(\"View label must be unique among peers.\")\n   //          );\n   //       }\n   //    }\n   //    return validator;\n   // }\n\n   // /**\n   //  * @method editorComponent\n   //  * return the Editor for this UI component.\n   //  * the editor should display either a \"block\" view or \"preview\" of\n   //  * the current layout of the view.\n   //  * @param {string} mode what mode are we in ['block', 'preview']\n   //  * @return {Component}\n   //  */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewEditorComponent\";\n   //    var ids = {\n   //       component: App.unique(idBase + \"_component\"),\n   //       view: App.unique(idBase + \"_view\"),\n   //    };\n\n   //    var _ui = {\n   //       rows: [\n   //          {\n   //             id: ids.component,\n   //             view: App.custom.savablelayout.view,\n   //             type: \"space\",\n   //             rows: [],\n   //          },\n   //       ],\n   //    };\n\n   //    var _init = (options) => {\n   //       var Layout = $$(ids.component);\n\n   //       var allComponents = [];\n\n   //       App.eventIds = App.eventIds || {};\n\n   //       // prevent .attachEvent multiple times\n   //       if (App.eventIds[\"onAfterPortletMove\"])\n   //          webix.detachEvent(\"onAfterPortletMove\");\n\n   //       // listen a event of the porlet when layout is changed\n   //       App.eventIds[\"onAfterPortletMove\"] = webix.attachEvent(\n   //          \"onAfterPortletMove\",\n   //          (source, parent, active, target, mode) => {\n   //             _logic.onAfterPortletMove();\n   //          }\n   //       );\n\n   //       // attach all the .UI views:\n   //       this.views().forEach((child) => {\n   //          var component = child.component(App);\n\n   //          var porletUI = {\n   //             viewId: child.id, // set id to .viewId, the layout template\n   //             view: \"portlet\",\n   //             css: \"ab-interface-component\",\n   //             // borderless: true,\n   //             layoutType: \"head\", // Drag on icon\n   //             body: {\n   //                rows: [\n   //                   {\n   //                      view: \"template\",\n   //                      height: 30,\n   //                      css: \"ab-porlet-header\",\n   //                      template: _logic.template(child),\n   //                      onClick: {\n   //                         \"ab-component-edit\": (e, id, trg) => {\n   //                            _logic.viewEdit(e, child.id, trg);\n   //                         },\n   //                         \"ab-component-remove\": (e, id, trg) => {\n   //                            _logic.viewDelete(e, child.id, trg);\n   //                         },\n   //                      },\n   //                   },\n   //                   mode == \"preview\"\n   //                      ? component.ui\n   //                      : {\n   //                           // empty element\n   //                           view: \"spacer\",\n   //                           hidden: true,\n   //                        },\n   //                ],\n   //             },\n   //          };\n\n   //          // get element in template\n   //          var elem = Layout.queryView({ viewId: child.id });\n\n   //          // If webix element is not exists in html, then destroy it.\n   //          // NOTE : webix does not know html is missing when we redraw layout at .setState\n   //          if (elem && !document.body.contains(elem.$view)) elem.destructor();\n\n   //          if (elem) {\n   //             // replace component to layout\n   //             webix.ui(porletUI, elem);\n   //          }\n   //          // add component to rows\n   //          else {\n   //             Layout.addView(porletUI);\n   //          }\n\n   //          allComponents.push(component);\n   //       });\n\n   //       // in preview mode, have each child render a preview\n   //       // of their content:\n   //       if (mode == \"preview\") {\n   //          // perform any init setups for the content:\n   //          allComponents.forEach((component) => {\n   //             component.init();\n   //          });\n   //       }\n   //    };\n\n   //    var _logic = {\n   //       /**\n   //        * @method template()\n   //        * render the list template for the View\n   //        * @param {obj} obj the current View instance\n   //        * @param {obj} common  Webix provided object with common UI tools\n   //        */\n   //       template: function (child) {\n   //          return (\n   //             \"<div>\" +\n   //             `<i class=\"fa fa-${child.icon} webix_icon_btn\"></i> ` +\n   //             ` ${child.label}` +\n   //             '<div class=\"ab-component-tools\">' +\n   //             '<i class=\"fa fa-trash ab-component-remove\"></i>' +\n   //             '<i class=\"fa fa-edit ab-component-edit\"></i>' +\n   //             \"</div>\" +\n   //             \"</div>\"\n   //          );\n   //       },\n\n   //       /**\n   //        * @method viewDelete()\n   //        * Called when the [delete] icon for a child View is clicked.\n   //        * @param {obj} e the onClick event object\n   //        * @param {integer} id the id of the element to delete\n   //        * @param {obj} trg  Webix provided object\n   //        */\n   //       viewDelete: (e, id, trg) => {\n   //          var deletedView = this.views((v) => v.id == id)[0];\n\n   //          if (!deletedView) return false;\n\n   //          this.AB.Dialog.Confirm({\n   //             title: L(\"Delete component\"),\n   //             text: L(\"Do you want to delete <b>{0}</b>?\", [\n   //                deletedView.label,\n   //             ]),\n   //             callback: function (result) {\n   //                if (result) {\n   //                   var Layout = $$(ids.component);\n\n   //                   // remove UI of this component in template\n   //                   var deletedElem = Layout.queryView({ viewId: id });\n   //                   if (deletedElem)\n   //                      $$(ids.component).destroyView(deletedElem);\n\n   //                   // update/refresh template to ABView\n   //                   _logic.refreshTemplate();\n\n   //                   deletedView\n   //                      .destroy()\n   //                      .then(() => {\n   //                         // signal the current view has been deleted.\n   //                         deletedView.emit(\"destroyed\", deletedView);\n\n   //                         // if we don't have any views, then place a \"drop here\" placeholder\n   //                         if ($$(ids.component).getChildViews().length == 0) {\n   //                            webix.extend($$(ids.component), webix.OverlayBox);\n   //                            $$(ids.component).showOverlay(\n   //                               \"<div class='drop-zone'><div>\" +\n   //                                  App.labels.componentDropZone +\n   //                                  \"</div></div>\"\n   //                            );\n   //                         }\n   //                      })\n   //                      .catch((err) => {\n   //                         this.AB.error(\n   //                            \"Error trying to delete selected View:\",\n   //                            { error: err, view: deletedView }\n   //                         );\n   //                      });\n   //                }\n   //             },\n   //          });\n   //          e.preventDefault();\n   //       },\n\n   //       /**\n   //        * @method viewEdit()\n   //        * Called when the [edit] icon for a child View is clicked.\n   //        * @param {obj} e the onClick event object\n   //        * @param {integer} id the id of the element to edit\n   //        * @param {obj} trg  Webix provided object\n   //        */\n   //       viewEdit: (e, id, trg) => {\n   //          var view = this.views((v) => v.id == id)[0];\n\n   //          if (!view) return false;\n\n   //          // yeah, if the empty placeholder fires an [edit] event,\n   //          // then ignore it.\n   //          if (view.id == \"del_me\") return false;\n\n   //          // NOTE: let webix finish this onClick event, before\n   //          // calling .populateInterfaceWorkspace() which will replace\n   //          // the interface elements with the edited view.  (apparently\n   //          // that causes errors.)\n   //          setTimeout(() => {\n   //             App.actions.populateInterfaceWorkspace(view);\n   //          }, 50);\n\n   //          e.preventDefault();\n\n   //          return false;\n   //       },\n\n   //       onAfterPortletMove: () => {\n   //          _logic.refreshTemplate();\n\n   //          // save template layout to ABPageView\n   //          this.save();\n\n   //          // // Reorder\n   //          // var viewId = active.config.id;\n   //          // var targetId = target.config.id;\n\n   //          // var toPosition = this._views.findIndex((v) => v.id == targetId);\n\n   //          // this.viewReorder(viewId, toPosition);\n   //       },\n\n   //       refreshTemplate: () => {\n   //          // get portlet template UI to ABView\n   //          this.template = $$(ids.component).getState();\n   //       },\n   //    };\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //    };\n   // }\n\n   // static propertyEditorComponent(App) {\n   //    var ABViewPropertyComponent = new ABPropertyComponent({\n   //       editObject: this, // ABView\n\n   //       fieldDefaults: this.common(), // ABViewDefaults,\n\n   //       elements: (App, field) => {\n   //          var ids = {\n   //             imageWidth: \"\",\n   //             imageHeight: \"\",\n   //          };\n   //          ids = field.idsUnique(ids, App);\n\n   //          return [];\n   //       },\n\n   //       // defaultValues: the keys must match a .name of your elements to set it's default value.\n   //       defaultValues: ABViewPropertyComponentDefaults,\n\n   //       // rules: basic form validation rules for webix form entry.\n   //       // the keys must match a .name of your .elements for it to apply\n   //       rules: {\n   //          // 'textDefault':webix.rules.isNotEmpty,\n   //          // 'supportMultilingual':webix.rules.isNotEmpty\n   //       },\n\n   //       // include additional behavior on default component operations here:\n   //       // The base routines will be processed first, then these.  Any results\n   //       // from the base routine, will be passed on to these:\n   //       //   @param {obj} ids  the list of ids used to generate the UI.  your\n   //       //           provided .elements will have matching .name keys\n   //       //           to access them here.\n   //       //  @param {obj} values the current set of values provided for this instance\n   //       //             of ABField:\n   //       //           {\n   //       //           id:'',      // if already .saved()\n   //       //             label:'',\n   //       //             columnName:'',\n   //       //           settings:{\n   //       //             showIcon:'',\n   //       //\n   //       //             your element key=>values here\n   //       //           }\n   //       //           }\n   //       //\n   //       //     .clear(ids)  : reset the display to an empty state\n   //       //     .isValid(ids, isValid): perform validation on the current editor values\n   //       //     .populate(ids, ABField) : populate the form with your current settings\n   //       //     .show(ids)   : display the form in the editor\n   //       //     .values(ids, values) : return the current values from the form\n   //       logic: {},\n\n   //       // perform any additional setup actions here.\n   //       // @param {obj} ids  the hash of id values for all the current form elements.\n   //       //          it should have your elements + the default Header elements:\n   //       //           .label, .columnName, .fieldDescription, .showIcon\n   //       init: function (ids) {\n   //          // want to hide the description? :\n   //          // $$(ids.fieldDescription).hide();\n   //       },\n   //    });\n\n   //    return ABViewPropertyComponent.component(App);\n   // }\n\n   // static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n   //    return [\n   //       // Component Label\n   //       {\n   //          view: \"text\",\n   //          // id: ids.label,\n   //          name: \"label\",\n   //          label: App.labels.dataFieldHeaderLabel,\n   //          placeholder: App.labels.dataFieldHeaderLabelPlaceholder,\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //          css: \"ab-new-label-name\",\n   //          //        on: {\n   //          //          onChange: function (newVal, oldVal) {\n   //          // console.warn('ABView.onChange()!!!');\n   //          //          }\n   //          //        }\n   //       },\n   //    ];\n   // }\n\n   // static propertyEditorPopulate(App, ids, view) {\n   //    if (!view) return;\n   //    $$(ids.label).setValue(view.label);\n   // }\n\n   // static propertyEditorValues(ids, view) {\n   //    if (!view) return;\n   //    view.label = $$(ids.label).getValue();\n   // }\n\n   // static propertyEditorSave(ids, view, includeSubViews = false) {\n   //    this.propertyEditorValues(ids, view);\n\n   //    return new Promise((resolve, reject) => {\n   //       view\n   //          .save(includeSubViews)\n   //          .then(function () {\n   //             // signal the current view has been updated.\n   //             view.emit(\"properties.updated\", view);\n\n   //             resolve();\n   //          })\n   //          .catch(function (err) {\n   //             this.AB.error(\"unable to save view:\", {\n   //                error: err,\n   //                view: view,\n   //             });\n   //             reject(err);\n   //          });\n   //    });\n   // }\n\n   // /**\n   //  * @method propertyDatacollections()\n   //  * a convience method to return a list of available Datacollections\n   //  * @param {bool} isGlobal\n   //  *        true : return a list of ALL available DataCollections\n   //  *        false: (default) only return a list of included DCs\n   //  * @return {array}\n   //  *        [ { id:dc.id, value:dc.label } ]\n   //  *        this format is used by the webix select lists to choose your\n   //  *        datasources.\n   //  */\n   // propertyDatacollections(\n   //    filter = () => true,\n   //    isGlobal = false,\n   //    defaultOption = null\n   // ) {\n   //    if (defaultOption == null) {\n   //       defaultOption = {\n   //          id: \"\",\n   //          value: L(\"Select a DataCollection\"),\n   //       };\n   //    }\n\n   //    var list = [];\n   //    if (isGlobal) {\n   //       list = this.AB.datacollections(filter);\n   //    } else {\n   //       list = this.application.datacollectionsIncluded(filter);\n   //    }\n   //    list = list.map((dc) => {\n   //       return {\n   //          id: dc.id,\n   //          value: dc.label,\n   //       };\n   //    });\n   //    list.unshift(defaultOption);\n   //    return list;\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    *\n    * @return {obj} UI component\n    */\n   component() {\n      const component = new ABViewComponent(this);\n\n      return component;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // if (this.parent) {\n      //  return this.parent.componentList(false);\n      // } else {\n\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n\n      // }\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   // removeField(field, cb) {\n   //    // if this view has matching field then destroy()\n   //    if (this.settings.fieldId == field.id) {\n   //       this.destroy()\n   //          .then(() => {\n   //             // signal the current view has been deleted.\n   //             this.emit(\"destroyed\", this);\n   //             cb(null, true);\n   //          })\n   //          .catch((err) => {\n   //             this.AB.error(\"Error trying to delete selected View:\", {\n   //                error: err,\n   //                view: this,\n   //             });\n   //             cb(err);\n   //          });\n   //    } else {\n   //       // if not check for subViews then call removeField on them\n\n   //       var shouldSave = false;\n\n   //       var finish = () => {\n   //          if (shouldSave) {\n   //             this.save()\n   //                .then(() => {\n   //                   cb();\n   //                })\n   //                .catch(cb);\n   //          } else {\n   //             cb();\n   //          }\n   //       };\n\n   //       // for each sub view, view.removeField(field);\n   //       var listViews = this.views();\n   //       var done = 0;\n   //       listViews.forEach((v) => {\n   //          v.removeField(field, (err, updateMade) => {\n   //             if (err) {\n   //                cb(err);\n   //             } else {\n   //                if (updateMade) {\n   //                   shouldSave = true;\n   //                }\n\n   //                done++;\n   //                if (done >= listViews.length) {\n   //                   finish();\n   //                }\n   //             }\n   //          });\n   //       });\n\n   //       if (listViews.length == 0) {\n   //          finish();\n   //       }\n   //    }\n   // }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nconst ABViewCSVExporterPropertyComponentDefaults =\n   ABViewCSVExporterCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nlet PropertyFilter = null;\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      let idBase = \"ABViewCSVExporter\";\n\n      let commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      _logic.showFilterPopup = ($view) => {\n         this.filter_popup.show($view, null, { pos: \"top\" });\n      };\n\n      _logic.onFilterChange = () => {\n         let view = _logic.currentEditObject();\n         let filterValues = PropertyFilter.getValue() || {};\n\n         let allComplete = true;\n         (filterValues.rules || []).forEach((f) => {\n            // if all 3 fields are present, we are good.\n            if (f.key && f.rule && f.value) {\n               allComplete = allComplete && true;\n            } else {\n               // else, we found an entry that wasn't complete:\n               allComplete = false;\n            }\n         });\n\n         // only perform the update if a complete row is specified:\n         if (allComplete) {\n            // we want to call .save() but give webix a chance to properly update it's\n            // select boxes before this call causes them to be removed:\n            setTimeout(() => {\n               this.propertyEditorSave(ids, view);\n            }, 10);\n         }\n      };\n\n      // create filter popups\n      this.initPopupEditors(App, ids, _logic);\n\n      // _logic functions\n\n      _logic.selectSource = (dcId, oldDcId) => {\n         let currView = _logic.currentEditObject();\n\n         // this.propertyUpdateRules(ids, currView);\n\n         // refresh UI\n         currView.emit(\"properties.updated\", currView);\n\n         // save\n         currView.settings.dataviewID = dcId;\n         this.propertyEditorValues(ids, currView);\n         currView.save();\n      };\n\n      return commonUI.concat([\n         {\n            view: \"fieldset\",\n            label: L(\"Data:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               rows: [\n                  {\n                     name: \"datacollection\",\n                     view: \"richselect\",\n                     label: L(\"Data Source\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     skipAutoSave: true,\n                     on: {\n                        onChange: _logic.selectSource,\n                     },\n                  },\n                  {\n                     name: \"hasHeader\",\n                     view: \"checkbox\",\n                     label: L(\"Header on first line\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Filter Option:\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           view: \"button\",\n                           name: \"filterMenuButton\",\n                           css: \"webix_primary\",\n                           label: L(\"Settings\"),\n                           icon: \"fa fa-gear\",\n                           type: \"icon\",\n                           badge: 0,\n                           click: function () {\n                              _logic.showFilterPopup(this.$view);\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         {\n            view: \"fieldset\",\n            label: L(\"Customize Display:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               type: \"clean\",\n               padding: 10,\n               rows: [\n                  {\n                     name: \"buttonLabel\",\n                     view: \"text\",\n                     label: L(\"Label\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                  },\n                  {\n                     name: \"filename\",\n                     view: \"text\",\n                     label: L(\"File name\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                  },\n                  {\n                     view: \"counter\",\n                     name: \"width\",\n                     label: L(\"Width:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                  },\n               ],\n            },\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      // Pull data views to options\n      let dcOptions = view.AB.datacollections().map((dc) => {\n         return {\n            id: dc.id,\n            value: dc.label,\n         };\n      });\n\n      let $DcSelector = $$(ids.datacollection);\n      $DcSelector.define(\"options\", dcOptions);\n      $DcSelector.define(\"value\", view.settings.dataviewID || null);\n      $DcSelector.refresh();\n\n      $$(ids.hasHeader).setValue(\n         view.settings.hasHeader ||\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader\n      );\n      $$(ids.buttonLabel).setValue(\n         view.settings.buttonLabel ||\n            ABViewCSVExporterPropertyComponentDefaults.buttonLabel\n      );\n      $$(ids.filename).setValue(\n         view.settings.filename ||\n            ABViewCSVExporterPropertyComponentDefaults.filename\n      );\n      $$(ids.width).setValue(\n         view.settings.width || ABViewCSVExporterPropertyComponentDefaults.width\n      );\n\n      // Populate data to popups\n      // PropertyFilter.applicationLoad(view.application);\n      let dc = view.datacollection;\n      let obj = dc ? dc.datasource : null;\n      if (obj) {\n         PropertyFilter.fieldsLoad(obj.fields());\n      } else {\n         PropertyFilter.fieldsLoad([]);\n      }\n      PropertyFilter.setValue(view.settings.where);\n\n      this.propertyBadgeNumber(ids, view);\n\n      //   // when a change is made in the properties the popups need to reflect the change\n      //   this.updateEventIds = this.updateEventIds || {}; // { viewId: boolean, ..., viewIdn: boolean }\n      //   if (!this.updateEventIds[view.id]) {\n      //      this.updateEventIds[view.id] = true;\n\n      //      view.addListener(\"properties.updated\", () => {\n      //         this.populateBadgeNumber(ids, view);\n      //      });\n      //   }\n   }\n\n   static initPopupEditors(App, ids, _logic) {\n      var idBase = \"ABViewCSVExporterPropertyEditor\";\n\n      PropertyFilter = this.AB.filterComplexNew(`${idBase}_filter`);\n      PropertyFilter.init();\n      // when we make a change in the popups we want to make sure we save the new workspace to the properties to do so just fire an onChange event\n      PropertyFilter.on(\"change\", (val) => {\n         _logic.onFilterChange(val);\n      });\n\n      this.filter_popup = webix.ui({\n         view: \"popup\",\n         width: 800,\n         hidden: true,\n         body: PropertyFilter.ui,\n      });\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n      view.settings.hasHeader = $$(ids.hasHeader).getValue();\n      view.settings.where = PropertyFilter.getValue();\n\n      view.settings.buttonLabel =\n         $$(ids.buttonLabel).getValue() ||\n         ABViewCSVExporterPropertyComponentDefaults.buttonLabel;\n\n      view.settings.filename =\n         $$(ids.filename).getValue() ||\n         ABViewCSVExporterPropertyComponentDefaults.filename;\n\n      view.settings.width =\n         $$(ids.width).getValue() ||\n         ABViewCSVExporterPropertyComponentDefaults.width;\n\n      this.propertyBadgeNumber(ids, view);\n   }\n\n   static propertyBadgeNumber(ids, view) {\n      if (view.settings.where && view.settings.where.rules) {\n         $$(ids.filterMenuButton).define(\n            \"badge\",\n            view.settings.where.rules.length\n         );\n         $$(ids.filterMenuButton).refresh();\n      } else {\n         $$(ids.filterMenuButton).define(\"badge\", null);\n         $$(ids.filterMenuButton).refresh();\n      }\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewCSVExporterComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idBase) {\n      idBase = idBase || \"ABCSVExporter_\" + this.id;\n      let ids = {\n         button: App.unique(`${idBase}_button`),\n         buttonFilter: App.unique(`${idBase}_button_filter`),\n         popupFilter: App.unique(`${idBase}_popup_filter`),\n      };\n\n      let ClientFilter = this.AB.filterComplexNew(`${idBase}_filter`);\n\n      let _ui = {\n         view: \"layout\",\n         type: \"clean\",\n         borderless: true,\n         cols: [\n            {\n               id: ids.buttonFilter,\n               view: \"button\",\n               css: \"webix_transparent\",\n               type: \"icon\",\n               icon: \"fa fa-filter\",\n               borderless: true,\n               width: 50,\n               label: \"\",\n               click: () => {\n                  _logic.showFilterPopup();\n               },\n            },\n            {\n               id: ids.button,\n               view: \"button\",\n               css: \"webix_primary\",\n               type: \"icon\",\n               icon: \"fa fa-download\",\n               borderless: true,\n               width:\n                  this.settings.width ||\n                  ABViewCSVExporterPropertyComponentDefaults.width,\n               label:\n                  this.settings.buttonLabel ||\n                  ABViewCSVExporterPropertyComponentDefaults.buttonLabel,\n               click: () => {\n                  _logic.downloadCsvFile();\n               },\n            },\n            { fillspace: true },\n         ],\n      };\n\n      // make sure each of our child views get .init() called\n      let _init = (options) => {\n         let dc = this.datacollection;\n         if (dc) {\n            let obj = dc.datasource;\n\n            // ClientFilter.applicationLoad(obj ? obj.application : null);\n            ClientFilter.fieldsLoad(obj ? obj.fields() : [], obj);\n         }\n\n         ClientFilter.init();\n         ClientFilter.on(\"change\", (val) => {\n            _logic.onFilterChange(val);\n         });\n\n         // webix.ui({\n         //    view: \"popup\",\n         //    id: ids.popupFilter,\n         //    width: 800,\n         //    hidden: true,\n         //    body: ClientFilter.ui,\n         // });\n      };\n\n      let _logic = (this._logic = {\n         downloadCsvFile: () => {\n            let url = `/appbuilder/csv-export/${this.id}`;\n            let where = ClientFilter.getValue();\n\n            if (where && (where.rules || []).length) {\n               let qsWhere = JSON.stringify(where);\n               qsWhere = encodeURIComponent(qsWhere);\n               url = `${url}?where=${qsWhere}`;\n            }\n\n            window.open(url);\n         },\n         showFilterPopup: () => {\n            let $buttonFilter = $$(ids.buttonFilter);\n            ClientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n         },\n         onFilterChange: () => {\n            let $buttonFilter = $$(ids.buttonFilter);\n            if (!$buttonFilter) return;\n\n            let where = ClientFilter.getValue();\n            $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n            $buttonFilter.refresh();\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: _init,\n      };\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false, idBase) {\n      var component = new ABViewCSVImporterComponent(this, idBase);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nconst ABFieldImage = require(\"../dataFields/ABFieldImage\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nlet PopupCarouselFilterMenu = null;\n\nclass ABViewCarouselComponent extends ABViewComponent {\n   constructor(viewCarousel, idBase) {\n      var base = idBase || `ABViewCarousel_${viewCarousel.id}`;\n      super(base, {\n         component: \"\",\n      });\n\n      this.view = viewCarousel;\n      this.settings = viewCarousel.settings;\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         let dv = this.view.datacollection;\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      let ids = this.ids;\n      this.filterUI = this.view.filterHelper; // component(/* App, idBase */);\n      this.linkPage = this.view.linkPageHelper.component(/* App, idBase */);\n\n      let spacer = {};\n      if (this.settings.width == 0) {\n         spacer = {\n            width: 1,\n         };\n      }\n\n      return {\n         id: `${ids.component}_top`,\n         borderless: true,\n         cols: [\n            spacer, // spacer\n            {\n               borderless: true,\n               rows: [\n                  this.filterUI.ui(), // filter UI\n                  {\n                     id: ids.component,\n                     view: \"carousel\",\n                     cols: [],\n                     width: this.settings.width,\n                     height: this.settings.height,\n                     navigation: {\n                        items: !this.settings.hideItem,\n                        buttons: !this.settings.hideButton,\n                        type: this.settings.navigationType,\n                     },\n                     on: {\n                        onShow: () => {\n                           let activeIndex = $$(ids.component).getActiveIndex();\n                           this.switchImage(activeIndex);\n                        },\n                     },\n                  },\n               ],\n            },\n            spacer, // spacer\n         ],\n      };\n   }\n\n   // make sure each of our child views get .init() called\n   init(AB, parentAccessLevel = 0) {\n      this.AB = AB;\n\n      let dv = this.view.datacollection;\n      if (!dv) return;\n\n      let object = dv.datasource;\n      if (!object) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      if (!this._handler_doReload) {\n         this._handler_doReload = () => {\n            dv.reloadData();\n         };\n      }\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      // filter helper\n      this.view.filterHelper.objectLoad(object);\n      this.view.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const carousel = $$(this.ids.component)?.$view;\n      if (carousel) {\n         carousel.setAttribute(\"data-cy\", `${this.view.key} ${this.view.id}`);\n         carousel\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${this.view.key} button previous ${this.view.id}`\n            );\n         carousel\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${this.view.key} button next ${this.view.id}`\n            );\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      let dv = this.view.datacollection;\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row && row.src) {\n         let template =\n            `<div class=\"ab-carousel-image-container\">` +\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />` +\n            (this.settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\") +\n            `<div class=\"ab-carousel-image-icon\">` +\n            (this.settings.detailsPage || this.settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\") +\n            (this.settings.editPage || this.settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\") +\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>` +\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>` +\n            `</div>` +\n            `</div>`;\n\n         return template;\n      } // empty image\n      else return \"\";\n   }\n\n   busy() {\n      let Carousel = $$(this.ids.component);\n      Carousel?.disable();\n      Carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      let Carousel = $$(this.ids.component);\n      Carousel?.enable();\n      Carousel?.hideProgress?.();\n   }\n\n   async switchImage(current_position) {\n      let dv = this.view.datacollection;\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         current_position >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter) {\n      let ids = this.ids;\n      let dv = this.view.datacollection;\n      if (!dv) return;\n\n      let obj = dv.datasource;\n      if (!obj) return;\n\n      let field = this.view.imageField;\n      if (!field) return;\n\n      if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      fnFilter = fnFilter || this.filterUI.getFilter();\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (this.settings.filterByCursor) {\n         let cursor = dv.getCursor();\n         if (cursor) {\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ==\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n         }\n      }\n\n      let images = [];\n\n      rows.forEach((r) => {\n         let imgFile = r[field.columnName];\n         if (imgFile) {\n            let imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (this.settings.showLabel) {\n               imgData.label = obj.displayData(r);\n            }\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl) {\n         images.unshift({\n            css: \"image\",\n            template: (...params) => {\n               return this.myTemplate(...params);\n            },\n            data: {\n               id: this.AB.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: L(\"Default image\"),\n            },\n         });\n      }\n\n      // empty image\n      if (images.length < 1) {\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: this.settings.height,\n                  label:\n                     \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: L(\"No image\"),\n               },\n            ],\n         });\n      }\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      var Carousel = $$(ids.component);\n      if (Carousel) {\n         // re-render\n         webix.ui(images, Carousel);\n\n         // add loading cursor\n         webix.extend(Carousel, webix.ProgressBar);\n\n         // link pages events\n         let editPage = this.settings.editPage;\n         let detailsPage = this.settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         Carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  webix.html.removeCss(\n                     $$(ids.component).getNode(),\n                     \"fullscreen\"\n                  );\n                  webix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  webix.html.removeCss(\n                     $$(ids.component).getNode(),\n                     \"fullscreen\"\n                  );\n                  webix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $$(ids.component).define(\"css\", \"fullscreen\");\n                  webix.fullscreen.set(ids.component, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 webix.html.removeCss(\n                                    $$(ids.component).getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 webix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewCarouselEditorComponent\";\n\n   //    var CarouselComponent = this.component(App, idBase);\n\n   //    return CarouselComponent;\n   // }\n\n   //\n   // Property Editor\n   //\n   /*\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var idBase = \"ABViewCarouselPropertyEditor\";\n\n      let commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      PopupCarouselFilterMenu = ABViewPropertyFilterData.propertyComponent(\n         App,\n         idBase\n      );\n      this.linkPageComponent = ABViewPropertyLinkPage.propertyComponent(\n         App,\n         idBase\n      );\n\n      let filter_property_popup = webix.ui({\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Filter Menu\"),\n               },\n            ],\n         },\n         body: PopupCarouselFilterMenu.ui,\n      });\n\n      _logic.filterMenuShow = () => {\n         var currView = _logic.currentEditObject();\n\n         PopupCarouselFilterMenu.setSettings(currView.settings.filter);\n\n         // show filter popup\n         filter_property_popup.show();\n      };\n\n      _logic.filterSave = () => {\n         var currView = _logic.currentEditObject();\n\n         // hide filter popup\n         filter_property_popup.hide();\n\n         // refresh settings\n         this.propertyEditorValues(ids, currView);\n\n         // trigger a save()\n         this.propertyEditorSave(ids, currView);\n      };\n\n      _logic.filterCancel = () => {\n         // hide filter popup\n         filter_property_popup.hide();\n      };\n\n      PopupCarouselFilterMenu.init({\n         onSave: _logic.filterSave,\n         onCancel: _logic.filterCancel,\n      });\n\n      return commonUI.concat([\n         {\n            view: \"fieldset\",\n            label: L(\"Data:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               type: \"clean\",\n               padding: 10,\n               rows: [\n                  {\n                     view: \"select\",\n                     name: \"datacollection\",\n                     label: L(\"Object:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [],\n                     on: {\n                        onChange: function (newv, oldv) {\n                           if (newv != oldv) {\n                              $$(ids.detailsPage).setValue(\"\");\n                              $$(ids.editPage).setValue(\"\");\n\n                              let imageFields = [];\n\n                              let dataCollection = _logic\n                                 .currentEditObject()\n                                 .AB.datacollectionByID(newv);\n                              if (dataCollection) {\n                                 let datasource = dataCollection.datasource;\n                                 if (datasource) {\n                                    imageFields =\n                                       datasource\n                                          .fields(\n                                             (f) => f instanceof ABFieldImage\n                                          )\n                                          .map((f) => {\n                                             return {\n                                                id: f.id,\n                                                value: f.label,\n                                             };\n                                          }) || [];\n                                 }\n                              }\n                              if (imageFields.length > 0) {\n                                 imageFields.unshift({\n                                    id: \"\",\n                                    value: L(\"Select a field\"),\n                                 });\n                              } else {\n                                 imageFields.unshift({\n                                    id: \"\",\n                                    value: L(\"no image fields.\"),\n                                 });\n                              }\n\n                              $$(ids.field).define(\"options\", imageFields);\n                              $$(ids.field).refresh();\n                           }\n                        },\n                     },\n                  },\n\n                  {\n                     view: \"select\",\n                     name: \"field\",\n                     label: L(\"Image Field:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [],\n                  },\n\n                  {\n                     view: \"checkbox\",\n                     name: \"filterByCursor\",\n                     labelWidth: 0,\n                     labelRight: L(\"Filter images by cursor\"),\n                  },\n               ],\n            },\n         },\n\n         this.linkPageComponent.ui,\n         // {\n         // \tview: \"fieldset\",\n         // \tlabel: L('ab.component.label.linkedPages', '*Linked Pages:'),\n         // \tlabelWidth: this.AB.UISettings.config().labelWidthLarge,\n         // \tbody: {\n         // \t\ttype: \"clean\",\n         // \t\tpadding: 10,\n         // \t\trows: [\n         // \t\t\t{\n         // \t\t\t\tview: \"select\",\n         // \t\t\t\tname: \"detailsPage\",\n         // \t\t\t\tlabel: L('ab.component.label.detailsPage', '*Details Page:'),\n         // \t\t\t\tlabelWidth: this.AB.UISettings.config().labelWidthLarge,\n         // \t\t\t\toptions: []\n         // \t\t\t},\n         // \t\t\t{\n         // \t\t\t\tview: \"select\",\n         // \t\t\t\tname: \"editPage\",\n         // \t\t\t\tlabel: L('ab.component.label.editForm', '*Edit Form:'),\n         // \t\t\t\tlabelWidth: this.AB.UISettings.config().labelWidthLarge,\n         // \t\t\t\toptions: []\n         // \t\t\t}\n         // \t\t]\n         // \t}\n         // },\n         {\n            view: \"fieldset\",\n            label: L(\"Customize Display:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               type: \"clean\",\n               padding: 10,\n               rows: [\n                  {\n                     view: \"select\",\n                     name: \"navigationType\",\n                     label: L(\"Navigation Type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        { id: \"corner\", value: L(\"Corner\") },\n                        { id: \"side\", value: L(\"Side\") },\n                     ],\n                  },\n\n                  {\n                     view: \"checkbox\",\n                     name: \"showLabel\",\n                     labelRight: L(\"Show label of image\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n                  },\n\n                  {\n                     view: \"checkbox\",\n                     name: \"hideItem\",\n                     labelRight: L(\"Hide item list\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n                  },\n\n                  {\n                     view: \"checkbox\",\n                     name: \"hideButton\",\n                     labelRight: L(\"Hide navigation buttons\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n                  },\n\n                  {\n                     view: \"counter\",\n                     name: \"width\",\n                     label: L(\"Width:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  },\n\n                  {\n                     view: \"counter\",\n                     name: \"height\",\n                     label: L(\"Height:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  },\n\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Filter Option:\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthXLarge,\n                        },\n                        {\n                           view: \"button\",\n                           id: ids.gridFilterMenuButton,\n                           css: \"webix_primary\",\n                           label: L(\"Settings\"),\n                           icon: \"fa fa-gear\",\n                           type: \"icon\",\n                           badge: 0,\n                           click: function () {\n                              _logic.filterMenuShow(this.$view);\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      if (!view) return;\n\n      // Set the objects you can choose from in the list\n      // Pull data collections to options\n      var objectOptions = view.propertyDatacollections();\n      $$(ids.datacollection).define(\"options\", objectOptions);\n      $$(ids.datacollection).refresh();\n\n      $$(ids.datacollection).setValue(view.settings.dataviewID);\n      $$(ids.field).setValue(view.settings.field);\n      $$(ids.filterByCursor).setValue(view.settings.filterByCursor);\n\n      $$(ids.width).setValue(view.settings.width);\n      $$(ids.height).setValue(view.settings.height);\n      $$(ids.showLabel).setValue(view.settings.showLabel);\n      $$(ids.hideItem).setValue(view.settings.hideItem);\n      $$(ids.hideButton).setValue(view.settings.hideButton);\n      $$(ids.navigationType).setValue(view.settings.navigationType);\n\n      // Populate values to QueryBuilder\n      var selectedDv = view.datacollection;\n      if (selectedDv) {\n         PopupCarouselFilterMenu.objectLoad(selectedDv.datasource);\n      }\n\n      // Populate values to link page properties\n      this.linkPageComponent.viewLoad(view);\n      this.linkPageComponent.setSettings(view.settings);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n      view.settings.field = $$(ids.field).getValue();\n      view.settings.filterByCursor = $$(ids.filterByCursor).getValue() || false;\n\n      view.settings.width = $$(ids.width).getValue();\n      view.settings.height = $$(ids.height).getValue();\n      view.settings.showLabel = $$(ids.showLabel).getValue();\n      view.settings.hideItem = $$(ids.hideItem).getValue();\n      view.settings.hideButton = $$(ids.hideButton).getValue();\n      view.settings.navigationType = $$(ids.navigationType).getValue();\n\n      // filter\n      view.settings.filter = PopupCarouselFilterMenu.getSettings();\n\n      // link pages\n      let linkSettings = this.linkPageComponent.getSettings();\n      for (let key in linkSettings) {\n         view.settings[key] = linkSettings[key];\n      }\n   }\n*/\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      let component = new ABViewCarouselComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App) {\n      var idBase = this.idBase;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      let filterUI = this.filterHelper.component(App, idBase);\n      let linkPage = this.linkPageHelper.component(App, idBase);\n\n      let spacer = {};\n      if (this.settings.width == 0) {\n         spacer = {\n            width: 1,\n         };\n      }\n\n      let _ui = {\n         borderless: true,\n         cols: [\n            spacer, // spacer\n            {\n               borderless: true,\n               rows: [\n                  filterUI.ui, // filter UI\n                  {\n                     id: ids.component,\n                     view: \"carousel\",\n                     cols: [],\n                     width: this.settings.width,\n                     height: this.settings.height,\n                     navigation: {\n                        items: !this.settings.hideItem,\n                        buttons: !this.settings.hideButton,\n                        type: this.settings.navigationType,\n                     },\n                     on: {\n                        onShow: function () {\n                           let activeIndex = $$(ids.component).getActiveIndex();\n                           _logic.switchImage(activeIndex);\n                        },\n                     },\n                  },\n               ],\n            },\n            spacer, // spacer\n         ],\n      };\n\n      // make sure each of our child views get .init() called\n      let _init = (options) => {\n         let dv = this.datacollection;\n         if (!dv) return;\n\n         let object = dv.datasource;\n         if (!object) return;\n\n         dv.on(\"loadData\", () => {\n            _logic.onShow();\n         });\n         dv.on(\"update\", () => {\n            dv.reloadData();\n         });\n         dv.on(\"delete\", () => {\n            dv.reloadData();\n         });\n         dv.on(\"create\", () => {\n            dv.reloadData();\n         });\n         dv.on(\"initializingData\", () => {\n            _logic.busy();\n         });\n         dv.on(\"initializedData\", () => {\n            _logic.ready();\n         });\n\n         if (this.settings.filterByCursor) {\n            dv.on(\"changeCursor\", () => {\n               _logic.onShow();\n            });\n         }\n\n         // filter helper\n         this.filterHelper.objectLoad(object);\n         this.filterHelper.viewLoad(this);\n\n         filterUI.init({\n            onFilterData: (fnFilter) => {\n               _logic.onShow(fnFilter); // be notified when there is a change in the filter\n            },\n         });\n\n         // link page helper\n         linkPage.init({\n            view: this,\n            datacollection: dv,\n         });\n\n         // set data-cy\n         const carousel = $$(ids.component).$view;\n         carousel.setAttribute(\"data-cy\", `${this.key} ${this.id}`);\n         carousel\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${this.key} button previous ${this.id}`\n            );\n         carousel\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${this.key} button next ${this.id}`\n            );\n      };\n\n      let _logic = {\n         myTemplate: (row) => {\n            if (row && row.src) {\n               let template =\n                  `<div class=\"ab-carousel-image-container\">` +\n                  `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />` +\n                  (this.settings.showLabel\n                     ? `<div class=\"ab-carousel-image-title\">${\n                          row.label || \"\"\n                       }</div>`\n                     : \"\") +\n                  `<div class=\"ab-carousel-image-icon\">` +\n                  (this.settings.detailsPage || this.settings.detailsTab\n                     ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                     : \"\") +\n                  (this.settings.editPage || this.settings.editTab\n                     ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                     : \"\") +\n                  `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>` +\n                  `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>` +\n                  `</div>` +\n                  `</div>`;\n\n               return template;\n            } // empty image\n            else return \"\";\n         },\n\n         busy: () => {\n            let Carousel = $$(ids.component);\n\n            Carousel.disable();\n\n            if (Carousel.showProgress) Carousel.showProgress({ type: \"icon\" });\n         },\n\n         ready: () => {\n            let Carousel = $$(ids.component);\n\n            Carousel.enable();\n\n            if (Carousel.hideProgress) Carousel.hideProgress();\n         },\n\n         switchImage: async (current_position) => {\n            let dv = this.datacollection;\n            if (!dv) return;\n\n            // Check want to load more images\n            if (\n               current_position >= this._imageCount - 1 && // check last image\n               dv.totalCount > this._rowCount\n            ) {\n               // loading cursor\n               _logic.busy();\n\n               try {\n                  await dv.loadData(this._rowCount || 0);\n               } catch (err) {\n                  App.AB.notify.developer(err, {\n                     message: \"Error when load data from a Data collection\",\n                  });\n               }\n\n               _logic.ready();\n            }\n         },\n\n         onShow: (fnFilter) => {\n            let dv = this.datacollection;\n            if (!dv) return;\n\n            let obj = dv.datasource;\n            if (!obj) return;\n\n            let field = this.imageField;\n            if (!field) return;\n\n            if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n               // load data when a widget is showing\n               dv.loadData();\n\n               // it will call .onShow again after dc loads completely\n               return;\n            }\n\n            fnFilter = fnFilter || filterUI.getFilter();\n\n            let rows = dv.getData(fnFilter);\n\n            // Filter images by cursor\n            if (this.settings.filterByCursor) {\n               let cursor = dv.getCursor();\n               if (cursor) {\n                  rows = rows.filter(\n                     (r) =>\n                        (r[obj.PK()] || r.id || r) ==\n                        (cursor[obj.PK()] || cursor.id || cursor)\n                  );\n               }\n            }\n\n            let images = [];\n\n            rows.forEach((r) => {\n               let imgFile = r[field.columnName];\n               if (imgFile) {\n                  let imgData = {\n                     id: r.id,\n                     src: `/file/${imgFile}`,\n                  };\n\n                  // label of row data\n                  if (this.settings.showLabel) {\n                     imgData.label = obj.displayData(r);\n                  }\n\n                  images.push({\n                     css: \"image\",\n                     borderless: true,\n                     template: _logic.myTemplate,\n                     data: imgData,\n                  });\n               }\n            });\n\n            // insert the default image to first item\n            if (field.settings.defaultImageUrl) {\n               images.unshift({\n                  css: \"image\",\n                  template: _logic.myTemplate,\n                  data: {\n                     id: this.AB.uuid(),\n                     src: `/file/${field.settings.defaultImageUrl}`,\n                     label: L(\"Default image\"),\n                  },\n               });\n            }\n\n            // empty image\n            if (images.length < 1) {\n               images.push({\n                  rows: [\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: this.settings.height,\n                        label:\n                           \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"No image\"),\n                     },\n                  ],\n               });\n            }\n\n            // store total of rows\n            this._rowCount = rows.length;\n\n            // store total of images\n            this._imageCount = images.length;\n\n            var Carousel = $$(ids.component);\n\n            // re-render\n            webix.ui(images, Carousel);\n\n            // add loading cursor\n            if (Carousel) webix.extend(Carousel, webix.ProgressBar);\n\n            // link pages events\n            let editPage = this.settings.editPage;\n            let detailsPage = this.settings.detailsPage;\n\n            // if (detailsPage || editPage) {\n            $$(ids.component).$view.onclick = (e) => {\n               if (e.target.className) {\n                  if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                     webix.html.removeCss(\n                        $$(ids.component).getNode(),\n                        \"fullscreen\"\n                     );\n                     webix.fullscreen.exit();\n                     let rowId = e.target.getAttribute(\"ab-row-id\");\n                     linkPage.changePage(editPage, rowId);\n                  } else if (\n                     e.target.className.indexOf(\"ab-carousel-detail\") > -1\n                  ) {\n                     webix.html.removeCss(\n                        $$(ids.component).getNode(),\n                        \"fullscreen\"\n                     );\n                     webix.fullscreen.exit();\n                     let rowId = e.target.getAttribute(\"ab-row-id\");\n                     linkPage.changePage(detailsPage, rowId);\n                  } else if (\n                     e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n                  ) {\n                     $$(ids.component).define(\"css\", \"fullscreen\");\n                     webix.fullscreen.set(ids.component, {\n                        head: {\n                           view: \"toolbar\",\n                           css: \"webix_dark\",\n                           elements: [\n                              {},\n                              {\n                                 view: \"icon\",\n                                 icon: \"fa fa-times\",\n                                 click: function () {\n                                    webix.html.removeCss(\n                                       $$(ids.component).getNode(),\n                                       \"fullscreen\"\n                                    );\n                                    webix.fullscreen.exit();\n                                 },\n                              },\n                           ],\n                        },\n                     });\n                  }\n               }\n            };\n            // }\n         },\n\n         showFilterPopup: ($view) => {\n            filterUI.showPopup($view);\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n\n         onShow: _logic.onShow,\n      };\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nconst ABViewChartPropertyComponentDefaults = ABViewChartCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   // refreshData() {\n   //    const dc = this.datacollection;\n\n   //    if (!dc) return;\n\n   //    const labelCol = this.labelField();\n\n   //    if (!labelCol) return;\n\n   //    const columnName = this.valueField()?.columnName;\n\n   //    if (!columnName) return;\n\n   //    const colorList = [\n   //       \"#ee4339\",\n   //       \"#ee9336\",\n   //       \"#eed236\",\n   //       \"#d3ee36\",\n   //       \"#a7ee70\",\n   //       \"#58dccd\",\n   //       \"#36abee\",\n   //       \"#476cee\",\n   //       \"#a244ea\",\n   //       \"#e33fc7\",\n   //    ];\n   //    const dInfo = dc.getData();\n   //    const results = [];\n\n   //    dInfo.forEach((e, i) => {\n   //       const label = labelCol.isConnection\n   //          ? labelCol\n   //               .pullRelationValues(e)\n   //               .map?.((e) => e.text || \"\")\n   //               .join(\", \") ?? labelCol.pullRelationValues(e).text\n   //          : labelCol.format(e);\n   //       const data = {};\n\n   //       data.label = label;\n   //       data.color = colorList[i % colorList.length];\n   //       data.value = parseFloat(e[columnName] ?? 0);\n\n   //       if (this.settings.isPercentage) {\n   //          data.value = data.value\n   //             ? // round decimal 2 digits\n   //               Math.round(\n   //                  (data.value /\n   //                     dInfo.reduce((sum, e) => sum + e[columnName], 0)) *\n   //                     10000\n   //               ) / 100\n   //             : 0;\n   //       }\n\n   //       if (this.settings.multipleSeries) {\n   //          const columnName2 = this.valueField2()?.columnName;\n\n   //          data.value2 = parseFloat(e[columnName2] ?? 0);\n\n   //          if (this.settings.isPercentage)\n   //             data.value2 = data.value2\n   //                ? // round decimal 2 digits\n   //                  Math.round(\n   //                     (data.value2 /\n   //                        dInfo.reduce((sum, e) => sum + e[columnName2], 0)) *\n   //                        10000\n   //                  ) / 100\n   //                : 0;\n   //       }\n\n   //       results.push(data);\n   //    });\n\n   //    const dcChart = this.getDCChart();\n\n   //    dcChart.clearAll();\n   //    dcChart.parse(results);\n   // }\n\n   componentOld() {}\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartAreaComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld() {}\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartBarComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld() {}\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   editorComponent(App, mode, options) {\n      let component = this.component(App);\n      let _ui = component.ui;\n      _ui.id = options.componentId;\n\n      let _init = () => {\n         component.init({\n            componentId: _ui.id,\n         });\n      };\n      let _logic = component.logic;\n      let _onShow = component.onShow;\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n         onShow: _onShow,\n      };\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewChartContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get datacollection() {\n      return super.datacollection ?? this.parent?.datacollection;\n   }\n\n   componentOld() {}\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartLineComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartPieComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld() {}\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\n\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nconst ABViewCommentPropertyComponentDefaults = ABViewCommentCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewCommentComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld() {}\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewConditionalContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   // /**\n   //  * @method component()\n   //  * return a UI component based upon this view.\n   //  * @param {obj} App\n   //  * @return {obj} UI component\n   //  */\n   // componentOld(App) {\n   //    var idBase = \"ABViewConditionalContainer_\" + this.id;\n   //    var ids = {\n   //       component: App.unique(`${idBase}_component`),\n   //    };\n\n   //    var baseComp = super.component(App);\n\n   //    const ifComp = this.views()[0].component(App);\n   //    const elseComp = this.views()[1].component(App);\n\n   //    ifComp.ui.batch = \"if\";\n   //    elseComp.ui.batch = \"else\";\n\n   //    var _ui = {\n   //       id: ids.component,\n   //       view: \"multiview\",\n   //       cells: [\n   //          {\n   //             batch: \"wait\",\n   //             view: \"layout\",\n   //             rows: [\n   //                {\n   //                   view: \"label\",\n   //                   label: L(\"Please wait...\"),\n   //                },\n   //             ],\n   //          },\n   //          ifComp.ui,\n   //          elseComp.ui,\n   //       ],\n   //    };\n\n   //    var _init = (options, accessLevel) => {\n   //       baseComp.init(options);\n   //       ifComp.init(options, accessLevel);\n   //       elseComp.init(options, accessLevel);\n\n   //       this.populateFilterComponent();\n\n   //       var dv = this.datacollection;\n   //       if (dv) {\n   //          // listen DC events\n   //          this.eventAdd({\n   //             emitter: dv,\n   //             eventName: \"loadData\",\n   //             listener: _logic.displayView.bind(this),\n   //          });\n   //          this.eventAdd({\n   //             emitter: dv,\n   //             eventName: \"initializedData\",\n   //             listener: () => _logic.displayView(),\n   //          });\n\n   //          this.eventAdd({\n   //             emitter: dv,\n   //             eventName: \"changeCursor\",\n   //             listener: (...p) => _logic.displayView(...p),\n   //          });\n   //       }\n\n   //       _logic.displayView();\n   //    };\n\n   //    var _logic = {\n   //       displayView: (currData) => {\n   //          let dv = this.datacollection;\n   //          if (dv && dv.dataStatus === dv.dataStatusFlag.initialized) {\n   //             if (currData == null) {\n   //                currData = dv.getCursor();\n   //             }\n   //             var isValid = this.__filterComponent.isValid(currData);\n\n   //             // dataStatus initialized\n   //             // filter is valid\n   //             // currentData has been loaded from cursor\n   //             if (\n   //                isValid &&\n   //                currData != undefined // if , at this point, there is no cursor; the data collection is empty\n   //             ) {\n   //                // if (isValid && currData) {\n   //                $$(ids.component).showBatch(\"if\");\n   //             } else {\n   //                $$(ids.component).showBatch(\"else\");\n   //             }\n   //          } else {\n   //             // show 'waiting' panel if data is not loaded\n   //             $$(ids.component).showBatch(\"wait\");\n   //             return;\n   //          }\n   //       },\n   //    };\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //       logic: _logic,\n\n   //       onShow: baseComp.onShow,\n   //    };\n   // }\n\n   async save() {\n      const viewIf = this.views()[0];\n      const viewElse = this.views()[1];\n\n      return Promise.resolve()\n         .then(async () => (viewIf ? await viewIf.save() : Promise.resolve()))\n         .then(async () =>\n            viewElse ? await viewElse.save() : Promise.resolve()\n         )\n         .then(async () => await super.save());\n   }\n};\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewComponent from \"./viewComponent/ABViewComponent\";\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(view, idbase) {\n      super(view, idbase ?? `ABViewConnectDataFilter_${view.id}`, {\n         reset: \"\",\n      });\n\n      this.view = view;\n      this.AB = view.AB;\n      this.datacollection = this.view.datacollection;\n      this.settings = view.settings;\n   }\n\n   ui() {\n      return {\n         type: \"space\",\n         borderless: true,\n         cols: [\n            {\n               view: \"icon\",\n               icon: \"fa fa-filter\",\n               align: \"left\",\n               disabled: true,\n            },\n            {\n               view: \"combo\",\n               id: this.ids.component,\n               labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n               disabled: true,\n               on: {\n                  onChange: (id) => this.applyConnectFilter(id),\n               },\n            },\n            {\n               view: \"icon\",\n               id: this.ids.reset,\n               icon: \"fa fa-times\",\n               align: \"left\",\n               disabled: true,\n               tooltip: L(\"Renmove this filter\"),\n               on: {\n                  onItemClick: () => this.resetConnectFilter(),\n               },\n            },\n         ],\n      };\n   }\n\n   async init(options) {\n      const dv = this.datacollection;\n      if (!dv) return;\n\n      const object = dv.datasource;\n      if (!object) return;\n\n      const [field] = object.fields((f) => f.columnName == this.settings.field);\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n         return;\n      }\n      this.field = field;\n\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(this.ids.component), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      $$(this.ids.component).define(\"suggest\", suggest);\n      $$(this.ids.component).define(\n         \"label\",\n         `${L(\"Filter by\")} ${field.label}`\n      );\n      $$(this.ids.component).enable();\n      $$(this.ids.component).refresh();\n   }\n\n   resetConnectFilter() {\n      this.datacollection.filterCondition({ glue: \"and\", rules: [] });\n      this.datacollection.reloadData();\n      // Block applyConnectFields() from triggering\n      $$(this.ids.component).blockEvent();\n      $$(this.ids.component).setValue();\n      $$(this.ids.component).unblockEvent();\n      $$(this.ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n\n      this.datacollection.filterCondition({ glue: \"and\", rules: [filterRule] });\n      this.datacollection.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewConnectDataFilterComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n      return component;\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   /*\n   editorComponent(App, mode) {\n      var idBase = \"ABViewContainerEditorComponent\";\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      var subComponents = {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      var cellHeight = 250;\n      // if (this.key == \"form\" || this.key == \"detail\") {\n      // \tcellHeight = 80;\n      // }\n\n      var _ui = {\n         rows: [\n            {\n               id: ids.component,\n               view: \"dashboard\",\n               css: \"ab-\" + this.key + \"-container\",\n               cellHeight: cellHeight,\n               gridColumns:\n                  this.settings.columns || ABPropertyComponentDefaults.columns,\n            },\n         ],\n      };\n\n      var _init = (options) => {\n         var Dashboard = $$(ids.component);\n         if (Dashboard) {\n            webix.extend(Dashboard, webix.OverlayBox);\n            webix.extend(Dashboard, webix.ProgressBar);\n         }\n\n         // this.views().reverse().forEach((child) => {\n\n         // NOTE: need to sorting before .addView because there is a render position bug in webix 5.1.7\n         // https://webix.com/snippet/404cf0c7\n         var childViews = this.viewsSortByPosition();\n\n         // attach all the .UI views:\n         childViews.forEach((child) => {\n            var component = child.component(App);\n\n            // store\n            subComponents[child.id] = component;\n\n            let view = \"panel\";\n            if (child.settings.movable == false) view = \"scrollview\";\n\n            Dashboard.addView({\n               view: view,\n\n               // specific viewId to .name, it will be used to save view position\n               name: child.id,\n               icon: \"fa fa-arrows\",\n               css: \"ab-widget-container\",\n               body: {\n                  rows: [\n                     {\n                        view: \"template\",\n                        height: 30,\n                        css: \"ab-widget-header\",\n                        template: _logic.template(child),\n                        onClick: {\n                           \"ab-component-edit\": (e, id, trg) => {\n                              _logic.viewEdit(e, child.id, trg);\n                           },\n                           \"ab-component-remove\": (e, id, trg) => {\n                              _logic.viewDelete(e, child.id, trg);\n                           },\n                        },\n                     },\n                     component.ui,\n                     // (mode == 'preview' ? component.ui : {\n                     // \t// empty element\n                     // \tview: 'spacer',\n                     // \thidden: true,\n                     // })\n                  ],\n               },\n\n               // dx: _logic.validatePosition(child.position.dx, 1, Dashboard.config.gridColumns),\n               // dy: _logic.validatePosition(child.position.dy, 1, Dashboard.config.gridRows),\n\n               dx: child.position.dx || 1,\n               dy: child.position.dy || 1,\n               x: _logic.validatePosition(\n                  child.position.x,\n                  0,\n                  Dashboard.config.gridColumns - 1\n               ),\n               y: child.position.y || 0,\n            });\n\n            // initial sub-component\n            component.init(null, 2); // when in editor allow full access\n         });\n\n         // listen onChange event\n         // NOTE: listen after populate views by .addView\n         if (this._onChangeId) Dashboard.detachEvent(this._onChangeId);\n         this._onChangeId = Dashboard.attachEvent(\"onChange\", () => {\n            _logic.onReorder();\n         });\n\n         // show \"drop here\" panel\n         _logic.showEmptyPlaceholder();\n\n         Dashboard.adjust();\n      };\n\n      var _logic = {\n         /**\n          * @method template()\n          * render the list template for the View\n          * @param {obj} obj the current View instance\n          * @param {obj} common  Webix provided object with common UI tools\n          * /\n         template: (child) => {\n            return `<div>\n               <i class=\"fa fa-${child.icon} webix_icon_btn\"></i> ${child.label}\n               <div class=\"ab-component-tools\">\n               ${\n                  child.settings.removable == false\n                     ? \"\"\n                     : '<i class=\"fa fa-trash ab-component-remove\"></i>'\n               }\n               <i class=\"fa fa-edit ab-component-edit\"></i>\n               </div></div>`;\n         },\n\n         /**\n          * @method viewDelete()\n          * Called when the [delete] icon for a child View is clicked.\n          * @param {obj} e the onClick event object\n          * @param {integer} id the id of the element to delete\n          * @param {obj} trg  Webix provided object\n          * /\n         viewDelete: (e, id, trg) => {\n            var deletedView = this.views((v) => v.id == id)[0];\n            if (!deletedView) return false;\n\n            webix.confirm({\n               title: L(\"Delete component\"),\n               text: L(\"Do you want to delete <b>{0}</b>?\", [\n                  deletedView.label,\n               ]),\n               callback: async (result) => {\n                  if (!result) return;\n                  // let Dashboard = $$(ids.component);\n\n                  // // remove UI of this component in template\n                  // var deletedElem = Dashboard.queryView({ name: id });\n                  // if (deletedElem) {\n\n                  // \t// store the removed view to signal event in .onChange\n                  // \tthis.__deletedView = deletedView;\n\n                  // \t// remove view\n                  // \tvar remainingViews = this.views((v) => { return v.id != deletedView.id; })\n                  // \tthis._views = remainingViews;\n\n                  // \t// this calls the remove REST to API server\n                  // \tDashboard.removeView(deletedElem);\n                  // }\n\n                  _logic.busy();\n\n                  try {\n                     await deletedView.destroy();\n\n                     // signal the current view has been deleted.\n                     deletedView.emit(\"destroyed\", deletedView);\n\n                     let Dashboard = $$(ids.component);\n\n                     // Update UI\n                     var deletedElem = Dashboard.queryView({ name: id });\n                     if (deletedElem) {\n                        Dashboard.blockEvent();\n                        Dashboard.removeView(deletedElem);\n                        Dashboard.unblockEvent();\n                     }\n\n                     _logic.showEmptyPlaceholder();\n                  } catch (err) {\n                     App.AB.notify.developer(err, {\n                        message: \"Error trying to delete selected View:\",\n                        view: deletedView,\n                     });\n                  }\n\n                  _logic.ready();\n               },\n            });\n            e.preventDefault();\n         },\n\n         /**\n          * @method viewEdit()\n          * Called when the [edit] icon for a child View is clicked.\n          * @param {obj} e the onClick event object\n          * @param {integer} id the id of the element to edit\n          * @param {obj} trg  Webix provided object\n          * /\n         viewEdit: (e, id, trg) => {\n            var view = this.views((v) => v.id == id)[0];\n\n            if (!view) return false;\n\n            // NOTE: let webix finish this onClick event, before\n            // calling .populateInterfaceWorkspace() which will replace\n            // the interface elements with the edited view.  (apparently\n            // that causes errors.)\n            setTimeout(() => {\n               App.actions.populateInterfaceWorkspace(view);\n               this.emit(\"view.edit\", view);\n            }, 50);\n\n            e.preventDefault();\n\n            return false;\n         },\n\n         onReorder: async () => {\n            _logic.busy();\n\n            var Dashboard = $$(ids.component);\n\n            // ignore in \"preview\" mode\n            // if (Dashboard == null || Dashboard.config.view != \"dashboard\") return;\n\n            var viewState = Dashboard.serialize();\n\n            var allViewUpdates = [];\n\n            // save view position state to views\n            this.views().forEach((v) => {\n               var state = viewState.filter((vs) => vs.name == v.id)[0];\n               if (state) {\n                  v.position.x = state.x;\n                  v.position.y = state.y;\n\n                  // validate position data\n                  if (v.position.x < 0) v.position.x = 0;\n                  if (v.position.y < 0) v.position.y = 0;\n\n                  allViewUpdates.push(v.save());\n               }\n            });\n\n            try {\n               // save template layout\n               // this.saveReorder()\n               await Promise.all(allViewUpdates);\n\n               await this.save();\n\n               _logic.ready();\n            } catch (err) {\n               App.AB.notify.developer(err, {\n                  message: \"Error trying to save selected View:\",\n                  view: this.toObj(),\n               });\n               _logic.ready();\n            }\n         },\n\n         showEmptyPlaceholder: () => {\n            var Dashboard = $$(ids.component);\n\n            // if we don't have any views, then place a \"drop here\" placeholder\n            if (Dashboard.getChildViews().length == 0) {\n               Dashboard.showOverlay(\n                  \"<div class='drop-zone'><div>\" +\n                     App.labels.componentDropZone +\n                     \"</div></div>\"\n               );\n            }\n         },\n\n         validatePosition: (curPosition, minPosition, maxPosition) => {\n            if (curPosition < minPosition) return minPosition;\n            if (curPosition > maxPosition) return maxPosition;\n            else return curPosition;\n         },\n\n         busy: () => {\n            let Dashboard = $$(ids.component);\n            if (Dashboard) {\n               Dashboard.disable();\n\n               if (Dashboard.showProgress)\n                  Dashboard.showProgress({ type: \"icon\" });\n            }\n         },\n\n         ready: () => {\n            let Dashboard = $$(ids.component);\n            if (Dashboard) {\n               Dashboard.enable();\n\n               if (Dashboard.hideProgress) Dashboard.hideProgress();\n            }\n         },\n      };\n\n      var _onShow = () => {\n         this.views().forEach((v) => {\n            var component = subComponents[v.id];\n\n            if (component && component.onShow) {\n               component.onShow();\n            }\n         });\n\n         let dc = this.datacollection;\n         if (dc && dc.dataStatus == dc.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dc.loadData();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n\n         onShow: _onShow,\n      };\n   }\n   */\n\n   //\n   // Property Editor\n   //\n\n   // static propertyEditorComponent(App) {\n   // \treturn ABViewPropertyComponent.component(App);\n   // }\n   /*\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      _logic.addColumnGravity = (newVal, oldVal) => {\n         var pos = $$(ids.gravity).getParentView().index($$(ids.gravity));\n         $$(ids.gravity)\n            .getParentView()\n            .addView(\n               {\n                  view: \"counter\",\n                  value: \"1\",\n                  min: 1,\n                  label: L(\"Column {0} Gravity\", [newVal]),\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  css: \"gravity_counter\",\n                  on: {\n                     onChange: () => {\n                        _logic.onChange();\n                     },\n                  },\n               },\n               pos\n            );\n      };\n\n      _logic.removeColumnGravity = (newVal, oldVal) => {\n         $$(ids.gravity)\n            .getParentView()\n            .removeView(\n               $$(ids.gravity).getParentView().getChildViews()[\n                  $$(ids.gravity).getParentView().index($$(ids.gravity)) - 1\n               ]\n            );\n      };\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         {\n            name: \"columns\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Columns\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n            on: {\n               onChange: function (newVal, oldVal) {\n                  if (newVal > 8) $$(ids.columns).setValue(8);\n\n                  if (newVal > oldVal) {\n                     _logic.addColumnGravity(newVal, oldVal);\n                  } else if (newVal < oldVal) {\n                     _logic.removeColumnGravity(newVal, oldVal);\n                  }\n               },\n            },\n         },\n         {\n            view: \"text\",\n            name: \"gravity\",\n            height: 1,\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view, logic) {\n      super.propertyEditorPopulate(App, ids, view, logic);\n      this._App = App;\n\n      $$(ids.columns).setValue(\n         view.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      var gravityCounters = $$(ids.gravity)\n         .getParentView()\n         .queryView({ css: \"gravity_counter\" }, \"all\")\n         .map((counter) => $$(ids.gravity).getParentView().removeView(counter));\n\n      for (var step = 1; step <= $$(ids.columns).getValue(); step++) {\n         var pos = $$(ids.gravity).getParentView().index($$(ids.gravity));\n         $$(ids.gravity)\n            .getParentView()\n            .addView(\n               {\n                  view: \"counter\",\n                  min: 1,\n                  label: L(\"Column {0} Gravity\", [step]),\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  css: \"gravity_counter\",\n                  value:\n                     view.settings.gravity && view.settings.gravity[step - 1]\n                        ? view.settings.gravity[step - 1]\n                        : ABPropertyComponentDefaults.gravity,\n                  on: {\n                     onChange: () => {\n                        logic.onChange();\n                     },\n                  },\n               },\n               pos\n            );\n      }\n\n      // NOTE : Move to .propertyEditorSave\n      // // when a change is made in the properties the popups need to reflect the change\n      // this.updateEventIds = this.updateEventIds || {}; // { viewId: boolean, ..., viewIdn: boolean }\n      // if (!this.updateEventIds[view.id]) {\n      // \tthis.updateEventIds[view.id] = true;\n\n      // \t// refresh dashboard to update \"position.x\" and \"position.y\" of child views\n      // \tview.addListener('properties.updated', function () {\n\n      // \t\tsetTimeout(() => {\n      // \t\t\tview.editorComponent(App).logic.onChange();\n      // \t\t}, 100)\n\n      // \t}, this);\n      // }\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.columns = $$(ids.columns).getValue();\n\n      var gravity = [];\n      $$(ids.gravity)\n         .getParentView()\n         .queryView({ css: \"gravity_counter\" }, \"all\")\n         .map((counter) => gravity.push($$(counter).getValue()));\n      view.settings.gravity = gravity;\n   }\n\n   static async propertyEditorSave(ids, view) {\n      this.propertyEditorValues(ids, view);\n\n      // Save .settings of container\n      await view.save();\n\n      // signal the current view has been updated.\n      view.emit(\"properties.updated\", view);\n\n      // Save reorder of subviews\n      let editorComponent = view.editorComponent(this._App);\n      await editorComponent.logic.onReorder();\n   }\n  */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n\n   component(v1App = false) {\n      let component = new ABViewContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   /*\n   componentV1(App, idPrefix) {\n      var idBase = \"ABViewContainer_\" + (idPrefix || \"\") + this.id;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      this.viewComponents = this.viewComponents || {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      var _logic = {\n         changePage: (pageId) => {\n            this.changePage(pageId);\n         },\n\n         callbacks: {},\n\n         getElements: (views) => {\n            var rows = [];\n            var curRowIndex;\n            var curColIndex;\n\n            views.forEach((v) => {\n               let component = this.viewComponents[v.id];\n               // if (!component) {\n               component = v.component(App, idPrefix);\n               this.viewComponents[v.id] = component;\n               // }\n\n               // if key == \"form\" or \"button\" register the callbacks to the parent\n               // NOTE this will only work on the last form of a page!\n               if (v.key == \"form\" && v._logic.callbacks) {\n                  _logic.callbacks = v._logic.callbacks;\n               }\n\n               // Create a new row\n               if (v.position.y == null || v.position.y != curRowIndex) {\n                  curRowIndex = v.position.y || rows.length;\n                  curColIndex = 0;\n\n                  var rowNew = {\n                     cols: [],\n                  };\n\n                  // Create columns following setting value\n                  var colNumber =\n                     this.settings.columns ||\n                     ABPropertyComponentDefaults.columns;\n                  for (var i = 0; i < colNumber; i++) {\n                     var grav =\n                        this.settings.gravity && this.settings.gravity[i]\n                           ? parseInt(this.settings.gravity[i])\n                           : ABPropertyComponentDefaults.gravity;\n                     rowNew.cols.push({\n                        gravity: grav,\n                     });\n                  }\n\n                  rows.push(rowNew);\n               }\n\n               // Get the last row\n               var curRow = rows[rows.length - 1];\n\n               var newPos = v.position.x || 0;\n               var getGrav = 1;\n\n               if (curRow.cols[newPos] && curRow.cols[newPos].gravity) {\n                  getGrav = curRow.cols[newPos].gravity;\n               }\n\n               component.ui.gravity = getGrav;\n\n               // Add ui of sub-view to column\n               curRow.cols[newPos] = component.ui;\n\n               curColIndex += 1;\n\n               // Trigger 'changePage' event to parent\n               this.eventAdd({\n                  emitter: v,\n                  eventName: \"changePage\",\n                  listener: (...p) => _logic.changePage(...p),\n               });\n            });\n\n            return rows;\n         },\n      };\n\n      // Generate rows & cols of views to .layout\n      var views = this.viewsSortByPosition();\n      var rowViews = _logic.getElements(views);\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         rows: rowViews,\n      };\n\n      // make sure each of our child views get .init() called\n      var _init = (options, parentAccessLevel = 0) => {\n         // register our callbacks:\n         if (options) {\n            for (var c in _logic.callbacks) {\n               _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n            }\n         }\n\n         // see access by CSS class\n         if ($$(ids.component))\n            $$(ids.component).define(\"css\", \"accessLevel-\" + parentAccessLevel);\n\n         // attach all the .UI views:\n         for (var key in this.viewComponents) {\n            // skip when the view is removed.\n            if (this.views((v) => v.id == key)[0] == null) return;\n\n            var component = this.viewComponents[key];\n\n            // Initial component along with options in case there are callbacks we need to listen for\n            if (parentAccessLevel > 0) {\n               component.init(options, parentAccessLevel);\n            } else {\n               $$(component.ui.id).hide();\n            }\n         }\n      };\n\n      var _onShow = () => {\n         let dv = this.datacollection;\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n\n         // calll .onShow in child components\n         this.views().forEach((v) => {\n            var component = this.viewComponents[v.id];\n\n            if (component && component.onShow) {\n               component.onShow();\n            }\n         });\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n\n         onShow: _onShow,\n      };\n   }\n   */\n};\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\")\n//    .default;\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   // Property Editor\n   //\n\n   // static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n   //    var idBase = \"ABViewDataviewPropertyEditor\";\n\n   //    var commonUI = super.propertyEditorDefaultElements(\n   //       App,\n   //       ids,\n   //       _logic,\n   //       ObjectDefaults\n   //    );\n\n   //    this.linkPageComponent = ABViewPropertyLinkPage.propertyComponent(\n   //       App,\n   //       idBase\n   //    );\n\n   //    return commonUI.concat([\n   //       {\n   //          view: \"counter\",\n   //          name: \"xCount\",\n   //          min: 1, // we cannot have 0 columns per row so lets not accept it\n   //          label: L(\"Items in a row\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //          step: 1,\n   //       },\n   //       this.linkPageComponent.ui,\n   //    ]);\n   // }\n\n   // static propertyEditorPopulate(App, ids, view) {\n   //    super.propertyEditorPopulate(App, ids, view);\n\n   //    $$(ids.xCount).setValue(\n   //       view.settings.xCount || ABViewDataviewDefaults.xCount\n   //    );\n\n   //    this.linkPageComponent.viewLoad(view);\n   //    this.linkPageComponent.setSettings(view.settings);\n   // }\n\n   // static propertyEditorValues(ids, view) {\n   //    super.propertyEditorValues(ids, view);\n\n   //    view.settings.xCount = $$(ids.xCount).getValue();\n\n   //    let linkSettings = this.linkPageComponent.getSettings();\n   //    for (let key in linkSettings) {\n   //       view.settings[key] = linkSettings[key];\n   //    }\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDataviewComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } App\n    * @return {obj } UI component\n    */\n   componentOld(App, idPrefix) {\n      var com = {};\n\n      var idBase = \"ABViewDataview_\" + this.id;\n      var ids = {\n         scrollview: App.unique(`${idBase}_scrollview`),\n         component: App.unique(`${idBase}_component`),\n         dataFlexView: App.unique(`${idBase}_dataFlexView`),\n      };\n\n      let linkPage = this.linkPageHelper.component(App, idBase);\n\n      com.ui = {\n         id: ids.component,\n         rows: [\n            {\n               id: ids.scrollview,\n               view: \"scrollview\",\n               scroll: \"y\",\n               body: {\n                  id: ids.dataFlexView,\n                  view: \"flexlayout\",\n                  paddingX: 15,\n                  paddingY: 19,\n                  type: \"space\",\n                  cols: [],\n               },\n               on: {\n                  onAfterScroll: function () {\n                     let pos = this.getScrollState();\n\n                     com.logic.scroll(pos);\n                  },\n               },\n            },\n         ],\n      };\n\n      if (this.settings.height) com.ui.height = this.settings.height;\n\n      com.init = (options) => {\n         var dc = this.datacollection;\n         if (!dc) return;\n\n         let dataView = $$(ids.dataFlexView);\n\n         // initial the link page helper\n         linkPage.init({\n            view: this,\n            datacollection: dc,\n         });\n\n         // if (dc.datacollectionLink && dc.fieldLink) {\n         //    dc.bind(dataView, dc.datacollectionLink, dc.fieldLink);\n         // } else {\n         //    dc.bind(dataView);\n         // }\n         // track all flexlayout component IDs on the data collectino so we can notify them of changes\n         dc.attachFlexlayout(dataView);\n         dc.on(\"initializingData\", () => {\n            com.logic.busy();\n         });\n         dc.on(\"initializedData\", () => {\n            com.logic.ready();\n         });\n         dc.on(\"loadData\", () => {\n            com.emptyView();\n            com.renderData();\n         });\n         dc.on(\"update\", () => {\n            com.emptyView();\n            com.renderData();\n         });\n         dc.on(\"delete\", () => {\n            com.emptyView();\n            com.renderData();\n         });\n         dc.on(\"create\", () => {\n            com.emptyView();\n            com.renderData();\n         });\n\n         // this.eventClear();\n         //\n         // this.eventAdd({\n         //    emitter: dc,\n         //    eventName: \"loadData\",\n         //    listener: () => {\n         //       com.renderData();\n         //    },\n         // });\n      };\n\n      com.logic = {\n         busy: () => {\n            let Layout = $$(ids.dataFlexView);\n            let Scroll = $$(ids.scrollview);\n\n            // editor mode doesn't load this ui\n            if (!Scroll || !Layout) return;\n\n            Layout.disable();\n\n            if (!Scroll.showProgress) {\n               webix.extend(Scroll, webix.ProgressBar);\n            }\n            Scroll.showProgress({ type: \"icon\" });\n         },\n\n         ready: () => {\n            let Layout = $$(ids.dataFlexView);\n            let Scroll = $$(ids.scrollview);\n\n            // editor mode doesn't load this ui\n            if (!Scroll || !Layout) return;\n\n            Layout.enable();\n\n            if (Scroll && !Scroll.hideProgress) {\n               webix.extend(Scroll, webix.ProgressBar);\n            }\n            Scroll.hideProgress();\n         },\n\n         // we need to recursivly look backwards to toggle tabs into view when a user choosed to select a tab for edit or details views\n         toggleTab: (parentTab, wb) => {\n            // find the tab\n            var tab = wb.getTopParentView().queryView({ id: parentTab });\n            // if we didn't pass and id we may have passed a domNode\n            if (tab == null) {\n               tab = $$(parentTab);\n            }\n\n            if (tab == null) return;\n\n            // set the tabbar to to the tab\n            var tabbar = tab.getParentView().getParentView();\n\n            if (tabbar == null) return;\n\n            if (tabbar.setValue) {\n               // if we have reached the top we won't have a tab\n               tabbar.setValue(parentTab);\n            }\n\n            // find if it is in a multiview of a tab\n            var nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n            // if so then do this again\n            if (nextTab) {\n               com.toggleTab(nextTab, wb);\n            }\n         },\n\n         /**\n          * @method scroll\n          * @param pos - {\n          * \t\t\t\t\tx: {integer},\n          * \t\t\t\t\ty: {integer}\n          * \t\t\t\t}\n          */\n         scroll: async (pos) => {\n            let loadWhen = 40;\n\n            let y = pos.y;\n            let maxYPos =\n               $$(ids.dataFlexView).$height - $$(ids.scrollview).$height;\n            if (maxYPos - y <= loadWhen) {\n               if (this.loadMoreTimer) return;\n\n               com.setYPos(y);\n\n               var dc = this.datacollection;\n               if (!dc) return;\n\n               if ($$(ids.dataFlexView).getChildViews().length >= dc.totalCount)\n                  return;\n\n               // loading cursor\n               com.logic.busy();\n\n               await dc.loadData(\n                  $$(ids.dataFlexView).getChildViews().length || 0\n               );\n\n               this.loadMoreTimer = setTimeout(() => {\n                  this.loadMoreTimer = null;\n               }, 1100);\n            }\n         },\n      };\n\n      com.onShow = () => {\n         var dc = this.datacollection;\n         if (!dc) return;\n\n         if (dc.dataStatus == dc.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dc.loadData();\n         } else if (dc.dataStatus == dc.dataStatusFlag.initialized) {\n            com.renderData();\n         }\n      };\n\n      com.setYPos = (pos) => {\n         this.yPosition = pos;\n      };\n\n      com.getYPos = () => {\n         return this.yPosition || 0;\n      };\n\n      com.emptyView = () => {\n         let flexlayout = {\n            id: ids.dataFlexView,\n            view: \"flexlayout\",\n            type: \"clean\",\n            padding: 10,\n            css: { background: \"#ebedf0 !important\" },\n            cols: [],\n         };\n         webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n      };\n\n      com.renderData = () => {\n         let editPage = this.settings.editPage;\n         let detailsPage = this.settings.detailsPage;\n         var editTab = this.settings.editTab;\n         var detailsTab = this.settings.detailsTab;\n         var records = [];\n\n         var dc = this.datacollection;\n         if (!dc) {\n            com.logic.ready();\n            return;\n         }\n\n         let Layout = $$(ids.dataFlexView) || $$(ids.component);\n\n         if (!Layout || isNaN(Layout.$width)) {\n            com.logic.ready();\n            return;\n         }\n\n         let recordWidth = Math.floor(\n            (Layout.$width - 20 - parseInt(this.settings.xCount) * 20) /\n               parseInt(this.settings.xCount)\n         );\n\n         var rows = dc.getData();\n\n         // if this amount of data is already parsed just skip the rest.\n         if (Layout.currentLength == rows.length) {\n            com.logic.ready();\n            return;\n         }\n\n         Layout.currentLength = rows.length;\n\n         // store total of rows\n         this._startPos = Layout.getChildViews\n            ? Layout.getChildViews().length\n            : 0;\n\n         let stopPos = rows.length;\n\n         if (this._startPos == 0) {\n            stopPos = rows.length;\n         } else if (rows.length - this._startPos > 20) {\n            stopPos = this._startPos + 20;\n         }\n\n         if (dc.settings.loadAll) {\n            stopPos = rows.length;\n         }\n\n         var dataGrid = [];\n         for (var i = this._startPos; i < stopPos; i++) {\n            // get the components configuation\n            let detailCom = App.AB.cloneDeep(super.component(App, rows[i].id));\n\n            // adjust the UI to make sure it will look like a \"card\"\n            detailCom.ui.type = \"space\";\n            detailCom.ui.css = \"ab-detail-view\";\n            if (detailsPage || editPage) {\n               detailCom.ui.css += \" ab-detail-hover ab-record-\" + rows[i].id;\n            }\n            if (detailsPage) {\n               detailCom.ui.css += \" ab-detail-page\";\n            }\n            if (editPage) {\n               detailCom.ui.css += \" ab-edit-page\";\n            }\n            detailCom.ui.paddingX = 10;\n            detailCom.ui.paddingY = 6;\n            detailCom.ui.minWidth = recordWidth - 10;\n            detailCom.ui.maxWidth = recordWidth;\n\n            if (Layout.addView) {\n               Layout.addView(detailCom.ui, -1);\n               detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n               setTimeout(detailCom.logic.displayData(rows[i]), 0);\n            } else {\n               records.push(detailCom.ui);\n            }\n         }\n\n         if (records.length) {\n            var flexlayout = {\n               id: ids.dataFlexView,\n               view: \"flexlayout\",\n               paddingX: 15,\n               paddingY: 19,\n               type: \"space\",\n               cols: records,\n            };\n            webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n\n            for (let i = this._startPos; i < stopPos; i++) {\n               let detailCom = App.AB.cloneDeep(\n                  super.component(App, rows[i].id)\n               );\n               detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n               setTimeout(detailCom.logic.displayData(rows[i]), 0);\n            }\n         }\n\n         if ($$(ids.scrollview)) {\n            $$(ids.scrollview).scrollTo(0, com.getYPos());\n\n            if (detailsPage || editPage) {\n               Layout.$view.onclick = (e) => {\n                  var clicked = false;\n                  if (editPage) {\n                     for (let p of e.path) {\n                        if (\n                           p.className &&\n                           p.className.indexOf(\"webix_accordionitem_header\") >\n                              -1\n                        ) {\n                           clicked = true;\n                           p.parentNode.parentNode.classList.forEach((c) => {\n                              if (c.indexOf(\"ab-record-\") > -1) {\n                                 // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                                 var record = c.replace(\"ab-record-\", \"\");\n                                 linkPage.changePage(editPage, record);\n                                 // com.logic.toggleTab(detailsTab, ids.component);\n                              }\n                           });\n                           break;\n                        }\n                     }\n                  }\n                  if (detailsPage && !clicked) {\n                     for (let p of e.path) {\n                        if (\n                           p.className &&\n                           p.className.indexOf(\"webix_accordionitem\") > -1\n                        ) {\n                           p.parentNode.parentNode.classList.forEach((c) => {\n                              if (c.indexOf(\"ab-record-\") > -1) {\n                                 // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                                 var record = c.replace(\"ab-record-\", \"\");\n                                 linkPage.changePage(detailsPage, record);\n                                 // com.logic.toggleTab(detailsTab, ids.component);\n                              }\n                           });\n                           break;\n                        }\n                     }\n                  }\n               };\n            }\n         }\n\n         //Add data-cy attributes for cypress tests\n         const name = this.name.replace(\".dataview\", \"\");\n         Layout.$view.setAttribute(\n            \"data-cy\",\n            `dataview container ${name} ${this.id}`\n         );\n\n         Layout.getChildViews().forEach((child, i) => {\n            const uuid = rows[i + this._startPos][\"uuid\"];\n            const view = child.$view;\n            view\n               .querySelector(\".webix_accordionitem_body\")\n               .setAttribute(\n                  \"data-cy\",\n                  `dataview item ${name} ${uuid} ${this.id}`\n               );\n            view\n               .querySelector(\".webix_accordionitem_button\")\n               .setAttribute(\n                  \"data-cy\",\n                  `dataview item button ${name} ${uuid} ${this.id}`\n               );\n         });\n\n         com.logic.ready();\n      };\n\n      return com;\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n// const ABViewDetailItemComponent = require(\"./ABViewDetailComponent\");\nconst ABObjectQuery = require(\"../ABObjectQuery\");\n\nconst ABViewDetailPropertyComponentDefaults = ABViewDetailCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var comp = super.editorComponent(App, mode);\n\n   //    // Define height of cell\n   //    comp.ui.rows[0].cellHeight = 75;\n\n   //    return comp;\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idPrefix) {\n      // get webix.dashboard\n      var container = super.component(App, idPrefix);\n\n      var _ui = {\n         type: \"form\",\n         borderless: true,\n         // height: this.settings.height || ABViewDetailPropertyComponentDefaults.height,\n         rows: [\n            {\n               // view: \"scrollview\",\n               body: container.ui,\n            },\n         ],\n      };\n\n      // make sure each of our child views get .init() called\n      var _init = (options, parentAccessLevel) => {\n         // populate .views to webix.dashboard\n         container.init(options, parentAccessLevel);\n      };\n\n      var _logic = {\n         displayData: (rowData) => {\n            rowData = rowData || {};\n\n            let views = this.views() || [];\n            views = views.sort((a, b) => {\n               if (!a || !b || !a.field || !b.field) return 0;\n\n               // NOTE: sort order of calculated fields.\n               // FORMULA field type should be calculated before CALCULATE field type\n               if (a.field.key == \"formula\" && b.field.key == \"calculate\") {\n                  return -1;\n               } else if (\n                  a.field.key == \"calculate\" &&\n                  b.field.key == \"formula\"\n               ) {\n                  return 1;\n               } else {\n                  return 0;\n               }\n            });\n\n            views.forEach((f) => {\n               if (f.field) {\n                  var field = f.field();\n                  var val;\n\n                  if (!field) return;\n\n                  if (!rowData) return;\n\n                  // get value of relation when field is a connect field\n                  switch (field.key) {\n                     case \"connectObject\":\n                        val = field.pullRelationValues(rowData);\n                        break;\n                     case \"list\":\n                        val = rowData[field.columnName];\n                        if (!val) {\n                           val = \"\";\n                           break;\n                        }\n\n                        if (field.settings.isMultiple == 0) {\n                           let myVal = \"\";\n\n                           field.settings.options.forEach(function (options) {\n                              if (options.id == val) myVal = options.text;\n                           });\n\n                           if (field.settings.hasColors) {\n                              let myHex = \"#66666\";\n                              let hasCustomColor = \"\";\n                              field.settings.options.forEach(function (h) {\n                                 if (h.text == myVal) {\n                                    myHex = h.hex;\n                                    hasCustomColor = \"hascustomcolor\";\n                                 }\n                              });\n                              myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                           }\n\n                           val = myVal;\n                        } else {\n                           let items = [];\n                           let myVal = \"\";\n                           val.forEach((value) => {\n                              var hasCustomColor = \"\";\n                              var optionHex = \"\";\n                              if (field.settings.hasColors && value.hex) {\n                                 hasCustomColor = \"hascustomcolor\";\n                                 optionHex = `background: ${value.hex};`;\n                              }\n                              field.settings.options.forEach(function (\n                                 options\n                              ) {\n                                 if (options.id == value.id)\n                                    myVal = options.text;\n                              });\n                              items.push(\n                                 `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                              );\n                           });\n                           val = items.join(\"\");\n                        }\n                        break;\n                     case \"user\":\n                        val = field.pullRelationValues(rowData);\n                        break;\n                     case \"file\":\n                        val = rowData[field.columnName];\n                        break;\n                     case \"formula\":\n                        if (rowData) {\n                           let dv = this.datacollection;\n                           let ds = dv ? dv.datasource : null;\n                           let needRecalculate =\n                              !ds || ds instanceof ABObjectQuery ? false : true;\n\n                           val = field.format(rowData, needRecalculate);\n                        }\n                        break;\n                     default:\n                        val = field.format(rowData);\n                     // break;\n                  }\n               }\n\n               // set value to each components\n               var vComponent = f.component(App, idPrefix);\n\n               // if (vComponent.onShow) vComponent.onShow();\n\n               if (vComponent.logic && vComponent.logic.setValue) {\n                  vComponent.logic.setValue(val);\n               }\n\n               if (vComponent.logic && vComponent.logic.displayText) {\n                  vComponent.logic.displayText(rowData);\n               }\n            });\n         },\n      };\n\n      var _onShow = () => {\n         container.onShow();\n         try {\n            const dataCy = `Detail ${this.name.split(\".\")[0]} ${this.id}`;\n            $$(container.ui.id).$view.setAttribute(\"data-cy\", dataCy);\n         } catch (e) {\n            console.warn(\"Problem setting data-cy\", e);\n         }\n\n         // listen DC events\n         let dv = this.datacollection;\n         if (dv) {\n            let currData = dv.getCursor();\n            if (currData) {\n               _logic.displayData(currData);\n            }\n\n            this.eventAdd({\n               emitter: dv,\n               eventName: \"changeCursor\",\n               listener: (newRow) => {\n                  _logic.displayData(newRow);\n               },\n            });\n\n            this.eventAdd({\n               emitter: dv,\n               eventName: \"create\",\n               listener: (createdRow) => {\n                  let currCursor = dv.getCursor();\n                  if (currCursor && currCursor.id == createdRow.id)\n                     _logic.displayData(createdRow);\n               },\n            });\n\n            this.eventAdd({\n               emitter: dv,\n               eventName: \"update\",\n               listener: (updatedRow) => {\n                  let currCursor = dv.getCursor();\n                  if (currCursor && currCursor.id == updatedRow.id)\n                     _logic.displayData(updatedRow);\n               },\n            });\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n\n         onShow: _onShow,\n      };\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewDetailCheckboxEditorComponent\";\n   //    var ids = {\n   //       component: App.unique(`${idBase}_component`),\n   //    };\n\n   //    var checkboxElem = this.component(App).ui;\n   //    checkboxElem.id = ids.component;\n\n   //    var _ui = {\n   //       rows: [checkboxElem, {}],\n   //    };\n\n   //    var _init = (options) => {};\n\n   //    var _logic = {};\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //       logic: _logic,\n   //    };\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailCheckboxComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idPrefix) {\n      var component = super.component(App);\n      var field = this.field();\n\n      var idBase = \"ABViewDetailCheckbox_\" + (idPrefix || \"\") + this.id;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n         detail: this.parentDetailComponent()?.id || this.parent.id,\n      };\n\n      component.ui.id = ids.component;\n\n      component.ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            const dataCy = `detail checkbox ${field?.columnName} ${field?.id} ${ids.detail}`;\n            $$(ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n         },\n      };\n\n      return {\n         ui: component.ui,\n         init: component.init,\n\n         logic: {\n            setValue: (val) => {\n               var checkbox = \"\";\n\n               // Check\n               if (val && JSON.parse(val))\n                  checkbox =\n                     '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n               // Uncheck\n               else\n                  checkbox =\n                     '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n               component.logic.setValue(ids.component, checkbox);\n            },\n         },\n      };\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage = require(\"./viewProperties/ABViewPropertyAddPage\")\n   .default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailConnectComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idPrefix) {\n      let idBase = \"ABViewDetailConnect_\" + (idPrefix || \"\") + this.id;\n      let baseComp = super.component(App, idBase);\n      var ids = {\n         detail: this.parentDetailComponent()?.id || this.parent.id,\n      };\n\n      let addPageComponent = this.addPageTool.component(App, idBase);\n\n      let _init = (options) => {\n         baseComp.init(options);\n\n         addPageComponent.applicationLoad(this.application);\n         addPageComponent.init({\n            // TODO : callbacks\n         });\n      };\n\n      baseComp.ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            let field = this.field((fld) => {\n               return fld.id == this.settings.fieldId;\n            });\n            // some form fields are remaining in the UI even after removed from data structure\n            if (field?.columnName) {\n               let columnName = field.columnName;\n               const dataCy = `detail connected ${columnName} ${this.settings.fieldId} ${ids.detail}`;\n               $$(baseComp.ui.id)?.$view.setAttribute(\"data-cy\", dataCy);\n            }\n         },\n      };\n\n      // Click to open new data form\n      // addPageComponent.ui.onClick = addPageComponent.ui.onClick || {};\n      let ui = {};\n      if (addPageComponent.ui) {\n         addPageComponent.ui.click = (e, id, trg) => {\n            // e.stopPropagation();\n\n            // TODO: busy cursor\n\n            let dc;\n            let detail = this.detailComponent();\n            if (detail) dc = detail.datacollection;\n\n            setTimeout(() => {\n               addPageComponent.onClick(dc);\n            }, 50);\n\n            return false;\n         };\n\n         ui = {\n            rows: [\n               {\n                  cols: [baseComp.ui, addPageComponent.ui],\n               },\n            ],\n         };\n      } else {\n         ui = baseComp.ui;\n      }\n\n      return {\n         ui: ui,\n\n         init: _init,\n         setValue: (val) => {\n            let vals = [];\n            if (Array.isArray(val)) {\n               val.forEach((record) => {\n                  vals.push(\n                     `<span class=\"webix_multicombo_value\">${record.text}</span>`\n                  );\n               });\n            } else {\n               vals.push(\n                  `<span class=\"webix_multicombo_value\">${val.text}</span>`\n               );\n            }\n            baseComp.setValue(baseComp.ui().id, vals.join(\"\"));\n         },\n      };\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewDetailCustomEditorComponent\";\n   //    var ids = {\n   //       component: App.unique(`${idBase}_component`),\n   //    };\n\n   //    var component = this.component(App);\n\n   //    var textElem = component.ui;\n   //    textElem.id = ids.component;\n\n   //    var _ui = {\n   //       rows: [textElem, {}],\n   //    };\n\n   //    var _init = component.init;\n   //    var _logic = component.logic;\n\n   //    var _onShow = component.onShow;\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //       logic: _logic,\n\n   //       onShow: _onShow,\n   //    };\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailCustomComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idPrefix) {\n      var component = super.component(App);\n      var field = this.field();\n      var detailView = this.detailComponent();\n\n      var idBase = \"ABViewDetailCustom_\" + (idPrefix || \"\") + this.id;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n         detail: this.parentDetailComponent()?.id || this.parent.id,\n      };\n\n      var templateLabel = \"\";\n      if (detailView.settings.showLabel == true) {\n         if (detailView.settings.labelPosition == \"top\")\n            templateLabel =\n               \"<label style='display:block; text-align: left;' class='webix_inp_top_label'>#label#</label>\";\n         else\n            templateLabel =\n               \"<label style='width: #width#px; display: inline-block; float: left; line-height: 32px;'>#label#</label>\";\n      }\n\n      var template = (templateLabel + \"#result#\")\n         // var template = (templateLabel)\n         .replace(/#width#/g, detailView.settings.labelWidth)\n         .replace(/#label#/g, field ? field.label : \"\")\n         .replace(/#result#/g, field ? field.columnHeader().template({}) : \"\");\n\n      component.ui.id = ids.component;\n      component.ui.view = \"template\";\n      component.ui.minHeight = 45;\n      component.ui.height = 60;\n      component.ui.borderless = true;\n      component.ui.template = template;\n\n      component.ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            const dataCy = `detail custom ${field?.columnName} ${field?.id} ${ids.detail}`;\n            $$(ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n         },\n      };\n\n      // make sure each of our child views get .init() called\n      component.init = (options) => {};\n\n      component.onShow = () => {\n         if (!field) return;\n\n         var elem = $$(ids.component);\n         if (!elem) return;\n\n         var detailCom = this.detailComponent(),\n            rowData = detailCom.datacollection.getCursor() || {},\n            node = elem.$view;\n\n         field.customDisplay(rowData, App, node, {\n            editable: false,\n         });\n      };\n\n      component.logic.setValue = (val) => {\n         if (!field) return;\n\n         var elem = $$(ids.component);\n         if (!elem) return;\n\n         var rowData = {};\n         rowData[field.columnName] = val;\n\n         field.setValue(elem, rowData);\n      };\n\n      return component;\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nconst ABViewDetailImagePropertyComponentDefaults = ABViewDetailImageCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewDetailImageEditorComponent\";\n   //    var ids = {\n   //       component: App.unique(`${idBase}_component`),\n   //    };\n\n   //    var elem = this.component(App).ui;\n   //    elem.id = ids.component;\n\n   //    var _ui = {\n   //       rows: [elem, {}],\n   //    };\n\n   //    var _init = (options) => {};\n\n   //    var _logic = {};\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //       logic: _logic,\n   //    };\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailImageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewDetailItemComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idPrefix) {\n      let idBase = \"ABViewDetailComponent_\" + (idPrefix || \"\") + this.id;\n      let ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n      // setup 'label' of the element\n      let detailView = this.detailComponent(),\n         field = this.field() || {},\n         label = \"\";\n\n      let settings = {};\n      if (detailView) settings = detailView.settings;\n\n      let isUsers = false;\n      if (field && field.key == \"user\") isUsers = true;\n\n      let templateLabel = \"\";\n      if (settings.showLabel == true) {\n         if (settings.labelPosition == \"top\")\n            templateLabel =\n               \"<label style='display:block; text-align: left;' class='webix_inp_top_label'>#label#</label>#display#\";\n         else\n            templateLabel =\n               \"<label style='width: #width#px; display: inline-block; float: left; line-height: 32px;'>#label#</label><div class='ab-detail-component-holder' style='margin-left: #width#px;'>#display#</div>\";\n      }\n      // no label\n      else {\n         templateLabel = \"#display#\";\n      }\n\n      let template = templateLabel\n         .replace(/#width#/g, settings.labelWidth)\n         .replace(/#label#/g, field ? field.label : \"\");\n\n      let height = 38;\n      if (settings.labelPosition == \"top\") height = height * 2;\n\n      if (\n         field &&\n         field.settings &&\n         typeof field.settings.useHeight != \"undefined\" &&\n         field.settings.useHeight == 1\n      ) {\n         height = parseInt(field.settings.imageHeight) || height;\n      }\n\n      let _ui = {\n         id: ids.component,\n         view: \"template\",\n         borderless: true,\n         height: height,\n         isUsers: isUsers,\n         template: template,\n         data: { display: \"\" }, // show empty data in template\n      };\n\n      // make sure each of our child views get .init() called\n      let _init = (options) => {};\n\n      let _logic = {\n         setValue: (componentId, val) => {\n            if ($$(componentId)) {\n               if (field.key == \"string\" || field.key == \"LongText\") {\n                  val = val.replace(/[<]/g, \"&lt;\");\n               } else if (field.key == \"user\") {\n                  val = val.text ?? val.value ?? val.username ?? val;\n               }\n               $$(componentId).setValues({ display: val });\n            }\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n      };\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\n// const ABViewDetailTextPropertyComponentDefaults = ABViewDetailTextCore.defaultValues();\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewDetailTextEditorComponent\";\n   //    var ids = {\n   //       component: App.unique(`${idBase}_component`),\n   //    };\n\n   //    var textElem = this.component(App).ui;\n   //    textElem.id = ids.component;\n\n   //    var _ui = {\n   //       rows: [textElem, {}],\n   //    };\n\n   //    var _init = (options) => {};\n\n   //    var _logic = {};\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //       logic: _logic,\n   //    };\n   // }\n\n   //\n   // Property Editor\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailTextComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idPrefix) {\n      var component = super.component(App);\n      var field = this.field();\n      var idBase = \"ABViewDetailText_\" + (idPrefix || \"\") + this.id;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n         detail: this.parentDetailComponent()?.id || this.parent.id,\n      };\n\n      component.ui.id = ids.component;\n\n      component.ui.css = \"ab-text\";\n\n      if (this.settings.height) component.ui.height = this.settings.height;\n\n      component.ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            const dataCy = `detail text ${field?.columnName} ${field?.id} ${ids.detail}`;\n            $$(ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n         },\n      };\n\n      return {\n         ui: component.ui,\n         init: component.init,\n\n         logic: {\n            setValue: (val) => {\n               component.logic.setValue(ids.component, val);\n            },\n         },\n      };\n   }\n};\n","let ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewDetailTreeEditorComponent\";\n   //    var ids = {\n   //       component: App.unique(`${idBase}_component`),\n   //    };\n\n   //    var elem = this.component(App).ui;\n   //    elem.id = ids.component;\n\n   //    var _ui = {\n   //       rows: [elem, {}],\n   //    };\n\n   //    var _init = (options) => {};\n\n   //    var _logic = {};\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //       logic: _logic,\n   //    };\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      var component = new ABViewDetailTreeComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idPrefix) {\n      var component = super.component(App);\n      var field = this.field();\n      var detailView = this.detailComponent();\n\n      var idBase = `ABViewDetailTree_${idPrefix || \"\"}${this.id}`;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n      var className = \"ab-detail-tree\";\n\n      component.ui.id = ids.component;\n\n      var _init = (options) => {\n         component.init(options);\n\n         // add div of tree to detail\n         var divTree = `<div class=\"${className}\"></div>`;\n         component.logic.setValue(ids.component, divTree);\n      };\n\n      var _logic = {\n         getDomTree: () => {\n            var elem = $$(ids.component);\n            if (!elem) return;\n\n            return elem.$view.getElementsByClassName(className)[0];\n         },\n\n         setValue: (val) => {\n            // convert value to array\n            if (val != null && !(val instanceof Array)) {\n               val = [val];\n            }\n\n            setTimeout(function () {\n               // get tree dom\n               var domTree = _logic.getDomTree();\n\n               if (!domTree) return false;\n\n               var branches = [];\n               if (typeof field.settings.options.data == \"undefined\") {\n                  field.settings.options = new webix.TreeCollection({\n                     data: field.settings.options,\n                  });\n               }\n\n               field.settings.options.data.each(function (obj) {\n                  if (val != null && val.indexOf(obj.id) != -1) {\n                     var html = \"\";\n\n                     var rootid = obj.id;\n                     while (this.getParentId(rootid)) {\n                        field.settings.options.data.each(function (par) {\n                           if (\n                              field.settings.options.data.getParentId(rootid) ==\n                              par.id\n                           ) {\n                              html = par.text + \": \" + html;\n                           }\n                        });\n                        rootid = this.getParentId(rootid);\n                     }\n\n                     html += obj.text;\n                     branches.push(html);\n                  }\n               });\n\n               var myHex = \"#4CAF50\";\n               var nodeHTML = \"<div class='list-data-values'>\";\n               branches.forEach(function (item) {\n                  nodeHTML +=\n                     '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                     myHex +\n                     ' !important;\">' +\n                     item +\n                     \"</span>\";\n               });\n               nodeHTML += \"</div>\";\n               domTree.innerHTML = nodeHTML;\n\n               var height = 33;\n               if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n               $$(ids.component).config.height = height;\n               $$(ids.component).resize();\n            }, 50);\n         },\n      };\n\n      return {\n         ui: component.ui,\n\n         init: _init,\n         logic: _logic,\n      };\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../ABObjectQuery\");\n\nconst Docxtemplater = require(\"../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../js/jszip.min.js\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = ABViewDocxBuilderCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDocxBuilderComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   componentOld(App) {\n      let baseCom = super.component(App);\n\n      const idBase = `ABViewDocxBuilder_${this.id}`;\n      const ids = {\n         button: App.unique(`${idBase}_button`),\n         noFile: App.unique(`${idBase}_noFile`),\n      };\n\n      let autowidth = false;\n      let buttonWidth =\n         this.settings.width ??\n         ABViewDocxBuilderPropertyComponentDefaults.width;\n      if (buttonWidth == 0) {\n         autowidth = true;\n      }\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      const buttonPos =\n         this.settings.buttonPosition ??\n         ABViewDocxBuilderPropertyComponentDefaults.buttonPosition;\n      if (buttonPos == \"left\") {\n         rightSpacer = {\n            type: \"spacer\",\n         };\n      } else if (buttonPos == \"center\") {\n         leftSpacer = {\n            type: \"spacer\",\n         };\n         rightSpacer = {\n            type: \"spacer\",\n         };\n      } else if (buttonPos == \"right\") {\n         leftSpacer = {\n            type: \"spacer\",\n         };\n      }\n\n      let buttonLabelText = this.buttonlabel || this.settings.buttonlabel; // Use || to check empty string \"\"\n      if (!buttonLabelText) {\n         buttonLabelText =\n            ABViewDocxBuilderPropertyComponentDefaults.buttonlabel;\n      }\n\n      const _ui = {\n         view: \"toolbar\",\n         css:\n            this.settings.toolbarBackground ||\n            ABViewDocxBuilderPropertyComponentDefaults.toolbarBackground,\n         cols: [\n            leftSpacer,\n            {\n               id: ids.button,\n               view: \"button\",\n               css: \"webix_primary\",\n               type: \"icon\",\n               icon: \"fa fa-file-word-o\",\n               label: buttonLabelText,\n               width:\n                  this.settings.width ||\n                  ABViewDocxBuilderPropertyComponentDefaults.width,\n               autowidth: autowidth,\n               click: () => {\n                  _logic.renderFile();\n               },\n               on: {\n                  // Add data-cy attribute for cypress tests\n                  onAfterRender: () => {\n                     const name = this.name.replace(\".docxBuilder\", \"\");\n                     const dataCy = `docx download ${name} ${this.id}`;\n                     $$(ids.button)\n                        ?.$view.querySelector(\"button\")\n                        .setAttribute(\"data-cy\", dataCy);\n                  },\n               },\n            },\n            {\n               id: ids.noFile,\n               view: \"label\",\n               label: L(\"No template file\"),\n            },\n            {\n               type: \"spacer\",\n            },\n            rightSpacer,\n         ],\n      };\n\n      // make sure each of our child views get .init() called\n      var _init = (options) => {\n         let DownloadButton = $$(ids.button);\n         let NoFileLabel = $$(ids.noFile);\n\n         if (this.settings.filename) {\n            DownloadButton.show();\n            NoFileLabel.hide();\n         } else {\n            DownloadButton.hide();\n            NoFileLabel.show();\n         }\n      };\n\n      let _logic = {\n         busy: () => {\n            let DownloadButton = $$(ids.button);\n            if (!DownloadButton) return;\n\n            DownloadButton.disable();\n\n            DownloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n            DownloadButton.refresh();\n         },\n\n         ready: () => {\n            let DownloadButton = $$(ids.button);\n            if (!DownloadButton) return;\n\n            DownloadButton.enable();\n\n            DownloadButton.define(\"icon\", \"fa fa-file-word-o\");\n            DownloadButton.refresh();\n         },\n\n         onShow: (viewId) => {\n            let tasks = [];\n\n            this.datacollections.forEach((dc) => {\n               if (dc && dc.dataStatus == dc.dataStatusFlag.notInitial) {\n                  // load data when a widget is showing\n                  tasks.push(dc.loadData());\n               }\n            });\n\n            // Show loading cursor\n            if (tasks.length > 0) _logic.busy();\n\n            Promise.all(tasks)\n               .catch((err) => console.error(err))\n               .then(() => {\n                  // Hide loading cursor\n                  _logic.ready();\n               });\n         },\n\n         renderFile: () => {\n            _logic.busy();\n\n            let reportValues = {};\n            let images = {};\n            let summaries = {}; // { varName: sum number, ..., varName2: number2 }\n\n            Promise.resolve()\n               // Get current cursor\n               .then(() => {\n                  let datacollections = this.datacollections;\n                  let isDcLabelAdded = datacollections.length > 1;\n\n                  datacollections.forEach((dc) => {\n                     if (dc == null) return;\n\n                     let obj = dc.datasource;\n                     if (obj == null) return;\n\n                     let dcValues = [];\n                     let dataList = [];\n\n                     let dcCursor = dc.getCursor();\n\n                     // merge cursor to support dc and tree cursor in the report\n                     if (dcCursor) {\n                        let treeCursor = dc.getCursor(true);\n                        dataList.push(App.AB.merge({}, dcCursor, treeCursor));\n                     } else dataList = App.AB.cloneDeep(dc.getData());\n\n                     // update property names to column labels to match format names in docx file\n                     let mlFields = obj.multilingualFields();\n\n                     let setReportValues = (\n                        baseData,\n                        targetData,\n                        field,\n                        fieldLabels = []\n                     ) => {\n                        let val = null;\n\n                        targetData.id = baseData.id;\n                        targetData[`${field.columnName}_ORIGIN`] =\n                           baseData[field.columnName]; // Keep origin value for compare value with custom index\n\n                        // Translate multilinguage fields\n                        if (mlFields.length) {\n                           let transFields = (mlFields || []).filter(\n                              (fieldName) => baseData[fieldName] != null\n                           );\n                           this.translate(\n                              baseData,\n                              baseData,\n                              transFields,\n                              this.languageCode\n                           );\n                        }\n\n                        // Pull value\n                        if (field instanceof ABFieldConnect) {\n                           // If field is connected field, then\n                           // {\n                           //\t\tfieldName: {Object} or [Array]\n                           // }\n                           val = baseData[field.columnName];\n\n                           if (val && val.forEach) {\n                              val.forEach((v) => {\n                                 if (v == null) return;\n\n                                 // format relation data\n                                 if (field.datasourceLink) {\n                                    field.datasourceLink\n                                       .fields((f) => !f.isConnection)\n                                       .forEach((f) => {\n                                          v[`${f.columnName}_ORIGIN`] =\n                                             v[f.columnName];\n\n                                          v[f.columnName] = f.format(v, {\n                                             languageCode: this.languageCode,\n                                          });\n                                       });\n                                 }\n\n                                 // Keep ABObject to relation data\n                                 if (v && typeof v == \"object\")\n                                    v._object = field.datasourceLink;\n                              });\n                           }\n                           // TODO\n                           // data[label + '_label'] = field.format(baseData);\n                        } else {\n                           val = field.format(baseData, {\n                              languageCode: this.languageCode,\n                           });\n                        }\n\n                        // Set value to report with every languages of label\n                        fieldLabels.forEach((label) => {\n                           if (val) {\n                              targetData[label] = val;\n                           } else if (!targetData[label]) {\n                              targetData[label] = \"\";\n                           }\n                        });\n\n                        // normalize child items\n                        if (baseData.data && baseData.data.length) {\n                           targetData.data = targetData.data || [];\n                           (baseData.data || []).forEach((childItem, index) => {\n                              // add new data item\n                              if (targetData.data[index] == null)\n                                 targetData.data[index] = {};\n\n                              setReportValues(\n                                 childItem,\n                                 targetData.data[index],\n                                 field,\n                                 fieldLabels\n                              );\n                           });\n                        }\n                     };\n\n                     dataList.forEach((data) => {\n                        let resultData = {};\n\n                        // Keep id of ABObject into .scope of DOCX templater\n                        resultData._object = obj;\n\n                        // For support label of columns every languages\n                        obj.fields().forEach((f) => {\n                           let fieldLabels = [];\n\n                           // Query Objects\n                           if (obj instanceof ABObjectQuery) {\n                              if (typeof f.object.translations == \"string\")\n                                 f.object.translations = JSON.parse(\n                                    f.object.translations\n                                 );\n\n                              if (typeof f.translations == \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              (f.object.translations || []).forEach(\n                                 (objTran) => {\n                                    let fieldTran = (\n                                       f.translations || []\n                                    ).filter(\n                                       (fieldTran) =>\n                                          fieldTran.language_code ==\n                                          objTran.language_code\n                                    )[0];\n\n                                    if (!fieldTran) return;\n\n                                    let objectLabel = objTran.label;\n                                    let fieldLabel = fieldTran.label;\n\n                                    // Replace alias with label of object\n                                    fieldLabels.push(\n                                       `${objectLabel}.${fieldLabel}`\n                                    );\n                                 }\n                              );\n                           }\n                           // Normal Objects\n                           else {\n                              if (typeof f.translations == \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n                           }\n\n                           setReportValues(data, resultData, f, fieldLabels);\n                        });\n\n                        dcValues.push(resultData);\n                     });\n\n                     // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                     let datacollectionData =\n                        dcValues.length > 1 ? dcValues : dcValues[0];\n                     if (\n                        isDcLabelAdded ||\n                        (Array.isArray(datacollectionData) &&\n                           datacollectionData.length > 1)\n                     ) {\n                        (dc.translations || []).forEach((tran) => {\n                           reportValues[tran.label] = datacollectionData;\n                        });\n                     } else reportValues = datacollectionData;\n                  });\n\n                  return Promise.resolve();\n               })\n               // Download images\n               .then(() => {\n                  console.log(\"DOCX data: \", reportValues);\n\n                  let tasks = [];\n\n                  let addDownloadTask = (fieldImage, data = []) => {\n                     data.forEach((d) => {\n                        let imageVal = fieldImage.format(d);\n                        if (imageVal && !images[imageVal]) {\n                           tasks.push(\n                              new Promise((ok, bad) => {\n                                 let imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                                 JSZipUtils.getBinaryContent(\n                                    imgUrl,\n                                    function (error, content) {\n                                       if (error) return bad(error);\n                                       else {\n                                          // store binary of image\n                                          images[imageVal] = content;\n\n                                          ok();\n                                       }\n                                    }\n                                 );\n                              })\n                           );\n                        }\n\n                        // download images of child items\n                        addDownloadTask(fieldImage, d.data || []);\n                     });\n                  };\n\n                  this.datacollections.forEach((dc) => {\n                     if (!dc) return;\n\n                     let obj = dc.datasource;\n                     if (!obj) return;\n\n                     let currCursor = dc.getCursor();\n                     if (currCursor) {\n                        // Current cursor\n                        let treeCursor = dc.getCursor(true);\n                        currCursor = [App.AB.merge({}, currCursor, treeCursor)];\n                     } // List of data\n                     else currCursor = dc.getData();\n\n                     obj.fields((f) => f instanceof ABFieldImage).forEach(\n                        (f) => {\n                           addDownloadTask(f, currCursor);\n                        }\n                     );\n                  });\n\n                  return Promise.all(tasks);\n               })\n               .then(() => {\n                  // Download the template file\n                  return new Promise((next, err) => {\n                     let url = this.downloadUrl();\n\n                     JSZipUtils.getBinaryContent(url, (error, content) => {\n                        if (error) return err(error);\n\n                        next(content);\n                     });\n                  });\n               })\n               .then((content) => {\n                  // Generate Docx file\n                  return new Promise((next, err) => {\n                     let zip = new JSZip(content);\n                     let doc = new Docxtemplater();\n\n                     let imageModule = new ImageModule({\n                        centered: false,\n                        getImage: (tagValue, tagName) => {\n                           // NOTE: .getImage of version 3.0.2 does not support async\n                           //\t\t\twe can buy newer version to support it\n                           //\t\t\thttps://docxtemplater.com/modules/image/\n\n                           return images[tagValue] || \"\";\n                        },\n                        getSize: (imgBuffer, tagValue, tagName) => {\n                           let defaultVal = [300, 160];\n\n                           let dc = this.datacollection;\n                           if (!dc) {\n                              let dcs = this.datacollections;\n                              if (dcs) {\n                                 dcs.forEach((dc) => {\n                                    let obj = dc.datasource;\n                                    if (!obj) return false;\n\n                                    // This is a query object\n                                    if (tagName.indexOf(\".\") > -1) {\n                                       let tagNames = tagName.split(\".\");\n\n                                       if (!obj.objects) return false; // not a query\n                                       obj = obj.objects(\n                                          (o) => o.label == tagNames[0]\n                                       )[0]; // Label of object\n                                       if (!obj) return false;\n\n                                       tagName = tagNames[1]; // Field name\n                                    }\n\n                                    let imageField = obj.fields(\n                                       (f) => f.columnName == tagName\n                                    )[0];\n                                    if (!imageField || !imageField.settings)\n                                       return false;\n\n                                    if (\n                                       imageField.settings.useWidth &&\n                                       imageField.settings.imageWidth\n                                    )\n                                       defaultVal[0] =\n                                          imageField.settings.imageWidth;\n\n                                    if (\n                                       imageField.settings.useHeight &&\n                                       imageField.settings.imageHeight\n                                    )\n                                       defaultVal[1] =\n                                          imageField.settings.imageHeight;\n\n                                    return false;\n                                 });\n                                 return defaultVal;\n                              } else {\n                                 return defaultVal;\n                              }\n                           } else {\n                              let obj = dc.datasource;\n                              if (!obj) return defaultVal;\n\n                              // This is a query object\n                              if (tagName.indexOf(\".\") > -1) {\n                                 let tagNames = tagName.split(\".\");\n\n                                 obj = obj.objects(\n                                    (o) => o.label == tagNames[0]\n                                 )[0]; // Label of object\n                                 if (!obj) return defaultVal;\n\n                                 tagName = tagNames[1]; // Field name\n                              }\n\n                              let imageField = obj.fields(\n                                 (f) => f.columnName == tagName\n                              )[0];\n                              if (!imageField || !imageField.settings)\n                                 return defaultVal;\n\n                              if (\n                                 imageField.settings.useWidth &&\n                                 imageField.settings.imageWidth\n                              )\n                                 defaultVal[0] = imageField.settings.imageWidth;\n\n                              if (\n                                 imageField.settings.useHeight &&\n                                 imageField.settings.imageHeight\n                              )\n                                 defaultVal[1] =\n                                    imageField.settings.imageHeight;\n\n                              return defaultVal;\n                           }\n                        },\n                        // getSize: function (imgBuffer, tagValue, tagName) {\n                        // \tif (imgBuffer) {\n                        // \t\tvar maxWidth = 300;\n                        // \t\tvar maxHeight = 160;\n\n                        // \t\t// Find aspect ratio image dimensions\n                        // \t\ttry {\n                        // \t\t\tvar image = sizeOf(imgBuffer);\n                        // \t\t\tvar ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n                        // \t\t\treturn [image.width * ratio, image.height * ratio];\n                        // \t\t}\n                        // \t\t// if invalid image, then should return 0, 0 sizes\n                        // \t\tcatch (err) {\n                        // \t\t\treturn [0, 0];\n                        // \t\t}\n\n                        // \t}\n                        // \telse {\n                        // \t\treturn [0, 0];\n                        // \t}\n                        // }\n                     });\n\n                     try {\n                        doc.attachModule(imageModule)\n                           .loadZip(zip)\n                           .setData(reportValues)\n                           .setOptions({\n                              parser: function (tag) {\n                                 return {\n                                    get: function (scope, context) {\n                                       // NOTE: AppBuilder custom filter : no return empty items\n                                       if (tag.indexOf(\"data|\") == 0) {\n                                          let prop = (\n                                             tag.split(\"|\")[1] || \"\"\n                                          ).trim();\n\n                                          return (scope[\"data\"] || []).filter(\n                                             function (item) {\n                                                return item[prop]\n                                                   ? true\n                                                   : false;\n                                             }\n                                          );\n                                       }\n                                       // Mark number to add to a variable\n                                       else if (tag.indexOf(\"|$sum?\") > -1) {\n                                          let prop = tag.split(\"|$sum?\")[0];\n                                          let varName = tag.split(\"|$sum?\")[1];\n\n                                          let number = scope[prop];\n                                          if (typeof number == \"string\") {\n                                             number = number.replace(\n                                                /[^\\d.]/g, // return only number and dot\n                                                \"\"\n                                             );\n                                          }\n\n                                          if (summaries[varName] == null)\n                                             summaries[varName] = 0.0;\n\n                                          summaries[varName] += parseFloat(\n                                             number\n                                          );\n\n                                          return scope[prop];\n                                       }\n                                       // Show sum value ^\n                                       else if (tag.indexOf(\"$sum?\") == 0) {\n                                          let varName = tag.replace(\n                                             \"$sum?\",\n                                             \"\"\n                                          );\n\n                                          return summaries[varName] || 0;\n                                       }\n                                       // // Sum number of .data (Grouped query)\n                                       // else if (tag.indexOf(\"$sum|\") == 0) {\n                                       //    let prop = (\n                                       //       tag.split(\"|\")[1] || \"\"\n                                       //    ).trim();\n\n                                       //    let sum = 0;\n                                       //    (scope[\"data\"] || []).forEach(\n                                       //       (childItem) => {\n                                       //          if (!childItem[prop]) return;\n\n                                       //          let number = childItem[prop];\n                                       //          if (typeof number == \"string\") {\n                                       //             number = number.replace(\n                                       //                /[^\\d.]/g, // return only number and dot\n                                       //                \"\"\n                                       //             );\n                                       //          }\n\n                                       //          try {\n                                       //             sum += parseFloat(\n                                       //                number || 0\n                                       //             );\n                                       //          } catch (e) {}\n                                       //       }\n                                       //    );\n\n                                       //    // Print number with commas\n                                       //    if (sum) {\n                                       //       sum = sum\n                                       //          .toString()\n                                       //          .replace(\n                                       //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                                       //             \",\"\n                                       //          );\n                                       //    }\n\n                                       //    return sum;\n                                       // }\n                                       // NOTE: AppBuilder custom filter of another data source\n                                       else if (tag.indexOf(\"$\") == 0) {\n                                          let props = tag\n                                             .replace(\"$\", \"\")\n                                             .split(\"|\");\n                                          let propSource = props[0].trim();\n                                          let propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                                          if (!propSource || !propFilter)\n                                             return \"\";\n\n                                          // Pull Index field of connect field\n                                          let indexColName;\n                                          let obj = scope._object;\n                                          if (obj) {\n                                             let connectedField = obj.fields(\n                                                (f) =>\n                                                   f.columnName == propFilter\n                                             )[0];\n                                             if (connectedField) {\n                                                let indexField =\n                                                   connectedField.indexField;\n                                                indexColName = indexField\n                                                   ? indexField.columnName\n                                                   : null;\n                                             }\n                                          }\n\n                                          let sourceVals =\n                                             reportValues[propSource];\n                                          if (\n                                             sourceVals &&\n                                             !Array.isArray(sourceVals)\n                                          )\n                                             sourceVals = [sourceVals];\n\n                                          let getVal = (data) => {\n                                             return (\n                                                data[\n                                                   `${indexColName}_ORIGIN`\n                                                ] || // Pull origin data to compare by custom index\n                                                data[indexColName] ||\n                                                data.id ||\n                                                data\n                                             );\n                                          };\n\n                                          return (sourceVals || []).filter(\n                                             function (item) {\n                                                // Pull data of parent to compare\n                                                let comparer =\n                                                   scope[propFilter];\n\n                                                if (Array.isArray(comparer))\n                                                   return (\n                                                      comparer.filter(\n                                                         (c) =>\n                                                            getVal(c) ==\n                                                            getVal(item)\n                                                      ).length > 0\n                                                   );\n                                                else {\n                                                   return (\n                                                      getVal(item) ==\n                                                      getVal(comparer)\n                                                   );\n                                                }\n                                             }\n                                          );\n                                       }\n                                       // ์NOTE : Custom filter\n                                       else if (tag.indexOf(\"?\") > -1) {\n                                          let result = scope;\n                                          let prop = tag.split(\"?\")[0];\n                                          let condition = tag.split(\"?\")[1];\n                                          if (prop && condition) {\n                                             let data = scope[prop];\n                                             if (data) {\n                                                if (!Array.isArray(data))\n                                                   data = [data];\n\n                                                return data.filter((d) =>\n                                                   eval(\n                                                      condition.replace(\n                                                         /\\./g,\n                                                         \"d.\"\n                                                      )\n                                                   )\n                                                );\n                                             }\n                                          }\n                                          return result;\n                                       } else if (tag === \".\") {\n                                          return scope;\n                                       } else {\n                                          return scope[tag];\n                                       }\n                                    },\n                                 };\n                              },\n                           })\n                           .render(); // render the document\n                     } catch (error) {\n                        return err(error);\n                     }\n\n                     var docxFile = doc.getZip().generate({\n                        type: \"blob\",\n                        mimeType:\n                           \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                     }); //Output the document using Data-URI\n\n                     next(docxFile);\n                  });\n               })\n               .then((blobFile) => {\n                  // Let user download the output file\n                  return new Promise((next, err) => {\n                     this.letUserDownload(blobFile, this.filelabel);\n\n                     next();\n                  });\n               })\n               // Final step\n               .then(() => {\n                  _logic.ready();\n               });\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n         onShow: _logic.onShow,\n      };\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var comp = super.editorComponent(App, mode);\n\n   //    // Define height of cell\n   //    comp.ui.rows[0].cellHeight = 75;\n\n   //    return comp;\n   // }\n\n   //\n   // Property Editor\n   //\n\n   // static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n   //    var commonUI = super.propertyEditorDefaultElements(\n   //       App,\n   //       ids,\n   //       _logic,\n   //       ObjectDefaults\n   //    );\n\n   //    var idBase = \"ABViewForm\";\n\n   //    // PopupDisplayRule = new ABDisplayRule(App, idBase + \"_displayrule\");\n\n   //    PopupRecordRule = new ABRecordRule();\n   //    PopupRecordRule.component(App, `${idBase}_recordrule`); // prepare the UI component.\n\n   //    PopupSubmitRule = new ABSubmitRule();\n   //    PopupSubmitRule.component(App, `${idBase}_submitrule`);\n\n   //    // _logic functions\n\n   //    _logic.selectSource = (dcId, oldDcId) => {\n   //       // TODO : warning message\n\n   //       _logic.busy();\n\n   //       let currView = _logic.currentEditObject();\n   //       let formView = currView.parentFormComponent();\n\n   //       currView.settings.dataviewID = dcId;\n\n   //       // clear sub views\n   //       var viewsToRemove = currView._views;\n   //       currView._views = [];\n\n   //       return (\n   //          Promise.resolve()\n   //             .then(() => {\n   //                var allRemoves = [];\n   //                viewsToRemove.forEach((v) => {\n   //                   allRemoves.push(v.destroy());\n   //                });\n   //                return Promise.all(allRemoves);\n   //             })\n   //             // .then(() => {\n   //             // \t// remove all old components\n   //             // \tlet destroyTasks = [];\n   //             // \tif (oldDcId != null) {\n   //             // \t\tlet oldComps = formView.views();\n   //             // \t\toldComps.forEach(child => destroyTasks.push(() => child.destroy()));\n   //             // \t}\n\n   //             // \treturn destroyTasks.reduce((promiseChain, currTask) => {\n   //             // \t\treturn promiseChain.then(currTask);\n   //             // \t}, Promise.resolve([]));\n   //             // })\n   //             .then(() => {\n   //                // refresh UI\n   //                // formView.emit('properties.updated', currView);\n\n   //                _logic.busy();\n\n   //                // Update field options in property\n   //                this.propertyUpdateFieldOptions(ids, currView, dcId);\n\n   //                // add all fields to editor by default\n   //                if (currView._views.length > 0) return Promise.resolve();\n\n   //                let saveTasks = [];\n   //                let fields = $$(ids.fields).find({});\n   //                fields.reverse();\n   //                fields.forEach((f, index) => {\n   //                   if (!f.selected) {\n   //                      let yPosition = fields.length - index - 1;\n\n   //                      // Add new form field\n   //                      let newFieldView = currView.addFieldToForm(\n   //                         f,\n   //                         yPosition\n   //                      );\n   //                      if (newFieldView) {\n   //                         newFieldView.once(\"destroyed\", () =>\n   //                            this.propertyEditorPopulate(App, ids, currView)\n   //                         );\n\n   //                         // // Call save API\n   //                         saveTasks.push(newFieldView.save());\n   //                      }\n\n   //                      // update item to UI list\n   //                      f.selected = 1;\n   //                      $$(ids.fields).updateItem(f.id, f);\n   //                   }\n   //                });\n\n   //                let defaultButton = formView.refreshDefaultButton(ids);\n   //                if (defaultButton) saveTasks.push(defaultButton.save());\n\n   //                return Promise.all(saveTasks);\n   //             })\n   //             // Saving\n   //             .then(() => {\n   //                //// NOTE: the way the .addFieldToForm() works, it will prevent\n   //                //// the typical field.save() -> triggering the form.save() on a\n   //                //// new Field.  So once all our field.saves() are finished, we\n   //                //// need to perform a form.save() to persist the changes.\n   //                return currView.save();\n   //             })\n   //             // Finally\n   //             .then(() => {\n   //                // refresh UI\n   //                formView.emit(\"properties.updated\", currView);\n\n   //                // Update field options in property\n   //                this.propertyUpdateRules(ids, currView, dcId);\n\n   //                _logic.ready();\n\n   //                return Promise.resolve();\n   //             })\n   //       );\n   //    };\n\n   //    _logic.listTemplate = (field, common) => {\n   //       let currView = _logic.currentEditObject();\n\n   //       // disable in form\n   //       var fieldComponent = field.formComponent();\n   //       if (fieldComponent == null)\n   //          return \"<i class='fa fa-times'></i>  #label# <div class='ab-component-form-fields-component-info'> Disable </div>\".replace(\n   //             \"#label#\",\n   //             field.label\n   //          );\n\n   //       var componentKey = fieldComponent.common().key;\n   //       var formComponent = currView.application.viewAll(\n   //          (v) => v.common().key == componentKey\n   //       )[0];\n\n   //       return `${common.markCheckbox(field)} ${\n   //          field.label\n   //       } <div class='ab-component-form-fields-component-info'> <i class='fa fa-${\n   //          formComponent ? formComponent.common().icon : \"fw\"\n   //       }'></i> ${\n   //          formComponent ? L(formComponent.common().labelKey) : \"\"\n   //       } </div>`;\n   //    };\n\n   //    _logic.check = (e, fieldId) => {\n   //       let currView = _logic.currentEditObject();\n   //       let formView = currView.parentFormComponent();\n\n   //       // update UI list\n   //       let item = $$(ids.fields).getItem(fieldId);\n   //       item.selected = item.selected ? 0 : 1;\n   //       $$(ids.fields).updateItem(fieldId, item);\n\n   //       let doneFn = () => {\n   //          formView\n   //             .refreshDefaultButton(ids)\n   //             .save()\n   //             .then(() => {\n   //                // refresh UI\n   //                currView.emit(\"properties.updated\", currView);\n   //             });\n\n   //          // // trigger a save()\n   //          // this.propertyEditorSave(ids, currView);\n   //       };\n\n   //       // add a field to the form\n   //       if (item.selected) {\n   //          let fieldView = currView.addFieldToForm(item);\n   //          if (fieldView) {\n   //             fieldView.save().then(() => {\n   //                fieldView.once(\"destroyed\", () =>\n   //                   this.propertyEditorPopulate(App, ids, currView)\n   //                );\n   //                currView.save().then(() => {\n   //                   doneFn();\n   //                });\n   //             });\n   //          }\n   //       }\n   //       // remove field in the form\n   //       else {\n   //          let fieldView = formView\n   //             .fieldComponents()\n   //             .filter((c) => c.settings.fieldId == fieldId)[0];\n   //          if (fieldView) {\n   //             // let remainingViews = formView.views(c => c.settings.fieldId != fieldId);\n   //             // formView._views = remainingViews;\n\n   //             fieldView.destroy().then(() => {\n   //                doneFn();\n   //             });\n   //          }\n   //       }\n   //    };\n\n   //    // Display rule\n   //    _logic.displayRuleShow = () => {\n   //       // var currView = _logic.currentEditObject();\n   //       // PopupDisplayRule.setValue(currView.settings.displayRules);\n   //       // PopupDisplayRule.show();\n   //    };\n\n   //    _logic.displayRuleSave = () => {};\n\n   //    // Record rule\n   //    _logic.recordRuleShow = () => {\n   //       var currView = _logic.currentEditObject();\n\n   //       var selectedDv = currView.datacollection;\n   //       if (selectedDv) {\n   //          PopupRecordRule.objectLoad(selectedDv.datasource);\n   //       }\n   //       PopupRecordRule.formLoad(currView);\n   //       PopupRecordRule.fromSettings(currView.settings.recordRules);\n   //       PopupRecordRule.show();\n\n   //       // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   //       // choosers properly if it hasn't been shown before the .setValue() call.\n   //       // so this work around allows us to refresh the display after the .show()\n   //       // on the popup.\n   //       // When they've fixed the bug, we'll remove this workaround:\n   //       PopupRecordRule.qbFixAfterShow();\n   //    };\n\n   //    _logic.recordRuleSave = (settings) => {\n   //       var currView = _logic.currentEditObject();\n   //       currView.settings.recordRules = settings;\n\n   //       // trigger a save()\n   //       this.propertyEditorSave(ids, currView);\n\n   //       // update badge number of rules\n   //       this.populateBadgeNumber(ids, currView);\n   //    };\n\n   //    // Submit rule\n   //    _logic.submitRuleShow = () => {\n   //       var currView = _logic.currentEditObject();\n\n   //       PopupSubmitRule.fromSettings(currView.settings.submitRules);\n   //       PopupSubmitRule.show();\n   //    };\n\n   //    _logic.submitRuleSave = (settings) => {\n   //       var currView = _logic.currentEditObject();\n   //       currView.settings.submitRules = settings;\n\n   //       // trigger a save()\n   //       this.propertyEditorSave(ids, currView);\n\n   //       // update badge number of rules\n   //       this.populateBadgeNumber(ids, currView);\n   //    };\n\n   //    /** Initial rule popups */\n   //    // PopupDisplayRule.init({\n   //    // \tonSave: _logic.displayRuleSave\n   //    // });\n\n   //    PopupRecordRule.init({\n   //       onSave: _logic.recordRuleSave,\n   //    });\n\n   //    PopupSubmitRule.init({\n   //       onSave: _logic.submitRuleSave,\n   //    });\n\n   //    return commonUI.concat([\n   //       {\n   //          name: \"datacollection\",\n   //          view: \"richselect\",\n   //          label: L(\"Data Source\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //          skipAutoSave: true,\n   //          on: {\n   //             onChange: _logic.selectSource,\n   //          },\n   //       },\n\n   //       {\n   //          view: \"fieldset\",\n   //          label: L(\"Form Fields:\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //          body: {\n   //             type: \"clean\",\n   //             padding: 10,\n   //             rows: [\n   //                {\n   //                   name: \"fields\",\n   //                   view: \"list\",\n   //                   select: false,\n   //                   minHeight: 200,\n   //                   template: _logic.listTemplate,\n   //                   type: {\n   //                      markCheckbox: function (item) {\n   //                         return (\n   //                            \"<span class='check webix_icon fa fa-\" +\n   //                            (item.selected ? \"check-\" : \"\") +\n   //                            \"square-o'></span>\"\n   //                         );\n   //                      },\n   //                   },\n   //                   onClick: {\n   //                      check: _logic.check,\n   //                   },\n   //                },\n   //             ],\n   //          },\n   //       },\n   //       {\n   //          name: \"showLabel\",\n   //          view: \"checkbox\",\n   //          label: L(\"Display Label\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //       },\n   //       {\n   //          name: \"labelPosition\",\n   //          view: \"richselect\",\n   //          label: L(\"Label Position\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //          options: [\n   //             {\n   //                id: \"left\",\n   //                value: L(\"Left\"),\n   //             },\n   //             {\n   //                id: \"top\",\n   //                value: L(\"Top\"),\n   //             },\n   //          ],\n   //       },\n   //       {\n   //          name: \"labelWidth\",\n   //          view: \"counter\",\n   //          label: L(\"Label Width\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //       },\n   //       {\n   //          view: \"counter\",\n   //          name: \"height\",\n   //          label: L(\"Height:\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //       },\n   //       {\n   //          name: \"clearOnLoad\",\n   //          view: \"checkbox\",\n   //          label: L(\"Clear on load\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //       },\n   //       {\n   //          name: \"clearOnSave\",\n   //          view: \"checkbox\",\n   //          label: L(\"Clear on save\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //       },\n   //       {\n   //          view: \"fieldset\",\n   //          label: L(\"Rules:\"),\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //          body: {\n   //             type: \"clean\",\n   //             padding: 10,\n   //             rows: [\n   //                {\n   //                   cols: [\n   //                      {\n   //                         view: \"label\",\n   //                         label: L(\"Submit Rules:\"),\n   //                         width: this.AB.UISettings.config().labelWidthLarge,\n   //                      },\n   //                      {\n   //                         view: \"button\",\n   //                         css: \"webix_primary\",\n   //                         name: \"buttonSubmitRules\",\n   //                         label: L(\"Settings\"),\n   //                         icon: \"fa fa-gear\",\n   //                         type: \"icon\",\n   //                         badge: 0,\n   //                         click: function () {\n   //                            _logic.submitRuleShow();\n   //                         },\n   //                      },\n   //                   ],\n   //                },\n   //                {\n   //                   cols: [\n   //                      {\n   //                         view: \"label\",\n   //                         label: L(\"Display Rules:\"),\n   //                         width: this.AB.UISettings.config().labelWidthLarge,\n   //                      },\n   //                      {\n   //                         view: \"button\",\n   //                         name: \"buttonDisplayRules\",\n   //                         css: \"webix_primary\",\n   //                         label: L(\"Settings\"),\n   //                         icon: \"fa fa-gear\",\n   //                         type: \"icon\",\n   //                         badge: 0,\n   //                         click: function () {\n   //                            _logic.displayRuleShow();\n   //                         },\n   //                      },\n   //                   ],\n   //                },\n   //                {\n   //                   cols: [\n   //                      {\n   //                         view: \"label\",\n   //                         label: L(\"Record Rules:\"),\n   //                         width: this.AB.UISettings.config().labelWidthLarge,\n   //                      },\n   //                      {\n   //                         view: \"button\",\n   //                         name: \"buttonRecordRules\",\n   //                         css: \"webix_primary\",\n   //                         label: L(\"Settings\"),\n   //                         icon: \"fa fa-gear\",\n   //                         type: \"icon\",\n   //                         badge: 0,\n   //                         click: function () {\n   //                            _logic.recordRuleShow();\n   //                         },\n   //                      },\n   //                   ],\n   //                },\n   //             ],\n   //          },\n   //       },\n   //    ]);\n   // }\n\n   // static propertyEditorPopulate(App, ids, view, logic) {\n   //    super.propertyEditorPopulate(App, ids, view, logic);\n\n   //    var formCom = view.parentFormComponent();\n   //    var datacollectionId = formCom.settings.dataviewID\n   //       ? formCom.settings.dataviewID\n   //       : null;\n   //    var SourceSelector = $$(ids.datacollection);\n\n   //    // Pull data collections to options\n   //    var dcOptions = view.propertyDatacollections((dc) => {\n   //       var obj = dc.datasource;\n\n   //       return dc.sourceType == \"object\" && obj && !obj.isImported;\n   //    });\n   //    SourceSelector.define(\"options\", dcOptions);\n   //    SourceSelector.define(\"value\", datacollectionId);\n   //    SourceSelector.refresh();\n\n   //    this.propertyUpdateFieldOptions(ids, view, datacollectionId);\n\n   //    // update properties when a field component is deleted\n   //    view.views().forEach((v) => {\n   //       if (v instanceof ABViewFormComponent)\n   //          v.once(\"destroyed\", () =>\n   //             this.propertyEditorPopulate(App, ids, view)\n   //          );\n   //    });\n\n   //    SourceSelector.enable();\n   //    $$(ids.showLabel).setValue(view.settings.showLabel);\n   //    $$(ids.labelPosition).setValue(\n   //       view.settings.labelPosition ||\n   //          ABViewFormPropertyComponentDefaults.labelPosition\n   //    );\n   //    $$(ids.labelWidth).setValue(\n   //       view.settings.labelWidth ||\n   //          ABViewFormPropertyComponentDefaults.labelWidth\n   //    );\n   //    $$(ids.height).setValue(\n   //       view.settings.height || ABViewFormPropertyComponentDefaults.height\n   //    );\n   //    $$(ids.clearOnLoad).setValue(\n   //       view.settings.clearOnLoad ||\n   //          ABViewFormPropertyComponentDefaults.clearOnLoad\n   //    );\n   //    $$(ids.clearOnSave).setValue(\n   //       view.settings.clearOnSave ||\n   //          ABViewFormPropertyComponentDefaults.clearOnSave\n   //    );\n\n   //    this.propertyUpdateRules(ids, view, datacollectionId);\n   //    this.populateBadgeNumber(ids, view);\n\n   //    // when a change is made in the properties the popups need to reflect the change\n   //    this.updateEventIds = this.updateEventIds || {}; // { viewId: boolean, ..., viewIdn: boolean }\n   //    if (!this.updateEventIds[view.id]) {\n   //       this.updateEventIds[view.id] = true;\n\n   //       view.addListener(\"properties.updated\", () => {\n   //          this.populateBadgeNumber(ids, view);\n   //       });\n   //    }\n   // }\n\n   // static propertyEditorValues(ids, view) {\n   //    super.propertyEditorValues(ids, view);\n\n   //    view.settings.dataviewID = $$(ids.datacollection).getValue();\n   //    view.settings.showLabel = $$(ids.showLabel).getValue();\n   //    view.settings.labelPosition =\n   //       $$(ids.labelPosition).getValue() ||\n   //       ABViewFormPropertyComponentDefaults.labelPosition;\n   //    view.settings.labelWidth =\n   //       $$(ids.labelWidth).getValue() ||\n   //       ABViewFormPropertyComponentDefaults.labelWidth;\n   //    view.settings.height = $$(ids.height).getValue();\n   //    view.settings.clearOnLoad = $$(ids.clearOnLoad).getValue();\n   //    view.settings.clearOnSave = $$(ids.clearOnSave).getValue();\n   // }\n\n   /**\n    * @method propertyUpdateFieldOptions\n    * Populate fields of object to select list in property\n    *\n    * @param {Object} ids\n    * @param {ABViewForm} view - the current component\n    * @param {string} dcId - id of ABDatacollection\n    */\n   // static propertyUpdateFieldOptions(ids, view, dcId) {\n   //    var formComponent = view.parentFormComponent();\n   //    var existsFields = formComponent.fieldComponents();\n   //    var datacollection = view.AB.datacollectionByID(dcId);\n   //    var object = datacollection ? datacollection.datasource : null;\n\n   //    // Pull field list\n   //    var fieldOptions = [];\n   //    if (object != null) {\n   //       fieldOptions = object.fields().map((f) => {\n   //          f.selected =\n   //             existsFields.filter((com) => {\n   //                return f.id == com.settings.fieldId;\n   //             }).length > 0;\n\n   //          return f;\n   //       });\n   //    }\n\n   //    $$(ids.fields).clearAll();\n   //    $$(ids.fields).parse(fieldOptions);\n   // }\n\n   // static propertyUpdateRules(ids, view, dcId) {\n   //    if (!view) return;\n\n   //    // Populate values to rules\n   //    var selectedDv = view.datacollection;\n   //    if (selectedDv) {\n   //       // PopupDisplayRule.objectLoad(selectedDv.datasource);\n   //       PopupRecordRule.objectLoad(selectedDv.datasource);\n   //       PopupSubmitRule.objectLoad(selectedDv.datasource);\n   //    }\n\n   //    // PopupDisplayRule.formLoad(view);\n   //    PopupRecordRule.formLoad(view);\n   //    PopupSubmitRule.formLoad(view);\n   // }\n\n   // static populateBadgeNumber(ids, view) {\n   //    if (!view) return;\n\n   //    if (view.settings.submitRules) {\n   //       $$(ids.buttonSubmitRules).define(\n   //          \"badge\",\n   //          view.settings.submitRules.length || null\n   //       );\n   //       $$(ids.buttonSubmitRules).refresh();\n   //    } else {\n   //       $$(ids.buttonSubmitRules).define(\"badge\", null);\n   //       $$(ids.buttonSubmitRules).refresh();\n   //    }\n\n   //    if (view.settings.displayRules) {\n   //       $$(ids.buttonDisplayRules).define(\n   //          \"badge\",\n   //          view.settings.displayRules.length || null\n   //       );\n   //       $$(ids.buttonDisplayRules).refresh();\n   //    } else {\n   //       $$(ids.buttonDisplayRules).define(\"badge\", null);\n   //       $$(ids.buttonDisplayRules).refresh();\n   //    }\n\n   //    if (view.settings.recordRules) {\n   //       $$(ids.buttonRecordRules).define(\n   //          \"badge\",\n   //          view.settings.recordRules.length || null\n   //       );\n   //       $$(ids.buttonRecordRules).refresh();\n   //    } else {\n   //       $$(ids.buttonRecordRules).define(\"badge\", null);\n   //       $$(ids.buttonRecordRules).refresh();\n   //    }\n   // }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App) {\n      this.App = App;\n      var idBase = \"ABViewForm_\" + this.id;\n      this.uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         return App.unique(`${idBase}_${key}_${this.uniqueInstanceID}`);\n      };\n      var ids = {\n         component: myUnique(\"_component\"),\n         layout: myUnique(\"_form_layout\"),\n         filterComplex: myUnique(\"_filter_complex\"),\n      };\n\n      var component = super.component(App);\n\n      // Pull fields that have validation rules\n      var fieldValidations = [];\n      var validationUI = [];\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      var object = this.datacollection?.datasource ?? this._currentObject;\n      if (object) {\n         var existsFields = this.fieldComponents();\n\n         object.fields().forEach((f) => {\n            var view = existsFields.filter((com) => {\n               return f.id == com.settings.fieldId;\n            })[0];\n\n            // check to see if field has validation rules\n            if (view && f.settings.validationRules) {\n               // parse the rules because they were stored as a string\n               // check if rules are still a string...if so lets parse them\n               if (typeof f.settings.validationRules === \"string\") {\n                  f.settings.validationRules = JSON.parse(\n                     f.settings.validationRules\n                  );\n               }\n               // there could be more than one so lets loop through and build the UI\n               f.settings.validationRules.forEach((rule) => {\n                  var Filter = this.AB.filterComplexNew(\n                     `${f.columnName}_${webix.uid()}`\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: f.columnName,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n            }\n         });\n      }\n\n      var fieldValidationsHolder = [\n         {\n            hidden: true,\n            rows: validationUI,\n         },\n         // {},\n      ];\n\n      // an ABViewForm_ is a collection of rows:\n      var _ui = {\n         // view: \"scrollview\",\n         // height: this.settings.height || ABViewFormPropertyComponentDefaults.height,\n         // body: {\n         id: ids.component,\n         view: \"form\",\n         abid: this.id,\n         rows: component.ui.rows.concat(fieldValidationsHolder),\n         // elementsConfig: {\n         //    on: {\n         //       onChange: function(newv, oldv) {\n         //          this.validate();\n         //       }\n         //    }\n         // }\n         // }\n      };\n\n      // make sure each of our child views get .init() called\n      var _init = (options, accessLevel) => {\n         // register our callbacks:\n         if (options) {\n            for (var c in _logic.callbacks) {\n               _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n            }\n         }\n\n         component.init(options, accessLevel);\n\n         var Form = $$(ids.component);\n         if (Form) {\n            webix.extend(Form, webix.ProgressBar);\n         }\n\n         if (accessLevel < 2) {\n            Form.disable();\n         }\n\n         // bind a data collection to form component\n         let dc = this.datacollection;\n         if (dc) {\n            // listen DC events\n            this.eventAdd({\n               emitter: dc,\n               eventName: \"changeCursor\",\n               listener: (...p) => _logic.displayData(...p),\n            });\n\n            this.eventAdd({\n               emitter: dc,\n               eventName: \"initializingData\",\n               listener: () => {\n                  let Form = $$(ids.component);\n                  if (Form) {\n                     Form.disable();\n                     if (Form.showProgress) Form.showProgress({ type: \"icon\" });\n                  }\n               },\n            });\n\n            this.eventAdd({\n               emitter: dc,\n               eventName: \"initializedData\",\n               listener: () => {\n                  let Form = $$(ids.component);\n                  if (Form) {\n                     Form.enable();\n                     if (Form.hideProgress) Form.hideProgress();\n                  }\n               },\n            });\n\n            this.eventAdd({\n               emitter: dc,\n               eventName: \"ab.datacollection.update\",\n               listener: (msg, data) => {\n                  if (!data || !data.objectId) return;\n\n                  let object = dc.datasource;\n                  if (!object) return;\n\n                  if (\n                     object.id == data.objectId ||\n                     object.fields(\n                        (f) => f.settings.linkObject == data.objectId\n                     ).length > 0\n                  ) {\n                     let currData = dc.getCursor();\n                     if (currData) _logic.displayData(currData);\n                  }\n               },\n            });\n\n            // bind the cursor event of the parent DC\n            var linkDv = dc.datacollectionLink;\n            if (linkDv) {\n               // update the value of link field when data of the parent dc is changed\n               this.eventAdd({\n                  emitter: linkDv,\n                  eventName: \"changeCursor\",\n                  listener: (...p) => _logic.displayParentData(...p),\n               });\n            }\n\n            if (fieldValidations.length) {\n               // we need to store the rules for use later so lets build a container array\n               var complexValidations = [];\n               fieldValidations.forEach((f) => {\n                  // init each ui to have the properties (app and fields) of the object we are editing\n                  // f.filter.applicationLoad(dc.datasource.application);\n                  f.filter.fieldsLoad(dc.datasource.fields());\n                  // now we can set the value because the fields are properly initialized\n                  f.filter.setValue(f.validationRules);\n                  // if there are validation rules present we need to store them in a lookup hash\n                  // so multiple rules can be stored on a single field\n                  if (!Array.isArray(complexValidations[f.columnName]))\n                     complexValidations[f.columnName] = [];\n\n                  // now we can push the rules into the hash\n                  complexValidations[f.columnName].push({\n                     filters: $$(f.view).getFilterHelper(),\n                     // values: $$(ids.component).getValues(),\n                     invalidMessage: f.invalidMessage,\n                  });\n               });\n               // use the lookup to build the validation rules\n               Object.keys(complexValidations).forEach(function (key) {\n                  // get our field that has validation rules\n                  var formField = $$(ids.component).queryView({\n                     name: key,\n                  });\n                  // store the rules in a data param to be used later\n                  formField.$view.complexValidations = complexValidations[key];\n                  // define validation rules\n                  formField.define(\"validate\", function (nval, oval, field) {\n                     // get field now that we are validating\n                     var fieldValidating = $$(ids.component).queryView({\n                        name: field,\n                     });\n                     // default valid is true\n                     var isValid = true;\n                     // check each rule that was stored previously on the element\n                     fieldValidating.$view.complexValidations.forEach(\n                        (filter) => {\n                           let object = dc.datasource;\n                           let data = this.getValues();\n                           // convert rowData from { colName : data } to { id : data }\n                           var newData = {};\n                           (object.fields() || []).forEach((field) => {\n                              newData[field.id] = data[field.columnName];\n                           });\n                           // for the case of \"this_object\" conditions:\n                           if (data.uuid) {\n                              newData[\"this_object\"] = data.uuid;\n                           }\n\n                           // use helper funtion to check if valid\n                           var ruleValid = filter.filters(newData);\n                           // if invalid we need to tell the field\n                           if (ruleValid == false) {\n                              isValid = false;\n                              // we also need to define an error message\n                              fieldValidating.define(\n                                 \"invalidMessage\",\n                                 filter.invalidMessage\n                              );\n                           }\n                        }\n                     );\n                     return isValid;\n                  });\n                  formField.refresh();\n               });\n            }\n         }\n\n         // init DC in record rules\n         if (\n            this.settings &&\n            this.settings.recordRules &&\n            this.settings.recordRules.length\n         ) {\n            this.settings.recordRules.forEach((rule) => {\n               if (\n                  !rule ||\n                  !rule.actionSettings ||\n                  !rule.actionSettings.valueRules ||\n                  !rule.actionSettings.valueRules.fieldOperations ||\n                  !rule.actionSettings.valueRules.fieldOperations.length\n               )\n                  return;\n               rule.actionSettings.valueRules.fieldOperations.forEach((op) => {\n                  if (op.valueType != \"exist\") return;\n\n                  let pullDataDC = this.AB.datacollectionByID(op.value);\n\n                  if (\n                     pullDataDC &&\n                     pullDataDC.dataStatus ==\n                        pullDataDC.dataStatusFlag.notInitial\n                  ) {\n                     pullDataDC.loadData();\n                  }\n               });\n            });\n         }\n\n         // _onShow();\n      };\n\n      this.timerId = undefined;\n\n      var _logic = (this._logic = {\n         callbacks: {\n            onBeforeSaveData: function () {\n               return true;\n            },\n            onSaveData: function (saveData) {},\n            clearOnLoad: function () {\n               return false;\n            },\n         },\n\n         displayData: (rowData) => {\n            var customFields = this.fieldComponents((comp) => {\n               return (\n                  comp instanceof ABViewFormCustom ||\n                  comp instanceof ABViewFormConnect ||\n                  // rich text\n                  (comp instanceof ABViewFormTextbox &&\n                     comp.settings.type == \"rich\")\n               );\n            });\n            // If setTimeout is already scheduled, no need to do anything\n            if (this.timerId) {\n               return;\n            }\n\n            this.timerId = setTimeout(() => {\n               var customFields = this.fieldComponents((comp) => {\n                  return (\n                     comp instanceof ABViewFormCustom ||\n                     comp instanceof ABViewFormConnect ||\n                     // rich text\n                     (comp instanceof ABViewFormTextbox &&\n                        comp.settings.type == \"rich\")\n                  );\n               });\n\n               // Set default values\n               if (rowData == null) {\n                  customFields.forEach((f) => {\n                     var field = f.field();\n                     if (!field) return;\n\n                     var comp = this.viewComponents[f.id];\n                     if (comp == null) return;\n\n                     // var colName = field.columnName;\n                     if (this._showed && comp.onShow) comp.onShow();\n\n                     // set value to each components\n                     var defaultRowData = {};\n                     field.defaultValue(defaultRowData);\n                     field.setValue(\n                        $$(comp.ui.inputId ? comp.ui.inputId : comp.ui.id),\n                        defaultRowData\n                     );\n\n                     comp.logic?.refresh?.(defaultRowData);\n                  });\n                  var normalFields = this.fieldComponents(\n                     (comp) =>\n                        comp instanceof ABViewFormComponent &&\n                        !(comp instanceof ABViewFormCustom)\n                  );\n                  normalFields.forEach((f) => {\n                     var field = f.field();\n                     if (!field) return;\n\n                     var comp = this.viewComponents[f.id];\n                     if (comp == null) return;\n\n                     if (f.key != \"button\") {\n                        var colName = field.columnName;\n\n                        // set value to each components\n                        var values = {};\n                        field.defaultValue(values);\n\n                        if ($$(comp.ui.id))\n                           $$(comp.ui.id).setValue?.(\n                              values[colName] == null ? \"\" : values[colName]\n                           );\n                     }\n                  });\n               }\n\n               // Populate value to custom fields\n               else {\n                  customFields.forEach((f) => {\n                     var comp = this.viewComponents[f.id];\n                     if (comp == null) return;\n\n                     if (this._showed) comp.onShow?.();\n\n                     // set value to each components\n                     if (f.field()) {\n                        if (comp.ui.inputId) {\n                           f.field().setValue($$(comp.ui.inputId), rowData);\n                        } else {\n                           f.field().setValue($$(comp.ui.id), rowData);\n                        }\n                     }\n\n                     comp.logic?.refresh?.(rowData);\n                  });\n               }\n               this.timerId = undefined;\n            }, 80);\n         },\n\n         displayParentData: (rowData) => {\n            let dv = this.datacollection;\n            var currCursor = dv.getCursor();\n\n            // If the cursor is selected, then it will not update value of the parent field\n            if (currCursor != null) return;\n\n            var Form = $$(ids.component),\n               relationField = dv.fieldLink;\n\n            if (relationField == null) return;\n\n            // Pull a component of relation field\n            var relationFieldCom = this.fieldComponents((comp) => {\n               if (!(comp instanceof ABViewFormComponent)) return false;\n\n               return comp.field() && comp.field().id == relationField.id;\n            })[0];\n\n            if (relationFieldCom == null) return;\n\n            var relationFieldView =\n               this.viewComponents[relationFieldCom.id].ui.inputId;\n            // if (\n            //    this.viewComponents[relationFieldCom.id].ui.rows &&\n            //    this.viewComponents[relationFieldCom.id].ui.rows[0] &&\n            //    this.viewComponents[relationFieldCom.id].ui.rows[0].id\n            // ) {\n            //    relationFieldView = this.viewComponents[relationFieldCom.id].ui\n            //       .rows[0].id;\n            // }\n            if (relationFieldView == null) return;\n\n            var relationElem = $$(relationFieldView),\n               relationName = relationField.relationName();\n\n            // pull data of parent's dc\n            var formData = {};\n            formData[relationName] = rowData;\n\n            // set data of parent to default value\n            relationField.setValue(relationElem, formData);\n         },\n      });\n\n      var _onShow = (data) => {\n         this._showed = true;\n\n         // call .onShow in the base component\n         component.onShow();\n\n         var Form = $$(ids.component);\n\n         // var customFields = this.fieldComponents((comp) => {\n         // \treturn (comp instanceof ABViewFormCustom) ||\n         // \t\t// rich text\n         // \t\t((comp instanceof ABViewFormTextbox) && comp.settings.type == 'rich')\n         // });\n         // customFields.forEach((f) => {\n\n         // \tvar field = f.field();\n         // \tif (!field) return;\n\n         // \tvar component = this.viewComponents[f.id];\n         // \tif (!component) return;\n\n         // \t// set value to each components\n         // \tvar rowData = {};\n         // \tfield.defaultValue(rowData);\n         // \tfield.setValue($$(component.ui.id), rowData);\n\n         // });\n\n         var dc = this.datacollection;\n         if (dc) {\n            if (Form) dc.bind(Form);\n\n            // clear current cursor on load\n            // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n            if (this.settings.clearOnLoad) {\n               dc.setCursor(null);\n               _logic.displayData(null);\n            }\n            // if the cursor is cleared before or after we need to make\n            // sure the reload view button does not appear\n            if (this.settings.clearOnLoad || this.settings.clearOnSave) {\n               if ($$(ids.component + \"_reloadView\"))\n                  $$(ids.component + \"_reloadView\")\n                     .getParentView()\n                     .removeView(ids.component + \"_reloadView\");\n            }\n\n            // pull data of current cursor\n            data = dc.getCursor();\n\n            // do this for the initial form display so we can see defaults\n            _logic.displayData(data);\n\n            // select parent data to default value\n            var linkDv = dc.datacollectionLink;\n            if (data == null && linkDv) {\n               var parentData = linkDv.getCursor();\n               _logic.displayParentData(parentData);\n            }\n         } else {\n            // show blank data in the form\n            _logic.displayData(data);\n         }\n\n         //Focus on first focusable component\n         this.focusOnFirst();\n\n         if (Form) Form.adjust();\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n\n         onShow: _onShow,\n      };\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormSelectMultiple\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id == f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               formVals[f.columnName] = f.format(cursorFormVals, true);\n            }\n         }\n      );\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: \"System could not save your data\",\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormButtonComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = super.component();\n\n      component._ui = component.ui();\n      component._ui.id = `ABViewFormCheckbox_${this.id}_f_`;\n\n      component.ui = () => {\n         component._ui.view = \"checkbox\";\n\n         return component._ui;\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n         component._ui = newComponent._ui;\n      }\n\n      return component;\n   }\n\n   componentOld(App) {\n      var component = super.component(App);\n\n      var idBase = this.parentFormUniqueID(`ABViewFormCheckbox_${this.id}_f_`);\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      component.ui.id = ids.component;\n      component.ui.view = \"checkbox\";\n\n      // make sure each of our child views get .init() called\n      component.init = (options) => {};\n\n      return component;\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nfunction _onShow(compId, instance) {\n   const elem = $$(compId);\n   if (!elem) return;\n\n   const field = instance.field();\n   if (!field) return;\n\n   const node = elem.$view;\n   if (!node) return;\n\n   const $node = $$(node);\n   if (!$node) return;\n\n   let filterConditions = instance.settings.objectWorkspace\n      .filterConditions ?? { glue: \"and\", rules: [] };\n\n   if (\n      !filterConditions?.rules?.length &&\n      instance.settings?.filterConditions?.rules?.length\n   )\n      filterConditions = instance.settings.filterConditions;\n\n   const getFilterByConnectValues = (conditions, depth = 0) => {\n      return [\n         ...conditions.rules\n            .filter((e) => e.rule === \"filterByConnectValue\")\n            .map((e) => {\n               const filterByConnectValue = Object.assign({}, e);\n\n               filterByConnectValue.depth = depth;\n\n               return filterByConnectValue;\n            }),\n      ].concat(\n         ...conditions.rules\n            .filter((e) => e.glue)\n            .map((e) => getFilterByConnectValues(e, depth + 1))\n      );\n   };\n\n   const filterByConnectValues = getFilterByConnectValues(filterConditions).map(\n      (e) => {\n         for (const key in instance.parent.viewComponents) {\n            const $ui = $$(instance.parent.viewComponents[key].ui().inputId);\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const field = instance.AB.objectByID(\n            instance.settings.objectId\n         ).fieldByID(instance.settings.fieldId);\n         const linkedObject = instance.AB.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField.settings.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = instance.AB.objectByID(\n               linkedField.settings.linkObject\n            ).fields(\n               (filter) =>\n                  filter.id === linkedField.settings.indexField ||\n                  linkedField.settings.indexField2\n            )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      }\n   );\n\n   instance.options = {\n      formView: instance.settings.formView,\n      filters: filterConditions,\n      sort: instance.settings.objectWorkspace.sortFields,\n      editable: instance.settings.disable === 1 ? false : true,\n      editPage:\n         !instance.settings.editForm || instance.settings.editForm === \"none\"\n            ? false\n            : true,\n      filterByConnectValues,\n   };\n\n   // if this field's options are filtered off another field's value we need\n   // to make sure the UX helps the user know what to do.\n   // fetch the options and set placeholder text for this view\n   if (instance.options.editable) {\n      const parentFields = [];\n\n      for (let i = 0; i < filterByConnectValues?.length; i++) {\n         if (\n            filterByConnectValues[i].filterValue &&\n            filterByConnectValues[i].key\n         ) {\n            const $filterValueConfig = $$(\n               filterByConnectValues[i].filterValue.config.id\n            );\n\n            let parentField = null;\n\n            if (!$filterValueConfig) {\n               // this happens in the Interface Builder when only the single form UI is displayed\n               parentField = {\n                  id: \"perentElement\",\n                  label: L(\"PARENT ELEMENT\"),\n               };\n            } else {\n               const value = field.getValue($filterValueConfig);\n\n               if (!value) {\n                  // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                  parentField = {\n                     id: filterByConnectValues[i].filterValue.config.id,\n                     label: $filterValueConfig.config.label,\n                  };\n               }\n\n               $filterValueConfig.attachEvent(\n                  \"onChange\",\n                  (e) => {\n                     const parentVal = $filterValueConfig.getValue();\n\n                     if (parentVal) {\n                        $node.define(\"disabled\", false);\n                        $node.define(\"placeholder\", L(\"Select items\"));\n                        field.getAndPopulateOptions(\n                           $node,\n                           instance.options,\n                           field,\n                           instance.parentFormComponent()\n                        );\n                     } else {\n                        $node.define(\"disabled\", true);\n                        $node.define(\n                           \"placeholder\",\n                           L(\"Must select item from '{0}' first.\", [\n                              $filterValueConfig.config.label,\n                           ])\n                        );\n                     }\n\n                     $node.setValue(\"\");\n                     $node.refresh();\n                  },\n                  false\n               );\n            }\n\n            if (\n               parentField &&\n               parentFields.findIndex((e) => e.id === parentField.id) < 0\n            )\n               parentFields.push(parentField);\n         }\n      }\n\n      if (parentFields.length && !$node.getValue()) {\n         $node.define(\"disabled\", true);\n         $node.define(\n            \"placeholder\",\n            L(\n               `Must select item from ${parentFields\n                  .map((e, i) => `'{${i}}'`)\n                  .join(\", \")} first.`,\n               parentFields.map((e) => e.label)\n            )\n         );\n      } else {\n         $node.define(\"disabled\", false);\n         $node.define(\"placeholder\", L(\"Select items\"));\n      }\n   } else {\n      $node.define(\"placeholder\", \"\");\n      $node.define(\"disabled\", true);\n   }\n\n   $node.refresh();\n\n   field.getAndPopulateOptions(\n      $node,\n      instance.options,\n      field,\n      instance.parentFormComponent()\n   );\n}\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nclass ABViewFormConnectComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      const base = idBase ?? `ABViewFormConnect_${baseView.id}`;\n      super(baseView, base, {\n         popup: \"\",\n         editpopup: \"\",\n      });\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const form = this.view.parentFormComponent();\n\n      if (field == null) {\n         console.error(`This field could not found : ${this.settings.fieldId}`);\n         return {\n            view: \"label\",\n            label: \"\",\n         };\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n\n      let settings = {};\n      if (form) settings = form.settings;\n\n      let _ui = {\n         id: this.ids.component,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               let selectedValues;\n               if (Array.isArray(data)) {\n                  selectedValues = [];\n                  data.forEach((record) => {\n                     let recordObj = record;\n                     if (typeof record != \"object\") {\n                        // we need to convert either index or uuid to full data object\n                        recordObj = field.getItemFromVal(record);\n                     }\n                     if (recordObj?.id) selectedValues.push(recordObj.id);\n                  });\n               } else {\n                  selectedValues = data;\n                  if (typeof data != \"object\") {\n                     // we need to convert either index or uuid to full data object\n                     selectedValues = field.getItemFromVal(data);\n                  }\n                  // selectedValues = field.pullRecordRelationValues(selectedValues);\n                  if (selectedValues?.id) {\n                     selectedValues = selectedValues.id;\n                  } else {\n                     selectedValues = data;\n                  }\n               }\n               // We can now set the new value but we need to block event listening\n               // so it doesn't trigger onChange again\n               const $$component = $$(this.ids.component);\n               if ($$component) {\n                  $$component.blockEvent();\n                  const prepedVals = selectedValues.join\n                     ? selectedValues.join()\n                     : selectedValues;\n                  $$component.setValue(prepedVals);\n                  $$component.unblockEvent();\n               }\n            },\n         },\n      };\n\n      if (settings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = settings.labelWidth;\n         _ui.labelPosition = settings.labelPosition;\n      }\n\n      let editForm = \"\";\n      if (settings.editForm && settings.editForm != \"\") {\n         editForm =\n            '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>';\n      }\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: editForm + \"#value#\",\n         },\n         on: {\n            onShow: async () => {\n               await field.getAndPopulateOptions(\n                  $$(this.ids.component),\n                  this.view.options,\n                  field,\n                  form\n               );\n            },\n         },\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (this.settings.disable == 1) return;\n\n            const rowData = {};\n\n            if ($$(this.ids.component)) {\n               const node = $$(this.ids.component).$view;\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = null; // this.addPageComponent.ui();\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               let dc = form.datacollection;\n               this.addPageComponent.onClick(dc);\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: _ui.id,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: settings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n      } else {\n         _ui = {\n            inputId: _ui.id,\n            rows: [_ui],\n         };\n      }\n\n      return _ui;\n   }\n\n   init(AB, options) {\n      this.AB = AB;\n\n      this._options = options ?? {};\n\n      console.error(\"TODO: ABViewFormConnect.addPageComponent()\");\n      // this.addPageComponent = this.view.addPageTool.component(/*App, idBase */);\n      // this.addPageComponent.applicationLoad(this.view.application);\n      // this.addPageComponent.init({\n      //    onSaveData: component.logic.callbackSaveData,\n      //    onCancelClick: component.logic.callbackCancel,\n      //    clearOnLoad: component.logic.callbackClearOnLoad,\n      // });\n\n      console.error(\"TODO: ABViewFormConnect.editPageComponent()\");\n      // this.editPageComponent = this.view.editPageTool.component(/*App, idBase*/);\n      // this.editPageComponent.applicationLoad(this.view.application);\n      // this.editPageComponent.init({\n      //    onSaveData: component.logic.callbackSaveData,\n      //    onCancelClick: component.logic.callbackCancel,\n      //    clearOnLoad: component.logic.callbackClearOnLoad,\n      // });\n   }\n\n   callbackSaveData(saveData) {\n      const ids = this.ids;\n\n      // find the select component\n      const elem = $$(ids.component);\n      if (!elem) return;\n\n      const field = this.field;\n      field.once(\"option.data\", (data) => {\n         data.forEach((item) => {\n            item.value = item.text;\n         });\n         $$(ids.component).getList().clearAll();\n         $$(ids.component).getList().define(\"data\", data);\n         if (field.settings.linkType == \"many\") {\n            const currentVals = $$(ids.component).getValue();\n            if (currentVals.indexOf(saveData.id) == -1) {\n               $$(ids.component).setValue(\n                  currentVals ? `${currentVals},${saveData.id}` : saveData.id\n               );\n            }\n         } else {\n            $$(ids.component).setValue(saveData.id);\n         }\n         // close the popup when we are finished\n         $$(ids.popup)?.close();\n         $$(ids.editpopup)?.close();\n      });\n\n      field\n         .getOptions(this.settings.filterConditions, \"\")\n         .then(function (data) {\n            // we need new option that will be returned from server (above)\n            // so we will not set this and then just reset it.\n         });\n   }\n\n   callbackCancel() {\n      $$(this.ids.popup).close();\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      const elem = $$(this.ids.component);\n\n      return this.field.getValue(elem, rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      if (!this.settings.editForm) return;\n\n      let editForm = this.view.application.urlResolve(this.settings.editForm);\n      if (!editForm) return;\n\n      let $form;\n      let $elem = $$(this.ids.component);\n      if ($elem) {\n         $form = $elem.getFormView();\n      }\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         let dc = editForm.datacollection;\n         if (dc) {\n            dc.setCursor(rowId);\n\n            if (!this.__editFormDcEvent) {\n               this.__editFormDcEvent = dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n            }\n         }\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      _onShow(ids.component, this.view);\n      let elem = $$(ids.component);\n      if (!elem) return;\n\n      let node = elem.$view;\n\n      let field = this.field;\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${this.view.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n   }\n}\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      if (\n         !this.settings.objectWorkspace ||\n         !this.settings.objectWorkspace.filterConditions\n      ) {\n         this.AB.error(\"Error: filter conditions do not exist\", {\n            error: \"filterConditions do not exist\",\n            viewLocation: {\n               application: this.application.name,\n               id: this.id,\n               name: this.label,\n            },\n            view: this,\n         });\n         // manually place an empty filter\n         this.settings[\"objectWorkspace\"] = {};\n         this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      }\n\n      this.__filterComponent.setValue(\n         this.settings.objectWorkspace.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      let idBase = \"ABViewFormConnectEditorComponent\";\n      let ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      let baseComp = this.component(App);\n      let templateElem = baseComp.ui();\n      templateElem.id = ids.component;\n\n      const _ui = {\n         rows: [templateElem, {}],\n      };\n\n      return {\n         ui: _ui,\n         init: baseComp.init,\n         logic: baseComp.logic,\n         onShow: () => {\n            _onShow(ids.component, this.view);\n         },\n      };\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      let idBase = \"ABViewFormConnectPropertyEditor\";\n      this.App = App;\n      this.idBase = idBase;\n\n      _logic.showFilterPopup = ($view) => {\n         this.filter_popup.show($view, null, { pos: \"top\" });\n      };\n\n      _logic.showSortPopup = ($button) => {\n         SortComponent.show($button, null, {\n            pos: \"top\",\n         });\n      };\n\n      _logic.onFilterChange = () => {\n         let view = _logic.currentEditObject();\n         let filterValues = FilterComponent.getValue() || {};\n\n         let allComplete = true;\n         (filterValues.rules || []).forEach((f) => {\n            // if all 3 fields are present, we are good.\n            if (f.key && f.rule && f.value) {\n               allComplete = allComplete && true;\n            } else {\n               // else, we found an entry that wasn't complete:\n               allComplete = false;\n            }\n         });\n\n         // only perform the update if a complete row is specified:\n         if (allComplete) {\n            // we want to call .save() but give webix a chance to properly update it's\n            // select boxes before this call causes them to be removed:\n            setTimeout(() => {\n               this.propertyEditorSave(ids, view);\n            }, 10);\n         }\n      };\n\n      _logic.onSortChange = () => {\n         let view = _logic.currentEditObject();\n         this.propertyEditorSave(ids, view);\n      };\n\n      // create filter & sort popups\n      this.initPopupEditors(App, ids, _logic);\n\n      let onSave = () => {\n         let currView = _logic.currentEditObject();\n         if (currView) {\n            // refresh settings\n            this.propertyEditorValues(ids, currView);\n\n            // trigger a save()\n            this.propertyEditorSave(ids, currView);\n         }\n      };\n\n      this.addPageProperty.init({\n         onSave: () => {\n            onSave();\n         },\n      });\n\n      this.editPageProperty.init({\n         onSave: () => {\n            onSave();\n         },\n      });\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         this.addPageProperty.ui,\n         this.editPageProperty.ui,\n         {\n            view: \"fieldset\",\n            name: \"addNewSettings\",\n            label: L(\"Add New Popup Settings:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               type: \"clean\",\n               padding: 10,\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"popupWidth\",\n                     placeholder: L(\"Set popup width\"),\n                     label: L(\"Width:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     validate: webix.rules.isNumber,\n                  },\n                  {\n                     view: \"text\",\n                     name: \"popupHeight\",\n                     placeholder: L(\"Set popup height\"),\n                     label: L(\"Height:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     validate: webix.rules.isNumber,\n                  },\n               ],\n            },\n         },\n         {\n            view: \"fieldset\",\n            name: \"advancedOption\",\n            label: L(\"Advanced Options:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               type: \"clean\",\n               padding: 10,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Filter Options:\"),\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           view: \"button\",\n                           name: \"buttonFilter\",\n                           css: \"webix_primary\",\n                           label: L(\"Settings\"),\n                           icon: \"fa fa-gear\",\n                           type: \"icon\",\n                           badge: 0,\n                           click: function () {\n                              _logic.showFilterPopup(this.$view);\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     rows: [\n                        {\n                           view: \"label\",\n                           label: L(\"Filter by Connected Field Value:\"),\n                        },\n                        {\n                           view: \"combo\",\n                           name: \"filterConnectedValue\",\n                           options: [], // we will add these in propertyEditorPopulate\n                        },\n                     ],\n                  },\n                  {\n                     height: 30,\n                  },\n                  {\n                     rows: [\n                        {\n                           cols: [\n                              {\n                                 view: \"label\",\n                                 label: L(\"Sort Options:\"),\n                                 width: App.config.labelWidthLarge,\n                              },\n                              {\n                                 view: \"button\",\n                                 name: \"buttonSort\",\n                                 css: \"webix_primary\",\n                                 label: L(\"Settings\"),\n                                 icon: \"fa fa-gear\",\n                                 type: \"icon\",\n                                 badge: 0,\n                                 click: function () {\n                                    _logic.showSortPopup(this.$view);\n                                 },\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      // Default set of options for filter connected combo\n      let filterConnectedOptions = [{ id: \"\", value: \"\" }];\n\n      // get the definitions for the connected field\n      let fieldDefs = view.AB.definitionForID(view.settings.fieldId);\n\n      // get the definition for the object that the field is related to\n      let objectDefs = view.AB.definitionForID(fieldDefs.settings.linkObject);\n\n      // we need these definitions later as we check to find out which field\n      // we are filtering by so push them into an array for later\n      let fieldsDefs = [];\n      objectDefs.fieldIDs.forEach((fld) => {\n         fieldsDefs.push(view.AB.definitionForID(fld));\n      });\n\n      // find out what connected objects this field has\n      let connectedObjs = view.application.connectedObjects(\n         fieldDefs.settings.linkObject\n      );\n\n      // loop through the form's elements (need to ensure that just looking at parent is okay in all cases)\n      view.parent.views().forEach((element) => {\n         // identify if element is a connected field\n         if (element.key == \"connect\") {\n            // we need to get the fields defs to find out what it is connected to\n            let formElementsDefs = view.AB.definitionForID(\n               element.settings.fieldId\n            );\n\n            // loop through the connected objects discovered above\n            connectedObjs.forEach((connObj) => {\n               // see if the connected object matches the connected object of the form element\n               if (connObj.id == formElementsDefs.settings.linkObject) {\n                  // get the ui id of this component that matches the link Object\n                  let fieldToCheck;\n                  fieldsDefs.forEach((fdefs) => {\n                     // if the field has a custom foreign key we need to store it\n                     // so selectivity later can know what value to get, otherwise\n                     // we just get the uuid of the record\n                     if (\n                        fdefs.settings.isCustomFK &&\n                        fdefs.settings.indexField != \"\" &&\n                        fdefs.settings.linkObject &&\n                        fdefs.settings.linkType == \"one\" &&\n                        fdefs.settings.linkObject ==\n                           formElementsDefs.settings.linkObject\n                     ) {\n                        fieldToCheck = fdefs.id;\n                        let customFK = view.application.definitionForID(\n                           fdefs.settings.indexField\n                        );\n\n                        // if the index definitions were found\n                        if (customFK) {\n                           fieldToCheck = `${fdefs.id}:${customFK.columnName}`;\n                        }\n                     } else if (\n                        fdefs.settings.linkObject &&\n                        fdefs.settings.linkType == \"one\" &&\n                        fdefs.settings.linkObject ==\n                           formElementsDefs.settings.linkObject\n                     ) {\n                        fieldToCheck = `${fdefs.id}:uuid`;\n                     }\n                  });\n\n                  // only add optinos that have a fieldToCheck\n                  if (fieldToCheck) {\n                     // get the component we are referencing so we can display its label\n                     let formComponent = view.parent.viewComponents[element.id]; // need to ensure that just looking at parent is okay in all cases\n                     filterConnectedOptions.push({\n                        id: `${formComponent.ui.name}:${fieldToCheck}`, // store the columnName name because the ui id changes on each load\n                        value: formComponent.ui.label, // should be the translated field label\n                     });\n                  }\n               }\n            });\n         }\n      });\n\n      // Set the options of the possible edit forms\n      this.addPageProperty.setSettings(view, view.settingsAddPage);\n      this.editPageProperty.setSettings(view, view.settingsEditPage);\n      $$(ids.filterConnectedValue).define(\"options\", filterConnectedOptions);\n      $$(ids.filterConnectedValue).setValue(view.settings.filterConnectedValue);\n\n      $$(ids.popupWidth).setValue(\n         view.settings.popupWidth ||\n            ABViewFormConnectPropertyComponentDefaults.popupWidth\n      );\n      $$(ids.popupHeight).setValue(\n         view.settings.popupHeight ||\n            ABViewFormConnectPropertyComponentDefaults.popupHeight\n      );\n\n      // initial populate of popups\n      this.populatePopupEditors(view);\n\n      // inform the user that some advanced settings have been set\n      this.populateBadgeNumber(ids, view);\n\n      // when a change is made in the properties the popups need to reflect the change\n      this.updateEventIds = this.updateEventIds || {}; // { viewId: boolean, ..., viewIdn: boolean }\n      if (!this.updateEventIds[view.id]) {\n         this.updateEventIds[view.id] = true;\n\n         view.addListener(\"properties.updated\", () => {\n            this.populatePopupEditors(view);\n            this.populateBadgeNumber(ids, view);\n         });\n      }\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.popupWidth = $$(ids.popupWidth).getValue();\n      view.settings.popupHeight = $$(ids.popupHeight).getValue();\n      view.settings.filterConnectedValue = $$(\n         ids.filterConnectedValue\n      ).getValue();\n      view.settings.filterConditions = FilterComponent.getValue();\n      view.settings.sortFields = SortComponent.getValue();\n\n      view.settingsAddPage = this.addPageProperty.getSettings(view);\n      view.settingsEditPage = this.editPageProperty.getSettings(view);\n\n      // refresh settings of app page tool\n      view.addPageTool.fromSettings(view.settingsAddPage);\n      view.editPageTool.fromSettings(view.settingsEditPage);\n   }\n\n   static populateBadgeNumber(ids, view) {\n      if (\n         view.settings.filterConditions &&\n         view.settings.filterConditions.rules\n      ) {\n         $$(ids.buttonFilter).define(\n            \"badge\",\n            view.settings.filterConditions.rules.length || null\n         );\n         $$(ids.buttonFilter).refresh();\n      } else {\n         $$(ids.buttonFilter).define(\"badge\", null);\n         $$(ids.buttonFilter).refresh();\n      }\n\n      if (view.settings.sortFields && view.settings.sortFields.length) {\n         $$(ids.buttonSort).define(\n            \"badge\",\n            view.settings.sortFields.length || null\n         );\n         $$(ids.buttonSort).refresh();\n      } else {\n         $$(ids.buttonSort).define(\"badge\", null);\n         $$(ids.buttonSort).refresh();\n      }\n   }\n\n   static initPopupEditors(App, ids, _logic) {\n      var idBase = \"ABViewFormConnectPropertyEditor\";\n\n      FilterComponent = this.AB.filterComplexNew(`${idBase}_filter`);\n      FilterComponent.init();\n      // when we make a change in the popups we want to make sure we save the new workspace to the properties to do so just fire an onChange event\n      FilterComponent.on(\"change\", (val) => {\n         _logic.onFilterChange(val);\n      });\n\n      SortComponent = new ABPopupSort(this.App, `${idBase}_sort`);\n      SortComponent.init({\n         onChange: _logic.onSortChange,\n      });\n\n      this.filter_popup = webix.ui({\n         view: \"popup\",\n         width: 800,\n         hidden: true,\n         body: FilterComponent.ui,\n      });\n   }\n\n   static populatePopupEditors(view) {\n      let filterConditions =\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n\n      if (view.settings.filterConditions)\n         filterConditions = view.settings.filterConditions;\n\n      // Populate data to popups\n      // FilterComponent.objectLoad(objectCopy);\n      let linkedObj;\n      let field = view.field();\n      if (field) {\n         linkedObj = field.datasourceLink;\n         if (linkedObj)\n            FilterComponent.fieldsLoad(linkedObj.fields(), linkedObj);\n      }\n\n      FilterComponent.setValue(filterConditions);\n\n      if (linkedObj) SortComponent.objectLoad(linkedObj);\n      SortComponent.setValue(view.settings.sortFields);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewFormConnectComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld(App, idPrefix) {\n      var field = this.field();\n      // this field may be deleted\n      if (!field) return super.component(App);\n\n      idPrefix = idPrefix ? idPrefix + \"_\" : \"\";\n\n      var component = super.component(App);\n      var form = this.parentFormComponent();\n      var idBase = this.parentFormUniqueID(\n         \"ABViewFormConnect_\" + this.id + \"_f_\"\n      );\n      var ids = {\n         component: App.unique(`${idPrefix}${idBase}_component`),\n         popup: App.unique(`${idPrefix}${idBase}_popup_add_new`),\n         editpopup: App.unique(\n            `${idPrefix}${idBase}_popup_edit_form_popup_add_new`\n         ),\n      };\n\n      var settings = {};\n      if (form) settings = form.settings;\n\n      let addPageComponent = this.addPageTool.component(App, idBase);\n      let editPageComponent;\n\n      component.init = (optionsParam) => {\n         var settings = {};\n         var options = optionsParam || {};\n         if (form) settings = form.settings;\n\n         addPageComponent.applicationLoad(this.application);\n         addPageComponent.init({\n            onSaveData: component.logic.callbackSaveData,\n            onCancelClick: component.logic.callbackCancel,\n            clearOnLoad: component.logic.callbackClearOnLoad,\n         });\n\n         editPageComponent = this.editPageTool.component(App, idBase);\n         editPageComponent.applicationLoad(this.application);\n         editPageComponent.init({\n            onSaveData: component.logic.callbackSaveData,\n            onCancelClick: component.logic.callbackCancel,\n            clearOnLoad: component.logic.callbackClearOnLoad,\n         });\n      };\n\n      component.logic = {\n         /**\n          * @function callbackSaveData\n          *\n          */\n         callbackSaveData: (saveData) => {\n            // find the selectivity component\n            var elem = $$(ids.component);\n            if (!elem) return;\n\n            field.once(\"option.data\", (data) => {\n               data.forEach((item) => {\n                  item.value = item.text;\n               });\n               $$(ids.component).getList().clearAll();\n               $$(ids.component).getList().define(\"data\", data);\n               if (field.settings.linkType == \"many\") {\n                  let currentVals = $$(ids.component).getValue();\n                  if (currentVals.indexOf(saveData.id) == -1) {\n                     $$(ids.component).setValue(\n                        currentVals\n                           ? currentVals + \",\" + saveData.id\n                           : saveData.id\n                     );\n                  }\n               } else {\n                  $$(ids.component).setValue(saveData.id);\n               }\n               // close the popup when we are finished\n               $$(ids.popup)?.close();\n               $$(ids.editpopup)?.close();\n            });\n\n            field\n               .getOptions(this.settings.filterConditions, \"\")\n               .then(function (data) {\n                  // we need new option that will be returned from server (above)\n                  // so we will not set this and then just reset it.\n               });\n         },\n\n         callbackCancel: () => {\n            $$(ids.popup).close();\n            return false;\n         },\n\n         callbackClearOnLoad: () => {\n            return true;\n         },\n\n         getValue: (rowData) => {\n            var elem = $$(ids.component);\n\n            return field.getValue(elem, rowData);\n         },\n\n         formBusy: ($form) => {\n            if (!$form) return;\n\n            if ($form.disable) $form.disable();\n\n            if ($form.showProgress) $form.showProgress({ type: \"icon\" });\n         },\n\n         formReady: ($form) => {\n            if (!$form) return;\n\n            if ($form.enable) $form.enable();\n\n            if ($form.hideProgress) $form.hideProgress();\n         },\n\n         goToEditPage: (rowId) => {\n            if (!this.settings.editForm) return;\n\n            let editForm = this.application.urlResolve(this.settings.editForm);\n            if (!editForm) return;\n\n            let $form;\n            let $elem = $$(ids.component);\n            if ($elem) {\n               $form = $elem.getFormView();\n            }\n\n            // Open the form popup\n            editPageComponent.onClick().then(() => {\n               let dc = editForm.datacollection;\n               if (dc) {\n                  dc.setCursor(rowId);\n\n                  if (!this.__editFormDcEvent) {\n                     this.__editFormDcEvent = dc.on(\"initializedData\", () => {\n                        dc.setCursor(rowId);\n                     });\n                  }\n               }\n            });\n         },\n      };\n\n      var multiselect = field.settings.linkType == \"many\";\n\n      component.ui.label = field.label;\n      component.ui.labelWidth = settings.labelWidth;\n      component.ui.id = ids.component;\n      component.ui.view = multiselect ? \"multicombo\" : \"combo\";\n      component.ui.on = {\n         onItemClick: (id, e) => {\n            if (\n               e.target.classList.contains(\"editConnectedPage\") &&\n               e.target.dataset.itemId\n            ) {\n               let rowId = e.target.dataset.itemId;\n               if (!rowId) return;\n               component.logic.goToEditPage(rowId);\n            }\n         },\n         onChange: (data) => {\n            let selectedValues;\n            if (Array.isArray(data)) {\n               selectedValues = [];\n               data.forEach((record) => {\n                  let recordObj = record;\n                  if (typeof record != \"object\") {\n                     // we need to convert either index or uuid to full data object\n                     recordObj = field.getItemFromVal(record);\n                  }\n                  if (recordObj && recordObj.id)\n                     selectedValues.push(recordObj.id);\n               });\n            } else {\n               selectedValues = data;\n               if (typeof data != \"object\") {\n                  // we need to convert either index or uuid to full data object\n                  selectedValues = field.getItemFromVal(data);\n               }\n               // selectedValues = field.pullRecordRelationValues(selectedValues);\n               if (selectedValues && selectedValues.id) {\n                  selectedValues = selectedValues.id;\n               } else {\n                  selectedValues = data;\n               }\n            }\n            // We can now set the new value but we need to block event listening\n            // so it doesn't trigger onChange again\n            const $$component = $$(ids.component);\n            if ($$component) {\n               $$component.blockEvent();\n               let prepedVals = selectedValues.join\n                  ? selectedValues.join()\n                  : selectedValues;\n               $$component.setValue(prepedVals);\n               $$component.unblockEvent();\n            }\n         },\n      };\n\n      component.ui.dataFieldId = field.id;\n\n      let editForm = \"\";\n      if (settings.editForm && settings.editForm != \"\") {\n         editForm =\n            '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>';\n      }\n      component.ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            template: editForm + \"#value#\",\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.component), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      component.ui.onClick = {\n         customField: (id, e, trg) => {\n            if (this.settings.disable == 1) return;\n\n            var rowData = {};\n\n            if ($$(ids.component)) {\n               var node = $$(ids.component).$view;\n               field.customEdit(rowData, App, node);\n            }\n         },\n      };\n\n      if (addPageComponent.ui) {\n         // reset some component vals to make room for button\n         component.ui.label = \"\";\n         component.ui.labelWidth = 0;\n\n         // add click event to add new button\n         addPageComponent.ui.on = {\n            onItemClick: (id, evt) => {\n               let $form = $$(id).getFormView();\n\n               let dc = form.datacollection;\n\n               addPageComponent.onClick(dc);\n\n               return false;\n            },\n         };\n\n         component.ui = {\n            inputId: component.ui.id,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: settings.labelWidth,\n                        align: \"left\",\n                     },\n                     addPageComponent.ui,\n                     component.ui,\n                  ],\n               },\n            ],\n         };\n      } else {\n         component.ui = {\n            inputId: component.ui.id,\n            rows: [component.ui],\n         };\n      }\n\n      component.onShow = () => {\n         _onShow(ids.component, this.view);\n         let elem = $$(ids.component);\n         if (!elem) return;\n\n         let node = elem.$view;\n\n         // Add data-cy attributes\n         const dataCy = `${field.key} ${field.columnName} ${field.id} ${this.parent.id}`;\n         node.setAttribute(\"data-cy\", dataCy);\n      };\n\n      return component;\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormCustomComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormDatepickerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      return commonUI.concat([\n         {\n            name: \"fieldLabel\",\n            view: \"text\",\n            disabled: true,\n            label: L(\"Field\"),\n         },\n         {\n            name: \"required\",\n            view: \"checkbox\",\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n            labelRight: L(\"Required\"),\n         },\n         {\n            name: \"disable\",\n            view: \"checkbox\",\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n            labelRight: L(\"Disable\"),\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      var field = view.field();\n\n      $$(ids.fieldLabel).setValue(field ? field.label : \"\");\n\n      if (field && field.settings.required == 1) {\n         $$(ids.required).setValue(field.settings.required);\n         $$(ids.required).disable();\n      } else {\n         $$(ids.required).setValue(\n            view.settings.required != null\n               ? view.settings.required\n               : ABViewFormFieldPropertyComponentDefaults.required\n         );\n      }\n\n      if (view && view.settings.disable == 1) {\n         $$(ids.disable).setValue(view.settings.disable);\n      } else {\n         $$(ids.disable).setValue(\n            ABViewFormFieldPropertyComponentDefaults.disable\n         );\n      }\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      // console.log(\"here\");\n      view.settings.required = $$(ids.required).getValue();\n      view.settings.disable = $$(ids.disable).getValue();\n      // console.log(view);\n   }\n\n   /*\n    * @component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormItemComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentV1(App) {\n      // setup 'label' of the element\n      var form = this.parentFormComponent(),\n         field = this.field(),\n         label = \"\";\n\n      var settings = {};\n      if (form) settings = form.settings;\n\n      var _ui = {\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label: label,\n      };\n\n      if (field != null) {\n         _ui.name = field.columnName;\n\n         // default value\n         var data = {};\n         field.defaultValue(data);\n         if (data[field.columnName]) _ui.value = data[field.columnName];\n\n         if (settings.showLabel == true) {\n            _ui.label = field.label;\n         }\n\n         if (\n            field.settings.required == true ||\n            this.settings.required == true\n         ) {\n            _ui.required = 1;\n         }\n\n         if (this.settings.disable == 1) {\n            _ui.disabled = true;\n         }\n\n         // add data-cy to form element for better testing code\n         _ui.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  var popup = this.getPopup();\n                  if (!popup) return;\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n                     var node = popup.$view.querySelector(\n                        \"[webix_l_id='\" + option.id + \"']\"\n                     );\n                     if (!node) return;\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${form.id}`\n                     );\n                  });\n               }\n               this.getInputNode().setAttribute(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${form.id}`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _ui.validate = (val, data, colName) => {\n            let validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      var _init = () => {};\n\n      return {\n         ui: _ui,\n         init: _init,\n      };\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormNumberComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormReadonlyComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormSelectMultipleComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormSelectSingleComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormTextboxComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormTreeComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","// const ABViewComponent = require(\"./ABViewComponent\").default;\nimport ABViewComponent from \"./ABViewComponent\";\n\nlet L = null;\n\nconst DAY_SCALE = { unit: \"day\", format: \"%d\" },\n   WEEK_SCALE = {\n      unit: \"week\",\n      format: (start) => {\n         const parser = webix.Date.dateToStr(\"%d %M\");\n         const wstart = webix.Date.weekStart(start);\n         const wend = webix.Date.add(\n            webix.Date.add(wstart, 1, \"week\", true),\n            -1,\n            \"day\",\n            true\n         );\n         return parser(wstart) + \" - \" + parser(wend);\n      },\n   },\n   MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n   YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase || `ABViewGantt_${baseView.id}`;\n\n      super(baseView, idBase, {\n         menu: \"\",\n         gantt: \"\",\n      });\n\n      this.view = baseView;\n      this.AB = this.view.AB;\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(this.ids.gantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(this.ids.gantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _this = this;\n\n      return {\n         id: ids.component,\n         rows: [\n            {\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"menu\",\n                     id: ids.menu,\n                     layout: \"x\",\n                     width: 300,\n                     data: [\n                        {\n                           id: \"day\",\n                           value: L(\"Day\"),\n                        },\n                        {\n                           id: \"week\",\n                           value: L(\"Week\"),\n                        },\n                        {\n                           id: \"month\",\n                           value: L(\"Month\"),\n                        },\n                        {\n                           id: \"year\",\n                           value: L(\"Year\"),\n                        },\n                     ],\n                     on: {\n                        onItemClick: (id /* , e, node */) => {\n                           this.setScale(id);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.gantt,\n               view: \"gantt\",\n               scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n               override: new Map([\n                  [\n                     gantt.services.Backend,\n                     // global webix gantt object\n                     class MyBackend extends gantt.services.Backend {\n                        async tasks() {\n                           const DC = _this.CurrentDatacollection;\n                           if (!DC) return [];\n\n                           // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                           //    await DC.loadData().catch((err) => {\n                           //       console.error(err);\n                           //    });\n                           // }\n                           return (DC.getData() || []).map((d, indx) =>\n                              _this.convertFormat(d, indx)\n                           );\n                        }\n                        links() {\n                           return Promise.resolve([]);\n                        }\n                        async addTask(obj, index, parent) {\n                           if (!_this.pendingAdds[obj.id]) {\n                              _this.pendingAdds[obj.id] = _this.taskAdd(obj);\n                           }\n                           const newTask = await _this.pendingAdds[obj.id];\n                           delete _this.pendingAdds[obj.id];\n                           return {\n                              id: (newTask || {}).id,\n                           };\n                        }\n                        async updateTask(id, obj) {\n                           return await _this.taskUpdate(obj.id, obj);\n                        }\n                        async removeTask(id) {\n                           return await _this.taskRemove(id);\n                        }\n                     },\n                  ],\n               ]),\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n      if ($menu) {\n         $menu.showItem(\"day\");\n      }\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      let DC = super.CurrentDatacollection;\n      if (!DC) {\n         DC = this._tempDC;\n      }\n      return DC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row, index = null) {\n      const data = {};\n      row = row || {};\n\n      if (!this.StartDateField || (!this.EndDateField && !this.DurationField))\n         return data;\n\n      const currDate = new Date();\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n      // define label\n      data[\"text\"] = this.TitleField\n         ? row[this.TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[this.StartDateField.columnName] || currDate;\n      data[\"progress\"] = this.ProgressField\n         ? parseFloat(row[this.ProgressField.columnName] || 0)\n         : 0;\n\n      if (this.NotesField)\n         data[\"details\"] = row[this.NotesField.columnName] || \"\";\n\n      if (this.EndDateField)\n         data[\"end_date\"] = row[this.EndDateField.columnName] || currDate;\n\n      if (this.DurationField)\n         data[\"duration\"] = row[this.DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index != null) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n\n      if (this.TitleField)\n         patch[this.TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (this.StartDateField)\n         patch[this.StartDateField.columnName] = task[\"start_date\"];\n\n      if (this.ProgressField)\n         patch[this.ProgressField.columnName] = parseFloat(\n            task[\"progress\"] || 0\n         );\n\n      if (this.NotesField) patch[this.NotesField.columnName] = task[\"details\"];\n\n      if (this.EndDateField)\n         patch[this.EndDateField.columnName] = task[\"end_date\"];\n\n      if (this.DurationField)\n         patch[this.DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      const baseView = this.view;\n\n      if (object) {\n         this.TitleField = object.fieldByID(baseView.settings.titleFieldID);\n         this.StartDateField = object.fieldByID(\n            baseView.settings.startDateFieldID\n         );\n         this.EndDateField = object.fieldByID(baseView.settings.endDateFieldID);\n         this.DurationField = object.fieldByID(\n            baseView.settings.durationFieldID\n         );\n         this.ProgressField = object.fieldByID(\n            baseView.settings.progressFieldID\n         );\n         this.NotesField = object.fieldByID(baseView.settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      let DC = this.CurrentDatacollection;\n      if (!DC && datacollection) {\n         // NOTE: this can happen in the ABDesigner object workspace.\n         // we send in a temp DC with no .id\n         this._tempDC = datacollection;\n         DC = datacollection;\n      }\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(DC.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in DC._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      let newScales = [];\n\n      switch (scale) {\n         case \"day\":\n            newScales = [YEAR_SCALE, MONTH_SCALE, DAY_SCALE];\n            break;\n         case \"week\":\n            newScales = [YEAR_SCALE, MONTH_SCALE, WEEK_SCALE];\n            break;\n         case \"month\":\n            newScales = [YEAR_SCALE, MONTH_SCALE];\n            break;\n         case \"year\":\n            newScales = [YEAR_SCALE];\n            break;\n      }\n\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = webix.Date.add(this.originalStartDate, -1, scale, true),\n         end = webix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      const datacollection = this.view.datacollection;\n\n      if (datacollection) {\n         this.datacollectionLoad(datacollection);\n         datacollection.loadData(0);\n      }\n\n      super.onShow();\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         webix.alert({\n            title: L(\"Error Saving Item\"),\n            ok: L(\"Okay\"),\n            text: L(\"Unable to save this item.\"),\n         });\n         this.AB.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         webix.alert({\n            title: L(\"Error Removing Item\"),\n            ok: L(\"Okay\"),\n            text: L(\"Unable to remove this item.\"),\n         });\n         this.AB.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         webix.alert({\n            title: L(\"Error Updating Item\"),\n            ok: L(\"Okay\"),\n            text: L(\"Unable to update this item.\"),\n         });\n         this.AB.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewGanttComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (/* options, accessLevel*/) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow() {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      $$(this.ids.component).show($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewComponent from \"./viewComponent/ABViewComponent\";\n\nimport ABPopupExport from \"./ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"./ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"./ABViewGridPopupSortFields\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nconst KEY_STORAGE_SETTINGS = \"abviewgrid_settings\";\n// {string}\n// the unique key for ABViewGrids to store/retrieve their local settings\n\nvar GridSettings = null;\n// {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n// Keep a global copy of our local Grid settings, so we can optimize the header\n// sizes.\n\nvar L = null;\n// multilingual Label fn()\n\nclass ABViewGridComponent extends ABViewComponent {\n   constructor(viewGrid, idBase) {\n      var base = idBase || `ABViewGrid_${viewGrid.id}`;\n\n      super(viewGrid, base, {\n         // component: `${base}_component`,\n         toolbar: \"\",\n         buttonDeleteSelected: \"\",\n\n         buttonFilter: \"\",\n         buttonMassUpdate: \"\",\n         buttonSort: \"\",\n         buttonExport: \"\",\n\n         globalSearchToolbar: \"\",\n\n         datatable: \"\",\n      });\n\n      this.viewGrid = viewGrid;\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n      this.detatch();\n      this.viewGrid.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.AB = viewGrid.AB;\n      this.id = viewGrid.id;\n      this.settings = viewGrid.settings || {};\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = this.viewGrid.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      this.PopupExport = new ABPopupExport(base);\n      this.PopupExport.init(this.AB);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, this.id);\n      this.PopupMassUpdateComponent.init(this.AB);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(base);\n      this.PopupSortDataTableComponent.init(this.AB);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   detatch() {\n      this.viewGrid.filterHelper.removeListener(\n         \"filter.data\",\n         this._handler_filterData\n      );\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      var indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      var ids = this.ids;\n      var settings = this.settings;\n      var self = this;\n\n      var view = \"datatable\";\n      if (settings.isTreeDatable || settings.groupBy) {\n         // switch datatable to support tree\n         view = \"treetable\";\n      }\n\n      var selectType = \"cell\";\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage)) {\n         selectType = \"row\";\n      }\n\n      return {\n         view: view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  var currObject = self.datacollection.datasource;\n                  var selectField = currObject.fields((f) => {\n                     return f.columnName == data.column;\n                  })[0];\n\n                  if (selectField == null) return true;\n\n                  var cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  console.error(\"TODO: field.customEdit() remove App param!\");\n                  return selectField.customEdit(\n                     rowData,\n                     self.AB._App,\n                     cellNode\n                  );\n               } else if (!settings.detailsPage && !settings.editPage) {\n                  return false;\n               }\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (self.settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     var state = {\n                        value: val,\n                     };\n\n                     var editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     var node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     var checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               var rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  var column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) => {\n               if (this.skippableColumns.indexOf(sourceId) != -1) return false;\n               else return true;\n            },\n            onBeforeColumnDrop: (sourceId, targetId, event) => {\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               if (this.skippableColumns.indexOf(targetId) != -1) return false;\n            },\n            onAfterColumnDrop: (sourceId, targetId, event) => {\n               this.onAfterColumnDrop(sourceId, targetId, event);\n            },\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.viewGrid.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      var ids = this.ids;\n      var self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: L(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: L(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: L(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: L(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: L(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: L(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     let searchText = $$(ids.globalSearchToolbar).getValue();\n                     this.viewGrid.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      var tableUI = {\n         // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n         id: `${this.ids.component}_temp`,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: L(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      if (this.datacollection || this.settings.dataviewID != \"\") {\n         tableUI.padding = this.settings.padding;\n         tableUI.rows = [];\n         if (this.settings.showToolbar) {\n            tableUI.rows.push(this.uiToolbar());\n         }\n         if (\n            this.settings.gridFilter.filterOption == 1 &&\n            this.settings.gridFilter.userFilterPosition == \"form\"\n         ) {\n            tableUI.rows.push(this.uiFilter());\n         }\n\n         tableUI.rows.push(this.uiDatatable());\n      }\n\n      return tableUI;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) {\n         this.AB = AB;\n      }\n      var self = this;\n      var ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      webix.codebase = \"\";\n      webix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      var DataTable = this.getDataTable();\n      var throttleCustomDisplay = null;\n      var scrollStarted = null;\n\n      if (!DataTable) return Promise.resolve();\n\n      webix.extend(DataTable, webix.ProgressBar);\n\n      DataTable.config.accessLevel = accessLevel;\n      if (accessLevel < 2) {\n         DataTable.define(\"editable\", false);\n      }\n\n      let customDisplays = (data) => {\n         var CurrentObject = this.datacollection?.datasource;\n         if (!CurrentObject || !DataTable.data) return;\n\n         var displayRecords = [];\n\n         let verticalScrollState = DataTable.getScrollState().y,\n            rowHeight = DataTable.config.rowHeight,\n            height =\n               DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + DataTable.getVisibleCount(),\n            index = 0;\n\n         DataTable.data.order.each(function (id) {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         var editable = this.settings.isEditable;\n         if (DataTable.config.accessLevel < 2) {\n            editable = false;\n         }\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      DataTable.attachEvent(\"onAfterRender\", function (data) {\n         DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF(DataTable);\n         Object.keys(ids).forEach((key) => {\n            var $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         var CurrentObject = self.datacollection?.datasource;\n         if (!CurrentObject) {\n            return;\n         }\n\n         if (self.settings.isEditable == 0) {\n            var items = DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e == \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dv, id, self.settings.detailsPage);\n            self.toggleTab(self.settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dv, id, self.settings.editPage);\n            self.toggleTab(self.settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1) {\n            self.emit(\"object.track\", CurrentObject, id.row);\n            // App.actions.openObjectTrack(CurrentObject, id.row);\n         } else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            let clearValue = {};\n            clearValue[id.column] = \"\";\n            CurrentObject.model()\n               .update(id.row, clearValue)\n               .then((response) => {\n                  // console.log(response);\n               })\n               .catch((err) => {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               });\n         } else if (e.target.className.indexOf(\"trash\") > -1) {\n            // if this was our trash icon:\n\n            webix.confirm({\n               title: L(\"Delete data\"),\n               text: L(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     CurrentObject.model()\n                        .delete(id.row)\n                        .then((response) => {\n                           if (response.numRows > 0) {\n                              DataTable.remove(id);\n                              DataTable.clearSelection();\n                           } else {\n                              webix.alert({\n                                 text: L(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                           }\n                        })\n                        .catch((err) => {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        });\n                  }\n\n                  DataTable.clearSelection();\n                  return true;\n               },\n            });\n         } else if (self.settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dv, id, self.settings.detailsPage);\n            self.toggleTab(self.settings.detailsTab, this);\n         } else if (self.settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dv, id, self.settings.editPage);\n            self.toggleTab(self.settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n\n      if (this.settings.showToolbar) {\n         if (\n            this.settings.massUpdate ||\n            this.settings.isSortable ||\n            this.settings.isExportable ||\n            (this.settings.gridFilter &&\n               this.settings.gridFilter.filterOption &&\n               this.settings.gridFilter.userFilterPosition == \"toolbar\")\n         ) {\n            $$(ids.toolbar).show();\n         }\n\n         if (this.settings.massUpdate == false) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (this.settings.allowDelete == false) {\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (this.settings.gridFilter) {\n            if (\n               this.settings.gridFilter.filterOption != 1 ||\n               this.settings.gridFilter.userFilterPosition != \"toolbar\"\n            ) {\n               $$(ids.buttonFilter).hide();\n            }\n\n            if (\n               this.settings.gridFilter.filterOption == 3 &&\n               this.settings.gridFilter.globalFilterPosition == \"single\"\n            ) {\n               DataTable.hide();\n            }\n\n            if (this.settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (this.settings.gridFilter.filterOption) {\n               this.viewGrid.filterHelper.init(this.AB);\n            }\n         }\n\n         if (this.settings.isSortable == false) {\n            $$(ids.buttonSort).hide();\n         }\n\n         if (this.settings.isExportable == false) {\n            $$(ids.buttonExport).hide();\n         }\n      }\n\n      if (this.settings.hideHeader == true) {\n         this.hideHeader();\n      }\n\n      if (!this.datacollection) {\n         if (this.settings.dataviewID) {\n            var dv = this.AB.datacollectionByID(this.settings.dataviewID);\n            this.datacollectionLoad(dv);\n         }\n      }\n\n      // Make sure\n      if (!GridSettings) {\n         GridSettings = (await this.AB.Storage.get(KEY_STORAGE_SETTINGS)) || {};\n      }\n\n      if (this.datacollection?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.viewGrid,\n            datacollection: this.datacollection,\n         });\n\n         this.refreshHeader();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      var ids = this.ids;\n      var $ButtonFilter = $$(ids.buttonFilter);\n      if ($ButtonFilter) {\n         var badge = null;\n         var onlyFilterRules = this.viewGrid.filterHelper.filterRules();\n         if (onlyFilterRules?.rules?.length) {\n            badge = 1;\n         }\n         $ButtonFilter.define(\"badge\", badge);\n         $ButtonFilter.refresh();\n      }\n\n      this.datacollection.filterCondition(filterRules);\n      this.datacollection.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      $$(this.ids.buttonSort).define(\"badge\", sortRules.length || null);\n      $$(this.ids.buttonSort).refresh();\n\n      let gridElem = this.getDataTable();\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      let rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) {\n         dv.setCursor(rowId);\n      }\n\n      // Pass settings to link page module\n      // console.error(\"!!!! TODO: implement linkPageHelper() !!!!\");\n      if (this.linkPage) {\n         this.linkPage.changePage(page, rowId);\n      }\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      var oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      var CurrentObject = dc?.datasource;\n      var $DataTable = this.getDataTable();\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n            };\n\n            this.__handler_dc_loadData = () => {\n               if (\n                  $DataTable.config.view == \"treetable\" &&\n                  CurrentObject &&\n                  !CurrentObject.isGroup\n               ) {\n                  $DataTable.clearAll();\n                  $DataTable.parse(dc.getData() || []);\n\n                  this.grouping();\n                  this.ready();\n               }\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink) {\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            } else {\n               dc.bind($DataTable);\n            }\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n         } else {\n            $DataTable.unbind();\n         }\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.viewGrid.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.viewGrid.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      var DataTable = this.getDataTable();\n      var lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      DataTable.eachColumn(function (columnId) {\n         var columnConfig = DataTable.getColumnConfig(columnId);\n         if (columnConfig.split == 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      let $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      let baseGroupMap = {};\n      let CurrentObject = this.datacollection.datasource;\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n               break;\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key == \"calculate\") {\n                        return sum;\n                     } else {\n                        const rowDataFormat = {};\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n               break;\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        var valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation && valRelation.length != null)\n                           count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n               break;\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        var val = prop(r);\n\n                        // count only exists data\n                        if (val) {\n                           count += 1;\n                        }\n                     });\n\n                     return count;\n                  },\n               ];\n               break;\n         }\n      });\n\n      // set group definition\n      // DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n      groupBys.forEach((colName, gIndex) => {\n         let by;\n         let groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         // Root\n         if (gIndex == groupBys.length - 1) {\n            by = colName;\n         }\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName != colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      var DataTable = this.getDataTable();\n      DataTable.define(\"header\", false);\n      DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      var DataTable = this.getDataTable();\n      let CurrentObject = this.datacollection.datasource;\n      var settings = this.settings;\n      var columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < columnConfig.length; i++) {\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < columnConfig.length; j++) {\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            columnConfig.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n      if (settings.saveLocal) {\n         this.localSettingsSave();\n      }\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if (DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          DataTable.define(\n      //             \"leftSplit\",\n      //             DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      var DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (state.old == null && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         DataTable.clearSelection();\n         return false;\n      }\n\n      if (editor.config) {\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n               break;\n            case \"datetime\":\n               state.value = state.value.getTime();\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n               break;\n            default:\n            // code block\n         }\n      }\n\n      if (state.value != state.old) {\n         var item = DataTable.getItem(editor.row);\n         item[editor.column] = state.value;\n\n         DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         var CurrentObject = this.datacollection.datasource;\n         var validator = CurrentObject.isValidData(item);\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n               if (DataTable.exists(editor.row)) {\n                  DataTable.updateItem(editor.row, item);\n                  DataTable.clearSelection();\n                  DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               DataTable.clearSelection();\n               if (\n                  this.AB.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if (DataTable.exists(editor.row)) {\n            //          DataTable.updateItem(editor.row, item);\n            //          DataTable.clearSelection();\n            //          DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else {\n            validator.updateGrid(editor.row, DataTable);\n         }\n      } else {\n         DataTable.clearSelection();\n      }\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      var requireRefresh = false;\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n         webix.message({\n            type: \"info\",\n            text: this.AB.Multilingual.label(\"minimum column width is {0}\", [\n               30,\n            ]),\n            expire: 1000,\n         });\n      }\n\n      var localSettings = this.localSettings();\n      if (localSettings) {\n         var header = localSettings.find((h) => h.id == columnName);\n         if (header) {\n            header.width = newWidth;\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n      if (this.settings.saveLocal) {\n         this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(KEY_STORAGE_SETTINGS, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) {\n         this.refreshHeader();\n      }\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) != -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      var EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName == id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      var dv = this.datacollection;\n      if (dv) {\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n      }\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = false) {\n      ignoreLocal = ignoreLocal || this.ignoreLocal;\n\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      var CurrentObject = this.datacollection.datasource;\n      if (!CurrentObject) return;\n\n      var ids = this.ids;\n      var DataTable = $$(ids.datatable);\n      if (!DataTable) return;\n\n      var accessLevel = DataTable.config.accessLevel;\n      DataTable.define(\"leftSplit\", 0);\n      DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n      CurrentObject.imageFields().forEach((image) => {\n         if (\n            image.settings.useHeight &&\n            image.settings.imageHeight > rowHeight\n         ) {\n            rowHeight = image.settings.imageHeight;\n         }\n      });\n      if (rowHeight) {\n         DataTable.define(\"rowHeight\", rowHeight);\n      }\n\n      // DataTable.clearAll();\n\n      var settings = this.settings;\n      var editable = settings.isEditable;\n      if (DataTable.config.accessLevel < 2) {\n         editable = false;\n      }\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      var objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n      var columnHeaders = this.localSettings();\n      if (!columnHeaders || ignoreLocal) {\n         // if that is empty, pull from our settings.columnConfig\n         columnHeaders = this.AB.cloneDeep(this.settings.columnConfig);\n      }\n      if (columnHeaders.length == 0) {\n         // if that is empty for some reason, rebuild from our CurrentObject\n\n         columnHeaders = objColumnHeaders;\n      }\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      var objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         var origCol = objColumnHeaders.find((h) => h.fieldID == c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] == \"function\" || k == \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         var f = CurrentObject.fieldByID(c.fieldID);\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               c.footer = { content: \"totalColumn\", field: f };\n            } else {\n               c.footer = { content: \"summColumn\" };\n            }\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      var localSettings = this.localSettings();\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n         localSettings = columnHeaders;\n      }\n      columnHeaders = this.AB.cloneDeep(localSettings);\n\n      var fieldValidations = [];\n      var rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               var validationUI = [];\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  var Filter = this.AB.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n               // create a unique view id for popup\n               var popUpId = ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            var groupField = CurrentObject.fieldByID(col.fieldID);\n            if (groupField) {\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     let rowData = this.AB.cloneDeep(obj);\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n            }\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         var complexValidations = [];\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n         var rules = {};\n\n         // store the rules in a data param to be used later\n         DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach(function (key) {\n            rules[key] = function (value, data) {\n               // default valid is true\n               var isValid = true;\n               var invalidMessage = \"\";\n               DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  var newData = {};\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) {\n                     newData[\"this_object\"] = data.uuid;\n                  }\n\n                  // use helper funtion to check if valid\n                  var ruleValid = filter.filters(newData);\n                  // if invalid we need to tell the field\n                  if (ruleValid == false) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n               if (isValid == false) {\n                  // we also need to define an error message\n                  webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n               }\n               return isValid;\n            };\n         });\n         // define validation rules\n         DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         DataTable.config.rulePops = rulePops;\n         DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if (DataTable.config.rulePops) {\n            DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         }\n         // remove any validation rules from the previous table\n         DataTable.define(\"rules\", {});\n         DataTable.refresh();\n      }\n\n      var addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: function (obj) {\n               return CurrentObject.displayData(obj);\n            },\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel == 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else {\n         this.columnSplitLeft = 0;\n      }\n      if (settings.detailsPage != \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: function (obj, common) {\n               return \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\";\n            },\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n      if (settings.trackView != 0 && accessLevel == 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n      if (\n         settings.editPage != \"\" &&\n         !settings.hideButtons &&\n         accessLevel == 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n      if (settings.allowDelete && accessLevel == 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      var lastCol = null;\n      for (var i = columnHeaders.length - 1; i >= 0; i--) {\n         if (!lastCol) {\n            var col = columnHeaders[i];\n            if (!col.hidden && addedColumns.indexOf(col.id) == -1) {\n               lastCol = col;\n               break;\n            }\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      let frozenColumnID = settings.frozenColumnID;\n      if (frozenColumnID != \"\") {\n         DataTable.define(\n            \"leftSplit\",\n            DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      } else {\n         DataTable.define(\"leftSplit\", this.columnSplitLeft);\n      }\n      this.freezeDeleteColumn();\n      DataTable.refreshColumns();\n\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      var savedLocalSettings =\n         (await this.AB.Storage.get(KEY_STORAGE_SETTINGS)) || {};\n\n      savedLocalSettings[this.settingsID()] = GridSettings[this.settingsID()]\n         ? GridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) {\n               delete item.footer.field;\n            }\n         });\n      }\n\n      await this.AB.Storage.set(KEY_STORAGE_SETTINGS, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      if (value) {\n         GridSettings[this.settingsID()] = value;\n      } else {\n         return GridSettings[this.settingsID()];\n      }\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let $DataTable = this.getDataTable();\n      if (!$DataTable) return;\n\n      if (rowData == null) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      var CurrentObject = this.datacollection.datasource;\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab\n      var tab = wb.getTopParentView().queryView({ id: parentTab });\n      // if we didn't pass and id we may have passed a domNode\n      if (tab == null) {\n         tab = $$(parentTab);\n      }\n\n      if (tab == null) return;\n\n      // set the tabbar to to the tab\n      var tabbar = tab.getParentView().getParentView();\n\n      if (tabbar == null) return;\n\n      if (tabbar.setValue) {\n         // if we have reached the top we won't have a tab\n         tabbar.setValue(parentTab);\n      }\n\n      // find if it is in a multiview of a tab\n      var nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n      // if so then do this again\n      if (nextTab) {\n         this.toggleTab(nextTab, wb);\n      }\n   }\n\n   toggleUpdateDelete() {\n      var DataTable = this.getDataTable();\n      var checkedItems = 0;\n      DataTable.data.each(function (obj) {\n         if (\n            typeof obj != \"undefined\" &&\n            obj.hasOwnProperty(\"appbuilder_select_item\") &&\n            obj.appbuilder_select_item == 1\n         ) {\n            checkedItems++;\n         }\n      });\n      if (checkedItems > 0) {\n         this.enableUpdateDelete();\n      } else {\n         this.disableUpdateDelete();\n      }\n   }\n\n   toolbarDeleteSelected($view) {\n      var DataTable = this.getDataTable();\n      let CurrentObject = this.datacollection.datasource;\n      var deleteTasks = [];\n      DataTable.data.each(function (row) {\n         if (\n            typeof row != \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      if (deleteTasks.length > 0) {\n         webix.confirm({\n            title: L(\"Delete Multiple Records\"),\n            text: L(\"Are you sure you want to delete the selected records?\"),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n      }\n   }\n\n   toolbarFilter($view) {\n      this.viewGrid.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      let CurrentObject = this.datacollection.datasource;\n      var imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n      var tip = \"\";\n      var columnName = common.column.id.replace(\" \", \"\");\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] != \"undefined\" &&\n         typeof obj[columnName] == \"number\"\n      ) {\n         tip = obj[columnName + \"__relation\"].text;\n      } else if (typeof obj[columnName + \"__relation\"] != \"undefined\") {\n         var relationData = obj[columnName + \"__relation\"];\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) != -1) {\n         if (obj[columnName] == null) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor == \"date\") {\n         tip = common.column.format(obj[columnName]);\n      } else if (common.column.editor == \"richselect\") {\n         CurrentObject.fields().forEach(function (f) {\n            if (f.columnName == columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach(function (o) {\n                     if (o.id == obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      } else {\n         tip = obj[columnName];\n      }\n      if (tip == null) {\n         return \"\";\n      } else {\n         return tip;\n      }\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild != null && node.firstChild.nodeName == \"IMG\") {\n         setTimeout(function () {\n            var imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            var imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n            if (imgBottom > window.innerHeight) {\n               var imgOffsetY = imgBottom - window.innerHeight;\n               var newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n            if (imgRight > window.innerWidth) {\n               var imgOffsetX = imgRight - window.innerWidth;\n               var newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else {\n         node.style.visibility = \"visible\";\n      }\n   }\n}\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   //\n   // Editor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewGridEditorComponent\";\n\n   //    var DataTable = this.component(App, idBase);\n\n   //    return {\n   //       ui: DataTable.ui,\n   //       logic: DataTable.logic,\n   //       onShow: DataTable.onShow,\n\n   //       init: () => {\n   //          // remove id of the component in caching for refresh .bind of the data collection\n   //          let dv = this.datacollection;\n   //          if (dv) dv.removeComponent(DataTable.ui.id);\n\n   //          DataTable.init();\n   //       },\n   //    };\n   // }\n\n   //\n   // Property Editor\n   //\n\n   // static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n   //    var commonUI = super.propertyEditorDefaultElements(\n   //       App,\n   //       ids,\n   //       _logic,\n   //       ObjectDefaults\n   //    );\n   //    var L = App.Label;\n\n   //    var idBase = \"ABViewGridPropertyEditor\";\n\n   //    // initialize our popup editors with unique names so we don't overwrite the previous editor each time\n   //    PopupHideFieldComponent = new ABPopupHideFields(App, idBase + \"_hide\");\n   //    PopupFrozenColumnsComponent = new ABPopupFrozenColumns(\n   //       App,\n   //       idBase + \"_freeze\"\n   //    );\n\n   //    PopupSummaryColumnsComponent = new ABPopupSummaryColumns(\n   //       App,\n   //       idBase + \"_summary\"\n   //    );\n   //    PopupCountColumnsComponent = new ABPopupCountColumns(\n   //       App,\n   //       idBase + \"_count\"\n   //    );\n\n   //    PopupFilterProperty = ABViewPropertyFilterData.propertyComponent(\n   //       App,\n   //       idBase + \"_gridfiltermenu\"\n   //    );\n   //    this.linkPageComponent = ABViewPropertyLinkPage.propertyComponent(\n   //       App,\n   //       idBase + \"_gridlinkpage\"\n   //    );\n\n   //    let filter_property_popup = webix.ui({\n   //       view: \"window\",\n   //       modal: true,\n   //       position: \"center\",\n   //       resize: true,\n   //       width: 700,\n   //       height: 450,\n   //       css: \"ab-main-container\",\n   //       head: {\n   //          view: \"toolbar\",\n   //          cols: [\n   //             {\n   //                view: \"label\",\n   //                label: L(\"ab.component.grid.filterMenu\", \"*Filter Menu\"),\n   //             },\n   //          ],\n   //       },\n   //       body: PopupFilterProperty.ui,\n   //    });\n\n   //    _logic.newObject = () => {\n   //       var currView = _logic.currentEditObject();\n   //       currView.settings.objectWorkspace = {\n   //          sortFields: [],\n   //          filterConditions: [],\n   //          frozenColumnID: \"\",\n   //          hiddenFields: [],\n   //          summaryColumns: [],\n   //          countColumns: [],\n   //       };\n   //       currView.populatePopupEditors(currView);\n   //    };\n\n   //    // Open our popup editors when their settings button is clicked\n   //    _logic.toolbarFieldsVisible = ($view) => {\n   //       PopupHideFieldComponent.show($view, { pos: \"top\" });\n   //    };\n\n   //    _logic.toolbarFrozen = ($view) => {\n   //       PopupFrozenColumnsComponent.show($view, { pos: \"top\" });\n   //    };\n\n   //    _logic.gridFilterMenuShow = () => {\n   //       let currView = _logic.currentEditObject();\n\n   //       // show filter popup\n   //       filter_property_popup.show();\n   //    };\n\n   //    _logic.summaryColumns = ($view) => {\n   //       PopupSummaryColumnsComponent.show($view, { pos: \"top\" });\n   //    };\n\n   //    _logic.countColumns = ($view) => {\n   //       PopupCountColumnsComponent.show($view, { pos: \"top\" });\n   //    };\n\n   //    _logic.callbackHideFields = (settings) => {\n   //       var currView = _logic.currentEditObject();\n\n   //       currView.objectWorkspace = currView.objectWorkspace || {};\n   //       currView.objectWorkspace.hiddenFields = settings;\n\n   //       _logic.onChange();\n   //    };\n\n   //    _logic.callbackFrozenFields = (settings) => {\n   //       var currView = _logic.currentEditObject();\n\n   //       currView.objectWorkspace = currView.objectWorkspace || {};\n   //       currView.objectWorkspace.frozenColumnID = settings || \"\";\n\n   //       _logic.onChange();\n   //    };\n\n   //    _logic.callbackSaveWorkspace = (data) => {\n   //       // when we make a change in the popups we want to make sure we save the new workspace to the properties to do so just fire an onChange event\n   //       _logic.onChange();\n   //    };\n\n   //    _logic.gridFilterSave = () => {\n   //       var currView = _logic.currentEditObject();\n   //       // currView.settings.isFilterable = settings.filterOption == 1 ? true : false;\n\n   //       // hide filter popup\n   //       filter_property_popup.hide();\n\n   //       // refresh settings\n   //       this.propertyEditorValues(ids, currView);\n\n   //       // trigger a save()\n   //       this.propertyEditorSave(ids, currView);\n   //    };\n\n   //    _logic.gridFilterCancel = () => {\n   //       // hide filter popup\n   //       filter_property_popup.hide();\n   //    };\n\n   //    _logic.callbackSaveSummaryColumns = (data) => {\n   //       var currObj = _logic.currentEditObject();\n   //       currObj.settings.objectWorkspace.summaryColumns = data;\n\n   //       // when we make a change in the popups we want to make sure we save the new workspace to the properties to do so just fire an onChange event\n   //       _logic.onChange();\n   //    };\n\n   //    _logic.callbackSaveCountColumns = (data) => {\n   //       var currObj = _logic.currentEditObject();\n   //       currObj.settings.objectWorkspace.countColumns = data;\n\n   //       // when we make a change in the popups we want to make sure we save the new workspace to the properties to do so just fire an onChange event\n   //       _logic.onChange();\n   //    };\n\n   //    PopupHideFieldComponent.init({\n   //       onChange: _logic.callbackHideFields, // be notified when there is a change in the hidden fields\n   //    });\n\n   //    PopupFrozenColumnsComponent.init({\n   //       onChange: _logic.callbackFrozenFields, // be notified when there is a change in the hidden fields\n   //    });\n\n   //    PopupFilterProperty.init({\n   //       onSave: _logic.gridFilterSave,\n   //       onCancel: _logic.gridFilterCancel,\n   //    });\n\n   //    PopupSummaryColumnsComponent.init({\n   //       onChange: _logic.callbackSaveSummaryColumns, // be notified when there is a change in the summary columns\n   //    });\n\n   //    PopupCountColumnsComponent.init({\n   //       onChange: _logic.callbackSaveCountColumns, // be notified when there is a change in the count columns\n   //    });\n\n   //    var view = \"button\";\n   //    // in addition to the common .label  values, we\n   //    // ask for:\n   //    return commonUI.concat([\n   //       {\n   //          view: \"fieldset\",\n   //          label: L(\"ab.component.label.gridProperties\", \"*Grid Properties:\"),\n   //          labelWidth: App.config.labelWidthLarge,\n   //          body: {\n   //             type: \"clean\",\n   //             padding: 10,\n   //             rows: [\n   //                {\n   //                   view: \"checkbox\",\n   //                   name: \"isEditable\",\n   //                   labelRight: L(\n   //                      \"ab.component.label.isEditable\",\n   //                      \"*User can edit in grid.\"\n   //                   ),\n   //                   labelWidth: App.config.labelWidthCheckbox,\n   //                },\n   //                {\n   //                   view: \"checkbox\",\n   //                   name: \"massUpdate\",\n   //                   labelRight: L(\n   //                      \"ab.component.label.massUpdate\",\n   //                      \"*User can edit multiple items at one time.\"\n   //                   ),\n   //                   labelWidth: App.config.labelWidthCheckbox,\n   //                },\n   //                {\n   //                   view: \"checkbox\",\n   //                   name: \"allowDelete\",\n   //                   labelRight: L(\n   //                      \"ab.component.label.allowDelete\",\n   //                      \"*User can delete records.\"\n   //                   ),\n   //                   labelWidth: App.config.labelWidthCheckbox,\n   //                },\n   //                {\n   //                   view: \"checkbox\",\n   //                   name: \"isSortable\",\n   //                   labelRight: L(\n   //                      \"ab.component.label.isSortable\",\n   //                      \"*User can sort records.\"\n   //                   ),\n   //                   labelWidth: App.config.labelWidthCheckbox,\n   //                },\n   //                {\n   //                   view: \"checkbox\",\n   //                   name: \"isExportable\",\n   //                   labelRight: L(\n   //                      \"ab.component.label.isExportable\",\n   //                      \"*User can export.\"\n   //                   ),\n   //                   labelWidth: App.config.labelWidthCheckbox,\n   //                },\n   //             ],\n   //          },\n   //       },\n   //       {\n   //          view: \"fieldset\",\n   //          label: L(\"ab.component.label.dataSource\", \"*Grid Data:\"),\n   //          labelWidth: App.config.labelWidthLarge,\n   //          body: {\n   //             type: \"clean\",\n   //             padding: 10,\n   //             rows: [\n   //                {\n   //                   view: \"select\",\n   //                   name: \"datacollection\",\n   //                   label: L(\"ab.component.label.dataSource\", \"*Object:\"),\n   //                   labelWidth: App.config.labelWidthLarge,\n   //                   on: {\n   //                      onChange: (newv, oldv) => {\n   //                         if (newv != oldv) {\n   //                            $$(ids.detailsPage).setValue(\"\");\n   //                            $$(ids.editPage).setValue(\"\");\n\n   //                            let editingGrid = _logic.currentEditObject();\n   //                            let currDC = editingGrid.AB.datacollections(\n   //                               (dc) => dc.id == newv\n   //                            )[0];\n   //                            // disallow edit data of query\n   //                            if (currDC && currDC.sourceType == \"query\") {\n   //                               $$(ids.isEditable).setValue(false);\n   //                               $$(ids.massUpdate).setValue(false);\n   //                               $$(ids.allowDelete).setValue(false);\n   //                               $$(ids.isEditable).disable();\n   //                               $$(ids.massUpdate).disable();\n   //                               $$(ids.allowDelete).disable();\n   //                            } else {\n   //                               $$(ids.isEditable).enable();\n   //                               $$(ids.massUpdate).enable();\n   //                               $$(ids.allowDelete).enable();\n   //                            }\n   //                         }\n   //                      },\n   //                   },\n   //                },\n   //             ],\n   //          },\n   //       },\n   //       {\n   //          view: \"fieldset\",\n   //          label: L(\"ab.component.grid.group\", \"*Group:\"),\n   //          labelWidth: App.config.labelWidthLarge,\n   //          body: {\n   //             type: \"clean\",\n   //             padding: 10,\n   //             rows: [\n   //                {\n   //                   view: \"multiselect\",\n   //                   name: \"groupBy\",\n   //                   label: L(\"ab.component.grid.groupBy\", \"*Group by:\"),\n   //                   labelWidth: App.config.labelWidthLarge,\n   //                   options: [],\n   //                   on: {\n   //                      onChange: (newV, oldV) => {\n   //                         let currView = _logic.currentEditObject();\n   //                         currView.propertyGroupByList(ids, newV);\n   //                      },\n   //                   },\n   //                },\n   //                {\n   //                   view: \"list\",\n   //                   name: \"groupByList\",\n   //                   drag: true,\n   //                   data: [],\n   //                   height: 200,\n   //                   template:\n   //                      \"<span class='fa fa-sort'></span>&nbsp;&nbsp; #value#\",\n   //                   on: {\n   //                      onAfterDrop: () => {\n   //                         let currView = _logic.currentEditObject();\n   //                         this.propertyEditorSave(ids, currView);\n   //                      },\n   //                   },\n   //                },\n   //             ],\n   //          },\n   //       },\n   //       this.linkPageComponent.ui,\n   //       {\n   //          view: \"fieldset\",\n   //          label: L(\n   //             \"ab.component.label.customizeDisplay\",\n   //             \"*Customize Display:\"\n   //          ),\n   //          labelWidth: App.config.labelWidthLarge,\n   //          body: {\n   //             type: \"clean\",\n   //             padding: 10,\n   //             rows: [\n   //                {\n   //                   cols: [\n   //                      {\n   //                         view: \"label\",\n   //                         label: L(\n   //                            \"ab.component.label.hiddenFields\",\n   //                            \"*Hidden Fields:\"\n   //                         ),\n   //                         css: \"ab-text-bold\",\n   //                         width: App.config.labelWidthXLarge,\n   //                      },\n   //                      {\n   //                         view: view,\n   //                         name: \"buttonFieldsVisible\",\n   //                         label: L(\"ab.component.label.settings\", \"*Settings\"),\n   //                         icon: \"fa fa-gear\",\n   //                         type: \"icon\",\n   //                         click: function () {\n   //                            _logic.toolbarFieldsVisible(this.$view);\n   //                         },\n   //                      },\n   //                   ],\n   //                },\n   //                {\n   //                   cols: [\n   //                      {\n   //                         view: \"label\",\n   //                         label: L(\n   //                            \"ab.component.label.filterData\",\n   //                            \"*Filter Option:\"\n   //                         ),\n   //                         css: \"ab-text-bold\",\n   //                         width: App.config.labelWidthXLarge,\n   //                      },\n   //                      {\n   //                         view: view,\n   //                         name: \"buttonFilterData\",\n   //                         label: L(\"ab.component.label.settings\", \"*Settings\"),\n   //                         icon: \"fa fa-gear\",\n   //                         type: \"icon\",\n   //                         click: function () {\n   //                            _logic.gridFilterMenuShow(this.$view);\n   //                         },\n   //                      },\n   //                   ],\n   //                },\n   //                {\n   //                   cols: [\n   //                      {\n   //                         view: \"label\",\n   //                         label: L(\n   //                            \"ab.component.label.freezeColumns\",\n   //                            \"*Freeze Columns:\"\n   //                         ),\n   //                         css: \"ab-text-bold\",\n   //                         width: App.config.labelWidthXLarge,\n   //                      },\n   //                      {\n   //                         view: view,\n   //                         name: \"buttonFieldsFreeze\",\n   //                         label: L(\"ab.component.label.settings\", \"*Settings\"),\n   //                         icon: \"fa fa-gear\",\n   //                         type: \"icon\",\n   //                         click: function () {\n   //                            _logic.toolbarFrozen(this.$view);\n   //                         },\n   //                      },\n   //                   ],\n   //                },\n\n   //                {\n   //                   cols: [\n   //                      {\n   //                         view: \"label\",\n   //                         label: L(\n   //                            \"ab.component.label.summaryFields\",\n   //                            \"*Summary Fields:\"\n   //                         ),\n   //                         css: \"ab-text-bold\",\n   //                         width: App.config.labelWidthXLarge,\n   //                      },\n   //                      {\n   //                         view: view,\n   //                         name: \"buttonSummaryFields\",\n   //                         label: L(\"ab.component.label.settings\", \"*Settings\"),\n   //                         icon: \"fa fa-gear\",\n   //                         type: \"icon\",\n   //                         click: function () {\n   //                            _logic.summaryColumns(this.$view);\n   //                         },\n   //                      },\n   //                   ],\n   //                },\n\n   //                {\n   //                   cols: [\n   //                      {\n   //                         view: \"label\",\n   //                         label: L(\n   //                            \"ab.component.label.countFields\",\n   //                            \"*Count Fields:\"\n   //                         ),\n   //                         css: \"ab-text-bold\",\n   //                         width: App.config.labelWidthXLarge,\n   //                      },\n   //                      {\n   //                         view: view,\n   //                         name: \"buttonCountFields\",\n   //                         label: L(\"ab.component.label.settings\", \"*Settings\"),\n   //                         icon: \"fa fa-gear\",\n   //                         type: \"icon\",\n   //                         click: function () {\n   //                            _logic.countColumns(this.$view);\n   //                         },\n   //                      },\n   //                   ],\n   //                },\n\n   //                {\n   //                   view: \"counter\",\n   //                   name: \"height\",\n   //                   label: L(\"ab.component.grid.height\", \"*Height:\"),\n   //                   labelWidth: App.config.labelWidthXLarge,\n   //                },\n\n   //                {\n   //                   view: \"checkbox\",\n   //                   name: \"hideHeader\",\n   //                   labelRight: L(\n   //                      \"ab.component.label.hideHeader\",\n   //                      \"*Hide table header\"\n   //                   ),\n   //                   labelWidth: App.config.labelWidthCheckbox,\n   //                },\n\n   //                {\n   //                   view: \"checkbox\",\n   //                   name: \"labelAsField\",\n   //                   labelRight: L(\n   //                      \"ab.component.label.labelAsField\",\n   //                      \"*Show a field using label template\"\n   //                   ),\n   //                   labelWidth: App.config.labelWidthCheckbox,\n   //                },\n\n   //                {\n   //                   view: \"checkbox\",\n   //                   name: \"hideButtons\",\n   //                   labelRight: L(\n   //                      \"ab.component.label.hideButtons\",\n   //                      \"*Hide edit and view buttons\"\n   //                   ),\n   //                   labelWidth: App.config.labelWidthCheckbox,\n   //                },\n   //             ],\n   //          },\n   //       },\n   //       {},\n   //    ]);\n   // }\n\n   // static propertyEditorPopulate(App, ids, view) {\n   //    super.propertyEditorPopulate(App, ids, view);\n\n   //    this.view = view;\n\n   //    $$(ids.datacollection).setValue(view.settings.dataviewID);\n   //    $$(ids.isEditable).setValue(view.settings.isEditable);\n   //    $$(ids.massUpdate).setValue(view.settings.massUpdate);\n   //    $$(ids.allowDelete).setValue(view.settings.allowDelete);\n   //    $$(ids.isSortable).setValue(view.settings.isSortable);\n   //    $$(ids.isExportable).setValue(view.settings.isExportable);\n   //    var details = view.settings.detailsPage;\n   //    if (view.settings.detailsTab != \"\") {\n   //       details += \":\" + view.settings.detailsTab;\n   //    }\n   //    $$(ids.detailsPage).setValue(details);\n   //    var edit = view.settings.editPage;\n   //    if (view.settings.editTab != \"\") {\n   //       edit += \":\" + view.settings.editTab;\n   //    }\n   //    $$(ids.editPage).setValue(edit);\n   //    $$(ids.height).setValue(view.settings.height);\n   //    $$(ids.hideHeader).setValue(view.settings.hideHeader);\n   //    $$(ids.labelAsField).setValue(view.settings.labelAsField);\n   //    $$(ids.hideButtons).setValue(view.settings.hideButtons);\n   //    $$(ids.groupBy).setValue(view.settings.groupBy);\n\n   //    // initial populate of properties and popups\n   //    view.populateEditor(ids, view);\n   //    view.populatePopupEditors(view);\n   //    view.populateBadgeNumber(ids, view);\n\n   //    // when a change is made in the properties the popups need to reflect the change\n   //    this.updateEventIds = this.updateEventIds || {}; // { viewId: boolean, ..., viewIdn: boolean }\n   //    if (!this.updateEventIds[view.id]) {\n   //       this.updateEventIds[view.id] = true;\n\n   //       view.addListener(\n   //          \"properties.updated\",\n   //          function () {\n   //             view.populateEditor(ids, view);\n   //             view.populatePopupEditors(view);\n   //             view.populateBadgeNumber(ids, view);\n   //          },\n   //          this\n   //       );\n   //    }\n\n   //    //Load ABDatacollection to QueryBuilder\n   //    this.propertyUpdateGridFilterObject(ids, view);\n\n   //    // Populate values to link page properties\n   //    this.linkPageComponent.viewLoad(view);\n   //    this.linkPageComponent.setSettings(view.settings);\n   // }\n\n   // static propertyEditorValues(ids, view) {\n   //    super.propertyEditorValues(ids, view);\n\n   //    // Retrive the values of your properties from Webix and store them in the view\n   //    view.settings.dataviewID = $$(ids.datacollection).getValue();\n   //    view.settings.isEditable = $$(ids.isEditable).getValue();\n   //    view.settings.massUpdate = $$(ids.massUpdate).getValue();\n   //    view.settings.allowDelete = $$(ids.allowDelete).getValue();\n   //    view.settings.isSortable = $$(ids.isSortable).getValue();\n   //    view.settings.isExportable = $$(ids.isExportable).getValue();\n\n   //    var detailsPage = $$(ids.detailsPage).getValue();\n   //    var detailsTab = \"\";\n   //    if (detailsPage.split(\":\").length > 1) {\n   //       var detailsVals = detailsPage.split(\":\");\n   //       detailsPage = detailsVals[0];\n   //       detailsTab = detailsVals[1];\n   //    }\n   //    view.settings.detailsPage = detailsPage;\n   //    view.settings.detailsTab = detailsTab;\n\n   //    var editPage = $$(ids.editPage).getValue();\n   //    var editTab = \"\";\n   //    if (editPage.split(\":\").length > 1) {\n   //       var editVals = editPage.split(\":\");\n   //       editPage = editVals[0];\n   //       editTab = editVals[1];\n   //    }\n   //    view.settings.editPage = editPage;\n   //    view.settings.editTab = editTab;\n\n   //    view.settings.height = $$(ids.height).getValue();\n   //    view.settings.hideHeader = $$(ids.hideHeader).getValue();\n   //    view.settings.labelAsField = $$(ids.labelAsField).getValue();\n   //    view.settings.hideButtons = $$(ids.hideButtons).getValue();\n   //    // view.settings.groupBy = $$(ids.groupBy).getValue();\n\n   //    // pull order groupBy list\n   //    let groupByList = $$(ids.groupByList).serialize() || [];\n   //    view.settings.groupBy = groupByList.map((item) => item.id).join(\",\");\n\n   //    view.settings.gridFilter = PopupFilterProperty.getSettings();\n\n   //    view.settings.objectWorkspace = view.settings.objectWorkspace || {};\n   //    view.settings.objectWorkspace.hiddenFields = PopupHideFieldComponent.getValue();\n   //    view.settings.objectWorkspace.frozenColumnID = PopupFrozenColumnsComponent.getValue();\n\n   //    // link pages\n   //    let linkSettings = this.linkPageComponent.getSettings();\n   //    for (let key in linkSettings) {\n   //       view.settings[key] = linkSettings[key];\n   //    }\n\n   //    // Populate values to link page properties\n   //    this.linkPageComponent.viewLoad(view);\n   //    this.linkPageComponent.setSettings(view.settings);\n   // }\n\n   // static propertyUpdateGridFilterObject(ids, view) {\n   //    if (!view) return;\n\n   //    // Populate values to QueryBuilder\n   //    var selectedDv = view.datacollection;\n\n   //    if (selectedDv) {\n   //       let object = selectedDv.datasource;\n   //       if (object) {\n   //          PopupFilterProperty.objectLoad(object, selectedDv.settings.loadAll);\n   //       }\n   //    }\n   // }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   componentOld(App, objId) {\n      //    let baseCom = super.component(App);\n      //    var L = App.Label;\n      //    var idBase = objId || \"ABViewGrid_\" + this.id;\n      //    var ids = {\n      //       component: App.unique(idBase + \"_component\"),\n      //       toolbar: App.unique(idBase + \"_toolbar\"),\n      //       buttonDeleteSelected: App.unique(idBase + \"_deleteSelected\"),\n      //       // buttonExport: App.unique('buttonExport'),\n      //       buttonFilter: App.unique(idBase + \"_buttonFilter\"),\n      //       buttonMassUpdate: App.unique(idBase + \"_buttonMassUpdate\"),\n      //       buttonSort: App.unique(idBase + \"_buttonSort\"),\n      //       buttonExport: App.unique(idBase + \"_buttonExport\"),\n      //       globalSearchToolbar: App.unique(idBase + \"_globalSearchToolbar\"),\n      //    };\n      //    var labels = {\n      //       common: App.labels,\n      //    };\n      //    var CurrentObject = null;\n      //    var settings = {\n      //       allowDelete: this.settings.allowDelete,\n      //       detailsView: this.settings.detailsPage,\n      //       editView: this.settings.editPage,\n      //       isEditable: this.settings.isEditable,\n      //       massUpdate: this.settings.massUpdate,\n      //       configureHeaders: false,\n      //       summaryColumns: this.settings.summaryColumns,\n      //       countColumns: this.settings.countColumns,\n      //       hideHeader: this.settings.hideHeader,\n      //       labelAsField: this.settings.labelAsField,\n      //       hideButtons: this.settings.hideButtons,\n      //       groupBy: this.settings.groupBy,\n      //       hiddenFields: this.settings.hiddenFields,\n      //       frozenColumnID: this.settings.frozenColumnID || \"\",\n      //       isTreeDatable: this.datacollection && this.datacollection.isGroup,\n      //    };\n      //    let DataTable = new ABWorkspaceDatatable(App, idBase, settings);\n      //    let PopupMassUpdateComponent = new ABPopupMassUpdate(\n      //       App,\n      //       idBase + \"_mass\"\n      //    );\n      //    let PopupSortDataTableComponent = new ABPopupSortField(\n      //       App,\n      //       idBase + \"_sort\"\n      //    );\n      //    let exportPopup = new ABPopupExport(App, idBase + \"_export\");\n      //    let filterUI = this.filterHelper.component(App, idBase + \"_gridfilter\");\n      //    this.filterHelper.fromSettings(this.settings.gridFilter);\n      //    let linkPage = this.linkPageHelper.component(\n      //       App,\n      //       idBase + \"_gridlinkpage\"\n      //    );\n      //    let _init = (options, accessLevel) => {\n      //       if (this.settings.dataviewID != \"\") {\n      //          DataTable.init(\n      //             {\n      //                onCheckboxChecked: _logic.callbackCheckboxChecked,\n      //             },\n      //             accessLevel\n      //          );\n      //          PopupMassUpdateComponent.init({\n      //             // onSave:_logic.callbackAddFields        // be notified of something...who knows...\n      //          });\n      //          PopupSortDataTableComponent.init({\n      //             onChange: _logic.callbackSortData,\n      //          });\n      //          filterUI.init({\n      //             onFilterData: (fnFilter, filterRules) => {\n      //                _logic.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      //             },\n      //          });\n      //          exportPopup.init({});\n      //          if (\n      //             this.settings.massUpdate ||\n      //             this.settings.isSortable ||\n      //             this.settings.isExportable ||\n      //             (this.settings.gridFilter &&\n      //                this.settings.gridFilter.filterOption &&\n      //                this.settings.gridFilter.userFilterPosition == \"toolbar\")\n      //          ) {\n      //             $$(ids.toolbar).show();\n      //          }\n      //          if (this.settings.massUpdate == false) {\n      //             $$(ids.buttonMassUpdate).hide();\n      //             $$(ids.buttonDeleteSelected).hide();\n      //          }\n      //          if (this.settings.allowDelete == false) {\n      //             $$(ids.buttonDeleteSelected).hide();\n      //          }\n      //          if (this.settings.gridFilter) {\n      //             if (\n      //                this.settings.gridFilter.filterOption != 1 ||\n      //                this.settings.gridFilter.userFilterPosition != \"toolbar\"\n      //             ) {\n      //                $$(ids.buttonFilter).hide();\n      //             }\n      //             if (\n      //                this.settings.gridFilter.filterOption == 3 &&\n      //                this.settings.gridFilter.globalFilterPosition == \"single\"\n      //             ) {\n      //                $$(DataTable.ui.id).hide();\n      //             }\n      //             if (this.settings.gridFilter.isGlobalToolbar)\n      //                $$(ids.globalSearchToolbar).show();\n      //             else $$(ids.globalSearchToolbar).hide();\n      //          }\n      //          if (this.settings.isSortable == false) {\n      //             $$(ids.buttonSort).hide();\n      //          }\n      //          if (this.settings.isExportable == false) {\n      //             $$(ids.buttonExport).hide();\n      //          }\n      //          if (this.settings.hideHeader == true) {\n      //             DataTable.hideHeader();\n      //          }\n      //          var dv = this.datacollection;\n      //          if (dv && dv.datasource) {\n      //             CurrentObject = dv.datasource;\n      //             DataTable.objectLoad(CurrentObject);\n      //             PopupMassUpdateComponent.objectLoad(CurrentObject, DataTable);\n      //             PopupSortDataTableComponent.objectLoad(CurrentObject);\n      //             PopupSortDataTableComponent.setValue(this.settings.sortFields);\n      //             this.filterHelper.objectLoad(CurrentObject);\n      //             this.filterHelper.viewLoad(this);\n      //             exportPopup.objectLoad(CurrentObject);\n      //             exportPopup.dataCollectionLoad(dv);\n      //             exportPopup.setGridComponent($$(DataTable.ui.id));\n      //             exportPopup.setHiddenFields(this.settings.hiddenFields);\n      //             exportPopup.setFilename(this.label);\n      //             DataTable.refreshHeader();\n      //             // link page helper\n      //             linkPage.init({\n      //                view: this,\n      //                datacollection: dv,\n      //             });\n      //             // dv.bind($$(DataTable.ui.id));\n      //             DataTable.datacollectionLoad(dv);\n      //             var editPage = this.settings.editPage;\n      //             var detailsPage = this.settings.detailsPage;\n      //             var editTab = this.settings.editTab;\n      //             var detailsTab = this.settings.detailsTab;\n      //             var isEditable = this.settings.isEditable;\n      //             // we need to recursivly look backwards to toggle tabs into view when a user choosed to select a tab for edit or details views\n      //             function toggleTab(parentTab, wb) {\n      //                // find the tab\n      //                var tab = wb.getTopParentView().queryView({ id: parentTab });\n      //                // if we didn't pass and id we may have passed a domNode\n      //                if (tab == null) {\n      //                   tab = $$(parentTab);\n      //                }\n      //                if (tab == null) return;\n      //                // set the tabbar to to the tab\n      //                var tabbar = tab.getParentView().getParentView();\n      //                if (tabbar == null) return;\n      //                if (tabbar.setValue) {\n      //                   // if we have reached the top we won't have a tab\n      //                   tabbar.setValue(parentTab);\n      //                }\n      //                // find if it is in a multiview of a tab\n      //                var nextTab = tabbar.queryView(\n      //                   { view: \"scrollview\" },\n      //                   \"parent\"\n      //                );\n      //                // if so then do this again\n      //                if (nextTab) {\n      //                   toggleTab(nextTab, wb);\n      //                }\n      //             }\n      //             $$(DataTable.ui.id).attachEvent(\n      //                \"onItemClick\",\n      //                function (id, e, node) {\n      //                   var item = id;\n      //                   if (e == \"auto\") {\n      //                      // automatically choose the details page if a record matches\n      //                      // later on we can decide if we want to have the choice to select the edit page intead.\n      //                      _logic.changePage(dv, item, detailsPage);\n      //                      toggleTab(detailsTab, this);\n      //                   } else if (e.target.className.indexOf(\"eye\") > -1) {\n      //                      _logic.changePage(dv, item, detailsPage);\n      //                      toggleTab(detailsTab, this);\n      //                   } else if (e.target.className.indexOf(\"pencil\") > -1) {\n      //                      _logic.changePage(dv, item, editPage);\n      //                      toggleTab(editTab, this);\n      //                   } else if (e.target.className.indexOf(\"trash\") > -1) {\n      //                      // don't do anything for delete it is handled elsewhere\n      //                   } else if (!isEditable && detailsPage.length) {\n      //                      _logic.changePage(dv, item, detailsPage);\n      //                      toggleTab(detailsTab, this);\n      //                   } else if (\n      //                      !isEditable &&\n      //                      !detailsPage.length &&\n      //                      editPage.length &&\n      //                      this.config.accessLevel == 2\n      //                   ) {\n      //                      _logic.changePage(dv, item, editPage);\n      //                      toggleTab(editTab, this);\n      //                   }\n      //                }\n      //             );\n      //             $$(DataTable.ui.id).attachEvent(\n      //                \"onAfterRender\",\n      //                function (data) {\n      //                   if ($$(DataTable.ui.id)) {\n      //                      //set cy data\n      //                      $$(DataTable.ui.id).$view.setAttribute(\n      //                         \"data-cy\",\n      //                         DataTable.idBase\n      //                      );\n      //                      for (const key in ids) {\n      //                         if (Object.hasOwnProperty.call(ids, key)) {\n      //                            let element = ids[key].toString();\n      //                            if ($$(element)) {\n      //                               $$(element).$view.setAttribute(\n      //                                  \"data-cy\",\n      //                                  element\n      //                               );\n      //                            }\n      //                         }\n      //                      }\n      //                   }\n      //                }\n      //             );\n      //             // $$(DataTable.ui.id).attachEvent('onBeforeRender', function (data) {\n      //             //    _logic.clientSideDataFilter();\n      //             // });\n      //             $$(DataTable.ui.id).adjust();\n      //          }\n      //          // Adjust grid based off Access Level of parent view\n      //          if (accessLevel < 2) {\n      //             $$(ids.buttonMassUpdate).hide();\n      //             $$(ids.buttonDeleteSelected).hide();\n      //          }\n      //       }\n      //    };\n      //    // specify height of the grid\n      //    if (this.settings.height) DataTable.ui.height = this.settings.height;\n      //    var tableUI = {\n      //       type: \"space\",\n      //       rows: [\n      //          {\n      //             view: \"label\",\n      //             label: \"Select an object to load.\",\n      //             inputWidth: 200,\n      //             align: \"center\",\n      //          },\n      //          {},\n      //       ],\n      //    };\n      //    if (this.settings.dataviewID != \"\") {\n      //       tableUI = {\n      //          type: \"space\",\n      //          padding: 17,\n      //          rows: [\n      //             {\n      //                view: \"toolbar\",\n      //                id: ids.toolbar,\n      //                hidden: true,\n      //                css: \"ab-data-toolbar\",\n      //                cols: [\n      //                   {\n      //                      view: \"button\",\n      //                      id: ids.buttonMassUpdate,\n      //                      css: \"webix_transparent\",\n      //                      label: L(\"ab.object.toolbar.massUpdate\", \"*Edit\"),\n      //                      icon: \"fa fa-pencil-square-o\",\n      //                      type: \"icon\",\n      //                      disabled: true,\n      //                      autowidth: true,\n      //                      click: function () {\n      //                         _logic.toolbarMassUpdate(this.$view);\n      //                      },\n      //                   },\n      //                   {\n      //                      view: \"button\",\n      //                      id: ids.buttonDeleteSelected,\n      //                      css: \"webix_transparent\",\n      //                      label: L(\"ab.object.toolbar.deleteRecords\", \"*Delete\"),\n      //                      icon: \"fa fa-trash\",\n      //                      type: \"icon\",\n      //                      disabled: true,\n      //                      autowidth: true,\n      //                      click: function () {\n      //                         _logic.toolbarDeleteSelected(this.$view);\n      //                      },\n      //                   },\n      //                   {\n      //                      view: \"button\",\n      //                      id: ids.buttonFilter,\n      //                      css: \"webix_transparent\",\n      //                      label: L(\"ab.object.toolbar.filterFields\", \"*Filters\"),\n      //                      icon: \"fa fa-filter\",\n      //                      type: \"icon\",\n      //                      autowidth: true,\n      //                      click: function () {\n      //                         _logic.toolbarFilter(this.$view);\n      //                      },\n      //                   },\n      //                   {\n      //                      view: \"button\",\n      //                      id: ids.buttonSort,\n      //                      css: \"webix_transparent\",\n      //                      label: L(\"ab.object.toolbar.sortFields\", \"*Sort\"),\n      //                      icon: \"fa fa-sort\",\n      //                      type: \"icon\",\n      //                      autowidth: true,\n      //                      click: function () {\n      //                         _logic.toolbarSort(this.$view);\n      //                      },\n      //                   },\n      //                   {\n      //                      view: \"button\",\n      //                      id: ids.buttonExport,\n      //                      css: \"webix_transparent\",\n      //                      label: L(\"ab.object.toolbar.export\", \"*Export\"),\n      //                      icon: \"fa fa-print\",\n      //                      type: \"icon\",\n      //                      autowidth: true,\n      //                      click: function () {\n      //                         _logic.toolbarExport(this.$view);\n      //                      },\n      //                   },\n      //                   /*\n      //             {\n      //                view: view,\n      //                id: ids.buttonExport,\n      //                label: labels.component.export,\n      //                icon: \"fa fa-download\",\n      //                type: \"icon\",\n      //                click: function() {\n      //                   _logic.toolbarButtonExport(this.$view);\n      //                }\n      //             }\n      //                          */\n      //                   {},\n      //                   {\n      //                      id: ids.globalSearchToolbar,\n      //                      view: \"search\",\n      //                      placeholder: \"Search...\",\n      //                      on: {\n      //                         onTimedKeyPress: () => {\n      //                            let searchText = $$(\n      //                               ids.globalSearchToolbar\n      //                            ).getValue();\n      //                            filterUI.searchText(searchText);\n      //                         },\n      //                      },\n      //                   },\n      //                ],\n      //             },\n      //             filterUI.ui,\n      //             DataTable.ui,\n      //          ],\n      //       };\n      //    }\n      //    // our internal business logic\n      //    var _logic = {\n      //       callbackCheckboxChecked: (state) => {\n      //          if (state == \"enable\") {\n      //             _logic.enableUpdateDelete();\n      //          } else {\n      //             _logic.disableUpdateDelete();\n      //          }\n      //       },\n      //       callbackSortData: (sort_settings) => {\n      //          let sortRules = sort_settings || [];\n      //          $$(ids.buttonSort).define(\"badge\", sortRules.length || null);\n      //          $$(ids.buttonSort).refresh();\n      //          let gridElem = $$(DataTable.ui.id);\n      //          Promise.resolve()\n      //             // NOTE: Webix's client sorting does not support dynamic loading.\n      //             // If the data does not be loaded, then load all data.\n      //             .then(() => {\n      //                if (gridElem.data.find({}).length < gridElem.data.count()) {\n      //                   return new Promise((next, bad) => {\n      //                      this.datacollection\n      //                         .reloadData(0, 0)\n      //                         .catch(bad)\n      //                         .then(() => {\n      //                            // wait until the grid component will done to repaint UI\n      //                            setTimeout(() => {\n      //                               next();\n      //                            }, 777);\n      //                         });\n      //                   });\n      //                } else {\n      //                   return Promise.resolve();\n      //                }\n      //             })\n      //             // client sort data\n      //             .then(() => {\n      //                gridElem.sort(PopupSortDataTableComponent.sort);\n      //             });\n      //       },\n      //       callbackFilterData: (fnFilter, filterRules) => {\n      //          filterRules = filterRules || [];\n      //          if ($$(ids.buttonFilter)) {\n      //             $$(ids.buttonFilter).define(\"badge\", filterRules.length || null);\n      //             $$(ids.buttonFilter).refresh();\n      //          }\n      //          Promise.resolve()\n      //             .then(\n      //                () =>\n      //                   new Promise((next, err) => {\n      //                      // if (\n      //                      //    !this.settings ||\n      //                      //    !this.settings.gridFilter ||\n      //                      //    this.settings.gridFilter.filterOption != 3\n      //                      // )\n      //                      //    // Global search\n      //                      //    return next();\n      //                      let dc = this.datacollection;\n      //                      if (\n      //                         !dc ||\n      //                         (dc.settings.loadAll &&\n      //                            dc.dataStatus != dc.dataStatusFlag.notInitial)\n      //                      )\n      //                         // Load all already\n      //                         return next();\n      //                      let limit = null;\n      //                      // limit pull data to reduce time and performance loading\n      //                      // if (dc.__dataCollection.count() > 300) limit = 300;\n      //                      // Load all data\n      //                      let gridElem = $$(DataTable.ui.id);\n      //                      if (\n      //                         gridElem.data.find({}).length < gridElem.data.count()\n      //                      ) {\n      //                         dc.reloadData(0, limit)\n      //                            .then(() => {\n      //                               // Should set .loadAll to this data collection ?\n      //                               if (limit == null) dc.settings.loadAll = true;\n      //                               next();\n      //                            })\n      //                            .catch(err);\n      //                      } else {\n      //                         next();\n      //                      }\n      //                   })\n      //             )\n      //             // client filter data\n      //             .then(\n      //                () =>\n      //                   new Promise((next, err) => {\n      //                      if (!fnFilter) return next();\n      //                      // wait the data are parsed into webix.datatable\n      //                      setTimeout(() => {\n      //                         let table = $$(DataTable.ui.id);\n      //                         table.filter((rowData) => {\n      //                            // rowData is null when is not load from paging\n      //                            if (rowData == null) return false;\n      //                            return fnFilter(rowData);\n      //                         });\n      //                         if (\n      //                            this.settings.gridFilter.globalFilterPosition ==\n      //                            \"single\"\n      //                         ) {\n      //                            if (table.count() > 0) {\n      //                               table.show();\n      //                               table.select(table.getFirstId(), false);\n      //                               table.callEvent(\"onItemClick\", [\n      //                                  table.getFirstId(),\n      //                                  \"auto\",\n      //                                  null,\n      //                               ]);\n      //                            } else {\n      //                               table.hide();\n      //                            }\n      //                         }\n      //                         next();\n      //                      }, 500);\n      //                   })\n      //             );\n      //       },\n      //       changePage: (dv, rowItem, page) => {\n      //          let rowId = rowItem && rowItem.row ? rowItem.row : null;\n      //          // Set cursor to data view\n      //          if (dv) {\n      //             dv.setCursor(rowId);\n      //          }\n      //          // Pass settings to link page module\n      //          if (linkPage) {\n      //             linkPage.changePage(page, rowId);\n      //          }\n      //          super.changePage(page);\n      //       },\n      //       selectRow: (rowData) => {\n      //          if (!$$(DataTable.ui.id)) return;\n      //          if (rowData == null) $$(DataTable.ui.id).unselect();\n      //          else if (\n      //             rowData &&\n      //             rowData.id &&\n      //             $$(DataTable.ui.id).exists(rowData.id)\n      //          )\n      //             $$(DataTable.ui.id).select(rowData.id, false);\n      //          else $$(DataTable.ui.id).select(null, false);\n      //       },\n      //       /**\n      //        * @function enableUpdateDelete\n      //        *\n      //        * enable the update or delete buttons in the toolbar if there are any items selected\n      //        * we will make this externally accessible so we can call it from within the datatable component\n      //        */\n      //       enableUpdateDelete: function () {\n      //          $$(ids.buttonMassUpdate).enable();\n      //          $$(ids.buttonDeleteSelected).enable();\n      //       },\n      //       /**\n      //        * @function enableUpdateDelete\n      //        *\n      //        * disable the update or delete buttons in the toolbar if there no items selected\n      //        * we will make this externally accessible so we can call it from within the datatable component\n      //        */\n      //       disableUpdateDelete: function () {\n      //          $$(ids.buttonMassUpdate).disable();\n      //          $$(ids.buttonDeleteSelected).disable();\n      //       },\n      //       toolbarDeleteSelected: function ($view) {\n      //          var deleteTasks = [];\n      //          $$(DataTable.ui.id).data.each(function (obj) {\n      //             if (\n      //                typeof obj != \"undefined\" &&\n      //                obj.hasOwnProperty(\"appbuilder_select_item\") &&\n      //                obj.appbuilder_select_item == 1\n      //             ) {\n      //                deleteTasks.push(function (next) {\n      //                   CurrentObject.model()\n      //                      .delete(obj.id)\n      //                      .then((response) => {\n      //                         next();\n      //                      }, next);\n      //                });\n      //             }\n      //          });\n      //          if (deleteTasks.length > 0) {\n      //             App.AB.Dialog.Confirm({\n      //                title: L(\"ab.massDelete.title\", \"*Delete Multiple Records\"),\n      //                text: L(\n      //                   \"ab.massDelete.description\",\n      //                   \"*Are you sure you want to delete the selected records?\"\n      //                ),\n      //                callback: function (result) {\n      //                   if (result) {\n      //                      async.parallel(deleteTasks, function (err) {\n      //                         if (err) {\n      //                            // TODO : Error message\n      //                         } else {\n      //                            // Anything we need to do after we are done.\n      //                            _logic.disableUpdateDelete();\n      //                         }\n      //                      });\n      //                   }\n      //                },\n      //             });\n      //          } else {\n      //             App.AB.Dialog.Alert({\n      //                title: L(\"key.no.records.selected\", \"No Records Selected\"),\n      //                text: L(\n      //                   \"key.select.one\",\n      //                   \"You need to select at least one record...did you drink your coffee today?\"\n      //                ),\n      //             });\n      //          }\n      //       },\n      //       toolbarFilter: ($view) => {\n      //          filterUI.showPopup($view);\n      //       },\n      //       toolbarSort: ($view) => {\n      //          PopupSortDataTableComponent.show($view);\n      //       },\n      //       toolbarExport: ($view) => {\n      //          exportPopup.show($view);\n      //       },\n      //       toolbarMassUpdate: function ($view) {\n      //          PopupMassUpdateComponent.show($view);\n      //       },\n      //    };\n      //    var _onShow = () => {\n      //       baseCom.onShow();\n      //       if ($$(DataTable.ui.id)) {\n      //          $$(DataTable.ui.id).adjust();\n      //       }\n      //       var dv = this.datacollection;\n      //       if (dv) {\n      //          this.eventAdd({\n      //             emitter: dv,\n      //             eventName: \"changeCursor\",\n      //             listener: _logic.selectRow,\n      //          });\n      //       }\n      //    };\n      //    return {\n      //       ui: tableUI,\n      //       init: _init,\n      //       logic: _logic,\n      //       onShow: _onShow,\n      //    };\n   }\n\n   component(v1App = false) {\n      var component = new ABViewGridComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   // populateEditor(ids, view) {\n   //    // Pull data collections to options\n   //    var objectOptions = view.propertyDatacollections();\n   //    $$(ids.datacollection).define(\"options\", objectOptions);\n   //    $$(ids.datacollection).refresh();\n   //    if (view.settings.datacollection != \"\") {\n   //       $$(ids.datacollection).setValue(view.settings.dataviewID);\n   //       // $$(ids.linkedObject).show();\n   //    } else {\n   //       $$(ids.datacollection).setValue(\"\");\n   //       // $$(ids.linkedObject).hide();\n   //    }\n\n   //    // Grouping options\n   //    let groupFields = [];\n   //    let dv = this.datacollection;\n   //    if (dv && dv.datasource) {\n   //       dv.datasource\n   //          .fields((f) => {\n   //             return (\n   //                !f.isConnection &&\n   //                view.settings.hiddenFields.indexOf(f.columnName) < 0\n   //             );\n   //          })\n   //          .forEach((f) => {\n   //             groupFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //             });\n   //          });\n   //    }\n   //    $$(ids.groupBy).define(\"options\", groupFields);\n   //    $$(ids.groupBy).refresh();\n\n   //    this.propertyGroupByList(ids, view.settings.groupBy);\n   // }\n\n   // populatePopupEditors(view, dataSource) {\n   //    var dv = this.datacollection;\n   //    if (!dv) return;\n\n   //    let object = dv.datasource;\n   //    if (!object) return;\n\n   //    PopupHideFieldComponent.objectLoad(object);\n   //    PopupHideFieldComponent.setValue(view.settings.hiddenFields || []);\n   //    PopupHideFieldComponent.setFrozenColumnID(\n   //       view.settings.frozenColumnID || \"\"\n   //    );\n   //    PopupFrozenColumnsComponent.objectLoad(object);\n   //    PopupFrozenColumnsComponent.setValue(view.settings.frozenColumnID || \"\");\n   //    PopupFrozenColumnsComponent.setHiddenFields(\n   //       view.settings.hiddenFields || []\n   //    );\n\n   //    PopupFilterProperty.objectLoad(object);\n   //    PopupFilterProperty.setSettings(view.settings.gridFilter);\n\n   //    PopupSummaryColumnsComponent.objectLoad(object, view);\n   //    PopupSummaryColumnsComponent.setValue(view.settings.summaryColumns || []);\n\n   //    PopupCountColumnsComponent.objectLoad(object, view);\n   //    PopupCountColumnsComponent.setValue(view.settings.countColumns || []);\n   // }\n\n   // populateBadgeNumber(ids, view) {\n   //    // set badge numbers to setting buttons\n   //    if (view.settings.hiddenFields) {\n   //       $$(ids.buttonFieldsVisible).define(\n   //          \"badge\",\n   //          view.settings.hiddenFields.length || null\n   //       );\n   //       $$(ids.buttonFieldsVisible).refresh();\n   //    } else {\n   //       $$(ids.buttonFieldsVisible).define(\"badge\", null);\n   //       $$(ids.buttonFieldsVisible).refresh();\n   //    }\n\n   //    if (view.settings.gridFilter && view.settings.gridFilter.filterOption) {\n   //       $$(ids.buttonFilterData).define(\"badge\", \"Y\");\n   //       $$(ids.buttonFilterData).refresh();\n   //    } else {\n   //       $$(ids.buttonFilterData).define(\"badge\", null);\n   //       $$(ids.buttonFilterData).refresh();\n   //    }\n\n   //    if (view.settings && view.settings.frozenColumnID) {\n   //       $$(ids.buttonFieldsFreeze).define(\"badge\", \"Y\");\n   //       $$(ids.buttonFieldsFreeze).refresh();\n   //    } else {\n   //       $$(ids.buttonFieldsFreeze).define(\"badge\", null);\n   //       $$(ids.buttonFieldsFreeze).refresh();\n   //    }\n\n   //    if (view.settings && view.settings.summaryColumns) {\n   //       $$(ids.buttonSummaryFields).define(\n   //          \"badge\",\n   //          view.settings.summaryColumns.length || null\n   //       );\n   //       $$(ids.buttonSummaryFields).refresh();\n   //    } else {\n   //       $$(ids.buttonSummaryFields).define(\"badge\", null);\n   //       $$(ids.buttonSummaryFields).refresh();\n   //    }\n\n   //    if (view.settings && view.settings.countColumns) {\n   //       $$(ids.buttonCountFields).define(\n   //          \"badge\",\n   //          view.settings.countColumns.length || null\n   //       );\n   //       $$(ids.buttonCountFields).refresh();\n   //    } else {\n   //       $$(ids.buttonCountFields).define(\"badge\", null);\n   //       $$(ids.buttonCountFields).refresh();\n   //    }\n   // }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewImageEditorComponent\";\n\n      var ImageComponent = this.component(App, idBase);\n\n      return ImageComponent;\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      _logic.validateType = (item) => {\n         // verify file type\n         var acceptableTypes = [\"jpg\", \"jpeg\", \"bmp\", \"png\", \"gif\"];\n         var type = item.type.toLowerCase();\n         if (acceptableTypes.indexOf(type) == -1) {\n            webix.message(\n               L(\"Only [{0}] images are supported\", [\n                  acceptableTypes.join(\", \"),\n               ])\n            );\n            return false;\n         } else {\n            // set upload url to uploader\n            var currView = _logic.currentEditObject();\n            let actionKey = `opstool.AB_${currView.application.name.replace(\n               \"_\",\n               \"\"\n            )}.view`;\n            let url = `/file/upload/${currView.application.name}/${actionKey}/1`;\n\n            $$(ids.file).define(\"upload\", url);\n            $$(ids.file).refresh();\n\n            return true;\n         }\n      };\n\n      _logic.uploadedFile = (fileInfo) => {\n         if (!fileInfo || !fileInfo.data) return;\n\n         var currView = _logic.currentEditObject();\n         currView.settings.filename = fileInfo.data.uuid;\n\n         // get width & height of images\n         if (fileInfo.file) {\n            let img = new Image();\n            img.onload = function () {\n               $$(ids.width).setValue(img.width);\n               $$(ids.height).setValue(img.height);\n            };\n            img.src = URL.createObjectURL(fileInfo.file);\n         }\n\n         // trigger a save()\n         this.propertyEditorSave(ids, currView);\n      };\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         {\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Image:\"),\n                  css: \"ab-text-bold\",\n                  width: this.AB.UISettings.config().labelWidthXLarge,\n               },\n               {\n                  view: \"uploader\",\n                  value: L(\"Upload image\"),\n                  name: \"file\",\n                  apiOnly: true,\n                  inputName: \"image\",\n                  multiple: false,\n                  on: {\n                     onBeforeFileAdd: (item) => {\n                        return _logic.validateType(item);\n                     },\n\n                     onFileUpload: (file, response) => {\n                        _logic.uploadedFile(file);\n                     },\n\n                     onFileUploadError: (file, response) => {},\n                  },\n               },\n            ],\n         },\n         {\n            view: \"counter\",\n            name: \"width\",\n            label: L(\"Width:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      $$(ids.width).setValue(view.settings.width);\n      $$(ids.height).setValue(view.settings.height);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.width = $$(ids.width).getValue();\n      view.settings.height = $$(ids.height).getValue();\n   }\n\n   /*\n    * @component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      var idBase = `ABViewImage_${this.id}`;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      // an ABViewLabel is a simple Label\n      var _ui = {\n         cols: [\n            {\n               id: ids.component,\n               view: \"template\",\n               template: \"\",\n               height: this.settings.height,\n               width: this.settings.width,\n            },\n            {},\n         ],\n      };\n\n      // make sure each of our child views get .init() called\n      var _init = (options) => {\n         if (!$$(ids.component)) return;\n\n         if (this.settings.filename) {\n            let imgTag = `<img src=\"/file/${this.settings.filename}\" height=\"${this.settings.height}\" width=\"${this.settings.width}\">`;\n\n            $$(ids.component).define(\"template\", imgTag);\n         } else {\n            $$(ids.component).define(\"template\", \"\");\n         }\n\n         $$(ids.component).refresh();\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n      };\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nimport ABViewComponent from \"./viewComponent/ABViewComponent\";\n\nconst ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\")\n   .default;\n\nconst ABFormSidePanel = require(\"./ABViewKanbanFormSidePanel\");\n\nvar L = null;\n// multilingual Label fn()\n\nvar ABFieldConnect = null;\nvar ABFieldUser = null;\nvar ABFieldList = null;\n\nclass ABViewKanBanComponent extends ABViewComponent {\n   constructor(viewKanBan, idBase) {\n      var base = idBase || `ABViewKanBan_${viewKanBan.id}`;\n\n      super(base, {\n         // component: \"\",\n         kanban: \"\",\n         resizer: \"\",\n      });\n\n      this.viewKanBan = viewKanBan;\n      this.AB = viewKanBan.AB;\n\n      this.settings = viewKanBan.settings;\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         `${base}_formSidePanel`,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = viewKanBan.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n\n         ABFieldConnect = this.AB.Class.ABFieldManager.fieldByKey(\n            \"connectObject\"\n         );\n         ABFieldUser = this.AB.Class.ABFieldManager.fieldByKey(\"user\");\n         ABFieldList = this.AB.Class.ABFieldManager.fieldByKey(\"list\");\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n      var self = this;\n\n      return {\n         id: ids.component,\n         cols: [\n            {\n               id: ids.kanban,\n               view: \"kanban\",\n               cols: [],\n               userList: {\n                  view: \"menu\",\n                  // yCount: 8,\n                  // scroll: false,\n                  template: '<i class=\"fa fa-user\"></i> #value#',\n                  width: 150,\n                  on: {\n                     onSelectChange: function () {\n                        if (self._updatingOwnerRowId == null)\n                           // get this row id from onAvatarClick event\n                           return;\n\n                        let userId = this.getSelectedId(false);\n                        if (userId == null) return;\n\n                        self.updateOwner(self._updatingOwnerRowId, userId);\n                     },\n                  },\n               },\n               editor: false, // we use side bar\n               users: [],\n               tags: [],\n               data: [],\n               on: {\n                  onListAfterSelect: (itemId, list) => {\n                     this.CurrentDatacollection?.setCursor(itemId);\n                     this.emit(\"select\", itemId);\n\n                     if (itemId) {\n                        let data = $$(ids.kanban).getItem(itemId);\n                        this.FormSide.show(data);\n\n                        $$(ids.resizer)?.show();\n                     } else {\n                        this.FormSide.hide();\n\n                        $$(ids.resizer)?.hide();\n                     }\n                  },\n                  onAfterStatusChange: (rowId, status /*, list */) => {\n                     this.updateStatus(rowId, status);\n                  },\n                  onAvatarClick: (rowId /*, ev, node, list */) => {\n                     // keep this row id for update owner data in .userList\n                     this._updatingOwnerRowId = rowId;\n                  },\n               },\n            },\n            {\n               id: ids.resizer,\n               view: \"resizer\",\n               css: \"bg_gray\",\n               width: 11,\n               hidden: true,\n            },\n            this.FormSide.ui(),\n         ],\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n\n      if (this.$kb) webix.extend(this.$kb, webix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n   }\n\n   get $kb() {\n      if (!this._kb) {\n         this._kb = $$(this.ids.kanban);\n      }\n      return this._kb;\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            ) {\n               return this.CurrentOwnerField.format(obj);\n            } else {\n               return \"<span class='webix_icon fa fa-user'></span>\";\n            }\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            if (!this.settings.template) {\n               return this.CurrentObject?.displayData(data);\n            }\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      var ids = this.ids;\n      $$(ids.component)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      var CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n      var CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof ABFieldConnect\n      ) {\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n      }\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      let verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof ABFieldConnect) {\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n               }\n\n               horizontalVals.push({\n                  id: null,\n                  text: L(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  let statusOps = {};\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               let statusOps = {};\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      webix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      var CurrentOwnerField = CurrentObject.fieldByID(this.settings.ownerField);\n      this.CurrentOwnerField = CurrentOwnerField;\n      if (CurrentOwnerField) {\n         let $menuUser = $$(ids.kanban).getUserList();\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof ABFieldUser) {\n            let users = this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof ABFieldConnect) {\n            let options = await CurrentOwnerField.getOptions();\n\n            $menuUser.parse(\n               options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                  };\n               })\n            );\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      var DC = this.CurrentDatacollection;\n      if (!DC) {\n         DC = datacollection;\n      }\n      if (DC) {\n         DC.bind(this.$kb);\n         var obj = DC.datasource;\n         if (obj) this.objectLoad(obj);\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) {\n         patch = status;\n      }\n      // update single value\n      else {\n         patch[this.CurrentVerticalField.columnName] = status;\n      }\n\n      // update empty value\n      let needRefresh = false;\n      for (let key in patch) {\n         if (patch[key] == null) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n      }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            let data = $$(ids.kanban).getItem(rowId);\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n         this.ready();\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         let updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            let data = this.$kb.getItem(rowId);\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id)) {\n         this.$kb.updateItem(data.id, data);\n      }\n      // insert\n      else {\n         this.$kb.add(data);\n      }\n   }\n\n   unselect() {\n      if (this.$kb) {\n         this.$kb.eachList(function (list /*, status*/) {\n            list?.unselect?.();\n         });\n      }\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      webix.confirm({\n         title: L(\"Remove card\"),\n         text: L(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               let response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  webix.alert({\n                     text: L(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n}\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewKanbanEditorComponent\";\n\n      var Kanban = this.component(App, idBase);\n\n      return {\n         ui: Kanban.ui,\n         logic: Kanban.logic,\n         onShow: Kanban.onShow,\n\n         init: () => {\n            // remove id of the component in caching for refresh .bind of the data collection\n            let dv = this.datacollection;\n            if (dv) dv.removeComponent(Kanban.ui.id);\n\n            Kanban.init();\n         },\n      };\n   }\n\n   component(v1App = false) {\n      var component = new ABViewKanBanComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui.rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\n\nconst ABViewLabelPropertyComponentDefaults = ABViewLabelCore.defaultValues();\n\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewLabelComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld() {}\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewLayoutComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   /**\n    * @method componentOld()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   componentOld(App, idPrefix) {\n      let idBase = `ABViewLayout_${idPrefix || \"\"}${this.id}`;\n      let ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      this.viewComponents = this.viewComponents || {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      let _ui = {\n         id: ids.component,\n         view: \"layout\",\n         cols: [],\n      };\n\n      this.views().forEach((v) => {\n         this.viewComponents[v.id] = v.component(App, idPrefix);\n         _ui.cols.push(this.viewComponents[v.id].ui);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               this.changePage(pageId);\n            },\n         });\n      });\n\n      // make sure each of our child views get .init() called\n      var _init = (options, accessLevel) => {\n         this.views().forEach((v) => {\n            var component = this.viewComponents[v.id];\n\n            // initial sub-component\n            if (component && component.init) {\n               component.init(options, accessLevel);\n            }\n         });\n      };\n\n      var _onShow = () => {\n         // calll .onShow in child components\n         this.views().forEach((v) => {\n            var component = this.viewComponents[v.id];\n\n            if (component && component.onShow) {\n               component.onShow();\n            }\n         });\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         // logic: _logic,\n\n         onShow: _onShow,\n      };\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewListEditorComponent\";\n\n      var ListView = this.component(App, idBase);\n\n      return {\n         ui: ListView.ui,\n         logic: ListView.logic,\n         onShow: ListView.onShow,\n\n         init: () => {\n            // remove id of the component in caching for refresh .bind of the data collection\n            let dv = this.datacollection;\n            if (dv) dv.removeComponent(ListView.ui.id);\n\n            ListView.init();\n         },\n      };\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      // _logic functions\n\n      _logic.selectSource = (dcId, oldDcId) => {\n         var currView = _logic.currentEditObject();\n\n         // Update field options in property\n         this.propertyUpdateFieldOptions(ids, currView, dcId);\n      };\n\n      return commonUI.concat([\n         {\n            name: \"datacollection\",\n            view: \"richselect\",\n            label: L(\"Data Source\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            on: {\n               onChange: _logic.selectSource,\n            },\n         },\n         {\n            name: \"field\",\n            view: \"richselect\",\n            label: L(\"Field\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n      ]);\n   }\n\n   /**\n    * @method propertyUpdateFieldOptions\n    * Populate fields of object to select list in property\n    *\n    * @param {Object} ids\n    * @param {ABViewForm} view - the current component\n    * @param {string} dvId - id of ABDatacollection\n    */\n   static propertyUpdateFieldOptions(ids, view, dvId) {\n      var datacollection = view.AB.datacollectionByID(dvId);\n      var object = datacollection ? datacollection.datasource : null;\n\n      // Pull field list\n      var fieldOptions = [];\n      if (object != null) {\n         fieldOptions = object.fields().map((f) => {\n            return {\n               id: f.id,\n               value: f.label,\n            };\n         });\n      }\n\n      $$(ids.field).define(\"options\", fieldOptions);\n      $$(ids.field).refresh();\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      var datacollectionId = view.settings.dataviewID\n         ? view.settings.dataviewID\n         : null;\n      var SourceSelector = $$(ids.datacollection);\n\n      // Pull data collections to options\n      var dcOptions = view.propertyDatacollections();\n      SourceSelector.define(\"options\", dcOptions);\n      SourceSelector.define(\"value\", datacollectionId);\n      SourceSelector.refresh();\n\n      this.propertyUpdateFieldOptions(ids, view, datacollectionId);\n\n      $$(ids.field).setValue(view.settings.field);\n      $$(ids.height).setValue(view.settings.height);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n      view.settings.field = $$(ids.field).getValue();\n      view.settings.height = $$(ids.height).getValue();\n      view.settings.height =\n         parseInt(view.settings.height) || ABViewList.defaultValues().height;\n   }\n\n   /*\n    * @component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let baseCom = super.component(App);\n\n      var idBase = \"ABViewListEditorComponent\";\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            var field = this.field();\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (this.settings.height != 0) {\n         _ui.height = this.settings.height;\n      } else {\n         _ui.autoHeight = true;\n      }\n\n      var _init = (options) => {\n         var dv = this.datacollection;\n         if (!dv) return;\n\n         // bind dc to component\n         dv.bind($$(ids.component));\n         // $$(ids.component).sync(dv);\n      };\n\n      // var _logic = {\n      // }\n\n      return {\n         ui: _ui,\n         init: _init,\n\n         onShow: baseCom.onShow,\n      };\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nconst ABViewMenuPropertyComponentDefaults = ABViewMenuCore.defaultValues();\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewMenuComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   /**\n    * @method componentOld()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   componentOld(App) {\n      var idBase = `ABMenuLabel_${this.id}`;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      var css = \"\";\n\n      if (this.settings.buttonStyle) {\n         css += this.settings.buttonStyle + \" \";\n      } else {\n         css += ABViewMenuPropertyComponentDefaults.buttonStyle + \" \";\n      }\n\n      if (this.settings.menuAlignment) {\n         css += this.settings.menuAlignment + \" \";\n      } else {\n         css += ABViewMenuPropertyComponentDefaults.menuAlignment + \" \";\n      }\n\n      var _ui = {\n         id: ids.component,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout:\n            this.settings.orientation ||\n            ABViewMenuPropertyComponentDefaults.orientation,\n         on: {\n            onMenuItemClick: (id, e, node) => {\n               // switch tab view\n               var item = $$(ids.component).getMenuItem(id);\n               if (item.type == \"tab\") {\n                  this.changePage(item.pageId);\n\n                  var redirectPage = this.application.pages(\n                     (p) => p.id == item.pageId,\n                     true\n                  )[0];\n                  if (!redirectPage) return;\n\n                  var tabView = redirectPage.views(\n                     (v) => v.id == item.id,\n                     true\n                  )[0];\n                  if (!tabView) return;\n\n                  var tab = tabView.parent;\n                  if (!tab) return;\n\n                  toggleParent(tab);\n                  // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n                  let showIt = setInterval(function () {\n                     if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                        clearInterval(showIt);\n                        return;\n                     }\n                     tab.emit(\"changeTab\", tabView.id);\n                  }, 100);\n                  // }\n               }\n               // switch page\n               else {\n                  this.changePage(id);\n               }\n            },\n            onAfterRender: () => {\n               const Menu = $$(ids.component);\n               if (!Menu) return;\n               Menu?.data.each((item) => {\n                  const node = Menu.getItemNode(item.id);\n                  if (!node) return;\n                  // get linked page/tab info so we can use its name in the data-cy\n                  const viewInfo = this.AB.definitionByID(item.id);\n                  node.setAttribute(\n                     \"data-cy\",\n                     `menu-item ${viewInfo?.name} ${item.id} ${this.id}`\n                  );\n               });\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n\n      if (parseInt(this.settings.menuInToolbar)) {\n         var elems = [];\n         var menuIncluded = false;\n\n         // Legacy support: use old settings values if translated values are not set\n         if (this.menuTextLeft == \"\" && this.settings.menuTextLeft) {\n            this.menuTextLeft = this.settings.menuTextLeft;\n         }\n         if (this.menuTextCenter == \"\" && this.settings.menuTextCenter) {\n            this.menuTextCenter = this.settings.menuTextCenter;\n         }\n         if (this.menuTextRight == \"\" && this.settings.menuTextRight) {\n            this.menuTextRight = this.settings.menuTextRight;\n         }\n\n         if (\n            this.settings.menuPosition &&\n            this.settings.menuPosition == \"left\"\n         ) {\n            menuIncluded = true;\n            elems.push(_ui);\n         } else if (this.menuTextLeft && this.menuTextLeft.length) {\n            let width = this.menuTextLeft.length * 15;\n            elems.push({\n               view: \"label\",\n               label: this.menuTextLeft,\n               align: \"left\",\n               width: width,\n            });\n         } else {\n            elems.push({\n               view: \"label\",\n               label: \"\",\n               autowidth: true,\n            });\n         }\n\n         if (\n            this.settings.menuPosition &&\n            this.settings.menuPosition == \"center\"\n         ) {\n            menuIncluded = true;\n            elems.push(_ui);\n         } else if (this.menuTextCenter && this.menuTextCenter.length) {\n            let width = this.menuTextLeft.length * 15;\n            elems.push({});\n            elems.push({\n               view: \"label\",\n               label: this.menuTextCenter,\n               align: \"center\",\n               width: width,\n            });\n            elems.push({});\n         } else {\n            elems.push({\n               view: \"label\",\n               label: \"\",\n               autowidth: true,\n            });\n         }\n\n         if (\n            this.settings.menuPosition &&\n            this.settings.menuPosition == \"right\"\n         ) {\n            menuIncluded = true;\n            elems.push(_ui);\n         } else if (this.menuTextRight && this.menuTextRight.length) {\n            let width = this.menuTextLeft.length * 15;\n            elems.push({\n               view: \"label\",\n               label: this.menuTextRight,\n               align: \"right\",\n               width: width,\n            });\n         } else {\n            elems.push({\n               view: \"label\",\n               label: \"\",\n               autowidth: true,\n            });\n         }\n\n         if (menuIncluded == false) {\n            elems = [_ui];\n         }\n\n         _ui = {\n            view: \"toolbar\",\n            css: this.settings.menuTheme\n               ? this.settings.menuTheme\n               : ABViewMenuPropertyComponentDefaults.menuTheme,\n            padding: this.settings.menuPadding\n               ? parseInt(this.settings.menuPadding)\n               : ABViewMenuPropertyComponentDefaults.menuPadding,\n            elements: elems,\n         };\n      }\n\n      // make sure each of our child views get .init() called\n      var _init = (options) => {\n         var Menu = $$(ids.component);\n         if (Menu) {\n            this.ClearPagesInView(Menu);\n            if (this.settings.order && this.settings.order.length) {\n               this.AddPagesToView(Menu, this.settings.order);\n               // Force onAfterRender to fire\n               Menu.refresh();\n            }\n         }\n      };\n\n      var toggleParent = (element) => {\n         if (!element.parent) return false;\n         var parentElem = element.parent;\n         if (!parentElem.parent) return false;\n         parentElem.parent.emit(\"changeTab\", parentElem.id);\n         toggleParent(parentElem.parent);\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n      };\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   // editorComponent(App, mode) {\n   //    var comp = super.editorComponent(App, mode);\n\n   //    var _init = (options) => {\n   //       comp.init(options);\n   //    };\n\n   //    return {\n   //       ui: comp.ui,\n   //       init: _init,\n   //       logic: comp.logic,\n\n   //       onShow: comp.onShow,\n   //    };\n   // }\n\n   /*\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      _logic.permissionClick = (id, e, node, isRetry = false) => {\n         var List = $$(ids.permissions);\n         var item = List.getItem(id);\n\n         List.showProgress({ type: \"icon\" });\n\n         if (item.markCheckbox) {\n            console.warn(\"ABViewPage:check for depreciated role removal here:\");\n            App.AB.Network.delete({\n               url: \"/app_builder/page/\" + item.action_key + \"/role\",\n               data: {\n                  role_id: item.id,\n               },\n            })\n               .then((data) => {\n                  item.markCheckbox = false;\n                  List.updateItem(id, item);\n                  List.hideProgress();\n               })\n               .catch((err) => {\n                  console.error(err);\n                  if (err.code == \"E_NOACTIONKEY\") {\n                     // if this our second time through, then display an error:\n                     if (isRetry) {\n                        console.error(\"Error Saving Permisison: \", err);\n                        List.hideProgress();\n                        return;\n                     }\n\n                     // in the case where no ActionKey was present,\n                     // we can still mark that this is no longer connected:\n                     item.markCheckbox = false;\n                     List.updateItem(id, item);\n\n                     // Now if we got here, there is an issue with the data in our\n                     // Permissions.  These permissions get created when a Page is\n                     // .created/saved, so let's run through our pages again and\n                     // save() them\n                     var allSaves = [];\n                     item._view.application.pages().forEach((page) => {\n                        allSaves.push(page.save());\n                     });\n\n                     // once that is all done, try this again:\n                     Promise.all(allSaves).then(() => {\n                        _logic.permissionClick(id, e, node, true);\n                     });\n                  }\n               });\n         } else {\n            console.warn(\"ABViewPage:check for depreciated role operation\");\n            App.AB.Network.put({\n               url: \"/app_builder/page/\" + item.action_key + \"/role\",\n               data: {\n                  role_id: item.id,\n               },\n            })\n               .then((data) => {\n                  item.markCheckbox = true;\n                  List.updateItem(id, item);\n                  List.hideProgress();\n               })\n               .catch((err) => {\n                  console.error(err);\n                  if (err.code == \"E_NOACTIONKEY\") {\n                     // if this our second time through, then display an error:\n                     if (isRetry) {\n                        console.error(\"Error Saving Permisison: \", err);\n                        List.hideProgress();\n                        return;\n                     }\n\n                     // Now if we got here, there is an issue with the data in our\n                     // Permissions.  These permissions get created when a Page is\n                     // .created/saved, so let's run through our pages again and\n                     // save() them\n                     var allSaves = [];\n                     item._view.application.pages().forEach((page) => {\n                        allSaves.push(page.save());\n                     });\n\n                     // once that is all done, try this again:\n                     Promise.all(allSaves).then(() => {\n                        _logic.permissionClick(id, e, node, true);\n                     });\n                  }\n               });\n         }\n      };\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         {\n            name: \"type\",\n            view: \"richselect\",\n            label: L(\"Type\"),\n            options: [\n               { id: \"page\", value: L(\"Page\") },\n               { id: \"popup\", value: L(\"Popup\") },\n            ],\n            on: {\n               onChange: function (newv, oldv) {\n                  if (newv == \"page\") {\n                     $$(ids.popupSettings).hide();\n                     $$(ids.pageSettings).show();\n                  } else {\n                     $$(ids.popupSettings).show();\n                     $$(ids.pageSettings).hide();\n                  }\n               },\n            },\n         },\n         {\n            view: \"fieldset\",\n            name: \"popupSettings\",\n            label: L(\"Popup Settings\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               type: \"clean\",\n               padding: 10,\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"popupWidth\",\n                     placeholder: L(\"Set popup width\"),\n                     label: L(\"Width:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     validate: webix.rules.isNumber,\n                  },\n                  {\n                     view: \"text\",\n                     name: \"popupHeight\",\n                     placeholder: L(\"Set popup height\"),\n                     label: L(\"Height:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     validate: webix.rules.isNumber,\n                  },\n               ],\n            },\n         },\n         {\n            view: \"fieldset\",\n            name: \"pageSettings\",\n            label: L(\"Page Settings\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               type: \"clean\",\n               padding: 10,\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     name: \"fixedPageWidth\",\n                     labelRight: L(\"Page has fixed width\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n                     click: function (id, event) {\n                        if (this.getValue() == 1) {\n                           $$(ids.pageWidth).show();\n                        } else {\n                           $$(ids.pageWidth).hide();\n                        }\n                     },\n                  },\n                  {\n                     view: \"text\",\n                     name: \"pageWidth\",\n                     placeholder: L(\"Set page width\"),\n                     label: L(\"Page width:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                  },\n                  {\n                     view: \"richselect\",\n                     name: \"pageBackground\",\n                     label: L(\"Page background:\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                     options: [\n                        {\n                           id: \"ab-background-default\",\n                           value: L(\"White (default)\"),\n                        },\n                        {\n                           id: \"ab-background-gray\",\n                           value: L(\"Dark\"),\n                        },\n                        // { \"id\":\"ab-background-texture\", \"value\":L('ab.component.page.pageBackgroundTextured', '*Textured')}\n                     ],\n                  },\n               ],\n            },\n         },\n         {\n            view: \"fieldset\",\n            name: \"pagePermissionPanel\",\n            label: L(\"Page Permissions:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            body: {\n               type: \"clean\",\n               padding: 10,\n               rows: [\n                  {\n                     name: \"permissions\",\n                     view: \"list\",\n                     select: false,\n                     minHeight: 200,\n                     template: \"{common.markCheckbox()} #name#\",\n                     type: {\n                        markCheckbox: function (obj) {\n                           return `<span class='check webix_icon fa fa-${\n                              obj.markCheckbox ? \"check-\" : \"\"\n                           }square-o'></span>`;\n                        },\n                     },\n                     on: {\n                        onItemClick: function (id, e, node) {\n                           _logic.permissionClick(id, e, node);\n                        },\n                     },\n                  },\n               ],\n            },\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view, logic) {\n      super.propertyEditorPopulate(App, ids, view, logic);\n\n      $$(ids.type).setValue(\n         view.settings.type || ABPropertyComponentDefaults.type\n      );\n      $$(ids.popupWidth).setValue(\n         view.settings.popupWidth || ABPropertyComponentDefaults.popupWidth\n      );\n      $$(ids.popupHeight).setValue(\n         view.settings.popupHeight || ABPropertyComponentDefaults.popupHeight\n      );\n      $$(ids.pageWidth).setValue(\n         view.settings.pageWidth || ABPropertyComponentDefaults.pageWidth\n      );\n      $$(ids.fixedPageWidth).setValue(\n         view.settings.fixedPageWidth ||\n            ABPropertyComponentDefaults.fixedPageWidth\n      );\n      $$(ids.pageBackground).setValue(\n         view.settings.pageBackground ||\n            ABPropertyComponentDefaults.pageBackground\n      );\n\n      // Disable select type of page when this page is root\n      if (view.isRoot()) {\n         $$(ids.type).hide();\n\n         // Update permission options\n         $$(ids.pagePermissionPanel).show();\n         this.propertyUpdatePermissionsOptions(ids, view);\n      } else {\n         $$(ids.pagePermissionPanel).hide();\n         $$(ids.type).show();\n      }\n\n      if (view.settings.type == \"popup\") {\n         $$(ids.popupSettings).show();\n         $$(ids.pageSettings).hide();\n      } else {\n         $$(ids.popupSettings).hide();\n         $$(ids.pageSettings).show();\n      }\n\n      if (view.settings.fixedPageWidth == 1) {\n         $$(ids.pageWidth).show();\n      } else {\n         $$(ids.pageWidth).hide();\n      }\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.type = $$(ids.type).getValue();\n      view.settings.popupWidth = $$(ids.popupWidth).getValue();\n      view.settings.popupHeight = $$(ids.popupHeight).getValue();\n      view.settings.pageWidth = $$(ids.pageWidth).getValue();\n      view.settings.fixedPageWidth = $$(ids.fixedPageWidth).getValue();\n      view.settings.pageBackground = $$(ids.pageBackground).getValue();\n   }\n\n   /**\n    * @method propertyUpdatePermissionsOptions\n    * Populate permissions of Ops Portal to select list in property\n    *\n    * /\n   static propertyUpdatePermissionsOptions(ids, view) {\n      var action_key = this.getPageActionKey(view);\n      var roles = [];\n\n      var List = $$(ids.permissions);\n\n      // make sure our list has been made into a ProgressBar\n      if (!List.showProgress) {\n         webix.extend(List, webix.ProgressBar);\n      }\n\n      List.clearAll();\n      List.showProgress({ type: \"icon\" });\n\n      console.error(\n         \"ABViewPage: check for depreciated Permission checks here.\"\n      );\n      view.application\n         .getPermissions()\n         .then(function (selected_role_ids) {\n            var app_roles = selected_role_ids;\n\n            view.AB.Network.get({\n               url: \"/app_builder/page/\" + action_key + \"/role\",\n            }).then((data) => {\n               var selectedRoles = [];\n               data.selected.forEach((s) => {\n                  selectedRoles.push(s.id);\n               });\n\n               data.roles.forEach((r) => {\n                  if (app_roles.indexOf(r.id) != -1) {\n                     if (selectedRoles.indexOf(r.id) != -1) {\n                        r.markCheckbox = true;\n                     } else {\n                        r.markCheckbox = false;\n                     }\n                     r.action_key = action_key;\n                     r._view = view;\n                     roles.push(r);\n                  }\n               });\n\n               roles = view.AB.orderBy(roles, \"id\", \"asc\");\n\n               List.parse(roles);\n               List.hideProgress();\n            });\n         })\n         .catch(function (err) {\n            List.hideProgress();\n\n            console.error(err);\n         });\n   }\n   */\n\n   /*\n    * @component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n   /*\n   componentV1(App) {\n      var comp = super.component(App);\n      var _ui = {\n         view: \"scrollview\",\n         borderless: true,\n         css:\n            this.settings.pageBackground ||\n            ABPropertyComponentDefaults.pageBackground,\n         body: comp.ui,\n      };\n\n      var _init = (options) => {\n         var accessLevel = this.getUserAccess();\n         comp.init(options, accessLevel);\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: comp.logic,\n\n         onShow: comp.onShow,\n      };\n   }\n   */\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABFieldCalculate = require(\"../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABObjectQuery = require(\"../ABObjectQuery\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewPivotEditorComponent\";\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      var componentBase = this.component(App);\n      var component = App.AB.cloneDeep(componentBase);\n\n      component.ui.id = ids.component;\n      component.ui.readonly = false;\n      component.ui.on = {\n         onBeforeApply: (structure) => {\n            this.settings.structure = structure;\n            this.save();\n         },\n      };\n\n      component.init = (options) => {\n         componentBase.init({\n            componentId: ids.component,\n         });\n      };\n\n      return component;\n   }\n\n   //\n   // Property Editor\n   //\n\n   // static propertyEditorComponent(App) {\n   // \treturn ABViewPropertyComponent.component(App);\n   // }\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      let commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      return commonUI.concat([\n         {\n            name: \"datacollection\",\n            view: \"richselect\",\n            label: L(\"Data Source\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"checkbox\",\n            name: \"removeMissed\",\n            labelRight: L(\"Remove empty data.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"totalColumn\",\n            labelRight: L(\"Show a total column.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"separateLabel\",\n            labelRight: L(\"Separate header label.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"min\",\n            labelRight: L(\n               \"Highlighting of a cell(s) with the least value in a row.\"\n            ),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"max\",\n            labelRight: L(\n               \"Highlighting of a cell(s) with the biggest value in a row.\"\n            ),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            name: \"decimalPlaces\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Decimal Places\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      var datacollectionId = view.settings.dataviewID\n         ? view.settings.dataviewID\n         : null;\n      var SourceSelector = $$(ids.datacollection);\n\n      // Pull data collections to options\n      var dcOptions = view.propertyDatacollections();\n      SourceSelector.define(\"options\", dcOptions);\n      SourceSelector.define(\"value\", datacollectionId);\n      SourceSelector.refresh();\n\n      $$(ids.removeMissed).setValue(view.settings.removeMissed);\n      $$(ids.totalColumn).setValue(view.settings.totalColumn);\n      $$(ids.separateLabel).setValue(view.settings.separateLabel);\n      $$(ids.min).setValue(view.settings.min);\n      $$(ids.max).setValue(view.settings.max);\n      $$(ids.height).setValue(view.settings.height);\n      $$(ids.decimalPlaces).setValue(\n         view.settings.decimalPlaces == null ? 2 : view.settings.decimalPlaces\n      );\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n\n      view.settings.removeMissed = $$(ids.removeMissed).getValue();\n      view.settings.totalColumn = $$(ids.totalColumn).getValue();\n      view.settings.separateLabel = $$(ids.separateLabel).getValue();\n      view.settings.min = $$(ids.min).getValue();\n      view.settings.max = $$(ids.max).getValue();\n      view.settings.height = $$(ids.height).getValue();\n   }\n\n   /*\n    * @component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let baseCom = super.component(App);\n\n      var idBase = `ABViewPivot_${this.id}`;\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      // an ABViewLabel is a simple Label\n      var _ui = {\n         id: ids.component,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: this.settings.removeMissed,\n         totalColumn: this.settings.totalColumn,\n         separateLabel: this.settings.separateLabel,\n         min: this.settings.min,\n         max: this.settings.max,\n         format: (value) => {\n            let decimalPlaces = this.settings.decimalPlaces || 2;\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n      };\n\n      // make sure each of our child views get .init() called\n      var _init = (options) => {\n         options = options || {};\n         options.componentId = options.componentId || ids.component;\n\n         let dc = this.datacollection;\n         if (!dc) return Promise.resolve();\n\n         let object = dc.datasource;\n         if (!object) return Promise.resolve();\n\n         let $pivotComp = $$(ids.component);\n         if ($pivotComp && object instanceof ABObjectQuery) {\n            let customLabels = {};\n            object.fields().forEach((f) => {\n               customLabels[f.columnName] = f.label;\n            });\n\n            $pivotComp.define(\"fieldMap\", customLabels);\n         }\n\n         let populateData = () => {\n            let data = dc.getData();\n            let dataMapped = data.map((d) => {\n               let result = {};\n\n               object.fields().forEach((f) => {\n                  if (\n                     f instanceof ABFieldCalculate ||\n                     f instanceof ABFieldFormula ||\n                     f instanceof ABFieldNumber\n                  )\n                     result[f.columnName] = d[f.columnName];\n                  else result[f.columnName] = f.format(d);\n               });\n\n               return result;\n            });\n\n            $$(options.componentId).parse(dataMapped);\n\n            // set pivot configuration\n            if (this.settings.structure)\n               $$(options.componentId).setStructure(this.settings.structure);\n         };\n\n         this.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => {\n               populateData();\n            },\n         });\n\n         return (\n            Promise.resolve()\n               // get data\n               .then(() => {\n                  return new Promise((next, err) => {\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           dc.loadData();\n                           break;\n                        case dc.dataStatusFlag.initialized:\n                           next();\n                           break;\n                     }\n                  });\n               })\n\n               // populate data into pivot\n               .then(() => {\n                  return new Promise((next, err) => {\n                     populateData();\n                     next();\n                  });\n               })\n         );\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n\n         onShow: baseCom.onShow,\n      };\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      let idBase = \"ABViewReportsManagerEditorComponent\";\n      let ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      let component = this.component(App);\n\n      component.ui.id = ids.component;\n\n      component.init = (options) => {};\n\n      return component;\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      return commonUI.concat([]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n   }\n\n   /*\n    * @component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let baseCom = super.component(App);\n\n      let idBase = `ABViewReportManager_${this.id}`;\n      let ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      let compInstance = this;\n\n      let _ui = {\n         id: ids.component,\n         view: \"reports\",\n         toolbar: true,\n         override: new Map([\n            [\n               reports.services.Backend,\n               class MyBackend extends reports.services.Backend {\n                  getModules() {\n                     return Promise.resolve(\n                        compInstance.settings.moduleList || []\n                     );\n                  }\n                  saveModule(id, data) {\n                     id = id || webix.uid();\n                     compInstance.settings.moduleList =\n                        compInstance.settings.moduleList || [];\n\n                     let indexOfModule = null;\n                     let module = compInstance.settings.moduleList.filter(\n                        (m, index) => {\n                           let isExists = m.id == id;\n                           if (isExists) indexOfModule = index;\n\n                           return isExists;\n                        }\n                     )[0];\n\n                     // Update\n                     if (module) {\n                        compInstance.settings.moduleList[indexOfModule] = data;\n                     }\n                     // Add\n                     else {\n                        compInstance.settings.moduleList.push(data);\n                     }\n\n                     return new Promise((resolve, reject) => {\n                        compInstance\n                           .save()\n                           .catch(reject)\n                           .then(() => {\n                              resolve({ id: id });\n                           });\n                     });\n                  }\n                  deleteModule(id) {\n                     compInstance.settings.moduleList =\n                        compInstance.settings.moduleList || [];\n\n                     compInstance.settings.moduleList = compInstance.settings.moduleList.filter(\n                        (m) => m.id != id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        compInstance\n                           .save()\n                           .catch(reject)\n                           .then(() => {\n                              resolve({ id: id });\n                           });\n                     });\n                  }\n\n                  getModels() {\n                     let reportModels = {};\n\n                     (compInstance.AB.datacollections() || []).forEach((dc) => {\n                        let obj = dc.datasource;\n                        if (!obj) return;\n\n                        let reportFields = _logic.getReportFields(dc);\n\n                        // get connected data collections\n                        // let linkedFields = [];\n                        // (obj.connectFields() || []).forEach((f, index) => {\n                        //    let connectedDcs = compInstance.AB.datacollections(\n                        //       (dColl) =>\n                        //          dColl &&\n                        //          dColl.datasource &&\n                        //          dColl.datasource.id == f.settings.linkObject\n                        //    );\n                        //    (connectedDcs || []).forEach((linkedDc) => {\n                        //       linkedFields.push({\n                        //          id: index + 1,\n                        //          name: linkedDc.label,\n                        //          source: dc.id,\n                        //          target: linkedDc.id\n                        //       });\n                        //    });\n                        // });\n\n                        // // MOCK UP for testing\n                        // let linkedFields = [\n                        //    {\n                        //       id: \"id\",\n                        //       name: \"id\",\n                        //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n                        //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n                        //    }\n                        // ];\n\n                        reportModels[dc.id] = {\n                           id: dc.id,\n                           name: dc.label,\n                           data: reportFields,\n                           refs: [],\n                        };\n                     });\n\n                     return Promise.resolve(reportModels);\n                  }\n\n                  getQueries() {\n                     return Promise.resolve(\n                        compInstance.settings.queryList || []\n                     );\n                  }\n                  saveQuery(id, data) {\n                     id = id || webix.uid();\n                     compInstance.settings.queryList =\n                        compInstance.settings.queryList || [];\n\n                     let indexOfQuery = null;\n                     let query = compInstance.settings.queryList.filter(\n                        (m, index) => {\n                           let isExists = m.id == id;\n                           if (isExists) indexOfQuery = index;\n\n                           return isExists;\n                        }\n                     )[0];\n\n                     // Update\n                     if (query) {\n                        compInstance.settings.queryList[indexOfQuery] = data;\n                     }\n                     // Add\n                     else {\n                        compInstance.settings.queryList.push(data);\n                     }\n\n                     return new Promise((resolve, reject) => {\n                        compInstance\n                           .save()\n                           .catch(reject)\n                           .then(() => {\n                              resolve({ id: id });\n                           });\n                     });\n                  }\n                  deleteQuery(id) {\n                     compInstance.settings.queryList =\n                        compInstance.settings.queryList || [];\n\n                     compInstance.settings.queryList = compInstance.settings.queryList.filter(\n                        (m) => m.id != id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        compInstance\n                           .save()\n                           .catch(reject)\n                           .then(() => {\n                              resolve({ id: id });\n                           });\n                     });\n                  }\n\n                  getData(config) {\n                     let result = [];\n                     let pullDataTasks = [];\n                     let dcIds = [];\n                     let dcData = {};\n                     let reportFields = [];\n\n                     // pull data of the base and join DCs\n                     dcIds.push(config.data);\n                     (config.joins || []).forEach((j) => {\n                        dcIds.push(j.sid);\n                        dcIds.push(j.tid);\n                     });\n                     dcIds = compInstance.AB.uniq(dcIds);\n                     dcIds.forEach((dcId) => {\n                        pullDataTasks.push(\n                           new Promise((next, bad) => {\n                              _logic\n                                 .getData(dcId)\n                                 .catch(bad)\n                                 .then((data) => {\n                                    dcData[dcId] = data || [];\n                                    next();\n                                 });\n                           })\n                        );\n                     });\n\n                     dcIds.forEach((dcId) => {\n                        let dataCol = compInstance.AB.datacollectionByID(dcId);\n                        if (!dataCol) return;\n\n                        reportFields = reportFields.concat(\n                           _logic.getReportFields(dataCol).map((f) => {\n                              // change format of id to match the report widget\n                              f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                              return f;\n                           })\n                        );\n                     });\n\n                     return (\n                        Promise.resolve()\n                           .then(() => Promise.all(pullDataTasks))\n                           .then(\n                              () =>\n                                 new Promise((next, bad) => {\n                                    // the data result equals data of the base DC\n                                    result = dcData[config.data] || [];\n\n                                    // no join settings\n                                    if (!config.joins || !config.joins.length) {\n                                       return next();\n                                    }\n\n                                    (config.joins || []).forEach((j) => {\n                                       let sourceDc = compInstance.AB.datacollectionByID(\n                                          j.sid\n                                       );\n                                       if (!sourceDc) return;\n\n                                       let sourceObj = sourceDc.datasource;\n                                       if (!sourceObj) return;\n\n                                       let targetDc = compInstance.AB.datacollectionByID(\n                                          j.tid\n                                       );\n                                       if (!targetDc) return;\n\n                                       let targetObj = targetDc.datasource;\n                                       if (!targetObj) return;\n\n                                       let sourceLinkField = sourceObj.fieldByID(\n                                          j.sf\n                                       );\n                                       let targetLinkField = targetObj.fieldByID(\n                                          j.tf\n                                       );\n                                       if (!sourceLinkField && !targetLinkField)\n                                          return;\n\n                                       let sourceData = dcData[j.sid] || [];\n                                       let targetData = dcData[j.tid] || [];\n                                       sourceData.forEach((sData) => {\n                                          targetData.forEach((tData) => {\n                                             let sVal =\n                                                sData[\n                                                   sourceLinkField\n                                                      ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                                      : `${j.sid}.id`\n                                                ] || [];\n\n                                             let tVal =\n                                                tData[\n                                                   targetLinkField\n                                                      ? `${j.tid}.${targetLinkField.columnName}.id`\n                                                      : `${j.tid}.id`\n                                                ] || [];\n\n                                             if (!Array.isArray(sVal))\n                                                sVal = [sVal];\n                                             if (!Array.isArray(tVal))\n                                                tVal = [tVal];\n\n                                             // Add joined row to the result array\n                                             let matchedVal = sVal.filter(\n                                                (val) => tVal.indexOf(val) > -1\n                                             );\n                                             if (\n                                                matchedVal &&\n                                                matchedVal.length\n                                             ) {\n                                                let updateRows =\n                                                   result.filter(\n                                                      (r) =>\n                                                         r[`${j.sid}.id`] ==\n                                                            sData[\n                                                               `${j.sid}.id`\n                                                            ] &&\n                                                         r[`${j.tid}.id`] ==\n                                                            null\n                                                   ) || [];\n\n                                                if (\n                                                   updateRows &&\n                                                   updateRows.length\n                                                ) {\n                                                   (updateRows || []).forEach(\n                                                      (r) => {\n                                                         for (let key in tData) {\n                                                            if (key != \"id\")\n                                                               r[key] =\n                                                                  tData[key];\n                                                         }\n                                                      }\n                                                   );\n                                                } else {\n                                                   result.push(\n                                                      Object.assign(\n                                                         compInstance.AB.cloneDeep(\n                                                            sData\n                                                         ),\n                                                         compInstance.AB.cloneDeep(\n                                                            tData\n                                                         )\n                                                      )\n                                                   );\n                                                }\n                                             }\n                                          });\n                                       });\n                                    });\n\n                                    next();\n                                 })\n                           )\n                           // filter & sort\n                           .then(\n                              () =>\n                                 new Promise((next, bad) => {\n                                    let queryVal;\n                                    try {\n                                       queryVal = JSON.parse(\n                                          config.query || \"{}\"\n                                       );\n                                    } catch (err) {\n                                       bad(err);\n                                    }\n\n                                    if (\n                                       queryVal &&\n                                       queryVal.rules &&\n                                       queryVal.rules.length\n                                    ) {\n                                       queryVal.rules.forEach((r) => {\n                                          if (!r || !r.type || !r.condition)\n                                             return;\n\n                                          switch (r.type) {\n                                             case \"date\":\n                                             case \"datetime\":\n                                                // Convert string to Date object\n                                                if (r.condition.filter) {\n                                                   if (\n                                                      this.AB.isString(\n                                                         r.condition.filter\n                                                      )\n                                                   ) {\n                                                      r.condition.filter = this.AB.toDate(\n                                                         r.condition.filter\n                                                      );\n                                                   }\n\n                                                   if (\n                                                      r.condition.filter\n                                                         .start &&\n                                                      this.AB.isString(\n                                                         r.condition.filter\n                                                            .start\n                                                      )\n                                                   ) {\n                                                      r.condition.filter.start = this.AB.toDate(\n                                                         r.condition.filter\n                                                            .start\n                                                      );\n                                                   }\n\n                                                   if (\n                                                      r.condition.filter.end &&\n                                                      this.AB.isString(\n                                                         r.condition.filter.end\n                                                      )\n                                                   ) {\n                                                      r.condition.filter.end = this.AB.toDate(\n                                                         r.condition.filter.end\n                                                      );\n                                                   }\n                                                }\n                                                break;\n                                          }\n                                       });\n                                    }\n\n                                    // create a new query widget to get the filter function\n                                    let filterElem = webix.ui({\n                                       view: \"query\",\n                                       fields: reportFields,\n                                       value: queryVal,\n                                    });\n\n                                    // create a new data collection and apply the query filter\n                                    let tempDc = new webix.DataCollection();\n                                    tempDc.parse(result);\n\n                                    // filter\n                                    let filterFn;\n                                    try {\n                                       filterFn = filterElem.getFilterFunction();\n                                    } catch (error) {\n                                       // continue regardless of error\n                                    }\n                                    if (filterFn) tempDc.filter(filterFn);\n\n                                    // sorting\n                                    (config.sort || []).forEach((sort) => {\n                                       if (sort.id)\n                                          tempDc.sort({\n                                             as: \"string\",\n                                             dir: sort.mod || \"asc\",\n                                             by: `#${sort.id}#`,\n                                          });\n                                    });\n\n                                    result = tempDc.serialize();\n\n                                    // clear\n                                    filterElem.destructor();\n                                    tempDc.destructor();\n\n                                    // group by\n                                    if (config.group && config.group.length) {\n                                       (config.group || []).forEach(\n                                          (groupProp) => {\n                                             result = _(result).groupBy(\n                                                groupProp\n                                             );\n                                          }\n                                       );\n\n                                       result = result\n                                          .map((groupedData, id) => {\n                                             let groupedResult = {};\n\n                                             (config.columns || []).forEach(\n                                                (col) => {\n                                                   let agg = col.split(\".\")[0];\n                                                   let rawCol = col.replace(\n                                                      /sum.|avg.|count.|max.|min./g,\n                                                      \"\"\n                                                   );\n\n                                                   switch (agg) {\n                                                      case \"sum\":\n                                                         groupedResult[\n                                                            col\n                                                         ] = compInstance.AB.sumBy(\n                                                            groupedData,\n                                                            rawCol\n                                                         );\n                                                         break;\n                                                      case \"avg\":\n                                                         groupedResult[\n                                                            col\n                                                         ] = compInstance.AB.meanBy(\n                                                            groupedData,\n                                                            rawCol\n                                                         );\n                                                         break;\n                                                      case \"count\":\n                                                         groupedResult[col] = (\n                                                            groupedData || []\n                                                         ).length;\n                                                         break;\n                                                      case \"max\":\n                                                         groupedResult[col] =\n                                                            (compInstance.AB.maxBy(\n                                                               groupedData,\n                                                               rawCol\n                                                            ) || {})[rawCol] ||\n                                                            \"\";\n                                                         break;\n                                                      case \"min\":\n                                                         groupedResult[col] =\n                                                            (compInstance.AB.minBy(\n                                                               groupedData,\n                                                               rawCol\n                                                            ) || {})[rawCol] ||\n                                                            \"\";\n                                                         break;\n                                                      default:\n                                                         groupedResult[col] =\n                                                            groupedData[0][col];\n                                                         break;\n                                                   }\n                                                }\n                                             );\n\n                                             return groupedResult;\n                                          })\n                                          .value();\n                                    }\n\n                                    next();\n                                 })\n                           )\n                           .then(() => Promise.resolve(result))\n                     );\n                  }\n                  getOptions(fields) {\n                     // TODO\n                     // [\n                     //    {\"id\":\"1\",\"value\":\"South\"},\n                     //    {\"id\":\"2\",\"value\":\"North\"},\n                     //    // other options\n                     //  ]\n                     return Promise.resolve([]);\n                  }\n                  getFieldData(fieldId) {\n                     // TODO\n                     return Promise.resolve([]);\n                  }\n               },\n            ],\n            [\n               reports.views.table,\n               class MyTable extends reports.views.table {\n                  // NOTE: fix format of date column type\n                  GetColumnConfig(a) {\n                     if (a.type === \"date\") {\n                        return {\n                           id: a.id,\n                           header:\n                              !a.meta.header || a.meta.header === \"none\"\n                                 ? a.meta.name || a.name\n                                 : [\n                                      a.meta.name || a.name,\n                                      {\n                                         content:\n                                            a.header === \"text\"\n                                               ? \"textFilter\"\n                                               : \"richSelectFilter\",\n                                      },\n                                   ],\n                           type: a.type,\n                           sort: \"date\",\n                           width: a.width || 200,\n                           format: (val) => {\n                              // check valid date\n                              if (val && val.getTime && !isNaN(val.getTime())) {\n                                 return webix.i18n.dateFormatStr(val);\n                              } else {\n                                 return \"\";\n                              }\n                           },\n                        };\n                     } else {\n                        return super.GetColumnConfig(a);\n                     }\n                  }\n               },\n            ],\n         ]),\n      };\n\n      // make sure each of our child views get .init() called\n      let _init = (options) => {\n         options = options || {};\n         options.componentId = options.componentId || ids.component;\n\n         return Promise.resolve();\n      };\n\n      let _logic = {\n         getReportFields: (dc) => {\n            if (!dc) return [];\n\n            let object = dc.datasource;\n            if (!object) return [];\n\n            let fields = [];\n\n            object.fields().forEach((f) => {\n               let columnFormat = f.columnHeader();\n\n               fields.push({\n                  id: f.columnName,\n                  name: f.label,\n                  filter: f.fieldIsFilterable(),\n                  edit: false,\n                  type: columnFormat.editor || \"text\",\n                  format: columnFormat.format,\n                  options: columnFormat.options,\n                  ref: \"\",\n                  key: false,\n                  show: true,\n                  abField: f,\n               });\n\n               if (f.isConnection && f.settings.isSource) {\n                  let linkedDcs = compInstance.AB.datacollectionByID(f.settings.linkObject);\n                  (linkedDcs || []).forEach((linkDc) => {\n                     fields.push({\n                        id: f.id,\n                        name: f.label,\n                        filter: false,\n                        edit: false,\n                        type: \"reference\",\n                        ref: linkDc.id,\n                        key: false,\n                        show: false,\n                     });\n                  });\n               }\n            });\n\n            return fields;\n         },\n\n         getData: (datacollectionId) => {\n            let datacollection = compInstance.AB.datacollectionByID(\n               datacollectionId\n            );\n            if (!datacollection) return Promise.resolve([]);\n\n            let object = datacollection.datasource;\n            if (!object) return Promise.resolve([]);\n\n            return Promise.resolve()\n               .then(\n                  () =>\n                     new Promise((next, bad) => {\n                        if (\n                           datacollection.dataStatus ==\n                           datacollection.dataStatusFlag.notInitial\n                        ) {\n                           datacollection\n                              .loadData()\n                              .catch(bad)\n                              .then(() => next());\n                        } else {\n                           next();\n                        }\n                     })\n               )\n               .then(\n                  () =>\n                     new Promise((next, bad) => {\n                        let reportFields = _logic.getReportFields(\n                           datacollection\n                        );\n\n                        let reportData = [];\n                        let rawData = datacollection.getData();\n                        (rawData || []).forEach((row) => {\n                           let reportRow = { id: row.id };\n                           reportRow[`${datacollection.id}.id`] = row.id;\n\n                           object.fields().forEach((field) => {\n                              let columnName = field.columnName;\n                              let col = `${datacollection.id}.${columnName}`;\n\n                              reportRow[col] = field\n                                 ? field.format(row)\n                                 : row[columnName];\n\n                              // FK value of the connect field\n                              if (field && field.isConnection) {\n                                 if (Array.isArray(row[columnName])) {\n                                    reportRow[`${col}.id`] = row[\n                                       columnName\n                                    ].map(\n                                       (link) =>\n                                          link[field.datasourceLink.PK()] ||\n                                          link.id ||\n                                          link\n                                    );\n                                 } else if (row[columnName]) {\n                                    reportRow[`${col}.id`] =\n                                       row[columnName][\n                                          field.datasourceLink.PK()\n                                       ] ||\n                                       row[columnName].id ||\n                                       row[columnName];\n                                 }\n                              }\n\n                              let rField = reportFields.filter(\n                                 (f) => f.id == columnName\n                              )[0];\n                              if (!rField) return;\n\n                              switch (rField.type) {\n                                 case \"text\":\n                                 case \"reference\":\n                                    reportRow[col] = (\n                                       reportRow[col] || \"\"\n                                    ).toString();\n                                    break;\n                                 case \"number\":\n                                    reportRow[col] = parseFloat(\n                                       (reportRow[col] || 0)\n                                          .toString()\n                                          .replace(/[^\\d.-]/g, \"\")\n                                    );\n                                    break;\n                                 case \"date\":\n                                 case \"datetime\":\n                                    reportRow[col] = row[columnName];\n                                    if (reportRow[col]) {\n                                       if (!(reportRow[col] instanceof Date)) {\n                                          reportRow[\n                                             col\n                                          ] = compInstance.AB.toDate(\n                                             row[columnName]\n                                          );\n                                       }\n                                    } else {\n                                       reportRow[col] = \"\";\n                                    }\n                                    break;\n                              }\n                           });\n                           reportData.push(reportRow);\n                        });\n\n                        return next(reportData);\n                     })\n               );\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n\n         onShow: baseCom.onShow,\n      };\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld() {}\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTextComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   componentOld() {}\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         {\n            name: \"columnSpan\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Column Span\"),\n\n            hidden: true, // TODO\n         },\n         {\n            name: \"rowSpan\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Row Span\"),\n\n            hidden: true, // TODO\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      $$(ids.columnSpan).setValue(\n         view.position.dx || ABPropertyComponentDefaults.columnSpan\n      );\n      $$(ids.rowSpan).setValue(\n         view.position.dy || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.position.dx = $$(ids.columnSpan).getValue();\n      view.position.dy = $$(ids.rowSpan).getValue();\n   }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../../core/views/ABViewCSVExporterCore\");\nconst ClassUI = require(\"../../../../ui/ClassUI\").default;\n\nconst ABViewCSVExporterPropertyComponentDefaults =\n   ABViewCSVExporterCore.defaultValues();\n\nmodule.exports = class ABViewCSVExporterComponent extends ClassUI {\n   constructor(viewCSVExporter, idBase) {\n      idBase = idBase || `ABCSVExporter_${viewCSVExporter.id}`;\n\n      super(idBase, {\n         button: \"\",\n         buttonFilter: \"\",\n         popupFilter: \"\",\n      });\n\n      this.idBase = idBase;\n      this.view = viewCSVExporter;\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      return {\n         // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n         id: `${this.ids.component}_temp`,\n         view: \"layout\",\n         type: \"clean\",\n         borderless: true,\n         cols: [\n            {\n               id: ids.buttonFilter,\n               view: \"button\",\n               css: \"webix_transparent\",\n               type: \"icon\",\n               icon: \"fa fa-filter\",\n               borderless: true,\n               width: 50,\n               label: \"\",\n               click: () => {\n                  this.showFilterPopup();\n               },\n            },\n            {\n               id: ids.button,\n               view: \"button\",\n               css: \"webix_primary\",\n               type: \"icon\",\n               icon: \"fa fa-download\",\n               borderless: true,\n               width:\n                  this.view?.settings?.width ||\n                  ABViewCSVExporterPropertyComponentDefaults.width,\n               label:\n                  this.view?.settings?.buttonLabel ??\n                  ABViewCSVExporterPropertyComponentDefaults.buttonLabel,\n               click: () => {\n                  this.downloadCsvFile();\n               },\n            },\n            { fillspace: true },\n         ],\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n      this.clientFilter = this.AB.filterComplexNew(`${this.idBase}_filter`);\n\n      const dc = this.view.datacollection;\n      if (dc) {\n         const obj = dc.datasource;\n\n         this.clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n      }\n\n      this.clientFilter.init();\n      this.clientFilter.on(\"change\", (val) => {\n         this.onFilterChange(val);\n      });\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n      const where = this.clientFilter.getValue();\n\n      if (where && (where.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../../core/views/ABViewCSVImporterCore\");\nconst ClassUI = require(\"../../../../ui/ClassUI\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nconst ABViewCSVImporterPropertyComponentDefaults =\n   ABViewCSVImporterCore.defaultValues();\n\nmodule.exports = class ABViewCSVImporterComponent extends ClassUI {\n   constructor(viewCSVImporter, idBase) {\n      idBase = idBase || `ABCSVImporter_${viewCSVImporter.id}`;\n\n      super(idBase, {\n         button: \"\",\n         popup: \"\",\n\n         form: \"\",\n         uploader: \"\",\n         uploadFileList: \"\",\n         separatedBy: \"\",\n         headerOnFirstLine: \"\",\n         columnList: \"\",\n\n         search: \"\",\n         datatable: \"\",\n\n         statusMessage: \"\",\n         progressBar: \"\",\n\n         importButton: \"\",\n         rules: \"\",\n      });\n\n      this.view = viewCSVImporter;\n      // {ABViewCSVImporter}\n      // The ABView that has created this CSVImporter.\n\n      this.settings = this.view.settings;\n      // {json}\n      // a local copy of the settings for our ABView\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this._dataRows = null;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this._csvFileInfo = null;\n\n      this.validationError = false;\n   }\n\n   ui() {\n      return {\n         // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n         id: `${this.ids.component}_temp`,\n         cols: [\n            {\n               view: \"button\",\n               css: \"webix_primary\",\n               type: \"icon\",\n               icon: \"fa fa-upload\",\n               label: this.label(\n                  this.settings.buttonLabel ||\n                     ABViewCSVImporterPropertyComponentDefaults.buttonLabel\n               ),\n               width:\n                  this.settings.width ||\n                  ABViewCSVImporterPropertyComponentDefaults.width,\n               click: () => {\n                  this.showPopup();\n               },\n            },\n            {\n               fillspace: true,\n            },\n         ],\n      };\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         view: \"form\",\n         type: \"clean\",\n         id: ids.form,\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           let text = $$(ids.search).getValue();\n                           this.search(text);\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: function (id, obj, details) {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n                     const $dt = $$(ids.datatable);\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: function (id, obj, details) {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     $$(ids.importButton).setValue(this.labelImport(selected));\n                     if (this.overLimitAlert(selected)) {\n                        $$(ids.importButton).disable();\n                     } else {\n                        $$(ids.importButton).enable();\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               view: \"button\",\n               name: \"import\",\n               id: ids.importButton,\n               value: this.label(\"Import\"),\n               css: \"webix_primary\",\n               disabled: true,\n               click: () => {\n                  this.import();\n               },\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   init(AB) {\n      this.AB = AB;\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      let selectedDv = this.view.datacollection;\n\n      if (selectedDv) {\n         this.CurrentObjectID = selectedDv.datasource.id;\n      }\n\n      webix.ui(this.uiPopup());\n\n      if ($$(ids.form)) webix.extend($$(ids.form), webix.ProgressBar);\n      if ($$(ids.progressBar))\n         webix.extend($$(ids.progressBar), webix.ProgressBar);\n   }\n\n   showPopup() {\n      $$(this.ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(this.ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      $$(ids.form).clearValidation();\n      $$(ids.form).clear();\n      $$(ids.separatedBy).setValue(\",\");\n\n      webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      $$(ids.statusMessage).setValue(\"\");\n      $$(ids.statusMessage).hide();\n   }\n\n   search(searchText) {\n      let $datatable = $$(this.ids.datatable);\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      let matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      if (!this._csvFileInfo) return false;\n\n      if (!this.csvImporter.validateFile(this._csvFileInfo)) {\n         webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      $$(ids.form)?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      let separatedBy = $$(ids.separatedBy).getValue();\n      this._dataRows = await this.csvImporter.getDataRows(\n         this._csvFileInfo,\n         separatedBy\n      );\n\n      $$(ids.headerOnFirstLine).enable();\n      $$(ids.importButton).enable();\n      let length = this._dataRows.length;\n      if ($$(ids.headerOnFirstLine).getValue()) {\n         length = this._dataRows.length - 1;\n      }\n      $$(ids.importButton).setValue(this.labelImport(length));\n\n      this.populateColumnList();\n\n      $$(ids.form)?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n      return true;\n   }\n\n   populateColumnList() {\n      const ids = this.ids;\n      const self = this;\n\n      // clear list\n      webix.ui([], $$(ids.columnList));\n\n      if (this._dataRows == null) return;\n\n      // check first line of CSV\n      let firstLine = this._dataRows[0];\n      if (firstLine == null) return;\n\n      let csvColumnList = [];\n      let fieldList = [];\n      if (this.CurrentObject) {\n         fieldList =\n            this.CurrentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               let formComp = f.formComponent();\n               if (!formComp) return true;\n\n               let formConfig = formComp.common();\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            }) || [];\n      }\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue()) {\n         csvColumnList = firstLine.map((colName, index) => {\n            return {\n               id: index + 1, // webix .options list disallow value 0\n               value: colName,\n               key: this.csvImporter.getGuessDataType(this._dataRows, index),\n            };\n         });\n      } else {\n         for (let i = 0; i < firstLine.length; i++) {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: this.csvImporter.getGuessDataType(this._dataRows, i),\n            });\n         }\n      }\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      let uiColumns = [];\n      let selectedCsvCols = [];\n      fieldList.forEach((f) => {\n         let selectVal = \"none\";\n\n         // match up by data type\n         let matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key == \"date\") {\n            let dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            let dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            let monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            let yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            let dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      webix.ui(uiColumns, $$(ids.columnList));\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      let $optionPanel = $columnOption.getParentView();\n      let $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() == \"none\") {\n         $linkFieldOption.hide();\n      } else {\n         $linkFieldOption.show();\n      }\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: L(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n         return true;\n      }\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      let $datatable = $$(ids.datatable);\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable?.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      let matchFields = this.getMatchFields();\n\n      let columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      let rulePops = [];\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\") {\n            validationRules = JSON.parse(validationRules);\n         }\n\n         if (validationRules && validationRules.length) {\n            const validationUI = [];\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.field.id}_${webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${webix.uid()}`;\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: function (obj, common, value /*, col, ind */) {\n               return value.replace(/[<]/g, \"&lt;\");\n            },\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $$(ids.datatable).getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n         const rules = {};\n         const dataTable = $$(ids.datatable);\n         // store the rules in a data param to be used later\n         dataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach(function (key) {\n            rules[key] = function (value, data) {\n               // default valid is true\n               let isValid = true;\n               dataTable.$view.complexValidations[key].forEach((filter) => {\n                  let rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n                  (matchFields || []).forEach((f) => {\n                     let record = data[f.columnIndex];\n                     if (\n                        f.field.key == \"date\" &&\n                        record.includes(\"Invalid date\")\n                     ) {\n                        isValid = false;\n                     }\n                     rowValue[f.field.id] = record;\n                  });\n                  const ruleValid = filter.filters(rowValue);\n                  // if invalid we need to tell the field\n                  if (ruleValid == false) {\n                     isValid = false;\n                     // webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n               return isValid;\n            };\n         });\n         // define validation rules\n         dataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         dataTable.config.rulePops = rulePops;\n         dataTable.refresh();\n      } else {\n         dataTable = $$(ids.datatable);\n         // check if the previous datatable had rule popups and remove them\n         if (dataTable.config.rulePops) {\n            dataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         }\n         // remove any validation rules from the previous table\n         dataTable.define(\"rules\", {});\n         dataTable.refresh();\n      }\n\n      /** Prepare Data */\n      let parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         let rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            let data = row[f.columnIndex - 1];\n\n            if (f.field.key == \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = this.AB.toDate(data, { format: f.format });\n               dateFormat = this.AB.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n               if (dateFormat == \"Invalid date\") {\n                  dateFormat = dateFormat + \" - \" + data;\n               }\n               rowValue[f.columnIndex] = dateFormat;\n            } else {\n               rowValue[f.columnIndex] = data; // array to object\n            }\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      let isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n      if (isSkipFirstLine && parsedData.length > 1) {\n         parsedData = parsedData.slice(1);\n      }\n\n      $$(ids.importButton).setValue(this.labelImport(parsedData));\n\n      $datatable.refreshColumns(columns);\n\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) {\n         $$(ids.importButton).disable();\n      } else {\n         $$(ids.importButton).enable();\n      }\n\n      // hide loading cursor\n      $datatable?.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      let spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      let averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      let remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      let days = (remainTime / 86400000).toFixed(0);\n      let hours = (remainTime / 3600000).toFixed(0);\n      let minutes = (remainTime / 60000).toFixed(0);\n      let seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      let $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         if (!this.CurrentObject) return;\n\n         // webix .options list disallow value 0\n         let colIndex = $selector.getValue();\n\n         let field = this.CurrentObject.fieldByID($selector.config.fieldId);\n         if (!field) return;\n\n         let fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key == \"date\") {\n            let $optionPanel = $selector.getParentView();\n            let $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            let $optionPanel = $selector.getParentView();\n            let $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               let searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   import() {\n      // get ABDatacollection\n      let dv = this.view.datacollection;\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      let obj = this.CurrentObject;\n      if (obj == null) return Promise.resolve();\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      $$(ids.importButton).disable();\n\n      // Show loading cursor\n      $$(ids.form).showProgress({ type: \"icon\" });\n      $$(ids.progressBar).showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      let matchFields = this.getMatchFields();\n\n      // Get object's model\n      let objModel = this.CurrentObject.model();\n\n      let selectedRows = $$(ids.datatable).find({ _included: true });\n\n      let _currProgress = 0;\n      let increaseProgressing = () => {\n         _currProgress += 1;\n         $$(ids.progressBar).showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n\n      let itemFailed = (itemId, errMessage) => {\n         let $datatable = $$(ids.datatable);\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n\n      let itemInvalid = (itemId, errors = []) => {\n         let $datatable = $$(ids.datatable);\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            let errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err || !err.name) return;\n               let fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // webix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n            // set \"fail\" status\n            $$(ids.datatable).blockEvent();\n            $$(ids.datatable).updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $$(ids.datatable).unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n\n      let itemPass = (itemId) => {\n         let $datatable = $$(ids.datatable);\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n         increaseProgressing();\n      };\n\n      let itemValid = (itemId) => {\n         let $datatable = $$(ids.datatable);\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n\n      let uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $$(ids.importButton).enable();\n\n         // Hide loading cursor\n         $$(ids.form).hideProgress();\n         $$(ids.progressBar).hideProgress();\n         $$(ids.statusMessage).setValue(\"\");\n         $$(ids.statusMessage).hide();\n\n         const selected = $$(ids.datatable).find({ _included: true });\n         $$(ids.importButton).setValue(this.labelImport(selected));\n\n         this.emit(\"done\");\n      };\n\n      // Set parent's data collection cursor\n      let dcLink = dv?.datacollectionLink;\n      let objectLink;\n      let linkConnectFields = [];\n      let linkValues;\n      if (dcLink && dcLink.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields = this.CurrentObject.fields(\n            (f) => f.isConnection && f.settings.linkObject == objectLink.id\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      let allValid = true;\n      let validRows = [];\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         let newRowData = {};\n\n         // Set parent's data collection cursor\n         if (objectLink && linkConnectFields.length && linkValues) {\n            linkConnectFields.forEach((f) => {\n               let linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n               newRowData[f.columnName] = {};\n               newRowData[f.columnName][linkColName] =\n                  linkValues[linkColName] || linkValues.id;\n            });\n         }\n\n         matchFields.forEach((f) => {\n            if (!f.field || !f.field.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] != \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n                  } else {\n                     newRowData[f.field.columnName] = data[f.columnIndex];\n                  }\n                  break;\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         let validator = this.CurrentObject.isValidData(newRowData);\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid) {\n            // now check complex field validation rules\n            isValid = $$(ids.datatable).validate(data.id);\n         } else {\n            allValid = false;\n            itemInvalid(data.id, errorMsg);\n         }\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else {\n            allValid = false;\n         }\n         // $$(ids.datatable).unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $$(ids.importButton).enable();\n         //\n         // // Hide loading cursor\n         // $$(ids.form).hideProgress();\n         // $$(ids.progressBar).hideProgress();\n         // $$(ids.statusMessage).setValue(\"\");\n         // $$(ids.statusMessage).hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         webix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return Promise.resolve();\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field && f.field.isConnection && f.searchField\n      );\n\n      let startUpdateTime;\n      let numDone = 0;\n      return Promise.resolve()\n         .then(() => {\n            // forEach connectedFields in csv\n\n            const allLookups = [];\n\n            (connectedFields || []).forEach((f) => {\n               let connectField = f.field;\n               let searchField = f.searchField;\n               // let searchWord = newRowData[f.columnIndex];\n\n               let connectObject = connectField.datasourceLink;\n               if (!connectObject) return;\n\n               let connectModel = connectObject.model();\n               if (!connectModel) return;\n\n               let linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n\n               // prepare default hash entry:\n               hashLookups[connectField.id] = {};\n\n               // load all values of connectedField entries\n\n               allLookups.push(\n                  connectModel\n                     .findAll({\n                        where: {}, // !!!\n                        populate: false,\n                     })\n                     .then((list) => {\n                        if (list.data) {\n                           list = list.data;\n                        }\n                        (list || []).forEach((row) => {\n                           // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                           hashLookups[connectField.id][\n                              row[searchField.columnName]\n                           ] = row[linkIdKey];\n                        });\n                     })\n                     .catch((errMessage) => {\n                        console.error(errMessage);\n                     })\n               );\n            });\n\n            return Promise.all(allLookups);\n         })\n         .then(() => {\n            // forEach validRow\n            validRows.forEach((data) => {\n               let newRowData = data.data;\n\n               // update the datagrid row to in-progress\n               $$(ids.datatable).blockEvent();\n               $$(ids.datatable).updateItem(data.id, {\n                  _status: \"in-progress\",\n                  _errorMsg: \"\",\n               });\n               $$(ids.datatable).unblockEvent();\n\n               // forEach ConnectedField\n               (connectedFields || []).forEach((f) => {\n                  // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n                  const connectField = f.field;\n                  const linkIdKey = connectField.indexField\n                     ? connectField.indexField.columnName\n                     : connectField.object.PK();\n                  const uuid =\n                     hashLookups[connectField.id][\n                        newRowData[connectField.columnName]\n                     ];\n\n                  if (!uuid) {\n                     itemInvalid(data.id, [{ name: connectField.columnName }]);\n                     allValid = false;\n                  }\n\n                  newRowData[connectField.columnName] = {};\n                  newRowData[connectField.columnName][linkIdKey] = uuid;\n               });\n            });\n         })\n         .then(() => {\n            if (!allValid) {\n               webix.alert({\n                  title: this.label(\"Invalid Data\"),\n                  ok: this.label(\"Ok\"),\n                  text: this.label(\n                     \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n                  ),\n               });\n               uiCleanUp();\n\n               return Promise.resolve();\n            }\n            // NOTE: Parallel exectuion of all these:\n            const allSaves = [];\n\n            const createRecord = (objModel, newRowsData, element, total) => {\n               return new Promise((resolve, reject) => {\n                  element.doRecordRulesPre(newRowsData);\n\n                  objModel\n                     .batchCreate({ batch: newRowsData })\n                     .then((result) => {\n                        const recordRules = [];\n\n                        // Show errors of each row\n                        Object.keys(result.errors).forEach((rowIndex) => {\n                           let error = result.errors[rowIndex];\n                           if (error) {\n                              itemFailed(\n                                 rowIndex,\n                                 error.message || error.sqlMessage || error\n                              );\n                           }\n                        });\n\n                        Object.keys(result.data).forEach((rowIndex) => {\n                           let rowData = result.data[rowIndex];\n                           recordRules.push(\n                              new Promise((next, err) => {\n                                 // Process Record Rule\n                                 element\n                                    .doRecordRules(rowData)\n                                    .then(() => {\n                                       itemPass(rowIndex);\n                                       next();\n                                    })\n                                    .catch((errMessage) => {\n                                       itemFailed(rowIndex, errMessage);\n                                       err(\"that didn't work\");\n                                    });\n                              })\n                           );\n                        });\n                        Promise.all(recordRules)\n                           .then(() => {\n                              newRowsData.forEach((row) => {\n                                 // itemPass(row.id);\n                                 numDone++;\n                                 if (numDone % 50 == 0) {\n                                    this.refreshRemainingTimeText(\n                                       startUpdateTime,\n                                       validRows.length,\n                                       numDone\n                                    );\n                                 }\n                              });\n                              if (numDone == total) {\n                                 uiCleanUp();\n                                 $$(ids.importButton).disable();\n                              }\n                              resolve();\n                           })\n                           .catch((err) => {\n                              // newRowsData.forEach((row) => {\n                              //    itemFailed(row.id, err);\n                              // });\n                              reject(err);\n                           });\n                     })\n                     .catch((errMessage) => {\n                        console.error(errMessage);\n                        reject(errMessage);\n                     });\n               });\n            };\n\n            validRows.forEach((data) => {\n               let newRowData = data.data;\n               allSaves.push({ id: data.id, data: newRowData });\n            });\n\n            // we are going to store these promises in an array of\n            // arrays with 50 in each sub array\n            const throttledSaves = [];\n            const total = allSaves.length;\n            let index = 0;\n            while (allSaves.length) {\n               throttledSaves[index] = allSaves.splice(0, 50);\n               index++;\n            }\n\n            // execute the array of array of 100 promises one at at time\n            function performThrottledSaves(\n               currentRecords,\n               remainingRecords,\n               importer,\n               total\n            ) {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n               const requests = createRecord(\n                  objModel,\n                  currentRecords,\n                  importer,\n                  total\n               );\n               requests\n                  .then(() => {\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        return performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        return Promise.resolve();\n                     }\n                  })\n                  .catch((err) => {\n                     // Handle errors here\n                     return Promise.reject(err);\n                  });\n            }\n\n            // now we are going to processes these new containers one at a time\n            // $$(ids.datatable).blockEvent();\n            // this is when the real work starts so lets begin our countdown timer now\n            startUpdateTime = new Date();\n            // get the first group of Promises out of the collection\n            const next = throttledSaves.shift();\n            // execute our Promise iterator\n            return performThrottledSaves(\n               next,\n               throttledSaves,\n               this.view,\n               total\n            );\n         })\n         .catch((err) => {\n            // resolve Error UI\n            webix.alert({\n               title: this.label(\"Error Creating Records\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\"One or more records failed upon creation.\"),\n            });\n            // $$(ids.datatable).unblockEvent();\n            uiCleanUp();\n            console.error(err);\n         });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewChartArea_${baseView.id}`;\n\n      super(baseView, idBase);\n\n      this.view = baseView;\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = {\n         id: this.ids.component,\n         view: \"chart\",\n         type: baseView.settings.areaType,\n         yAxis: {\n            start: 0,\n            step: baseView.settings.stepValue, //\"#stepValue#\",\n            end: baseView.settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: baseView.settings.isLegend\n               ? `<div style='font-size:${baseView.settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: baseView.settings.isLegend\n            ? {\n                 template: `<div style='font-size:${baseView.settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: baseView.settings.chartHeight,\n         // width: baseView.settings.chartWidth,\n      };\n\n      return _ui;\n   }\n\n   async init(AB) {\n      super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewChartBar_${baseView.id}`;\n\n      super(baseView, idBase);\n\n      this.view = baseView;\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      return {\n         id: this.ids.component,\n         view: \"chart\",\n         type: baseView.settings.barType,\n         preset: baseView.settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: baseView.settings.stepValue, //\"#stepValue#\",\n            end: baseView.settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: baseView.settings.isLegend\n               ? `<div style='font-size:${baseView.settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            baseView.settings.barType === \"bar\" || !baseView.settings.barType\n               ? baseView.settings.isLegend\n                  ? `<div style='font-size:${baseView.settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : baseView.settings.isLegend\n               ? {\n                    template: `<div style='font-size:${baseView.settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: baseView.settings.height,\n         // width: baseView.settings.chartWidth,\n      };\n   }\n\n   async init(AB) {\n      super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewChart_${baseView.id}`;\n\n      super(baseView, idBase);\n\n      this.view = baseView;\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      return {\n         // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n         id: `${this.ids.component}_temp`,\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               // view: \"scrollview\",\n               body: super.ui(),\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      // get webix.dashboard\n      await super.init(AB, 2);\n\n      const $component = $$(this.ids.component);\n\n      if ($component) {\n         webix.extend($component, webix.ProgressBar);\n      }\n\n      const baseView = this.view;\n      const dc = baseView.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in dc.datacollectionLink._events)\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((e) => {\n            // Do we need this ? .eventAdd should check exists listener below\n            // if (e in dc._events) return;\n\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: e,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewChartContainer_${baseView.id}`;\n\n      super(baseView, idBase);\n\n      this.view = baseView;\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      return {};\n   }\n\n   async init(AB) {\n      super.init(AB);\n\n      this.datacollection = this.view.parent.datacollection;\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      const parentView = baseView.parent;\n\n      this.refreshData(parentView.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $component = $$(this.ids.component);\n\n      if ($component && $component.data) $component.data.sync(dcChart);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewChartLine_${baseView.id}`;\n\n      super(baseView, idBase);\n\n      this.view = baseView;\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      return {\n         id: this.ids.component,\n         view: \"chart\",\n         type: baseView.settings.lineType,\n         preset: baseView.settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: baseView.settings.stepValue,\n            end: baseView.settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: baseView.settings.isLegend\n               ? `<div style='font-size:${baseView.settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: baseView.settings.isLegend\n            ? {\n                 template: `<div style='font-size:${baseView.settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: baseView.settings.chartHeight,\n         // width: baseView.settings.chartWidth,\n      };\n   }\n\n   async init(AB) {\n      super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewChartPie_${baseView.id}`;\n\n      super(baseView, idBase);\n\n      this.view = baseView;\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      return {\n         id: this.ids.component,\n         view: \"chart\",\n         type: baseView.settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: baseView.settings.isLegend\n            ? {\n                 width: baseView.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${baseView.settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${baseView.settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: baseView.settings.height,\n         // width: baseView.settings.chartWidth,\n      };\n   }\n\n   async init(AB) {\n      super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewComment_${baseView.id}`;\n\n      super(baseView, idBase, {});\n\n      this.view = baseView;\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const userList = baseView.getUserData();\n      const userId = baseView.getCurrentUserId();\n      const _ui = {\n         id: ids.component,\n         view: \"comments\",\n         users: userList,\n         currentUser: userId,\n         height: baseView.settings.height,\n         data: this.getCommentData(),\n         on: {\n            onBeforeAdd: (id, obj, index) => {\n               this.addComment(obj.text, new Date());\n            },\n            // NOTE: no update event of comment widget !!\n            // Updating event handles in .init function\n            // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n            // onAfterEditStart: function (rowId) {\n            // \tlet item = this.getItem(rowId);\n\n            // \t_logic.updateComment(rowId, item);\n            // },\n            onAfterDelete: (rowId) => {\n               this.deleteComment(rowId);\n            },\n         },\n      };\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.component);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated = $commentList.data.attachEvent(\n                  \"onStoreUpdated\",\n                  (rowId, data, operate) => {\n                     if (operate == \"update\") {\n                        this.updateComment(rowId, (data || {}).text);\n                     }\n                  }\n               );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = baseView.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.component));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = baseView.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value == item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName) {\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         } else {\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n         }\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $component = $$(ids.component) ?? null;\n\n         if (!$component) return;\n\n         // clear comments\n         const $commentList = $component.queryView({ view: \"list\" }) ?? null;\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $component.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model() ?? null;\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField); // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText || \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model() ?? null;\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $component = $$(ids.component) ?? null;\n\n      if (!$component) return;\n\n      const $commentList = $component.queryView({ view: \"list\" }) ?? null;\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $component = $$(ids.component) ?? null;\n\n      if (!$component) return;\n\n      const $commentList = $component.queryView({ view: \"list\" }) ?? null;\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const baseView = this.view;\n      const dv = baseView.datacollection;\n\n      if (!dv) return;\n\n      const model = baseView.model();\n\n      if (!model) {\n         this.AB.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = this.AB.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink && dvLink.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][\n               objectLink.PK()\n            ] = dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      super.onShow(viewId);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      idBase = idBase || `ABViewContainer_${baseView.id}`;\n      super(idBase, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui() {\n      // an ABView is a collection of rows:\n      this._ui = this._ui ?? {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: [],\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (this._ui.rows.length == 0) {\n         this._ui.height = 30;\n      }\n\n      return this._ui;\n   }\n\n   init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      (this.__events || []).forEach((e) => {\n         e.emitter.removeListener(e.eventName, e.listener);\n      });\n      this.__events = [];\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dv = this.datacollection ?? this.view.datacollection;\n      if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n      }\n   }\n}\n","const ABViewConditionalContainerCore = require(\"../../../core/views/ABViewConditionalContainerCore\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nconst ABViewPropertyDefaults = ABViewConditionalContainerCore.defaultValues();\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      idBase = idBase ?? `ABViewConditionalContainerComponent_${baseView.id}`;\n      super(baseView, idBase, {\n         component: \"\",\n      });\n\n      // Set filter value\n      this.__filterComponent = this.view.AB.filterComplexNew(\n         `${this.view.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      // NOTE: call this to listen \"changePage\" event !!!\n      super.ui();\n\n      const ifComp = this.ifComponent;\n      const elseComp = this.elseComponent;\n\n      let uiIf = { fillspace: true };\n      let uiElse = { fillspace: true };\n\n      if (ifComp) {\n         uiIf = ifComp.ui();\n         uiIf.batch = \"if\";\n      }\n\n      if (elseComp) {\n         uiElse = elseComp.ui();\n         uiElse.batch = \"else\";\n      }\n\n      return {\n         id: this.ids.component,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n            uiIf,\n            uiElse,\n         ],\n      };\n   }\n\n   init(options, accessLevel) {\n      const view = this.view;\n\n      super.init(view.AB, accessLevel);\n      this.ifComponent?.init(view.AB, accessLevel);\n      this.elseComponent?.init(view.AB, accessLevel);\n\n      this.populateFilterComponent();\n\n      const dc = view.datacollection;\n      if (dc) {\n         // listen DC events\n         view.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         view.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   async onShow() {\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      if (!this._ifComponent)\n         this._ifComponent = this.view.views()[0]?.component();\n\n      return this._ifComponent;\n   }\n\n   get elseComponent() {\n      if (!this._elseComponent)\n         this._elseComponent = this.view.views()[1]?.component();\n\n      return this._elseComponent;\n   }\n\n   displayView(currData) {\n      const dc = this.view.datacollection;\n      if (dc) {\n         if (currData == null) {\n            currData = dc.getCursor();\n         }\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus == dc.dataStatusFlag.notInitial ||\n               dc.dataStatus == dc.dataStatusFlag.initializing)\n         ) {\n            $$(this.ids.component)?.showBatch(\"wait\");\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n      if (isValid) {\n         // if (isValid && currData) {\n         $$(this.ids.component).showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $$(this.ids.component).showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.view.datacollection;\n      if (dc?.datasource)\n         this.__filterComponent.fieldsLoad(dc.datasource.fields());\n      else this.__filterComponent.fieldsLoad([]);\n\n      this.__filterComponent.setValue(\n         this.view.settings.filterConditions ??\n            ABViewPropertyDefaults.filterConditions\n      );\n   }\n};\n","const ABViewContainerCore = require(\"../../../core/views/ABViewContainerCore\");\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst ABPropertyComponentDefaults = ABViewContainerCore.defaultValues();\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase, ids);\n\n      this.idBase = idBase;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         this.view.changePage(pageId);\n      };\n   }\n\n   ui() {\n      // Generate rows & cols of views to .layout\n      let views = this.view.viewsSortByPosition();\n      let rowViews = this.getElements(views);\n\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         rows: rowViews,\n      };\n   }\n\n   // make sure each of our child views get .init() called\n   init(AB, parentAccessLevel = 0) {\n      this.AB = AB;\n\n      let allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      if ($$(this.ids.component))\n         $$(this.ids.component).define(\n            \"css\",\n            `accessLevel-${parentAccessLevel}`\n         );\n\n      // attach all the .UI views:\n      for (var key in this.viewComponents) {\n         // skip when the view is removed.\n         if (this.view.views((v) => v.id == key)[0] == null) return;\n\n         var component = this.viewComponents[key];\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (parentAccessLevel > 0) {\n            allInits.push(component.init(AB, parentAccessLevel));\n         } else {\n            $$(this.viewComponentIDs[key]).hide();\n         }\n      }\n\n      return Promise.all(allInits);\n   }\n\n   getElements(views) {\n      var rows = [];\n      var curRowIndex;\n      var curColIndex;\n      var componentMap = {};\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n         try {\n            component = v.component();\n         } catch (err) {\n            component = v.component(this.AB._App);\n            let ui = component.ui;\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y != curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            var rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            var colNumber =\n               this.settings.columns || ABPropertyComponentDefaults.columns;\n            for (var i = 0; i < colNumber; i++) {\n               var grav =\n                  this.settings.gravity && this.settings.gravity[i]\n                     ? parseInt(this.settings.gravity[i])\n                     : ABPropertyComponentDefaults.gravity;\n               rowNew.cols.push({\n                  gravity: grav,\n               });\n            }\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         let rowIndx = rows.length - 1;\n         var curRow = rows[rowIndx];\n\n         var newPos = v.position.x || 0;\n         var getGrav = 1;\n\n         let mapKey = `${rowIndx}-${newPos}`;\n         if (componentMap[mapKey]) {\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n         }\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos] && curRow.cols[newPos].gravity) {\n            getGrav = curRow.cols[newPos].gravity;\n         }\n\n         let _ui = component.ui();\n         this.viewComponentIDs[v.id] = _ui.id;\n\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         curColIndex += 1;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage.bind(this),\n         });\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      let dv = this.view.datacollection;\n      if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n      }\n\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         var component = this.viewComponents[v.id];\n         component?.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDataviewComponent_${baseView.id}`;\n      super(baseView, idBase, {\n         scrollview: \"\",\n         dataFlexView: \"\",\n      });\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      return {\n         id: ids.component,\n         rows: [\n            {\n               id: ids.scrollview,\n               view: \"scrollview\",\n               scroll: \"y\",\n               body: {\n                  id: ids.dataFlexView,\n                  view: \"flexlayout\",\n                  paddingX: 15,\n                  paddingY: 19,\n                  type: \"space\",\n                  cols: [],\n               },\n               on: {\n                  onAfterScroll: () => {\n                     const pos = $$(ids.scrollview).getScrollState();\n                     this.scroll(pos);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   init(options) {\n      const ids = this.ids;\n\n      const dc = this.view.datacollection;\n      if (!dc) return;\n\n      const dataView = $$(ids.dataFlexView);\n\n      // initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      // if (dc.datacollectionLink && dc.fieldLink) {\n      //    dc.bind(dataView, dc.datacollectionLink, dc.fieldLink);\n      // } else {\n      //    dc.bind(dataView);\n      // }\n      // track all flexlayout component IDs on the data collectino so we can notify them of changes\n      dc.attachFlexlayout(dataView);\n      dc.on(\"initializingData\", () => {\n         this.busy();\n      });\n      dc.on(\"initializedData\", () => {\n         this.ready();\n      });\n      dc.on(\"loadData\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"update\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"delete\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"create\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n\n      // this.eventClear();\n      //\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"loadData\",\n      //    listener: () => {\n      //       com.renderData();\n      //    },\n      // });\n   }\n\n   async onShow() {\n      const dc = this.view.datacollection;\n      if (!dc) return;\n\n      switch (dc.dataStatus) {\n         case dc.dataStatusFlag.notInitial:\n            // load data when a widget is showing\n            dc.loadData();\n            break;\n         case dc.dataStatusFlag.initialized:\n            this.renderData();\n            break;\n      }\n   }\n\n   get yPosition() {\n      return this._yPosition ?? 0;\n   }\n\n   set yPosition(pos) {\n      this._yPosition = pos;\n   }\n\n   busy() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.disable();\n\n      if (!Scroll.showProgress) {\n         this.AB.Webix.extend(Scroll, this.AB.Webix.ProgressBar);\n      }\n      Scroll.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.enable();\n\n      if (Scroll && !Scroll.hideProgress) {\n         this.AB.Webix.extend(Scroll, this.AB.Webix.ProgressBar);\n      }\n      Scroll.hideProgress();\n   }\n\n   renderData() {\n      const ids = this.ids;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      let records = [];\n\n      const dc = this.view.datacollection;\n      if (!dc) {\n         this.ready();\n         return;\n      }\n\n      const Layout = $$(ids.dataFlexView) || $$(ids.component);\n      if (!Layout || isNaN(Layout.$width)) {\n         this.ready();\n         return;\n      }\n\n      const xCount = parseInt(this.view.settings.xCount);\n      const recordWidth = Math.floor(\n         (Layout.$width - 20 - xCount * 20) / xCount\n      );\n\n      const rows = dc.getData();\n\n      // if this amount of data is already parsed just skip the rest.\n      if (Layout.currentLength == rows.length) {\n         this.ready();\n         return;\n      }\n\n      Layout.currentLength = rows.length;\n\n      // store total of rows\n      this._startPos = Layout.getChildViews ? Layout.getChildViews().length : 0;\n\n      let stopPos = rows.length;\n\n      if (dc.settings.loadAll || this._startPos == 0) {\n         stopPos = rows.length;\n      } else if (rows.length - this._startPos > 20) {\n         stopPos = this._startPos + 20;\n      }\n\n      for (let i = this._startPos; i < stopPos; i++) {\n         // get the components configuation\n         let detailCom = new ABViewDetailComponent(this.view, rows[i].id);\n\n         let _ui = detailCom.ui();\n\n         // adjust the UI to make sure it will look like a \"card\"\n         _ui.type = \"space\";\n         _ui.css = \"ab-detail-view\";\n         if (detailsPage || editPage) {\n            _ui.css += ` ab-detail-hover ab-record-${rows[i].id}`;\n\n            if (detailsPage) {\n               _ui.css += \" ab-detail-page\";\n            }\n            if (editPage) {\n               _ui.css += \" ab-edit-page\";\n            }\n         }\n         _ui.paddingX = 10;\n         _ui.paddingY = 6;\n         _ui.minWidth = recordWidth - 10;\n         _ui.maxWidth = recordWidth;\n\n         if (Layout.addView) {\n            Layout.addView(_ui, -1);\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[i]), 0);\n         } else {\n            records.push(_ui);\n         }\n      }\n\n      if (records.length) {\n         let flexlayout = {\n            id: ids.dataFlexView,\n            view: \"flexlayout\",\n            paddingX: 15,\n            paddingY: 19,\n            type: \"space\",\n            cols: records,\n         };\n         this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n\n         for (let j = this._startPos; j < stopPos; j++) {\n            let detailCom = new ABViewDetailComponent(this.view, rows[j].id);\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[j]), 0);\n         }\n      }\n\n      if ($$(ids.scrollview)) {\n         $$(ids.scrollview).scrollTo(0, this.yPosition);\n\n         if (detailsPage || editPage) {\n            Layout.$view.onclick = (e) => {\n               let clicked = false;\n               let divs = e.path ?? [];\n\n               // NOTE: Some web browser clients do not support .path\n               if (!divs.length) {\n                  divs.push(e.target);\n                  divs.push(e.target.parentNode);\n               }\n\n               if (editPage) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem_header\") > -1\n                     ) {\n                        clicked = true;\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(editPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n                        break;\n                     }\n                  }\n               }\n               if (detailsPage && !clicked) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem\") > -1\n                     ) {\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(detailsPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n                        break;\n                     }\n                  }\n               }\n            };\n         }\n      }\n\n      //Add data-cy attributes for cypress tests\n      const name = this.view.name.replace(\".dataview\", \"\");\n      Layout.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${this.view.id}`\n      );\n\n      Layout.getChildViews().forEach((child, i) => {\n         const uuid = rows[i + this._startPos][\"uuid\"];\n         const view = child.$view;\n         view\n            .querySelector(\".webix_accordionitem_body\")\n            .setAttribute(\n               \"data-cy\",\n               `dataview item ${name} ${uuid} ${this.view.id}`\n            );\n         view\n            .querySelector(\".webix_accordionitem_button\")\n            .setAttribute(\n               \"data-cy\",\n               `dataview item button ${name} ${uuid} ${this.view.id}`\n            );\n      });\n\n      this.ready();\n   }\n\n   emptyView() {\n      const ids = this.ids;\n      const flexlayout = {\n         id: ids.dataFlexView,\n         view: \"flexlayout\",\n         type: \"clean\",\n         padding: 10,\n         css: { background: \"#ebedf0 !important\" },\n         cols: [],\n      };\n      this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n   }\n\n   /**\n    * @method scroll\n    * @param pos - {\n    * \t\t\t\t\tx: {integer},\n    * \t\t\t\t\ty: {integer}\n    * \t\t\t\t}\n    */\n   async scroll(pos) {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      let loadWhen = 40;\n\n      const y = pos.y;\n      const maxYPos = Layout.$height - Scroll.$height;\n      if (maxYPos - y <= loadWhen) {\n         if (this.loadMoreTimer) return;\n\n         this.yPosition = y;\n\n         const dc = this.view.datacollection;\n         if (!dc) return;\n\n         if (Layout.getChildViews().length >= dc.totalCount) return;\n\n         // loading cursor\n         this.busy();\n\n         await dc.loadData(Layout.getChildViews().length || 0);\n\n         this.loadMoreTimer = setTimeout(() => {\n            this.loadMoreTimer = null;\n         }, 1100);\n      }\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDetailCheckboxComponent_${baseView.id}`;\n      super(baseView, idBase);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      let field = this.view.field();\n\n      _ui.id = this.ids.component;\n      _ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            const dataCy = `detail checkbox ${field?.columnName} ${field?.id} ${\n               this.view.parentDetailComponent()?.id ?? this.view.parent.id\n            }`;\n            $$(_ui.id)?.$view.setAttribute(\"data-cy\", dataCy);\n         },\n      };\n\n      return _ui;\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDetailComponent_${baseView.id}`;\n      super(baseView, idBase);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      return {\n         id: `ABViewDetail_${this.view.id}`,\n         type: \"form\",\n         borderless: true,\n         // height: this.settings.height || ABViewDetailPropertyComponentDefaults.height,\n         rows: [\n            {\n               // view: \"scrollview\",\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      try {\n         const dataCy = `Detail ${this.view.name?.split(\".\")[0]} ${\n            this.view.id\n         }`;\n         $$(this.ui().id).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      let dv = this.view.datacollection;\n      if (dv) {\n         let currData = dv.getCursor();\n         if (currData) {\n            this.displayData(currData);\n         }\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               let currCursor = dv.getCursor();\n               if (currCursor && currCursor.id == createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               let currCursor = dv.getCursor();\n               if (currCursor && currCursor.id == updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData) {\n      rowData = rowData || {};\n\n      let views = this.view.views() || [];\n      views = views.sort((a, b) => {\n         if (!a || !b || !a.field || !b.field) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field.key == \"formula\" && b.field.key == \"calculate\") {\n            return -1;\n         } else if (a.field.key == \"calculate\" && b.field.key == \"formula\") {\n            return 1;\n         } else {\n            return 0;\n         }\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            let field = f.field();\n\n            if (!field || !rowData) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n                  break;\n               case \"list\":\n                  val = rowData[field.columnName];\n                  if (!val) {\n                     val = \"\";\n                     break;\n                  }\n\n                  if (field.settings.isMultiple == 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach(function (options) {\n                        if (options.id == val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n                        field.settings.options.forEach(function (h) {\n                           if (h.text == myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     let items = [];\n                     let myVal = \"\";\n                     val.forEach((value) => {\n                        var hasCustomColor = \"\";\n                        var optionHex = \"\";\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n                        field.settings.options.forEach(function (options) {\n                           if (options.id == value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n                     val = items.join(\"\");\n                  }\n                  break;\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n                  break;\n               case \"file\":\n                  val = rowData[field.columnName];\n                  break;\n               case \"formula\":\n                  if (rowData) {\n                     let dv = this.datacollection;\n                     let ds = dv ? dv.datasource : null;\n                     let needRecalculate =\n                        !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n                  break;\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         let vComponent = f.component(null, this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDetailConnectComponent_${baseView.id}`;\n      super(baseView, idBase);\n   }\n\n   ui() {\n      let _ui = super.ui();\n      // let id = `ABViewDetailConnect_${this.id}`;\n\n      _ui.id = this.ids.component;\n      _ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            let columnName = this.view.field(\n               (fld) => fld.id == this.settings.fieldId\n            )?.columnName;\n            const dataCy = `detail connected ${columnName} ${\n               this.settings.fieldId\n            } ${this.view.parentDetailComponent()?.id || this.view.parent.id}`;\n            $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n         },\n      };\n\n      return _ui;\n   }\n\n   setValue(val) {\n      let vals = [];\n      if (Array.isArray(val)) {\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      } else {\n         vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n      }\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDetailCustomComponent_${baseView.id}`;\n      super(baseView, idBase);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      _ui.id = this.ids.component;\n\n      let field = this.view.field();\n      let detailView = this.view.detailComponent();\n\n      let templateLabel = \"\";\n      if (detailView?.settings?.showLabel == true) {\n         if (detailView.settings.labelPosition == \"top\")\n            templateLabel =\n               \"<label style='display:block; text-align: left;' class='webix_inp_top_label'>#label#</label>\";\n         else\n            templateLabel =\n               \"<label style='width: #width#px; display: inline-block; float: left; line-height: 32px;'>#label#</label>\";\n      }\n\n      let template = (templateLabel + \"#result#\")\n         // let template = (templateLabel)\n         .replace(/#width#/g, detailView.settings.labelWidth)\n         .replace(/#label#/g, field ? field.label : \"\")\n         .replace(/#result#/g, field ? field.columnHeader().template({}) : \"\");\n\n      _ui.id = this.ids.component;\n      _ui.view = \"template\";\n      _ui.minHeight = 45;\n      _ui.height = 60;\n      _ui.borderless = true;\n      _ui.template = template;\n\n      _ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            const dataCy = `detail custom ${field?.columnName} ${field?.id} ${\n               this.view.parentDetailComponent()?.id || this.view.parent.id\n            }`;\n            $$(_ui.id)?.$view.setAttribute(\"data-cy\", dataCy);\n         },\n      };\n\n      return _ui;\n   }\n\n   onShow() {\n      let field = this.view.field();\n      if (!field) return;\n\n      let elem = $$(this.ids.component);\n      if (!elem) return;\n\n      let detailCom = this.view.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = elem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n   }\n\n   setValue(val) {\n      let field = this.view.field();\n      if (!field) return;\n\n      let elem = $$(this.ids.component);\n      if (!elem) return;\n\n      let rowData = {};\n      rowData[field.columnName] = val;\n\n      field.setValue(elem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDetailImageComponent_${baseView.id}`;\n      super(baseView, idBase);\n   }\n\n   ui() {\n      let _ui = super.ui();\n      let field = this.view.field();\n\n      _ui.id = this.ids.component;\n\n      if (this.settings.height) _ui.height = this.settings.height;\n\n      _ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n               this.view.parentDetailComponent()?.id || this.view.parent.id\n            }`;\n            $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n         },\n      };\n\n      return _ui;\n   }\n\n   setValue(val) {\n      let field = this.view.field();\n      let imageTemplate = \"\";\n      let defaultImageUrl = field ? field.settings.defaultImageUrl : \"\";\n\n      if (val || (!val && defaultImageUrl)) {\n         let imageUrl = field.urlImage(val || defaultImageUrl);\n         let width =\n            field && field.settings.imageWidth\n               ? `${field.settings.imageWidth}px`\n               : \"200px\";\n         let height =\n            field && field.settings.imageHeight\n               ? `${field.settings.imageHeight}px`\n               : \"100%\";\n\n         if (this.settings.height) height = `${this.settings.height}px`;\n\n         if (this.settings.width) width = `${this.settings.width}px`;\n\n         imageTemplate =\n            `<div class=\"ab-image-data-field\">` +\n            `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}; height: ${height}; position:relative;\">` +\n            `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>` +\n            `</div></div>`;\n      }\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      idBase = idBase || `ABViewDetailComponent_${baseView.id}`;\n      super(baseView, idBase, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n   }\n\n   ui() {\n      let ids = this.ids;\n\n      // setup 'label' of the element\n      let detailView = this.view.detailComponent(),\n         field = this.view.field();\n\n      let settings = detailView?.settings ?? {};\n      let isUsers = field?.key == \"user\";\n\n      let templateLabel = \"\";\n      if (settings.showLabel == true) {\n         if (settings.labelPosition == \"top\")\n            templateLabel =\n               \"<label style='display:block; text-align: left;' class='webix_inp_top_label'>#label#</label>#display#\";\n         else\n            templateLabel =\n               \"<label style='width: #width#px; display: inline-block; float: left; line-height: 32px;'>#label#</label><div class='ab-detail-component-holder' style='margin-left: #width#px;'>#display#</div>\";\n      }\n      // no label\n      else {\n         templateLabel = \"#display#\";\n      }\n\n      let template = templateLabel\n         .replace(/#width#/g, settings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\");\n\n      let height = 38;\n      if (settings.labelPosition == \"top\") height = height * 2;\n\n      if (field?.settings?.useHeight == 1) {\n         height = parseInt(field.settings.imageHeight) || height;\n      }\n\n      let _ui = {\n         id: ids.component,\n         view: \"template\",\n         borderless: true,\n         height: height,\n         isUsers: isUsers,\n         template: template,\n         data: { display: \"\" }, // show empty data in template\n      };\n\n      return _ui;\n   }\n\n   init(AB) {\n      this.AB = AB;\n      return Promise.resolve();\n   }\n\n   setValue(val, componentId) {\n      componentId = componentId ?? this.ids.component;\n\n      if (!$$(componentId)) return;\n\n      let field = this.view.field();\n      if (field?.key == \"string\" || field?.key == \"LongText\") {\n         val = val.replace(/[<]/g, \"&lt;\");\n      }\n\n      $$(componentId).setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDetailTextComponent_${baseView.id}`;\n      super(baseView, idBase);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      _ui.id = this.ids.component;\n      _ui.css = \"ab-text\";\n      if (this.settings.height) _ui.height = this.settings.height;\n\n      let field = this.view.field();\n      _ui.on = {\n         //Add data-cy attribute for Cypress Testing\n         onAfterRender: () => {\n            const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n               this.view.parentDetailComponent()?.id || this.view.parent.id\n            }`;\n            $$(_ui.id)?.$view.setAttribute(\"data-cy\", dataCy);\n         },\n      };\n\n      return _ui;\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDetailTreeComponent_${baseView.id}`;\n      super(baseView, idBase);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      _ui.id = this.ids.component;\n\n      return _ui;\n   }\n\n   init(options) {\n      super.init(options);\n\n      // add div of tree to detail\n      let divTree = `<div class=\"${this.className}\"></div>`;\n      this.setValue(divTree);\n   }\n\n   getDomTree() {\n      let elem = $$(this.ids.component);\n      if (!elem) return;\n\n      return elem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      if (val != null && !(val instanceof Array)) {\n         val = [val];\n      }\n\n      setTimeout(() => {\n         // get tree dom\n         let domTree = this.getDomTree();\n         if (!domTree) return false;\n\n         let field = this.view.field();\n         let branches = [];\n         if (typeof field.settings.options.data == \"undefined\") {\n            field.settings.options = new webix.TreeCollection({\n               data: field.settings.options,\n            });\n         }\n\n         field.settings.options.data.each(function (obj) {\n            if (val != null && val.indexOf(obj.id) != -1) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ==\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         let myHex = \"#4CAF50\";\n         let nodeHTML = \"<div class='list-data-values'>\";\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         $$(this.ids.component).config.height = height;\n         $$(this.ids.component).resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDocxBuilderCore = require(\"../../../core/views/ABViewDocxBuilderCore\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults =\n   ABViewDocxBuilderCore.defaultValues();\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewDocxBuilderComponent_${baseView.id}`;\n      super(baseView, idBase, {\n         button: \"\",\n         noFile: \"\",\n      });\n   }\n\n   ui() {\n      const view = this.view;\n\n      let autowidth = false;\n      let buttonWidth =\n         view.settings.width ??\n         ABViewDocxBuilderPropertyComponentDefaults.width;\n      if (buttonWidth == 0) {\n         autowidth = true;\n      }\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (\n         view.settings.buttonPosition ??\n         ABViewDocxBuilderPropertyComponentDefaults.buttonPosition\n      ) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         view.buttonlabel ||\n         view.settings.buttonlabel ||\n         ABViewDocxBuilderPropertyComponentDefaults.buttonlabel; // Use || to check empty string \"\"\n\n      return {\n         // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n         id: `${this.ids.component}_temp`,\n         view: \"toolbar\",\n         css:\n            view.settings.toolbarBackground ??\n            ABViewDocxBuilderPropertyComponentDefaults.toolbarBackground,\n         cols: [\n            leftSpacer,\n            {\n               id: this.ids.button,\n               view: \"button\",\n               css: \"webix_primary\",\n               type: \"icon\",\n               icon: \"fa fa-file-word-o\",\n               label: buttonLabelText,\n               width:\n                  view.settings.width ??\n                  ABViewDocxBuilderPropertyComponentDefaults.width,\n               autowidth: autowidth,\n               click: () => {\n                  this.renderFile();\n               },\n               on: {\n                  // Add data-cy attribute for cypress tests\n                  onAfterRender: () => {\n                     const name = view.name.replace(\".docxBuilder\", \"\");\n                     const dataCy = `docx download ${name} ${view.id}`;\n                     $$(this.ids.button)\n                        ?.$view.querySelector(\"button\")\n                        .setAttribute(\"data-cy\", dataCy);\n                  },\n               },\n            },\n            {\n               id: this.ids.noFile,\n               view: \"label\",\n               label: this.label(\"No template file\"),\n            },\n            {\n               type: \"spacer\",\n            },\n            rightSpacer,\n         ],\n      };\n   }\n\n   init(options) {\n      const DownloadButton = $$(this.ids.button);\n      const NoFileLabel = $$(this.ids.noFile);\n\n      if (this.view.settings.filename) {\n         DownloadButton.show();\n         NoFileLabel.hide();\n      } else {\n         DownloadButton.hide();\n         NoFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      let tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc && dc.dataStatus == dc.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n         }\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const DownloadButton = $$(this.ids.button);\n      if (!DownloadButton) return;\n\n      DownloadButton.disable();\n\n      DownloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      DownloadButton.refresh();\n   }\n\n   ready() {\n      const DownloadButton = $$(this.ids.button);\n      if (!DownloadButton) return;\n\n      DownloadButton.enable();\n\n      DownloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      DownloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      // Let user download the output file\n      this.view.letUserDownload(blobFile, this.view.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      let result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc && dc.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n            const dcCursor = dc.getCursor();\n\n            let dcValues = [];\n            let dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            if (dcCursor) {\n               const treeCursor = dc.getCursor(true);\n               dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            } else dataList = this.AB.cloneDeep(dc.getData());\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  let fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations == \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations == \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        let fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code == objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        let objectLabel = objTran.label;\n                        let fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else {\n                     if (typeof f.translations == \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     f.translations.forEach((tran) => {\n                        fieldLabels.push(tran.label);\n                     });\n                  }\n\n                  resultData = this.setReportValues(\n                     data,\n                     f,\n                     fieldLabels,\n                     mlFields\n                  );\n\n                  // Keep id of ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            let datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            ) {\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            } else result = datacollectionData;\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      let result = {};\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         let transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n         this.view.translate(data, data, transFields, this.view.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //\t\tfieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val && val.forEach) {\n            val.forEach((v) => {\n               if (v == null) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: this.view.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v == \"object\") v._object = field.datasourceLink;\n            });\n         }\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else {\n         val = field.format(data, {\n            languageCode: this.view.languageCode,\n         });\n      }\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) {\n            result[label] = val;\n         } else if (!result[label]) {\n            result[label] = \"\";\n         }\n      });\n\n      // normalize child items\n      if (data.data && data.data.length) {\n         result.data = result.data || [];\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      let images = {};\n      let tasks = [];\n\n      let addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            let imageVal = fieldImage.format(d);\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((ok, bad) => {\n                     let imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(\n                        imgUrl,\n                        function (error, content) {\n                           if (error) return bad(error);\n                           else {\n                              // store binary of image\n                              images[imageVal] = content;\n\n                              ok();\n                           }\n                        }\n                     );\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc && dc.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n            if (currCursor) {\n               // Current cursor\n               let treeCursor = dc.getCursor(true);\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   async downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      let summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      let zip = new JSZip(contentFile);\n      let doc = new Docxtemplater();\n\n      let imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //\t\t\twe can buy newer version to support it\n            //\t\t\thttps://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            let defaultVal = [300, 160];\n\n            let dc = this.view.datacollection;\n            if (!dc) {\n               let dcs = this.view.datacollections;\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n                        obj = obj.objects((o) => o.label == tagNames[0])[0]; // Label of object\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     let imageField = obj.fields(\n                        (f) => f.columnName == tagName\n                     )[0];\n                     if (!imageField || !imageField.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n                  return defaultVal;\n               } else {\n                  return defaultVal;\n               }\n            } else {\n               let obj = dc.datasource;\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  let tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label == tagNames[0])[0]; // Label of object\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               let imageField = obj.fields((f) => f.columnName == tagName)[0];\n               if (!imageField || !imageField.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         // \tif (imgBuffer) {\n         // \t\tvar maxWidth = 300;\n         // \t\tvar maxHeight = 160;\n\n         // \t\t// Find aspect ratio image dimensions\n         // \t\ttry {\n         // \t\t\tvar image = sizeOf(imgBuffer);\n         // \t\t\tvar ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         // \t\t\treturn [image.width * ratio, image.height * ratio];\n         // \t\t}\n         // \t\t// if invalid image, then should return 0, 0 sizes\n         // \t\tcatch (err) {\n         // \t\t\treturn [0, 0];\n         // \t\t}\n\n         // \t}\n         // \telse {\n         // \t\treturn [0, 0];\n         // \t}\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") == 0) {\n                           let prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           let prop = tag.split(\"|$sum?\")[0];\n                           let varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n                           if (typeof number == \"string\") {\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n                           }\n\n                           if (summaries[varName] == null)\n                              summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") == 0) {\n                           let varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") == 0) {\n                        //    let prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number == \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") == 0) {\n                           let props = tag.replace(\"$\", \"\").split(\"|\");\n                           let propSource = props[0].trim();\n                           let propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n                           let obj = scope._object;\n                           if (obj) {\n                              let connectedField = obj.fields(\n                                 (f) => f.columnName == propFilter\n                              )[0];\n                              if (connectedField) {\n                                 let indexField = connectedField.indexField;\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           let getVal = (data) => {\n                              return (\n                                 data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                                 data[indexColName] ||\n                                 data.id ||\n                                 data\n                              );\n                           };\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) == getVal(item)\n                                    ).length > 0\n                                 );\n                              else {\n                                 return getVal(item) == getVal(comparer);\n                              }\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           let result = scope;\n                           let prop = tag.split(\"?\")[0];\n                           let condition = tag.split(\"?\")[1];\n                           if (prop && condition) {\n                              let data = scope[prop];\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") {\n                           return scope;\n                        } else {\n                           return scope[tag];\n                        }\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return err(error);\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","/* eslint-disable prettier/prettier */\nconst ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormButtonCore = require(\"../../../core/views/ABViewFormButtonCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\nconst ABViewFormButtonPropertyComponentDefaults =\n   ABViewFormButtonCore.defaultValues();\n\nmodule.exports = class ABViewFormButton extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormButton_${baseView.id}`;\n      super(baseView, idBase, {});\n   }\n\n   ui() {\n      const self = this;\n      const _ui = {\n         id: this.ids.component,\n         cols: [],\n      };\n\n      const form = this.view.parentFormComponent();\n      const settings = this.view.settings ?? {};\n\n      const alignment =\n         settings.alignment ??\n         ABViewFormButtonPropertyComponentDefaults.alignment;\n\n      // spacer\n      if (alignment == \"center\" || alignment == \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || L(\"Cancel\"),\n               click: function () {\n                    self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || L(\"Reset\"),\n               click: function () {\n                    self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || L(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment == \"center\" || alignment == \"left\") {\n         _ui.cols.push({});\n      }\n\n      return _ui;\n   }\n\n   onCancel(cancelButton) {\n      const settings = this.view.settings ?? {};\n\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton?.enable();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton?.enable();\n         });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase || `ABViewForm_${baseView.id}`;\n      super(baseView, idBase, {\n         layout: \"\",\n         filterComplex: \"\",\n      });\n   }\n\n   ui() {\n      const superComponent = this.view.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n\n      return {\n         id: this.ids.component,\n         view: \"form\",\n         abid: this.view.id,\n         rows: rows.concat(fieldValidationsHolder),\n      };\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const object =\n         this.view.datacollection?.datasource ?? this.view._currentObject;\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = this.view.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id == com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui == \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   init(AB, accessLevel, options = {}) {\n      this.AB = AB;\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n      this.loadDcDataOfRecordRules();\n\n      const $Form = $$(this.ids.component);\n      if ($Form) {\n         webix.extend($Form, this.AB.Webix.ProgressBar);\n      }\n\n      if (accessLevel < 2) {\n         $Form.disable();\n      }\n   }\n\n   initCallbacks(options = {}) {\n      // Q: Should we use emit the event instead ?\n      if (options.onBeforeSaveData) {\n         this.view._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      } else {\n         this.view._callbacks.onBeforeSaveData = () => true;\n      }\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.view.datacollection;\n      if (!dc) return;\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            this.displayData(rowData);\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $Form = $$(this.ids.component);\n            if ($Form) {\n               $Form.disable();\n               if ($Form.showProgress) $Form.showProgress({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $Form = $$(this.ids.component);\n            if ($Form) {\n               $Form.enable();\n               if ($Form.hideProgress) $Form.hideProgress();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data || !data.objectId) return;\n\n            const object = dc.datasource;\n            if (!object) return;\n\n            if (\n               object.id == data.objectId ||\n               object.fields((f) => f.settings.linkObject == data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n      if (linkDv) {\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n      }\n   }\n\n   initValidationRules() {\n      const dc = this.view.datacollection;\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.component).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach(function (key) {\n         // get our field that has validation rules\n         const formField = $$(this.ids.component).queryView({\n            name: key,\n         });\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(this.ids.component).queryView({\n               name: field,\n            });\n            // default valid is true\n            let isValid = true;\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               let object = dc.datasource;\n               let data = this.getValues();\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) {\n                  newData[\"this_object\"] = data.uuid;\n               }\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n               // if invalid we need to tell the field\n               if (ruleValid == false) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n            return isValid;\n         });\n         formField.refresh();\n      });\n   }\n\n   loadDcDataOfRecordRules() {\n      (this.view?.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType != \"exist\") return;\n\n               const pullDataDC = this.AB.datacollections(\n                  (dc) => dc.id == op.value\n               )[0];\n\n               if (\n                  pullDataDC != null &&\n                  pullDataDC.dataStatus == pullDataDC.dataStatusFlag.notInitial\n               ) {\n                  pullDataDC.loadData();\n               }\n            }\n         );\n      });\n   }\n\n   onShow(data) {\n      this._showed = true;\n\n      const view = this.view;\n\n      // call .onShow in the base component\n      const superComponent = view.superComponent();\n      superComponent.onShow();\n\n      const $form = $$(this.ids.component);\n      const dc = view.datacollection;\n      if (dc) {\n         if ($form) dc.bind($form);\n\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         if (view.settings.clearOnLoad) {\n            dc.setCursor(null);\n            this.displayData(null);\n         }\n         // if the cursor is cleared before or after we need to make\n         // sure the reload view button does not appear\n         if (view.settings.clearOnLoad || view.settings.clearOnSave) {\n            const reloadViewId = `${this.ids.component}_reloadView`;\n            $$(reloadViewId)?.getParentView()?.removeView(reloadViewId);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         // do this for the initial form display so we can see defaults\n         this.displayData(rowData);\n      } else {\n         // show blank data in the form\n         this.displayData(data ?? {});\n      }\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) {\n         return;\n      } else {\n         this.timerId = await timeout(80);\n      }\n\n      const customFields = this.view.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox && comp.settings.type == \"rich\")\n      );\n\n      // Set default values\n      if (rowData == null) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = this.view.viewComponents[f.id];\n            if (comp == null) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.component), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n         const normalFields = this.view.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = this.view.viewComponents[f.id];\n            if (comp == null) return;\n\n            if (f.key == \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n            field.defaultValue(values);\n            $$(comp.ids.component)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.view.datacollection;\n         const linkDv = dc.datacollectionLink;\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            var comp = this.view.viewComponents[f.id];\n            if (comp == null) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.component), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n      }\n\n      this.timerId = undefined;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.view.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor != null) return;\n\n      const relationField = dc.fieldLink;\n      if (relationField == null) return;\n\n      // Pull a component of relation field\n      const relationFieldCom = this.view.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field() && comp.field().id == relationField.id;\n      })[0];\n      if (relationFieldCom == null) return;\n\n      const relationFieldView = this.view.viewComponents[relationFieldCom.id];\n      if (relationFieldView == null) return;\n\n      const relationElem = $$(relationFieldView.ids.component),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue(relationElem, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.view.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      const childComponent = this.view.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ids.component)) {\n         $$(childComponent.ids.component).focus();\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormCustom_${baseView.id}`;\n      super(baseView, idBase, {});\n   }\n\n   get new_width() {\n      const form = this.view.parentFormComponent();\n      const form_settings = form?.settings ?? {};\n      const settings = this.view.settings ?? {};\n\n      let newWidth = form_settings.labelWidth;\n      if (settings.formView) newWidth += 40;\n      else if (\n         form_settings.showLabel == true &&\n         form_settings.labelPosition == \"top\"\n      )\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const base_ui = super.ui();\n      const field = this.view.field();\n      const form = this.view.parentFormComponent();\n      const form_settings = form?.settings ?? {};\n      const settings = field?.settings ?? this.view.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || settings.required ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n      if (form_settings.showLabel) {\n         if (form_settings.labelPosition == \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (form_settings.labelPosition == \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (form_settings.labelPosition == \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n      } else if (\n         form_settings.showLabel == true &&\n         form_settings.labelPosition == \"top\"\n      ) {\n         height = DEFAULT_HEIGHT;\n      }\n\n      const template =\n         `<div class=\"customField ${form_settings.labelPosition}\">${templateLabel}#template#</div>`\n            .replace(/#width#/g, form_settings.labelWidth)\n            .replace(/#label#/g, field?.label ?? \"\")\n            .replace(\n               /#template#/g,\n               field\n                  ?.columnHeader({\n                     width: this.new_width,\n                     height: height,\n                     editable: true,\n                  })\n                  .template({}) ?? \"\"\n            );\n\n      return {\n         id: this.ids.component,\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         name: base_ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            // id: ids.component,\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable == 1) return;\n\n                  let rowData = {};\n\n                  const formView = this.parentFormComponent();\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.component).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.component,\n                     evt\n                  );\n               },\n            },\n         },\n      };\n   }\n\n   onShow() {\n      const elem = $$(this.ids.component);\n      if (!elem) return;\n\n      const field = this.view.field(),\n         rowData = {},\n         node = elem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${this.view.key} ${field.key} ${field.columnName} ${this.view.id} ${this.view.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      let options = {\n         formId: this.ids.component,\n         editable: this.view.settings.disable == 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || this.new_width\n            : this.new_width;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const elem = $$(this.ids.component);\n\n      return field.getValue(elem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormDatepicker_${baseView.id}`;\n      super(baseView, idBase, {});\n   }\n\n   ui() {\n      const _ui = super.ui();\n      const field = this.view.field();\n\n      _ui.id = this.ids.component;\n      _ui.view = \"datepicker\";\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat == 1) {\n         _ui.type = \"time\";\n      }\n\n      // Date & Time picker\n      if (field.key == \"datetime\" && field.settings?.timeFormat != 1) {\n         _ui.timepicker = true;\n      }\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date)) {\n         _ui.value = new Date(_ui.value);\n      }\n\n      // if we have webix locale set, will use the date format form there.\n      if (field != null && !window.webixLocale) {\n         _ui.format = field.getFormat();\n      }\n\n      return _ui;\n   }\n};\n","let L = (...params) => AB.Multilingual.label(...params);\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      var base = idBase || `ABViewFormComponent_${baseView.id}`;\n      super(baseView, base, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n   }\n\n   ui() {\n      // setup 'label' of the element\n\n      var form = this.view.parentFormComponent(),\n         field = this.view.field(),\n         label = \"\";\n\n      var settings = {};\n      if (form) settings = form.settings;\n\n      var _ui = {\n         // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n         id: `${this.ids.component}_temp`,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label: label,\n      };\n\n      if (field != null) {\n         _ui.name = field.columnName;\n\n         // default value\n         var data = {};\n         field.defaultValue(data);\n         if (data[field.columnName]) _ui.value = data[field.columnName];\n\n         if (settings.showLabel == true) {\n            _ui.label = field.label;\n         }\n\n         if (\n            field.settings.required == true ||\n            this.settings.required == true\n         ) {\n            _ui.required = 1;\n         }\n\n         if (this.settings.disable == 1) {\n            _ui.disabled = true;\n         }\n\n         // add data-cy to form element for better testing code\n         _ui.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  var popup = this.getPopup();\n                  if (!popup) return;\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n                     // our option.ids are based on builder input and can include the ' character\n                     var node = popup.$view.querySelector(\n                        `[webix_l_id='${option.id.replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n                     if (!node) return;\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form ? form.id : \"nf\"\n                        }`\n                     );\n                  });\n               }\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form ? form.id : \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _ui.validate = (val, data, colName) => {\n            let validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n      return _ui;\n   }\n\n   init(AB) {\n      this.AB = AB;\n      return Promise.resolve();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormNumber_${baseView.id}`;\n      super(baseView, idBase, {});\n   }\n\n   ui() {\n      const _ui = super.ui();\n\n      const viewType = this.view.settings.isStepper\n         ? \"counter\"\n         : new NumberTextInput(this.AB._App).key;\n\n      _ui.id = this.ids.component;\n      _ui.view = viewType;\n      _ui.type = \"number\";\n      _ui.validate = (val) => {\n         return !isNaN(val * 1);\n      };\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormReadonly_${baseView.id}`;\n      super(baseView, idBase, {\n         template: \"\",\n      });\n   }\n\n   ui() {\n      const form = this.view.parentFormComponent(),\n         field = this.view.field();\n\n      const _ui = {\n         id: this.ids.component,\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      let settings = {};\n      if (form) settings = form.settings;\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else {\n         _ui.body.height = 38;\n      }\n\n      return _ui;\n   }\n\n   init() {\n      const $elem = $$(this.ids.component);\n      if (!$elem) return;\n\n      const $form = $elem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n      this.refresh(rowData);\n\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $elem = $$(this.ids.component);\n      if (!$elem) return;\n\n      const $form = $elem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const form = this.view.parentFormComponent(),\n         field = this.view.field();\n\n      let settings = {};\n      if (form) settings = form.settings;\n\n      let templateLabel = \"\";\n      if (settings.showLabel == true) {\n         if (settings.labelPosition == \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${settings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = settings.labelWidth;\n      if (this.settings.formView) newWidth += 40;\n      else if (settings.showLabel == true && settings.labelPosition == \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABViewFormSelectMultipleCore = require(\"../../../core/views/ABViewFormSelectMultipleCore\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults =\n   ABViewFormSelectMultipleCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormSelectMultipleComponent_${baseView.id}`;\n      super(baseView, idBase, {});\n   }\n\n   ui() {\n      const _ui = super.ui(),\n         field = this.view.field(),\n         settings = this.view.settings;\n\n      _ui.view =\n         settings.type ??\n         ABViewFormSelectMultiplePropertyComponentDefaults.type;\n\n      let options = [];\n\n      if (field?.key == \"user\") options = field.getUsers();\n      else if (field)\n         options = field.settings.options ?? settings.options ?? [];\n\n      _ui.id = this.ids.component;\n      _ui.options = options.map((opt) => {\n         return {\n            id: opt.id,\n            value: opt.text,\n            hex: opt.hex,\n         };\n      });\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               values.forEach((val) => {\n                  const $component = $$(this.ids.component) ?? $$(_ui.id);\n                  selectedOptions.push($component.getList().getItem(val));\n               });\n               let vals = selectedOptions;\n               if (field.getSelectedOptions) {\n                  vals = field.getSelectedOptions(field, selectedOptions);\n               }\n\n               const items = [];\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n                  const text = val.text ? val.text : val.value;\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n               return items.join(\"\");\n            };\n            break;\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: L(\"Option\"),\n            });\n            break;\n      }\n\n      return _ui;\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $elem = $$(this.ids.component);\n\n      return field.getValue($elem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABViewFormSelectSingleCore = require(\"../../../core/views/ABViewFormSelectSingleCore\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults =\n   ABViewFormSelectSingleCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormSelectSingleComponent_${baseView.id}`;\n      super(baseView, idBase, {});\n   }\n\n   ui() {\n      const _ui = super.ui(),\n         field = this.view.field(),\n         settings = this.view.settings;\n\n      _ui.view =\n         settings.type ?? ABViewFormSelectSinglePropertyComponentDefaults.type;\n\n      let options = [];\n\n      if (field?.key == \"user\") options = field.getUsers();\n      else if (field)\n         options = field.settings.options ?? settings.options ?? [];\n      else options = settings.options ?? [];\n\n      _ui.id = this.ids.component;\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else {\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n      }\n\n      // radio element could not be empty options\n      if (_ui.view == \"radio\" && _ui.options.length < 1) {\n         _ui.options.push({\n            id: \"temp\",\n            value: L(\"Option\"),\n         });\n      }\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABViewFormTextboxCore = require(\"../../../core/views/ABViewFormTextboxCore\");\n\nconst ABViewFormTextboxPropertyComponentDefaults =\n   ABViewFormTextboxCore.defaultValues();\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormTextbox_${baseView.id}`;\n      super(baseView, idBase, {});\n   }\n\n   ui() {\n      const _ui = super.ui();\n      _ui.id = this.ids.component;\n\n      switch (\n         this.view.settings.type ??\n         ABViewFormTextboxPropertyComponentDefaults.type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return _ui;\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const $elem = $$(_ui.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type == \"rich\" && $elem) {\n         // recreate rich editor\n         webix.ui(_ui, $elem);\n         // Add dataCy to TinyMCE text editor\n         $elem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${this.view.key} rich ${_ui.name} ${this.id} ${this.parent.id}`;\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewFormTree_${baseView.id}`;\n      super(baseView, idBase, {});\n   }\n\n   ui() {\n      const _ui = super.ui(),\n         form = this.view.parentFormComponent(),\n         field = this.view.field();\n\n      // this field may be deleted\n      if (!field) return _ui;\n\n      let settings = {};\n      if (form) settings = form.settings;\n\n      const requiredClass =\n         field.settings.required == 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n      if (settings.showLabel == true) {\n         if (settings.labelPosition == \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = settings.labelWidth;\n      if (this.settings.formView != null) newWidth += 40;\n\n      let template = `${templateLabel}#template#`\n         .replace(/#width#/g, settings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.id = this.ids.component;\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight == 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.component).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return _ui;\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.component).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length == 0) vals = \"\";\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewLabel_${baseView.id}`;\n\n      super(baseView, idBase, {});\n\n      this.view = baseView;\n\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n\n      const _ui = {\n         // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n         id: `${this.ids.component.replace(\"Label\", \"LabelLabel\")}_temp`,\n         type: \"form\",\n         padding: 15,\n         borderless: true,\n         rows: [\n            {\n               id: ids.component,\n               view: \"label\",\n               // css: 'ab-component-header ab-ellipses-text',\n               label: baseView.text || \"*\",\n               align: baseView.settings.alignment,\n               type: {\n                  height: \"auto\",\n               },\n            },\n         ],\n      };\n\n      return this.uiFormatting(_ui);\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.rows[0].css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.rows[0].css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.rows[0].css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewLayoutCore = require(\"../../../core/views/ABViewLayoutCore\");\n\nconst ABViewLayoutPropertyComponentDefaults = ABViewLayoutCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewLayout_${baseView.id}`;\n      super(baseView, idBase, {\n         component: \"\",\n      });\n\n      this.viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n      this.view.views().forEach((v) => {\n         try {\n            this.viewComponents[v.id] = v.component();\n         } catch (err) {\n            // NOTE: The 'Layout' component supports only view component v2\n            console.error(\n               `View: [${v.key}] might need to be updated to new version`,\n               err\n            );\n         }\n      });\n   }\n\n   ui() {\n      const uiComponents = Object.keys(this.viewComponents ?? {})\n         .map((vId) => this.viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         cols: uiComponents,\n      };\n   }\n\n   init(options, accessLevel) {\n      // make sure each of our child views get .init() called\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(options, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         this.view.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               this.view.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewMenuCore = require(\"../../../core/views/ABViewMenuCore\");\n\nconst ABViewMenuPropertyComponentDefaults = ABViewMenuCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABMenuLabel_${baseView.id}`;\n      super(baseView, idBase, {\n         menu: \"\",\n      });\n   }\n\n   ui() {\n      const view = this.view;\n      const settings = view.settings;\n\n      if (parseInt(settings.menuInToolbar)) {\n         return this.uiToolbar();\n      } else {\n         return this.uiMenu();\n      }\n   }\n\n   uiMenu() {\n      const settings = this.view.settings;\n\n      let css = `${\n         settings.buttonStyle ?? ABViewMenuPropertyComponentDefaults.buttonStyle\n      } ${\n         settings.menuAlignment ??\n         ABViewMenuPropertyComponentDefaults.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout:\n            settings.orientation ||\n            ABViewMenuPropertyComponentDefaults.orientation,\n         on: {\n            onMenuItemClick: (id, e, node) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const view = this.view;\n      const settings = this.view.settings;\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = view.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = view.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = view.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition == \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else {\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n      }\n\n      if (settings?.menuPosition == \"center\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n         elems.push({});\n         elems.push({\n            view: \"label\",\n            label: menuTextCenter,\n            align: \"center\",\n            width: width,\n         });\n         elems.push({});\n      } else {\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n      }\n\n      if (settings?.menuPosition == \"right\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else {\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n      }\n\n      if (menuIncluded == false) {\n         elems = [_uiMenu];\n      }\n\n      return {\n         // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n         id: `${this.ids.component}_temp`,\n         view: \"toolbar\",\n         css:\n            settings.menuTheme ?? ABViewMenuPropertyComponentDefaults.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : ABViewMenuPropertyComponentDefaults.menuPadding,\n         elements: elems,\n      };\n   }\n\n   init(options) {\n      const $Menu = $$(this.ids.menu);\n      if ($Menu) {\n         const settings = this.view.settings;\n         this.view.ClearPagesInView($Menu);\n         if (settings.order && settings.order.length) {\n            this.view.AddPagesToView($Menu, settings.order);\n            // Force onAfterRender to fire\n            $Menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $Menu = $$(this.ids.menu);\n      const $item = $Menu.getMenuItem(itemId);\n\n      // switch tab view\n      if ($item.type == \"tab\") {\n         this.view.changePage($item.pageId);\n\n         const redirectPage = this.view.application.pages(\n            (p) => p.id == $item.pageId,\n            true\n         )[0];\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id == $item.id, true)[0];\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n         if (!tab) return;\n\n         this.toggleParent(tab);\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         let showIt = setInterval(function () {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n               return;\n            }\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else {\n         this.view.changePage(itemId);\n      }\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n      const parentElem = element.parent;\n      if (!parentElem.parent) return false;\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const Menu = $$(this.ids.menu);\n      if (!Menu) return;\n\n      Menu.data.each((item) => {\n         const node = Menu.getItemNode(item.id);\n         if (!node) return;\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewTab_${baseView.id}`;\n\n      super(baseView, idBase, {\n         sidebar: \"\",\n         expandMenu: \"\",\n         collapseMenu: \"\",\n\n         popupTabManager: \"\",\n         popupTabManagerForm: \"\",\n         popupTabManagerSaveButton: \"\",\n      });\n\n      this.view = baseView;\n\n      this.AB = this.view.AB;\n\n      // get a UI component for each of our child views\n      this.view._viewComponents = [];\n\n      const viewComponents = baseView.views();\n\n      for (let i = 0; i < viewComponents.length; i++) {\n         const accessLevel = viewComponents[i].getUserAccess();\n\n         if (accessLevel > 0) {\n            this.view._viewComponents.push({\n               view: viewComponents[i],\n               // component: viewComponents[i].component(App)\n            });\n         }\n      }\n   }\n\n   ui() {\n      const self = this;\n      const ids = this.ids;\n      const baseView = this.view;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      webix.type(webix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      if (baseView._viewComponents.length > 0) {\n         if (baseView.settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  return {\n                     id: `${view.id}_menu`,\n                     value: view.label,\n                     icon: view.tabicon ? view.tabicon : \"\",\n                  };\n               });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: L(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: L(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${baseView._viewComponents[0].view.id}_menu`;\n\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  width: baseView.settings.sidebarWidth\n                     ? baseView.settings.sidebarWidth\n                     : 0,\n                  scroll: true,\n                  position: baseView.settings.sidebarPos\n                     ? baseView.settings.sidebarPos\n                     : \"left\",\n                  css: baseView.settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              this.AB.Storage.set(\n                                 `${ids.component}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              self.AB.Storage.set(\n                                 `${ids.component}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n                           id = id.replace(\"_menu\", \"\");\n                           $$(id).show(false, false);\n                           // onShow(id);\n                        }\n                     },\n                     onAfterRender: () => {\n                        const $sidebar = $$(ids.sidebar);\n\n                        // set ids of controller buttons\n                        const collapseNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                        );\n\n                        if (collapseNode) {\n                           collapseNode.setAttribute(\n                              \"data-cy\",\n                              `tab-collapseMenu-${ids.collapseMenu}`\n                           );\n                        }\n\n                        const expandNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.expandMenu}\"]`\n                        );\n\n                        if (expandNode) {\n                           expandNode.setAttribute(\n                              \"data-cy\",\n                              `tab-expandMenu-${ids.expandMenu}`\n                           );\n                        }\n\n                        baseView.views((view) => {\n                           const node = $sidebar.$view.querySelector(\n                              `[webix_tm_id=\"${view.id}_menu\"]`\n                           );\n\n                           if (!node) return;\n\n                           node.setAttribute(\n                              \"data-cy\",\n                              `tab-${view.label.replace(\" \", \"\")}-${view.id}-${\n                                 baseView.id\n                              }`\n                           );\n                        });\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.component,\n                  keepViews: true,\n                  minWidth: baseView.settings.minWidth,\n                  cells: baseView._viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (baseView.settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else {\n               _ui = {\n                  view: \"spacer\",\n               };\n            }\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (baseView.settings.iconOnTop) {\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     } else {\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                     }\n                  }\n\n                  // no icon\n                  else {\n                     tabTemplate = view.label;\n                  }\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.component,\n                        minWidth: baseView.settings.minWidth,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: baseView.settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.component\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            } else {\n               // else we return a spacer\n               _ui = {\n                  view: \"spacer\",\n               };\n            }\n         }\n      } else {\n         _ui = {\n            view: \"spacer\",\n         };\n      }\n\n      // TODO: We have to refactor becuase we need \"id\" on the very top level for each viewComponent.\n      _ui.id = `${this.ids.component}_temp`;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      const ids = this.ids;\n\n      const $component = $$(ids.component);\n\n      if ($component) webix.extend($component, webix.ProgressBar);\n\n      const baseView = this.view;\n\n      for (let i = 0; i < baseView._viewComponents.length; i++) {\n         // view._viewComponents[i].component.init(options);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: baseView._viewComponents[i].view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      }\n\n      // Trigger 'changeTab' event to parent\n      baseView.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = this.AB.Storage.get(`${ids.component}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: L(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: L(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu) {\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n         }\n      } else {\n         if (checkCollapseMenu && checkExpandMenu) {\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(collapseMenu);\n         }\n      }\n   }\n\n   changePage(pageId) {\n      const ids = this.ids;\n\n      const $component = $$(ids.component);\n\n      $component.blockEvent();\n      this.view.changePage(pageId);\n      $component.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const ids = this.ids;\n      const baseView = this.view;\n\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (baseView.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(ids.component).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n      if (\n         (view.key === \"tab\" || view.key === \"viewcontainer\") &&\n         $viewID?.show\n      ) {\n         $viewID.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n\n      for (let i = 0; i < baseView._viewComponents.length; i++) {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === baseView._viewComponents[i].view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = baseView._viewComponents[i].view.id;\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $component = $$(ids.component);\n\n         if (\n            !baseView._viewComponents[i]?.component &&\n            baseView._viewComponents[i]?.view?.id === viewId\n         ) {\n            // show loading cursor\n            if ($component?.showProgress)\n               $component.showProgress({ type: \"icon\" });\n\n            baseView._viewComponents[i].component =\n               baseView._viewComponents[i].view.component();\n\n            const $viewID = $$(baseView._viewComponents[i].view.id);\n\n            if (baseView.settings.stackTabs) {\n               // update multiview UI\n               webix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: baseView._viewComponents[i].view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: baseView._viewComponents[i].component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               webix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: baseView._viewComponents[i].view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: baseView._viewComponents[i].component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = baseView._viewComponents[i].view.getUserAccess();\n            baseView._viewComponents[i].component.init(this.AB, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               if ($component?.hideProgress) $component.hideProgress();\n            }, 10);\n         }\n\n         // show UI\n         if (\n            baseView._viewComponents[i]?.view?.id === viewId &&\n            baseView._viewComponents[i]?.component?.onShow\n         )\n            baseView._viewComponents[i].component.onShow();\n\n         if (\n            baseView.settings.stackTabs &&\n            baseView._viewComponents[i]?.view?.id === viewId\n         ) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase) {\n      idBase = idBase ?? `ABViewText_${baseView.id}`;\n\n      super(baseView, idBase, {});\n\n      this.view = baseView;\n\n      this.AB = this.view.AB;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n\n      const _ui = {\n         id: ids.component,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (baseView.settings.height) _ui.height = baseView.settings.height;\n      else _ui.autoheight = true;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      const ids = this.ids;\n\n      const $component = $$(ids.component);\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const baseView = this.view;\n      const result = baseView.displayText(value, ids.component);\n\n      const $component = $$(ids.component) ?? null;\n\n      if (!$component) return;\n\n      $component.define(\"template\", result);\n      $component.refresh();\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      super.onShow(viewId);\n\n      // listen DC events\n      const dataview = baseView.datacollection ?? null;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   component(App, idBase) {\n      let ids = {\n         popup: App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App.unique(`${idBase}_popup_add_new_button`),\n      };\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component(App);\n               let ui = popUpComp.ui;\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               setTimeout(() => {\n                  popUpComp.init({\n                     onSaveData: _logic.callbacks.onSaveData,\n                     onCancelClick: _logic.callbacks.onCancel,\n                     clearOnLoad: _logic.callbacks.onClearOnLoad,\n                  });\n\n                  popUpComp.onShow();\n\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 50);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  field.setValue($$(comp.ui.inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      idBase = `${idBase}_popup_edit_form`;\n\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      var id = \"hiddenQB_\" + webix.uid();\n\n      // if our data passes the QueryRules then tell Action to process\n      var ui = {\n         id: id,\n         hidden: true,\n         view: \"querybuilder\",\n      };\n      var hiddenQB = webix.ui(ui);\n\n      let currentAction = this.currentAction();\n      var QBCondition = currentAction.condition();\n\n      if (this.objectQB) {\n         this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      }\n\n      let query = QBCondition[0] || {},\n         fields = QBCondition[1] || [];\n\n      let convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.type == \"number\" ||\n               f.type == \"calculate\" ||\n               f.type == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (query && query.rules && Array.isArray(query.rules)) {\n                  query.rules.forEach((r) => {\n                     if (r.key != f.id) return;\n\n                     r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (data[f.id] && typeof data[f.id] === \"string\") {\n                  data[f.id] = convertToNumber(data[f.id]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      // hiddenQB.setValue(QBCondition);\n      hiddenQB.setValue({\n         query: query,\n         fields: fields,\n      });\n\n      var QBHelper = hiddenQB.getFilterHelper();\n      var isValid = QBHelper(data);\n\n      hiddenQB.destructor(); // remove the QB\n\n      return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings || {};\n      this.valueRules = settings.valueRules || {};\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: connObj.PK(),\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC = this.currentForm.AB.datacollectionByID(\n                                    newv\n                                 );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options = this.currentForm.datacollection.datasource\n                                 .fields()\n                                 .map(function (f) {\n                                    return {\n                                       id: f.id,\n                                       value: f.label,\n                                    };\n                                 });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 fieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection = this.currentForm.AB.datacollectionByID(\n                                 dcId\n                              );\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection = this.currentForm.AB.datacollectionByID(\n                        collectionId\n                     );\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return this.updateObject ? this.updateObject.fieldByID(fieldID) : null;\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            var dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField = this.currentForm.datacollection.datasource.fieldByID(\n                        item.value\n                     );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection = dataCollection.filteredClone(\n               filterConditions\n            );\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue = clonedDataCollection.datasource.fieldByID(\n                           op.queryField\n                        );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue = clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone = this.currentForm.AB.cloneDeep(\n                                 objectToUpdate\n                              );\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue = clonedDataCollection.datasource.fieldByID(\n                           op.queryField\n                        );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioBuilder\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFormIOBuilder {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // We need to reference this on the save so lets put it in a global var\n      var formBuilder;\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: function (config) {\n            var comp = _logic.parseDataFields(config.dataFields);\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            Formio.builder(this.$view, formComponents, {\n               builder: {\n                  basic: false,\n                  advanced: false,\n                  // data: false,\n                  customBasic: false,\n                  premium: false,\n                  custom: {\n                     title: \"Fields\",\n                     weight: 0,\n                     default: true,\n                     components: comp,\n                  },\n                  layout: {\n                     components: {\n                        table: true,\n                     },\n                  },\n               },\n            }).then(function (builder) {\n               // now that it is set up we can push it into the global var\n               // builder.submission = {\n               //     data: {\n               //         Name: \"James\",\n               //         \"Number Field\": 3\n               //     }\n               // };\n               formBuilder = builder;\n            });\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: () => {\n            return formBuilder.schema;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {\n         /**\n          * @method parseDataObjects\n          *\n          * @param store {webix.TreeCollection}\n          * @param elem {Object} the webix element\n          * @param parentId {integer - nullable} id of parent id\n          */\n         parseDataFields: (fields) => {\n            var components = {};\n            // objects.forEach((obj) => {\n            //     var fields = obj.fields();\n            //     console.log(fields);\n            fields.forEach((entry) => {\n               if (!entry.field) return;\n               switch (entry.field.key) {\n                  case \"boolean\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"checkbox\",\n                           disabled: true,\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                        },\n                     };\n                     break;\n                  case \"calculate\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"textfield\",\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                           inputType: \"text\",\n                           disabled: true,\n                           calculateValue:\n                              \"value = \" +\n                              entry.field.settings.formula\n                                 .replace(/{/g, \"data['\")\n                                 .replace(/}/g, \"']\"),\n                        },\n                     };\n                     break;\n                  case \"connectObject\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"textfield\",\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                           inputType: \"text\",\n                           disabled: true,\n                           calculateValue: `value = data['${entry.key}.format']`,\n                           // ,calculateValue: `value = '${entry.field.settings.textFormula}'`\n                        },\n                     };\n                     break;\n\n                  case \"date\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"datetime\",\n                           disabled: true,\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                           format:\n                              entry.field.settings.timeFormat == 1\n                                 ? \"MMMM d, yyyy\"\n                                 : \"MMMM d, yyyy h:mm a\",\n                        },\n                     };\n                     break;\n                  case \"email\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           disabled: true,\n                           type: \"email\",\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                        },\n                     };\n                     break;\n                  case \"file\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"htmlelement\",\n                           tag: \"a\",\n                           className: \"btn btn-primary btn-block\",\n                           content:\n                              \"<i class='fa fa-paperclip'></i>  \" +\n                              \"{{JSON.parse(data['\" +\n                              entry.key +\n                              \"']).filename}}\",\n                           attrs: [\n                              {\n                                 attr: \"href\",\n                                 value:\n                                    \"/opsportal/file/\" +\n                                    entry.field.object.application.name +\n                                    \"/\" +\n                                    \"{{JSON.parse(data['\" +\n                                    entry.key +\n                                    \"']).uuid}}\",\n                              },\n                              {\n                                 attr: \"target\",\n                                 value: \"_blank\",\n                              },\n                           ],\n                           refreshOnChange: true,\n                           key: entry.key,\n                           _key: entry.key,\n                           disabled: true,\n                           input: false,\n                        },\n                     };\n                     break;\n                  case \"image\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"htmlelement\",\n                           tag: \"img\",\n                           className: \"img-thumbnail max100\",\n                           content: \"\",\n                           attrs: [\n                              {\n                                 attr: \"src\",\n                                 value:\n                                    \"/opsportal/image/\" +\n                                    entry.field.object.application.name +\n                                    \"/\" +\n                                    \"{{data['\" +\n                                    entry.key +\n                                    \"']}}\",\n                              },\n                           ],\n                           refreshOnChange: true,\n                           key: entry.key,\n                           _key: entry.key,\n                           input: false,\n                        },\n                     };\n                     break;\n                  case \"list\":\n                     var vals = [];\n                     entry.field.settings.options.forEach((opt) => {\n                        vals.push({\n                           label: opt.text,\n                           value: opt.id,\n                        });\n                     });\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"select\",\n                           key: entry.key,\n                           _key: entry.key,\n                           disabled: true,\n                           input: true,\n                           data: {\n                              values: vals,\n                           },\n                           multiple: entry.field.settings.isMultiple,\n                        },\n                     };\n                     break;\n                  case \"LongText\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"textarea\",\n                           disabled: true,\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                        },\n                     };\n                     break;\n                  case \"number\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           disabled: true,\n                           type: \"number\",\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                        },\n                     };\n                     break;\n                  case \"TextFormula\":\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"textfield\",\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                           inputType: \"text\",\n                           disabled: true,\n                           calculateValue:\n                              \"value = '\" +\n                              entry.field.settings.textFormula +\n                              \"'\",\n                        },\n                     };\n                     break;\n                  default:\n                     components[entry.key] = {\n                        title: entry.label,\n                        key: entry.key,\n                        icon: entry.field.icon,\n                        schema: {\n                           abFieldID: entry.field.id,\n                           label: entry.field.label,\n                           type: \"textfield\",\n                           disabled: true,\n                           key: entry.key,\n                           _key: entry.key,\n                           input: true,\n                        },\n                     };\n                     break;\n               }\n            });\n            // });\n            components[\"approveButton\"] = {\n               title: \"Approve Button\",\n               key: \"approve\",\n               icon: \"check-square\",\n               schema: {\n                  label: \"Approve\",\n                  type: \"button\",\n                  key: \"approve\",\n                  event: \"approve\",\n                  block: true,\n                  size: \"lg\",\n                  input: false,\n                  leftIcon: \"fa fa-thumbs-up\",\n                  action: \"event\",\n                  theme: \"success\",\n               },\n            };\n            components[\"denyButton\"] = {\n               title: \"Deny Button\",\n               key: \"deny\",\n               icon: \"ban\",\n               schema: {\n                  label: \"Deny\",\n                  type: \"button\",\n                  key: \"deny\",\n                  event: \"deny\",\n                  block: true,\n                  size: \"lg\",\n                  input: false,\n                  leftIcon: \"fa fa-thumbs-down\",\n                  action: \"event\",\n                  theme: \"danger\",\n               },\n            };\n            components[\"customButton\"] = {\n               title: \"Custom Action Button\",\n               key: \"custom\",\n               icon: \"cog\",\n               schema: {\n                  label: \"Custom Name\",\n                  type: \"button\",\n                  key: \"custom\",\n                  event: \"yourEvent\",\n                  block: true,\n                  size: \"lg\",\n                  input: false,\n                  leftIcon: \"fa fa-cog\",\n                  action: \"event\",\n                  theme: \"primary\",\n               },\n            };\n            return components;\n         },\n      };\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.popup);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","normalizeData","isConnected","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","jobID","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","isString","ABMLClass","attributes","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","objectWorkspace","filterConditions","glue","rules","loadAll","isQuery","fixSelect","syncType","QueuedOperations","_queueTimer","runQueue","op","queueOperation","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","applications","apps","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","waitForDataCollectionToInitialize","loadData","start","limit","wheres","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","__totalCount","total_count","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allProcesses","_allQueries","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","fieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","includeRelativeData","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","subData","relatedMlFields","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","colIds","match","colId","colIdNoBracket","ABModelQuery","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","canFilterField","isNew","clonedField","currFields","_joins","objectBase","objID","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","xmlDefinition","currElements","_elements","elementIDs","eID","ele","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionPreviousTask","currElement","processData","tasksToAsk","queryPreviousTasks","processDataFields","processDataObjects","triggerKey","param","responses","processedIDs","task","apply","AllViews","Views","default","common","V","getFieldVal","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","showObjectName","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","unshift","fieldsToQB","conditions","processFieldKeys","fieldsAddFiltersBoolean","fieldsAddFiltersQueryField","fieldsAddFiltersQuery","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersString","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","_isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","in_query","inQuery","not_in_query","notInQuery","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryFieldConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","description","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","warnings","_warnings","ABFieldConnectDefaults","fieldDefaults","names","linkObj","configError","pullRelationValues","selectedData","dataValue","propName","getRelationValue","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","assign","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","toISOString","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","opt","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","isNaN","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","step","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","isExpanded","isEnable","connectionAttrs","parameterId","dataFieldOpt","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","refreshData","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","imageURL","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","moduleList","queryList","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","_object","displayText","componentID","clearTemplateValue","fData","urlImage","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","allRoles","warningsAll","CustomComponentManager","custom","create","edit","export","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","dataCollectionLink","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","allWarnings","datacollectionById","ABDefinitionCore","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","h","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","allDestroy","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","_recordRuleFieldOptions","hidden","isSaveHidden","myPopup","isRecordRule","fieldOptions","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","_customOptions","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","recordRuleFieldOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","ABFieldCore","_CurrentField","filterViews","filterComplex","addValidation","numberOfNull","Field","labelOnChange","requiredOnChange","getNumberOfNullValue","isRequired","messageTemplate","color","Filter","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","term","haveResolved","respond","linkedObj","linkedCol","linkedModel","storageID","storedOptions","itemObj","getItemFromVal","returnVals","theEditor","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","populateOptions","addCy","populateOptionsDataCy","each","option","querySelector","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","display","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","delay","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","querySelectorAll","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","propertiesShow","propertyIDs","userUI","selectUsersUi","__Roles","__Users","labelAlign","stringResult","propertiesStash","userDef","stashUsersUi","ABProcessElementCore","findLane","Lane","currObj","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","abFields","myOutgoingConnections","__dfLookup","conn","connectedElement","DF","connUI","properties","ABProcessTaskEmailCore","ABProcessTaskServiceCore","AccountingBatchProcessingCore","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","variablePopup","operatorPopup","highlight","insertFormula","symbol","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","ABProcessTaskServiceQueryCore","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABProcessTriggerTimer","repeatOnPanel","dayOptions","LABEL_WIDTH","vertical","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","PropertyFilter","ObjectDefaults","commonUI","propertyEditorDefaultElements","showFilterPopup","filter_popup","onFilterChange","currentEditObject","filterValues","allComplete","propertyEditorSave","initPopupEditors","selectSource","dcId","oldDcId","propertyEditorValues","skipAutoSave","propertyEditorPopulate","$DcSelector","propertyBadgeNumber","filterMenuButton","v1App","idPrefix","newComponent","componentOld","buttonFilter","popupFilter","ClientFilter","_ui","downloadCsvFile","qsWhere","open","$buttonFilter","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselCore","ABViewCarouselComponent","viewCarousel","_handler_doOnShow","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","navigation","buttons","activeIndex","getActiveIndex","switchImage","parentAccessLevel","_handler_doReload","viewLoad","carousel","firstElementChild","detatch","myTemplate","Carousel","current_position","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","onclick","getNode","fullscreen","exit","showPopup","ABViewCarousel","onFilterData","__filterHelper","__linkPageHelper","ABViewChartCore","ABViewChartComponent","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","componentId","_onShow","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataviewCore","ABViewDataviewComponent","com","scrollview","dataFlexView","paddingX","paddingY","onAfterScroll","getScrollState","dataView","emptyView","renderData","Layout","Scroll","toggleTab","parentTab","wb","tab","getTopParentView","tabbar","nextTab","$height","loadMoreTimer","setYPos","getYPos","flexlayout","background","records","$width","recordWidth","currentLength","_startPos","stopPos","scrollTo","clicked","ABViewDetailCore","ABViewDetailComponent","myVal","needRecalculate","vComponent","newRow","createdRow","currCursor","updatedRow","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","baseComp","addPageComponent","fld","trg","onClick","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","templateLabel","minHeight","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","getDomTree","domTree","divTree","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","ABFieldImage","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABViewDocxBuilder","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","baseCom","noFile","buttonWidth","leftSpacer","rightSpacer","buttonPos","buttonLabelText","renderFile","_init","DownloadButton","NoFileLabel","reportValues","summaries","isDcLabelAdded","dcValues","dataList","dcCursor","setReportValues","baseData","targetData","fieldLabels","transFields","childItem","resultData","objTran","fieldTran","objectLabel","fieldLabel","datacollectionData","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","blobFile","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormSelectMultiple","ABViewFormTextbox","_callbacks","onBeforeSaveData","superComponent","_superComponent","uniqueInstanceID","myUnique","fieldValidations","validationUI","existsFields","fieldValidationsHolder","abid","timerId","onSaveData","saveData","customFields","viewComponents","_showed","defaultRowData","inputId","displayParentData","relationField","relationFieldCom","relationFieldView","relationElem","formData","Form","complexValidations","getFilterHelper","formField","nval","oval","fieldValidating","newData","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","parentData","focusOnFirst","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","recordRulesReady","formReady","newFormVals","formError","$saveButton","invalidAttrs","sqlMessage","topPosition","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","parentFormUniqueID","ABViewFormConnectCore","ABViewPropertyEditPage","ABPopupSort","FilterComponent","SortComponent","compId","$node","getFilterByConnectValues","filterByConnectValue","$ui","linkedField","parentFields","$filterValueConfig","parentField","ABViewFormConnectComponent","baseView","editpopup","editPageComponent","goToEditPage","selectedValues","recordObj","$$component","prepedVals","selectAll","customField","callbackSaveData","currentVals","callbackCancel","callbackClearOnLoad","formBusy","$elem","__editFormDcEvent","__filterComponent","viewLocation","templateElem","editPageTool","showSortPopup","$button","onSortChange","addPageProperty","editPageProperty","filterConnectedOptions","fieldDefs","definitionForID","objectDefs","fieldsDefs","connectedObjs","formElementsDefs","connObj","fieldToCheck","fdefs","customFK","settingsAddPage","settingsEditPage","filterConnectedValue","populatePopupEditors","populateBadgeNumber","updateEventIds","addListener","buttonSort","propertyComponent","optionsParam","onCancelClick","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","componentV1","getInputNode","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","DAY_SCALE","WEEK_SCALE","wstart","weekStart","wend","MONTH_SCALE","YEAR_SCALE","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","_this","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","top","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","csv","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewGridCore","ABViewPropertyLinkPage","KEY_STORAGE_SETTINGS","GridSettings","viewGrid","toolbar","buttonDeleteSelected","buttonMassUpdate","buttonExport","globalSearchToolbar","datatable","_handler_filterData","callbackFilterData","columnSplitLeft","columnSplitRight","validationError","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","sortOptions","callbackSortData","skippableColumns","handler_select","selectRow","ignoreLocalSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","checked","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarFilter","toolbarSort","toolbarExport","externalSearchText","tableUI","inputWidth","codebase","cdn","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","clearValue","numRows","globalFilterPosition","refreshHeader","$ButtonFilter","sortRules","gridElem","rowItem","oldDC","$DataTable","__handler_dc_busy","__handler_dc_ready","__handler_dc_loadData","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","rulePops","popUpId","groupField","treetable","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGrid","propertyGroupByList","colNames","groupByList","objId","ABViewImageCore","validateType","actionKey","uploadedFile","imgTag","ABViewKanbanCore","ABFormSidePanel","ABFieldUser","ABViewKanBanComponent","viewKanBan","kanban","resizer","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","fieldByKey","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","newVals","updateVals","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","ABViewKanban","Kanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewList","ListView","propertyUpdateFieldOptions","dvId","SourceSelector","propertyDatacollections","autoHeight","ABViewMenuCore","ABViewMenuComponent","datatype","onMenuItemClick","redirectPage","toggleParent","showIt","setInterval","clearInterval","Menu","viewInfo","subsign","elems","menuIncluded","parentElem","ABViewPageCore","ABViewPivotCore","ABFieldCalculate","ABFieldFormula","ABFieldNumber","componentBase","readonly","onBeforeApply","$pivotComp","customLabels","populateData","dataMapped","setStructure","ABViewReportsManagerCore","compInstance","reports","getModules","saveModule","indexOfModule","m","deleteModule","getModels","reportModels","reportFields","getReportFields","refs","getQueries","saveQuery","indexOfQuery","deleteQuery","pullDataTasks","dcIds","dcData","sid","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","sData","tData","sVal","tVal","matchedVal","updateRows","queryVal","filterElem","tempDc","as","mod","groupProp","_","groupedData","groupedResult","agg","rawCol","getFieldData","table","GetColumnConfig","meta","columnFormat","ref","abField","reportData","reportRow","rField","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","viewCSVExporter","clientFilter","CSVImporter","viewCSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","webix_remove_upload","removeCsvFile","populateColumnList","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","selected","_included","labelImport","overLimitAlert","uiPopup","selectedDv","formClear","matchFields","getMatchFields","columnIndex","statusTemplate","fileId","firstLine","csvColumnList","formComp","formConfig","uiColumns","selectedCsvCols","selectVal","matchCol","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","$columnOption","$linkFieldOption","rowValue","parsedData","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","year","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","linkConnectFields","allValid","validRows","removeRowCss","itemValid","hashLookups","allLookups","connectObject","connectModel","linkIdKey","createRecord","newRowsData","rowIndex","itemPass","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","_isShow","parentView","pieInnerText","shadow","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","user_id","default_date","__refreshTimeout","commentData","MAX_SAFE_INTEGER","commentText","dateTime","comment","commentField","CurrentDatacollectionID","eventsClear","populateFilterComponent","ifComp","ifComponent","elseComp","elseComponent","uiIf","uiElse","displayView","_ifComponent","_elseComponent","viewComponentIDs","_handlerChangePage","rowViews","getElements","curRowIndex","componentMap","rowNew","colNumber","grav","rowIndx","curRow","newPos","getGrav","mapKey","_yPosition","divs","imageUrl","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","generateDocxFile","multilinguageFields","contentFile","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","uiValidationHolder","initCallbacks","initEvents","initValidationRules","loadDcDataOfRecordRules","$Form","reloadViewId","ms","FocusableTemplate","new_width","form_settings","base_ui","requiredClass","DEFAULT_HEIGHT","AB_App","NumberTextInput","viewType","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","uiFormatting","uiComponents","vId","uiMenu","defineCypress","_uiMenu","$Menu","$item","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","_viewComponents","baseType","menuItems","selectedItem","$sidebar","toggle","collapseNode","expandNode","multiview","keepViews","onViewChange","prevId","nextId","tabUi","tabTemplate","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","ABViewProperty","toSettings","editForms","pagesHasForm","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","popupTemplate","setDefaultValue","linkedData","fView","objLink","rawData","formEdit","FilterRuleSettings","ABViewPropertyFilterData","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilter","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","callEvent","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","notes","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","currentObject","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","hiddenQB","QBCondition","convertToNumber","QBHelper","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","$popup","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","newValues","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","some","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","parsed","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","right","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","version","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","w","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","ArrayBuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","autofit","$init","parseDataFields","dataFields","formComponents","Formio","basic","advanced","customBasic","premium","weight","getFormData","schema","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","newD","createForm","submission","onButton","$getValue","eachRow","$count","setMasterValue","master"],"sourceRoot":""}