{"version":3,"file":"236.2602161b4ed19f88e88e.js","mappings":"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,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBlb,gBAAiB,IACjBmb,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGxb,OAAQ,WAEL,OAAIsX,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCtuBN,MAAMC,EACHje,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAK6d,OAAS,EACjB,CAEAC,SAAS3W,EAAMmK,GACZtR,KAAK6d,OAAOvZ,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEAyM,OACG,OAA6B,GAAtB/d,KAAK6d,OAAO1X,MACtB,CAEAqB,OACG,OAAOxH,KAAK6d,OAAO1X,OAAS,CAC/B,CAEA6X,qBACG,IAAIhG,EAAM,CACPzI,MAAO,eACP0O,kBAAmB,CAAC,GAGnBC,EAAOlG,EAAIiG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","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        console.log(`${jobID} : ${ev}:normalization begin`);\n                        let timeFrom = performance.now();\n                        model.normalizeData(data.data);\n                        let timeTo = performance.now();\n                        console.log(\n                           `${jobID} : ${ev}:normalization end:  ${\n                              timeTo - timeFrom\n                           }ms`\n                        );\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.js\";\n// NOTE: moved to require() because using import with webix_debug.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix_debug.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      console.error(\"TODO: ABFactory.notify(): pass error off to analytics\");\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         ) {\n            return;\n         }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         if (this.isCursorFollow && this.getCursor()?.id != deleteId) {\n            return;\n         }\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[this.datasource.PK()],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = Object.assign(incomingData, { data: remain, pos });\n      }\n      const parsedData = Object.assign(incomingData, { data: data });\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(() => {\n            this.__dataCollection.load(async () => {\n               // using queuedParse() to responsively handle large datasets.\n               await this.queuedParse(data);\n\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               // this does nothing???\n               this.parseTreeCollection(data);\n\n               // if we are linked, then refresh our cursor\n               var linkDv = this.datacollectionLink;\n               if (linkDv) {\n                  // filter data by match link data collection\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               } else {\n                  // set static cursor\n                  this.setStaticCursor();\n               }\n\n               // now we close out our .loadData() promise.resolve() :\n               if (this._pendingLoadDataResolve) {\n                  this._pendingLoadDataResolve.resolve();\n\n                  // after we call .resolve() stop tracking this:\n                  this._pendingLoadDataResolve = null;\n               }\n\n               // If dc set load all, then it will not trigger .loadData in dc at\n               // .onAfterLoad event\n               if (this.settings.loadAll) {\n                  this.emit(\"loadData\", {});\n               }\n\n               // mark initialized data\n               if (this._dataStatus != this.dataStatusFlag.initialized) {\n                  this._dataStatus = this.dataStatusFlag.initialized;\n                  this.emit(\"initializedData\", {});\n               }\n            });\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         this.__linkProblems = this.__linkProblems ?? [];\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = value.indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = value.indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     f.settings.isCustomFK &&\n                     // 1:M\n                     ((f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                        // 1:1 isSource = true\n                        (f.settings.linkType == \"one\" &&\n                           f.settings.linkViaType == \"one\" &&\n                           f.settings.isSource))\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(f);\n\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n            let columnName = field.columnName;\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: \"\",\n   editMode: 0,\n   readonly: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n               \"object\"\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\"> \n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            webix.ui(ui).start();\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         let jobID = this.AB.jobID();\n         console.log(`${jobID} : normalization begin`);\n         let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         let timeTo = performance.now();\n         console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // cache options if not a xxx->one connection\n                  if (this?.settings?.linkViaType != \"one\") {\n                     this.AB.Storage.set(storageID, this._options);\n                  }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue && theEditor.getValue()) {\n         theEditor.setValue(theEditor.getValue());\n         // } else if (this._selectedData && this._selectedData.length) {\n         //    theEditor.setValue(this.editFormat(this._selectedData));\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor =\n         this.AB.Account?._config?.languageCode == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} width:${options.width}; height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCSVImporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               view: \"button\",\n               name: \"import\",\n               id: ids.importButton,\n               value: this.label(\"Import\"),\n               css: \"webix_primary\",\n               disabled: true,\n               click: () => {\n                  this.import();\n               },\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = {};\n\n         // Set parent's data collection cursor\n         if (objectLink && linkConnectFields.length && linkValues) {\n            linkConnectFields.forEach((f) => {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               newRowData[f.columnName] = {};\n               newRowData[f.columnName][linkColName] =\n                  linkValues[linkColName] || linkValues.id;\n            });\n         }\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key]).hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               scrollview: \"\",\n               dataFlexView: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.scrollview,\n            view: \"scrollview\",\n            scroll: \"y\",\n            body: {\n               id: ids.dataFlexView,\n               view: \"flexlayout\",\n               paddingX: 15,\n               paddingY: 19,\n               type: \"space\",\n               cols: [],\n            },\n            on: {\n               onAfterScroll: async () => {\n                  const pos = $$(ids.scrollview).getScrollState();\n\n                  await this.scroll(pos);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      const dataView = $$(ids.dataFlexView);\n\n      // initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      // if (dc.datacollectionLink && dc.fieldLink) {\n      //    dc.bind(dataView, dc.datacollectionLink, dc.fieldLink);\n      // } else {\n      //    dc.bind(dataView);\n      // }\n      // track all flexlayout component IDs on the data collectino so we can notify them of changes\n      dc.attachFlexlayout(dataView);\n      dc.on(\"initializingData\", () => {\n         this.busy();\n      });\n      dc.on(\"initializedData\", () => {\n         this.ready();\n      });\n      dc.on(\"loadData\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"update\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"delete\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"create\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n\n      // this.eventClear();\n      //\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"loadData\",\n      //    listener: () => {\n      //       com.renderData();\n      //    },\n      // });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.initialized) this.renderData();\n   }\n\n   get yPosition() {\n      return this._yPosition ?? 0;\n   }\n\n   set yPosition(pos) {\n      this._yPosition = pos;\n   }\n\n   busy() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.disable();\n\n      const abWebix = this.AB.Webix;\n\n      if (!Scroll.showProgress) abWebix.extend(Scroll, abWebix.ProgressBar);\n\n      Scroll.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.enable();\n\n      const AB = this.AB;\n\n      if (Scroll && !Scroll.hideProgress)\n         AB.Webix.extend(Scroll, AB.Webix.ProgressBar);\n\n      Scroll.hideProgress();\n   }\n\n   renderData() {\n      const ids = this.ids;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      const records = [];\n      const dc = this.datacollection;\n\n      if (!dc) {\n         this.ready();\n\n         return;\n      }\n\n      const Layout = $$(ids.dataFlexView) || $$(ids.component);\n\n      if (!Layout || isNaN(Layout.$width)) {\n         this.ready();\n\n         return;\n      }\n\n      const baseView = this.view;\n      const xCount = parseInt(this.settings.xCount);\n      const recordWidth = Math.floor(\n         (Layout.$width - 20 - xCount * 20) / xCount\n      );\n\n      const rows = dc.getData();\n\n      // if this amount of data is already parsed just skip the rest.\n      if (Layout.currentLength === rows.length) {\n         this.ready();\n\n         return;\n      }\n\n      Layout.currentLength = rows.length;\n\n      // store total of rows\n      this._startPos = Layout.getChildViews ? Layout.getChildViews().length : 0;\n\n      let stopPos = rows.length;\n\n      if (dc.settings.loadAll || this._startPos === 0) stopPos = rows.length;\n      else if (rows.length - this._startPos > 20) stopPos = this._startPos + 20;\n\n      for (let i = this._startPos; i < stopPos; i++) {\n         // get the components configuation\n         const detailCom = new ABViewDetailComponent(baseView, rows[i].id);\n         const _ui = detailCom.ui();\n\n         // adjust the UI to make sure it will look like a \"card\"\n         _ui.type = \"space\";\n         _ui.css = \"ab-detail-view\";\n\n         if (detailsPage || editPage) {\n            _ui.css += ` ab-detail-hover ab-record-${rows[i].id}`;\n\n            if (detailsPage) _ui.css += \" ab-detail-page\";\n\n            if (editPage) _ui.css += \" ab-edit-page\";\n         }\n\n         _ui.paddingX = 10;\n         _ui.paddingY = 6;\n         _ui.minWidth = recordWidth - 10;\n         _ui.maxWidth = recordWidth;\n\n         if (Layout.addView) {\n            Layout.addView(_ui, -1);\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[i]), 0);\n         } else records.push(_ui);\n      }\n\n      if (records.length) {\n         const flexlayout = {\n            id: ids.dataFlexView,\n            view: \"flexlayout\",\n            paddingX: 15,\n            paddingY: 19,\n            type: \"space\",\n            cols: records,\n         };\n\n         this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n\n         for (let j = this._startPos; j < stopPos; j++) {\n            const detailCom = new ABViewDetailComponent(baseView, rows[j].id);\n\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[j]), 0);\n         }\n      }\n\n      if ($$(ids.scrollview)) {\n         $$(ids.scrollview).scrollTo(0, this.yPosition);\n\n         if (detailsPage || editPage) {\n            Layout.$view.onclick = (e) => {\n               let clicked = false;\n               let divs = e.path ?? [];\n\n               // NOTE: Some web browser clients do not support .path\n               if (!divs.length) {\n                  divs.push(e.target);\n                  divs.push(e.target.parentNode);\n               }\n\n               if (editPage) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem_header\") > -1\n                     ) {\n                        clicked = true;\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(editPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n                        break;\n                     }\n                  }\n               }\n\n               if (detailsPage && !clicked) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem\") > -1\n                     ) {\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(detailsPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n\n                        break;\n                     }\n                  }\n               }\n            };\n         }\n      }\n\n      //Add data-cy attributes for cypress tests\n      const name = baseView.name.replace(\".dataview\", \"\");\n\n      Layout.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n\n      Layout.getChildViews().forEach((child, i) => {\n         const uuid = rows[i + this._startPos][\"uuid\"];\n         const view = child.$view;\n\n         view\n            .querySelector(\".webix_accordionitem_body\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item ${name} ${uuid} ${baseView.id}`\n            );\n         view\n            .querySelector(\".webix_accordionitem_button\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item button ${name} ${uuid} ${baseView.id}`\n            );\n      });\n\n      this.ready();\n   }\n\n   emptyView() {\n      const ids = this.ids;\n      const flexlayout = {\n         id: ids.dataFlexView,\n         view: \"flexlayout\",\n         type: \"clean\",\n         padding: 10,\n         css: { background: \"#ebedf0 !important\" },\n         cols: [],\n      };\n\n      this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n   }\n\n   /**\n    * @method scroll\n    * @param pos - {\n    * \t\t\t\t\tx: {integer},\n    * \t\t\t\t\ty: {integer}\n    * \t\t\t\t}\n    */\n   async scroll(pos) {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n      const loadWhen = 40;\n      const y = pos.y;\n      const maxYPos = Layout.$height - Scroll.$height;\n\n      if (maxYPos - y <= loadWhen) {\n         if (this.loadMoreTimer) return;\n\n         this.yPosition = y;\n\n         const dc = this.datacollection;\n\n         if (!dc) return;\n\n         if (Layout.getChildViews().length >= dc.totalCount) return;\n\n         // loading cursor\n         this.busy();\n\n         await dc.loadData(Layout.getChildViews().length || 0);\n\n         this.loadMoreTimer = setTimeout(() => {\n            this.loadMoreTimer = null;\n         }, 1100);\n      }\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            if (dcCursor) {\n               const treeCursor = dc.getCursor(true);\n\n               dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            } else dataList.push(...this.AB.cloneDeep(dc.getData()));\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n      this.loadDcDataOfRecordRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   loadDcDataOfRecordRules() {\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC &&\n                  pullDataDC.dataStatus === pullDataDC.dataStatusFlag.notInitial\n               )\n                  pullDataDC.loadData();\n            }\n         );\n      });\n   }\n\n   async onShow(data) {\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required: field?.settings?.required || settings?.required || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         const currentVals = $formItem.getValue();\n\n         let selectedItems;\n         if (currentVals.indexOf(saveData.id) === -1)\n            selectedItems = currentVals\n               ? `${currentVals},${saveData.id}`\n               : saveData.id;\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData.id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      const template = `<div class=\"customField ${\n         formSettings.labelPosition\n      }\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: this.new_width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || this.new_width\n            : this.new_width;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            id: this.ids.pivot,\n            view: \"pivot\",\n            readonly: true,\n            removeMissed: settings.removeMissed,\n            totalColumn: settings.totalColumn,\n            separateLabel: settings.separateLabel,\n            min: settings.min,\n            max: settings.max,\n            height: settings.height,\n            format: (value) => {\n               const decimalPlaces = settings.decimalPlaces ?? 2;\n\n               return value && value != \"0\"\n                  ? parseFloat(value).toFixed(decimalPlaces || 0)\n                  : value;\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      const object = dc.datasource;\n      if (!object) return;\n\n      const $pivot = $$(ids.pivot);\n\n      if ($pivot && object instanceof ABObjectQuery) {\n         const customLabels = {};\n\n         object.fields().forEach((f) => {\n            customLabels[f.columnName] = f.label;\n         });\n\n         $pivot.define(\"fieldMap\", customLabels);\n      }\n\n      const populateData = () => {\n         const data = dc.getData();\n         const dataMapped = data.map((d) => {\n            const result = {};\n\n            object.fields().forEach((f) => {\n               if (\n                  f instanceof ABFieldCalculate ||\n                  f instanceof ABFieldFormula ||\n                  f instanceof ABFieldNumber\n               )\n                  result[f.columnName] = d[f.columnName];\n               else result[f.columnName] = f.format(d);\n            });\n\n            return result;\n         });\n\n         $pivot.parse(dataMapped);\n\n         const settings = this.settings;\n\n         // set pivot configuration\n         if (settings.structure) $pivot.setStructure(settings.structure);\n      };\n\n      this.view.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            populateData();\n         },\n      });\n\n      switch (dc.dataStatus) {\n         case dc.dataStatusFlag.notInitial:\n            dc.loadData();\n            break;\n\n         case dc.dataStatusFlag.initialized:\n            populateData();\n            break;\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign({ reportManager: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      const isEditMode = settings.editMode === 1;\n      const _uiReportManager = {\n         id: ids.reportManager,\n         view: \"reports\",\n         toolbar: true,\n         mode: isEditMode ? \"edit\" : \"list\",\n         readonly: settings.readonly === 1 || isEditMode,\n         override: new Map([\n            [\n               reports.services.Backend,\n               class MyBackend extends reports.services.Backend {\n                  async getModules() {\n                     if (dc == null) return [];\n\n                     await self.waitInitializingDCEvery(1000, dc);\n\n                     return dc.getData().map((e) => {\n                        return {\n                           id: e.id,\n                           name: e[fieldName],\n                           text: JSON.stringify(e[fieldText]),\n                           updated: e[\"updated_at\"],\n                        };\n                     });\n                  }\n\n                  async saveModule(id, data) {\n                     const parsedData = {};\n\n                     parsedData[fieldName] = data.name;\n                     parsedData[fieldText] = data.text;\n\n                     let response = {};\n\n                     if (id == null)\n                        response = await dc.model.create(parsedData);\n                     else response = await dc.model.update(id, parsedData);\n\n                     return { id: response.id };\n                  }\n\n                  async deleteModule(id) {\n                     await dc.model.delete(id);\n\n                     return { id: id };\n                  }\n\n                  async getModels() {\n                     const reportModels = {};\n\n                     if (baseView.settings.datacollectionIDs === \"\")\n                        return reportModels;\n\n                     baseView.settings.datacollectionIDs\n                        .split(\", \")\n                        .forEach((dcID) => {\n                           const dc = ab.datacollectionByID(dcID);\n\n                           if (!dc) return;\n\n                           const obj = dc.datasource;\n\n                           if (!obj) return;\n\n                           const reportFields = self.getReportFields(dc);\n\n                           // get connected data collections\n                           // let linkedFields = [];\n                           // (obj.connectFields() || []).forEach((f, index) => {\n                           //    let connectedDcs = ab.datacollections(\n                           //       (dColl) =>\n                           //          dColl &&\n                           //          dColl.datasource &&\n                           //          dColl.datasource.id === f.settings.linkObject\n                           //    );\n                           //    (connectedDcs || []).forEach((linkedDc) => {\n                           //       linkedFields.push({\n                           //          id: index + 1,\n                           //          name: linkedDc.label,\n                           //          source: dc.id,\n                           //          target: linkedDc.id\n                           //       });\n                           //    });\n                           // });\n\n                           // // MOCK UP for testing\n                           // let linkedFields = [\n                           //    {\n                           //       id: \"id\",\n                           //       name: \"id\",\n                           //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n                           //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n                           //    }\n                           // ];\n\n                           reportModels[dc.id] = {\n                              id: dc.id,\n                              name: dc.label,\n                              data: reportFields,\n                              refs: [],\n                           };\n                        });\n\n                     return reportModels;\n                  }\n\n                  async getQueries() {\n                     const moduleID =\n                        $$(ids.reportManager).getState().moduleId || \"\";\n\n                     if (moduleID === \"\") return [];\n\n                     return (\n                        (\n                           await dc.model.findAll({\n                              where: {\n                                 uuid: moduleID,\n                              },\n                           })\n                        ).data[0][fieldQueries] || []\n                     );\n                  }\n\n                  async saveQuery(id, data) {\n                     const moduleID =\n                        $$(ids.reportManager).getState().moduleId || \"\";\n\n                     if (moduleID === \"\") return {};\n\n                     const moduleData = (\n                        await dc.model.findAll({\n                           where: {\n                              uuid: moduleID,\n                           },\n                        })\n                     ).data[0];\n\n                     if (moduleData == null) return {};\n\n                     const queries = moduleData[fieldQueries] || [];\n                     const queryIndex = queries.findIndex((e) => e.id === id);\n                     const queryID =\n                        queries[queryIndex]?.id ?? id ?? abWebix.uid();\n\n                     // Add a new query\n                     if (queryIndex < 0)\n                        queries.push(Object.assign({ id: queryID }, data));\n\n                     const parsedData = {};\n\n                     parsedData[fieldQueries] = queries.sort((a, b) => {\n                        if (a.name < b.name) return -1;\n\n                        if (a.name > b.name) return 1;\n\n                        return 0;\n                     });\n\n                     await dc.model.update(moduleID, parsedData);\n\n                     return { id: queryID };\n                  }\n\n                  async deleteQuery(id) {\n                     const moduleID =\n                        $$(ids.reportManager).getState().moduleId || \"\";\n\n                     if (moduleID === \"\") return {};\n\n                     const moduleData = (\n                        await dc.model.findAll({\n                           where: {\n                              uuid: moduleID,\n                           },\n                        })\n                     ).data[0];\n\n                     if (moduleData == null) return {};\n\n                     const queries = moduleData[fieldQueries] || [];\n                     const queryIndex = queries.findIndex((e) => e.id === id);\n\n                     if (queryIndex >= 0) {\n                        const parsedData = {};\n\n                        parsedData[fieldQueries] = queries\n                           .filter((e, i) => i !== queryIndex)\n                           .sort((a, b) => {\n                              if (a.name < b.name) return -1;\n\n                              if (a.name > b.name) return 1;\n\n                              return 0;\n                           });\n\n                        await dc.model.update(moduleID, parsedData);\n                     }\n\n                     return { id: id };\n                  }\n\n                  async getData(config) {\n                     let result = [];\n                     let pullDataTasks = [];\n                     let dcIds = [];\n                     let dcData = {};\n                     let reportFields = [];\n\n                     // pull data of the base and join DCs\n                     dcIds.push(config.data);\n                     (config.joins || []).forEach((j) => {\n                        dcIds.push(j.sid);\n                        dcIds.push(j.tid);\n                     });\n                     dcIds = ab.uniq(dcIds);\n                     dcIds.forEach((dcId) => {\n                        pullDataTasks.push(\n                           new Promise((resolve, reject) => {\n                              const getData = async () => {\n                                 try {\n                                    dcData[dcId] =\n                                       (await self.getData(dcId)) || [];\n\n                                    resolve();\n                                 } catch (err) {\n                                    reject(err);\n                                 }\n                              };\n\n                              getData();\n                           })\n                        );\n                     });\n\n                     dcIds.forEach((dcId) => {\n                        const dataCol = ab.datacollectionByID(dcId);\n\n                        if (!dataCol) return;\n\n                        reportFields = reportFields.concat(\n                           self.getReportFields(dataCol).map((f) => {\n                              // change format of id to match the report widget\n                              f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                              return f;\n                           })\n                        );\n                     });\n\n                     await Promise.all(pullDataTasks);\n\n                     // the data result equals data of the base DC\n                     result = dcData[config.data] || [];\n\n                     if (config.joins?.length)\n                        (config.joins || []).forEach((j) => {\n                           const sourceDc = ab.datacollectionByID(j.sid);\n                           if (!sourceDc) return;\n\n                           const sourceObj = sourceDc.datasource;\n                           if (!sourceObj) return;\n\n                           const targetDc = ab.datacollectionByID(j.tid);\n                           if (!targetDc) return;\n\n                           const targetObj = targetDc.datasource;\n                           if (!targetObj) return;\n\n                           const sourceLinkField = sourceObj.fieldByID(j.sf);\n                           const targetLinkField = targetObj.fieldByID(j.tf);\n                           if (!sourceLinkField && !targetLinkField) return;\n\n                           const sourceData = dcData[j.sid] || [];\n                           const targetData = dcData[j.tid] || [];\n\n                           sourceData.forEach((sData) => {\n                              targetData.forEach((tData) => {\n                                 let sVal =\n                                    sData[\n                                       sourceLinkField\n                                          ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                          : `${j.sid}.id`\n                                    ] || [];\n\n                                 let tVal =\n                                    tData[\n                                       targetLinkField\n                                          ? `${j.tid}.${targetLinkField.columnName}.id`\n                                          : `${j.tid}.id`\n                                    ] || [];\n\n                                 if (!Array.isArray(sVal)) sVal = [sVal];\n\n                                 if (!Array.isArray(tVal)) tVal = [tVal];\n\n                                 // Add joined row to the result array\n                                 const matchedVal = sVal.filter(\n                                    (val) => tVal.indexOf(val) > -1\n                                 );\n\n                                 if (matchedVal?.length) {\n                                    const updateRows =\n                                       result.filter(\n                                          (r) =>\n                                             r[`${j.sid}.id`] ===\n                                                sData[`${j.sid}.id`] &&\n                                             !r[`${j.tid}.id`]\n                                       ) || [];\n\n                                    if (updateRows?.length)\n                                       (updateRows || []).forEach((r) => {\n                                          for (const key in tData)\n                                             if (key !== \"id\")\n                                                r[key] = tData[key];\n                                       });\n                                    else\n                                       result.push(\n                                          Object.assign(\n                                             ab.cloneDeep(sData),\n                                             ab.cloneDeep(tData)\n                                          )\n                                       );\n                                 }\n                              });\n                           });\n                        });\n\n                     // filter & sort\n                     const queryVal = JSON.parse(config.query || \"{}\");\n\n                     if (queryVal?.rules?.length)\n                        queryVal.rules.forEach((r) => {\n                           if (!r || !r.type || !r.condition) return;\n\n                           switch (r.type) {\n                              case \"date\":\n                              case \"datetime\":\n                                 // Convert string to Date object\n                                 if (r.condition.filter) {\n                                    if (ab.isString(r.condition.filter))\n                                       r.condition.filter = ab.rules.toDate(\n                                          r.condition.filter\n                                       );\n\n                                    if (\n                                       r.condition.filter.start &&\n                                       ab.isString(r.condition.filter.start)\n                                    )\n                                       r.condition.filter.start =\n                                          ab.rules.toDate(\n                                             r.condition.filter.start\n                                          );\n\n                                    if (\n                                       r.condition.filter.end &&\n                                       ab.isString(r.condition.filter.end)\n                                    )\n                                       r.condition.filter.end = ab.rules.toDate(\n                                          r.condition.filter.end\n                                       );\n                                 }\n\n                                 break;\n                           }\n                        });\n\n                     // create a new query widget to get the filter function\n                     const filterElem = abWebix.ui({\n                        view: \"query\",\n                        fields: reportFields,\n                        value: queryVal,\n                     });\n\n                     // create a new data collection and apply the query filter\n                     const tempDc = new abWebix.DataCollection();\n\n                     tempDc.parse(result);\n\n                     // filter\n                     let filterFn;\n\n                     try {\n                        filterFn = filterElem.getFilterFunction();\n                     } catch (error) {\n                        // continue regardless of error\n                     }\n\n                     if (filterFn) tempDc.filter(filterFn);\n\n                     // sorting\n                     (config.sort || []).forEach((sort) => {\n                        if (sort.id)\n                           tempDc.sort({\n                              as: \"string\",\n                              dir: sort.mod || \"asc\",\n                              by: `#${sort.id}#`,\n                           });\n                     });\n\n                     result = tempDc.serialize();\n\n                     // clear\n                     filterElem.destructor();\n                     tempDc.destructor();\n\n                     // group by\n                     if (config?.group?.length) {\n                        (config.group || []).forEach((groupProp) => {\n                           result = _(result).groupBy(groupProp);\n                        });\n\n                        result = result\n                           .map((groupedData, id) => {\n                              const groupedResult = {};\n\n                              (config.columns || []).forEach((col) => {\n                                 const agg = col.split(\".\")[0];\n                                 const rawCol = col.replace(\n                                    /sum.|avg.|count.|max.|min./g,\n                                    \"\"\n                                 );\n\n                                 switch (agg) {\n                                    case \"sum\":\n                                       groupedResult[col] = ab.sumBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"avg\":\n                                       groupedResult[col] = ab.meanBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"count\":\n                                       groupedResult[col] = (\n                                          groupedData || []\n                                       ).length;\n                                       break;\n                                    case \"max\":\n                                       groupedResult[col] =\n                                          (ab.maxBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    case \"min\":\n                                       groupedResult[col] =\n                                          (ab.minBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    default:\n                                       groupedResult[col] = groupedData[0][col];\n                                       break;\n                                 }\n                              });\n\n                              return groupedResult;\n                           })\n                           .value();\n                     }\n\n                     return result;\n                  }\n\n                  async getOptions(fields) {\n                     return [];\n                  }\n                  async getFieldData(fieldId) {\n                     return [];\n                  }\n               },\n            ],\n            [\n               reports.services.Local,\n               class MyLocal extends reports.services.Local {\n                  constructor(app) {\n                     super(app);\n\n                     this._currentModuleID = \"\";\n                  }\n                  getQueries() {\n                     const currentModuleID = $$(ids.reportManager).getState()\n                        .moduleId;\n\n                     if (this._currentModuleID !== currentModuleID) {\n                        this._currentModuleID = currentModuleID;\n                        this._queries = null;\n                     }\n\n                     return super.getQueries();\n                  }\n               },\n            ],\n            [\n               reports.views.table,\n               class MyTable extends reports.views.table {\n                  // NOTE: fix format of date column type\n                  GetColumnConfig(a) {\n                     if (a.type === \"date\") {\n                        return {\n                           id: a.id,\n                           header:\n                              !a.meta.header || a.meta.header === \"none\"\n                                 ? a.meta.name || a.name\n                                 : [\n                                      a.meta.name || a.name,\n                                      {\n                                         content:\n                                            a.header === \"text\"\n                                               ? \"textFilter\"\n                                               : \"richSelectFilter\",\n                                      },\n                                   ],\n                           type: a.type,\n                           sort: \"date\",\n                           width: a.width || 200,\n                           format: (val) => {\n                              // check valid date\n                              if (val?.getTime && !isNaN(val.getTime()))\n                                 return abWebix.i18n.dateFormatStr(val);\n                              else return \"\";\n                           },\n                        };\n                     } else return super.GetColumnConfig(a);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      const _ui = super.ui([_uiReportManager]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         fields.push({\n            id: f.columnName,\n            name: f.label,\n            filter: f.fieldIsFilterable(),\n            edit: false,\n            type: columnFormat.editor || \"text\",\n            format: columnFormat.format,\n            options: columnFormat.options,\n            ref: \"\",\n            key: false,\n            show: true,\n            abField: f,\n         });\n\n         if (f.isConnection && f.settings.isSource) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      if (\n         datacollection.dataStatus === datacollection.dataStatusFlag.notInitial\n      )\n         await datacollection.loadData();\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            reportRow[col] = field ? field.format(row) : row[columnName];\n\n            // FK value of the connect field\n            if (field && field.isConnection) {\n               let $pk = field.datasourceLink.PK();\n               if (Array.isArray(row[columnName]))\n                  reportRow[`${col}.id`] = row[columnName].map(\n                     (link) => link[$pk] || link.id || link\n                  );\n               else if (row[columnName])\n                  reportRow[`${col}.id`] =\n                     row[columnName][$pk] ||\n                     row[columnName].id ||\n                     row[columnName];\n            }\n\n            const rField = reportFields.filter((f) => f.id === columnName)[0];\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        if (\n                           dcCalendar.dataStatus ===\n                           dcCalendar.dataStatusFlag.notInitial\n                        )\n                           // load data when a widget is showing\n                           await dcCalendar.loadData();\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n                           // load data when a widget is showing\n                           await dc.loadData();\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                     url(path) {}\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar.$view.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const button = pageClone.views(\n                  (v) => v instanceof ABViewFormButton,\n                  true\n               )[0];\n               if (button) {\n                  button.parent.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               }\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.dbTableName()}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].jd) {\n         _ui.jd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].jd);\n         _ui.jd[1] = Object.assign(_ui.jd[1], {\n            Ap: this._getYearTitle,\n         });\n         _ui.jd[2] = Object.assign(_ui.jd[2], {\n            Ap: this._getYearRangeTitle,\n            Tp: this._getYearContent,\n            Dp: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","jobID","timeFrom","performance","now","normalizeData","timeTo","isConnected","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","followDC","datacollectionFollow","loadData","waitForDataCollectionToInitialize","start","limit","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","followCursor","unshift","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","nextData","remain","parsedData","queuedParse","__totalCount","total_count","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","op","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","match","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","isNaN","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","opt","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","readonly","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","storageID","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","linkConnectFields","validRows","allValid","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","scrollview","dataFlexView","paddingX","paddingY","onAfterScroll","dataView","emptyView","renderData","_yPosition","Layout","Scroll","records","$width","recordWidth","currentLength","_startPos","stopPos","flexlayout","clicked","divs","background","loadMoreTimer","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","loadDcDataOfRecordRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","currentVals","selectedItems","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","linkedField","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","filterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","setInterval","clearInterval","parentElem","viewInfo","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","$pivot","customLabels","populateData","dataMapped","setStructure","reportManager","fieldText","fieldQueries","isEditMode","_uiReportManager","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryIndex","queryID","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","sData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","groupProp","_","groupedData","groupedResult","agg","rawCol","Local","_currentModuleID","getQueries","currentModuleID","_queries","GetColumnConfig","meta","columnFormat","ref","abField","linkedDcs","reportData","reportRow","$pk","rField","milliSeconds","interval","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","selectedItem","abStorage","$sidebar","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","linkedData","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","callEvent","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","newValues","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","some","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","ArrayBuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","jd","Ap","Tp","Dp","thaidate","thaidatetime","_zoom_start_date","eachRow","$count","master"],"sourceRoot":""}