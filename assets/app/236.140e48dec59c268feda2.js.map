{"version":3,"file":"236.140e48dec59c268feda2.js","mappings":"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CjBC,iBAAkB,GAClB3a,gBAAiB,IACjB4a,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGjb,OAAQ,WAEL,OAAI+W,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCtuBN,MAAMC,EACH1d,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAKsd,OAAS,EACjB,CAEAC,SAASpW,EAAMmK,GACZtR,KAAKsd,OAAOhZ,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEAkM,OACG,OAA6B,GAAtBxd,KAAKsd,OAAOnX,MACtB,CAEAqB,OACG,OAAOxH,KAAKsd,OAAOnX,OAAS,CAC/B,CAEAsX,qBACG,IAAI3F,EAAM,CACPvI,MAAO,eACPmO,kBAAmB,CAAC,GAGnBC,EAAO7F,EAAI4F,kBAOf,OALA1d,KAAKsd,OAAOrZ,SAASoG,IAClBsT,EAAKtT,EAAElD,MAAQwW,EAAKtT,EAAElD,OAAS,GAC/BwW,EAAKtT,EAAElD,MAAM7C,KAAK+F,EAAE,IAGhByN,CACV,CAEArQ,WAAWyC,GACR,IAAI0T,EAAO5d,KAAKyd,qBAChBzd,KAAK+B,GAAG8b,WAAWC,sBAAsBF,EAAM1T,EAClD,CAEA6T,WAAWC,EAAOC,GACf,IAAIL,EAAO5d,KAAKyd,qBAChBzd,KAAK+B,GAAG8b,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH,MAAME,UAAkB,KACrBxe,YAAYye,GACTte,MAAMse,GAGNpe,KAAK8O,OAASA,EAAA,EAKd9O,KAAK4S,QAAU,EACf5S,KAAKqe,OAASA,EACdre,KAAKqR,aAAe,EACpBrR,KAAKqP,QAAU,EACfrP,KAAK4Z,QAAU,EACf5Z,KAAKwQ,OAAS,EACdxQ,KAAKya,MAAQ,IAGbza,KAAKse,QAAUA,EAAA,EAGfte,KAAKue,MAAMC,cAAgB,IAC3Bxe,KAAKue,MAAME,cAAgB,IAG3Bze,KAAKkX,UAAY,CACdC,IAAK,OACL4C,SAAU,QAEb/Z,KAAK4Y,KAAO,MACTjZ,cAAe,CAEfga,UACG,OAAOlK,QAAQC,SAClB,CACAoK,UACG,OAAOrK,QAAQC,SAClB,GAGH1P,KAAKgC,WAAa,EAElBhC,KAAK6d,WAAa,CACftW,UAAW,IACD,IAAI8V,EAAYrd,MAG1B0e,kBAAmB,SAAUnP,GA8B1B,OA7BIA,IAMEA,EAAMA,OACS,aAAfA,EAAMA,OACNA,EAAMoP,KACNpP,EAAMoP,IAAIxY,OAAS,IAEnBoJ,EAAQA,EAAMoP,IAAI,IAIjBpP,EAAMpH,MACPoH,EAAQA,EAAMpH,KAKdoH,EAAM1F,MACN0F,EAAM1F,KAAK0F,OACS,gBAApBA,EAAM1F,KAAK0F,QAEXA,EAAQA,EAAM1F,OAIb0F,CACV,EA+BAuO,sBAAuB,SAAUvO,EAAOrF,GACrC,IAAI0U,GAAa,EAIjB,GAAIrP,KAIDA,EAAQvP,KAAK0e,kBAAkBnP,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAMkH,MAAsB,gBAAdlH,EAAMkH,MACtB,CACC,IAAIoI,EAAQtP,EAAMmO,kBAClB,GAAImB,EAAO,CACR,IAAIC,GAAU,EACd,IAAK,IAAInB,KAAQkB,EAEd,GAAI3U,EAAKhB,SAASyU,GAAO,CACtB,IAAIL,EAASuB,EAAMlB,GACfoB,EAAM,GACVzB,EAAOrZ,SAAQ,SAAUkE,GACtB4W,EAAIza,KAAK6D,EAAImJ,QAChB,IAGApH,EAAK8U,YAAYrB,EAAMoB,EAAIzQ,KAAK,OAG3BsQ,IACF1U,EAAKhB,SAASyU,GAAMsB,QACpBL,GAAa,GAGhBE,GAAU,CACb,CAGH,GAAIA,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,EAgCAZ,sBAAuB,SAAU3O,EAAO2P,EAAKC,GAE1C,GAAI5P,KAIDA,EAAQvP,KAAK0e,kBAAkBnP,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAMkH,MAAsB,gBAAdlH,EAAMkH,MACtB,CACC,IAAIoI,EAAQtP,EAAMmO,kBAClB,GAAImB,EAAO,CACR,IAAIO,GAAU,EACd,IAAK,IAAIzB,KAAQkB,EAAO,CACrBM,EAAKE,WAAWH,EAAKvB,EAAM,iBAC3BwB,EAAKE,WAAWH,EAAKvB,EAAM,sBAE3B,IAAIoB,EAAM,GACVF,EAAMlB,GAAM1Z,SAASoG,IAClB0U,EAAIza,KAAK+F,EAAEiH,QAAQ,IAGtB7N,MAAM0N,MAAM,CACT9C,KAAMsP,EAAO,KAAOoB,EAAIzQ,KAAK,QAGhC8Q,GAAU,CACb,CAKA,GAHAD,EAAKza,QAAQwa,GACbC,EAAKG,iBAEDF,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,GAMHpf,KAAKuf,YAAc,CAAC,EAKpBvf,KAAKoC,GAAG,SAAU+F,IAEfK,QAAQ+G,MAAMpH,EAAI,IAGrBnI,KAAKwf,SAAW,GAGhBxf,KAAKyf,wBAA0B,CAAC,EAMhCzf,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAKuX,KACjD,IAAIC,EAAU3f,KAAKyf,wBAAwBnQ,EAAQO,MACnD,GAAI1H,EAGD,YADAwX,GAAShJ,OAAOxO,GAMnB,IAAIyX,EAAM,CACPhf,GAAI8e,EAAQ9e,GACZiJ,KAAM6V,GAET1f,KAAKwP,KAAK,yBAA0BoQ,GAEpC,IAAIC,EAAS7f,KAAK8f,cAAcJ,GAChCC,GAASjQ,QAAQmQ,EAAO,IAG3B7f,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAK4X,KACjD,IAAIJ,EAAU3f,KAAKyf,wBAAwBnQ,EAAQO,MACnD,GAAI1H,EACD,OAAIA,EAAIuM,WAAWrH,QAAQ,cAAgB,EACjCrN,KAAKggB,iBAAiB1Q,EAAQ3J,QACjC6O,KAAKmL,GAASjQ,SACd+E,MAAMkL,GAAShJ,aAItBgJ,GAAShJ,OAAOxO,GAInBnI,KAAKigB,aAAa3Q,EAAQ1O,IAAMmf,EAIhC,IAAIH,EAAM,CACPhf,GAAImf,EAAUnf,GACdiJ,KAAMkW,GAET/f,KAAKwP,KAAK,yBAA0BoQ,GAEpCD,GAASjQ,QAAQqQ,EAAU,IAG9B/f,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAK4X,KACjD,IAAIJ,EAAU3f,KAAKyf,wBAAwBnQ,EAAQO,MACnD,GAAI1H,EAGDwX,GAAShJ,OAAOxO,OAHnB,QAOOnI,KAAKigB,aAAa3Q,EAAQ1O,IAIjC,IAAIgf,EAAM,CACPhf,GAAI0O,EAAQ1O,GACZiJ,KAAMkW,GAET/f,KAAKwP,KAAK,yBAA0BoQ,GAEpCD,GAASjQ,SAZT,CAYkB,IAMrB,MAAMwQ,EAAgB,CAWnBC,OAAQ,CAACC,EAAW,GAAIje,EAAU,CAAC,KAChC,IAAKie,EAAU,OAEXje,EAAQke,aAAYD,EAAWA,EAASpN,QAAQ,MAAO,KAE3D,IAAIlF,EAAS3L,EAAQme,OAChB,IAAOF,EAAUje,EAAQme,QACzB,IAAOF,GAgBZ,MAdqB,CAClB,aACA,aACA,aACA,aACA,aACA,cAGYnc,SAASqc,IAChBxS,GAAWA,EAAOvI,YACpBuI,EAAS,IAAOsS,EAAUE,GAAO,IAGhC,IAAIC,KAAKzS,EAAO,EAc1B0S,aAAc,CAACC,EAAMte,KAClB,IAAKse,EAAM,MAAO,GAElB,IAAIC,EAAY,IAAOD,GAIvB,OAFIte,EAAQwe,YAAYD,EAAUE,OAAOze,EAAQwe,YAE1CD,EAAUJ,OAAOne,EAAQme,OAAO,EAY1CO,aAAc,CAACJ,EAAMK,EAAQC,IACnB,IAAON,GAAMO,SAASF,EAAQC,GAAMZ,SAY9Cc,QAAS,CAACR,EAAMK,EAAQC,IACd,IAAON,GAAMS,IAAIJ,EAAQC,GAAMZ,WAG3ChM,OAAOC,KAAK8L,IAAkB,IAAIjc,SAASoQ,IACzCrU,KAAKmhB,MAAM9M,GAAK6L,EAAc7L,EAAE,GAEtC,CAQAlP,aAIG,IAAIic,EAAW,GAEfA,EAAS9c,KAAKtE,KAAK4S,QAAQtP,KAAKtD,OAChCohB,EAAS9c,KAAKtE,KAAKqR,aAAa/N,KAAKtD,OACrCohB,EAAS9c,KAAKtE,KAAKqP,QAAQ/L,KAAKtD,OAChCohB,EAAS9c,KAAKtE,KAAKwQ,OAAOlN,KAAKtD,aAEzByP,QAAQ4R,IAAID,SACZphB,KAAK4Z,QAAQtW,KAAKtD,MACxB,IAAI6J,QAAa7J,KAAK4Z,QAAQjE,IAAI,kBAqDlC,OApDA3V,KAAKshB,eAAiBzX,GAAQ,CAAC,EAO/B7J,KAAKoC,GAAG,0BAA2Bwd,IAIhC,GAA4B,iBAAjBA,EAAI/V,KAAK0X,KACjB,IACG3B,EAAI/V,KAAK0X,KAAO1N,KAAK0D,MAAMqI,EAAI/V,KAAK0X,KAGvC,CAFE,MAAOlX,GACN7B,QAAQ2O,IAAI9M,EACf,CAEHrK,KAAKigB,aAAaL,EAAIhf,IAAMgf,EAAI/V,KAChC7J,KAAKwhB,eAAe,UAAW5B,EAAIhf,GAAIgf,EAAI/V,KAAK,IAInD7J,KAAKoC,GAAG,0BAA2Bwd,IAGhC,GAA4B,iBAAjBA,EAAI/V,KAAK0X,KACjB,IACG3B,EAAI/V,KAAK0X,KAAO1N,KAAK0D,MAAMqI,EAAI/V,KAAK0X,KAGvC,CAFE,MAAOlX,GACN7B,QAAQ2O,IAAI9M,EACf,CAEHrK,KAAKigB,aAAaL,EAAIhf,IAAMgf,EAAI/V,KAChC7J,KAAKwhB,eAAe,UAAW5B,EAAIhf,GAAIgf,EAAI/V,KAAK,IAInD7J,KAAKoC,GAAG,0BAA2Bwd,IAGhC,GAA4B,iBAAjBA,EAAI/V,KAAK0X,KACjB,IACG3B,EAAI/V,KAAK0X,KAAO1N,KAAK0D,MAAMqI,EAAI/V,KAAK0X,KAGvC,CAFE,MAAOlX,GACN7B,QAAQ2O,IAAI9M,EACf,QAEIrK,KAAKigB,aAAaL,EAAIhf,IAC7BZ,KAAKwhB,eAAe,YAAa5B,EAAIhf,GAAIgf,EAAI/V,KAAK,IAG9C/J,MAAMwD,MAiEhB,CAUA6B,uBAAuBsc,GAOpB,YALqB,IAAVA,EAAI7gB,KACZ6gB,EAAI7gB,GAAKZ,KAAK6P,OACd4R,EAAIF,KAAK3gB,GAAK6gB,EAAI7gB,IAGd,IAAI6O,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK6P,OAChB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,oBACLiL,QAAS,CACNO,SAGN7P,KAAKqP,QAAQgB,KACV,CACGC,IAAK,qBACLzG,KAAM4X,GAET5L,GACDpB,OAAOtM,IACN,IAAImJ,EAAU,yCACE,YAAZnJ,EAAIsO,OACLnF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,+BACTgC,UACAmQ,OACD,GAKH,GAER,CASAtc,wBAAwBvE,GACrB,OAAO,IAAI6O,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK6P,OAChB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,oBACLiL,QAAS,CACN1O,KACAiP,SAGN7P,KAAKqP,QAAQ+G,OACV,CACG9F,IAAK,eAAe1P,KAEvBiV,GACDpB,OAAOtM,IACN,IAAImJ,EAAU,0CACE,YAAZnJ,EAAIsO,OACLnF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,gCACTgC,UACA1Q,MACD,GAKH,GAER,CAYAuE,uBAAuBvE,EAAI+E,GACxB,OAAO,IAAI8J,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK6P,OAChB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,oBACLiL,QAAS,CACN1O,KACAiP,OACAlK,WAGN3F,KAAKqP,QAAQ8G,IACV,CACG7F,IAAK,eAAe1P,IACpBiJ,KAAMlE,GAETkQ,GACDpB,OAAOtM,IACN,IAAImJ,EAAU,yCACE,YAAZnJ,EAAIsO,OACLnF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,+BACTgC,WACD,GAKH,GAER,CAwCAlJ,OAAOsZ,EAAQnS,EAAOoS,GACnBnZ,QAAQ+G,MAAM,yDACd/G,QAAQ+G,MAAMA,GACd/G,QAAQ+G,MAAMoS,EACjB,CAEAC,UACG,OAAO5hB,KAAKwf,QACf,CACAqC,WAAWC,GACR9hB,KAAKwf,SAASlb,KAAKwd,EACtB,CAKA3Q,MAAMhP,GACH,UAAYA,EACf,CAEAuD,UAAU/C,GACP,OAAO,cAAYA,EACtB,CAEA4M,MAAM+B,KAAYyQ,GACf,IAAIC,EAAW,CACZ1Q,QAAS,aAAatR,KAAKwQ,OAAO5P,SAAS0Q,EAAQoD,cAGtDlM,QAAQ+G,MAAMyS,EAAS1Q,SACnBA,aAAmBhJ,QACpB0Z,EAASzS,MAAQ+B,EAEjB9I,QAAQ+G,MAAM+B,IAGbyQ,GAAQA,EAAK5b,OAAS,GACvB4b,EAAK9d,SAAS2L,IAOX,GANIA,aAAatH,QACd0Z,EAASzS,MAAQK,EAEjBpH,QAAQ+G,MAAMK,IAGD,iBAALA,EACR,IAAK,IAAIyE,KAAKzE,EACXoS,EAAS3N,GAAKzE,EAAEyE,GAChB7L,QAAQ+G,MAAM8E,EAAGzE,EAAEyE,GAEzB,IAGNrU,KAAKwP,KAAK,QAASwS,EACtB,CAEAC,QACG,OAAO,SACV,CAEAhiB,QACG,MAAO,IAAI2V,IACD5V,KAAKqR,aAAajQ,SAASwU,EAExC,CAEAsM,cAAc7d,EAAK1B,GAChB,YAAoB,IAATA,EAED3C,KAAKshB,eAAejd,IAG3BrE,KAAKshB,eAAejd,GAAO1B,EACpB3C,KAAK4Z,QAAQC,IAAI,iBAAkB7Z,KAAKshB,gBAErD,CAEAnK,IAAI7F,KAAYyQ,GACbvZ,QAAQ2O,IAAI7F,GACZyQ,EAAK9d,SAAS2L,IACXpH,QAAQ2O,IAAIvH,EAAE,GAEpB,CAQAuS,OAAO9d,GAKJ,OAJc+d,OACX,4EACA,KAEYC,KAAKhe,EACvB,CAEAie,SAAS1M,GACN,OAAO,aAAWA,EACrB,CAEA2M,WAAW3M,GACR,OAAO,eAAaA,EACvB,CAEA4M,QAAQ5M,GACL,OAAO,YAAUA,EACpB,CAEA6M,aAAa7M,GACV,OAAO,iBAAeA,EACzB,CAEA8M,SAAS9M,GACN,OAAO,aAAWA,EACrB,CAEA+M,UAAU/M,GACP,OAAO,cAAYA,EACtB,CAEAgN,SAAShN,GACN,OAAO,aAAWA,EACrB,CAEAiN,SAASjN,GACN,OAAO,aAAWA,EACrB,CAEA/F,OACG,OAAO,QACV,CAEApH,KAAK6I,KAAYyQ,GACdvZ,QAAQC,KAAK6I,GACbyQ,EAAK9d,SAAS2L,IACXpH,QAAQC,KAAKmH,EAAE,GAErB,CAEAkT,YAAYlN,GACT,OAAO,aAAWA,EACrB,EAGH,2BCx7BA,MAAM6I,EAAgB,EAAQ,OAC9B,IAAIsE,EAAY,EAAQ,OAkBxBtjB,EAAOC,QAAU,cAAgCqjB,EAC9CpjB,YAAYqjB,EAAYjhB,GAjB3B,IAAgBiU,EAkBVlW,MAAM,CAAC,QAAS,eAAgBiC,GAQhCihB,EAAWzB,KAAOyB,EAAWzB,MAAQ,CAAC,EAGtCvhB,KAAKY,GAAKoiB,EAAWpiB,GAGrBZ,KAAK4B,KAAOohB,EAAWphB,MAAQ,cAI/B5B,KAAKuhB,KAAOyB,EAAWzB,KACC,iBAAbvhB,KAAKuhB,OAAkBvhB,KAAKuhB,KAAO1N,KAAK0D,MAAMvX,KAAKuhB,OAI9DvhB,KAAKmH,KAAO6b,EAAW7b,MAAQnH,KAAKuhB,KAAKpa,MAAQ,GAMjDnH,KAAKuL,KAAOyX,EAAWzX,MAAQ,YAO/BvL,KAAKijB,oBArDU,KADLjN,EAsDmBgN,EAAWC,iBAjD/B,KAARjN,GAAsB,UAARA,GAA2B,MAARA,IAIzB,SAARA,GAA0B,MAARA,GAIfA,GAgDJhW,KAAKkjB,WAAaF,EAAWE,YAAc,GACtC/V,MAAMC,QAAQpN,KAAKkjB,cACrBljB,KAAKkjB,WAAa,CAACljB,KAAKkjB,aAE3BljB,KAAKkjB,WAAaljB,KAAKkjB,WAAWpa,QAAQ8G,GAAMA,IAKhD5P,KAAKmjB,gBAAkBtP,KAAK0D,MAAMyL,EAAWG,kBAAmB,GAShEnjB,KAAKojB,eAAiBJ,EAAWI,eACC,iBAAvBpjB,KAAKojB,iBACbpjB,KAAKojB,eAAiBvP,KAAK0D,MAAMvX,KAAKojB,iBAKzCpjB,KAAKqjB,qBAAuBxP,KAAK0D,MAC9ByL,EAAWK,uBAAwB,GAEtCrjB,KAAKsjB,oBAAsBN,EAAWM,oBACC,iBAA5BtjB,KAAKsjB,sBACbtjB,KAAKsjB,oBAAsBzP,KAAK0D,MAAMvX,KAAKsjB,sBAE9CtjB,KAAKujB,UAAYP,EAAWzB,KAAKgC,WAAa,GAM9CvjB,KAAKwjB,SAAWR,EAAWzB,KAAKiC,UAAY,GAO5CxjB,KAAKyjB,kBAAoBT,EAAWzB,KAAKkC,mBAAqB,GAQ9D,IAAIC,EAAW,IACdV,EAAWzB,KAAKoC,SAAW,IAAI1f,SAASrD,IACtC,IAAI6gB,EAAMzhB,KAAK+B,GAAG6hB,eAAehjB,GAC7B6gB,EACDiC,EAASpf,KAAKtE,KAAK6jB,QAAQpC,IAE3BzhB,KAAKwP,KACF,UACA,OAAOxP,KAAKY,uCAAuCA,KACnD,CACGkjB,MAAO9jB,KAAKY,GACZmjB,OAAQnjB,GAMjB,IAEHZ,KAAKgkB,OAASN,GAObV,EAAWzB,KAAK0C,YAAc,IAAIhgB,SAASigB,IACjClkB,KAAK+B,GAAGoiB,YAAYD,IAEzBlkB,KAAKwP,KACF,UACA,iDACA,CAAEsU,MAAO9jB,KAAKY,GAAIwjB,UAAWF,GAEnC,IAGHlkB,KAAKikB,WAAajB,EAAWzB,KAAK0C,YAAc,GAKhDjB,EAAWzB,KAAK8C,mBACbrB,EAAWzB,KAAK8C,oBAAsB,CAAC,EAC1CrkB,KAAKqkB,mBAAqBrkB,KAAKqkB,oBAAsB,CAAC,EACtDrkB,KAAKqkB,mBAAmBC,OAASzQ,KAAK0D,MACnCyL,EAAWzB,KAAK8C,mBAAmBC,SAAU,GAEhDtkB,KAAKqkB,mBAAmBE,WACrBvB,EAAWzB,KAAK8C,mBAAmBE,YAAc,GACpDvkB,KAAKqkB,mBAAmBG,cACrBxB,EAAWzB,KAAK8C,mBAAmBG,eAAiB,MACvDxkB,KAAKqkB,mBAAmBI,QAAU5Q,KAAK0D,MACpCyL,EAAWzB,KAAK8C,mBAAmBI,UAAW,GAKjDzB,EAAW0B,aACR1B,EAAW0B,cAAgB1B,EAAWzB,KAAKmD,aAE9C5kB,MAAMmG,WAAW+c,EACpB,CAsBA2B,qBAAqBzV,GAClB,IAAI0V,GAAY,EAGhB,OAAK5kB,KAAKmjB,iBAYN0B,SAAS7kB,KAAKojB,eAAe0B,WAC7B5V,GAAS,IAAIjL,SAAS2L,IAChB5P,KAAKojB,eAAe2B,KAAK1X,QAAQuC,EAAEC,MAAQD,IAAM,IAClDgV,GAAY,EACf,IAKFA,KAIH5kB,KAAKglB,SAAW,IAAI/gB,SAAS6d,IAEvBA,EAAE6C,qBAAqBzV,KACxB0V,GAAY,EACf,IAEIA,MA9BH1V,GAAS,IAAIjL,SAAS2L,IAChB5P,KAAKkjB,WAAW7V,QAAQuC,EAAEC,MAAQD,IAAM,IACzCgV,GAAY,EACf,IAEIA,EA0Bb,CAaA9e,QAyBG,OAvBA9F,KAAKuhB,KAAOzhB,MAAMgG,QAElB9F,KAAKuhB,KAAKpa,KAAOnH,KAAKmH,KAEtBnH,KAAKuhB,KAAKgC,UAAYvjB,KAAKujB,UAE3BvjB,KAAKuhB,KAAK8C,mBAAqBrkB,KAAKqkB,mBAEpCrkB,KAAKuhB,KAAKiC,SAAWxjB,KAAKwjB,SAE1BxjB,KAAKuhB,KAAKkC,kBAAoBzjB,KAAKyjB,kBAEnCzjB,KAAKuhB,KAAKoC,SAAW3jB,KAAKgkB,QAAU,IAAI7V,KAAK2T,GAAMA,EAAElhB,KAErDZ,KAAKuhB,KAAK0C,WAAajkB,KAAKikB,YAAc,GASnC,CACJrjB,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,cACnBuF,KAAMnH,KAAKmH,KACXoE,KAAMvL,KAAKuL,KACX0X,eAAgBjjB,KAAKijB,eACrB1B,KAAMvhB,KAAKuhB,KACX2B,WAAYljB,KAAKkjB,WACjBwB,aAAc1kB,KAAKuhB,KAAKmD,aACxBvB,gBAAiBnjB,KAAKmjB,gBACtBE,qBAAsBrjB,KAAKqjB,qBAC3BD,eAAgBpjB,KAAKojB,eACrBE,oBAAqBtjB,KAAKsjB,oBAEhC,CAeA2B,WAAWnc,EAAS,MAAM,IACvB,OAAQ9I,KAAKklB,aAAe,IAAIpc,OAAOA,EAC1C,CAcAqc,wBAAwBrc,EAAS,MAAM,IACpC,OAAO9I,KAAK+B,GAAGqjB,iBAAiBC,IACmB,GAAzCrlB,KAAKyjB,kBAAkBpW,QAAQgY,EAAEzkB,MACxCkI,OAAOA,EACb,CAEAwc,wBAAwBxc,EAAS,MAAM,GAAM6E,GAE1C,MAAM4X,EAAS5X,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAMokB,cAAc3X,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAGqjB,iBAAiBC,GACtBrlB,KAAKyjB,kBAAkBpW,QAAQgY,EAAEzkB,KAAO,IAE9CkI,OAAOA,GACP6E,KAAK4X,EACZ,CAMAE,gBAAgB3c,EAAS,MAAM,IAC5B,OAAO9I,KAAK+B,GAAG2jB,SAASL,IACmB,GAAjCrlB,KAAKujB,UAAUlW,QAAQgY,EAAEzkB,MAChCkI,OAAOA,EACb,CAEA6c,gBAAgB7c,EAAS,MAAM,GAAM6E,GAElC,MAAM4X,EAAS5X,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAMokB,cAAc3X,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAG2jB,SAASL,GACdrlB,KAAKujB,UAAUlW,QAAQgY,EAAEzkB,KAAO,IAEtCkI,OAAOA,GACP6E,KAAK4X,EACZ,CAYAK,iBAAiBhlB,GAKd,GAJA4H,QAAQ+G,MACL,8DAGO,IAAN3O,EAAU,MAAO,GAGrB,IAGIilB,EAHQ7lB,KAAK+B,GAAGgW,WAAWnX,GAGHklB,gBAExBC,EAAe,CAAC,EACpBF,EAAgB5hB,SAAS+C,IACtB+e,EAAa/e,EAAEZ,SAASO,YAAc3G,KAAK+B,GAAGgW,WAC3C/Q,EAAEZ,SAASO,WACb,IAGJ,IAAIqf,EAAgB,GAQpB,OAPA7R,OAAOC,KAAK2R,GAAc9hB,SAAQ,SAAUI,GACzC2hB,EAAc1hB,KAAK,CAChB1D,GAAIZ,KAAKqE,GAAKzD,GACd+B,MAAO3C,KAAKqE,GAAKjD,OAEvB,GAAG2kB,GAEIC,CACV,CAYAH,gBAAgBI,EAAWC,GACxB1d,QAAQ+G,MAAM,4BAGd,IAGIsW,EAHQ7lB,KAAK+B,GAAGgW,WAAWkO,GAGHH,eACxB9e,GAAMA,EAAEZ,SAASO,YAAcuf,IAG/BC,EAAe,GAKnB,OAJAN,EAAgB5hB,SAAS+C,IACtBmf,EAAa7hB,KAAK,CAAE1D,GAAIoG,EAAEF,WAAYnE,MAAOqE,EAAE5F,OAAQ,IAGnD+kB,CACV,CAiBAnB,MAAMlc,EAAS,MAAM,GAAMsd,GAAO,GAC/B,IAAItY,EAAS,GAEb,OAAK9N,KAAKgkB,QAAUhkB,KAAKgkB,OAAO7d,OAAS,IAGrC2C,GAAUsd,GACXtY,EAAS9N,KAAKgkB,OAAOlb,OAAOA,IAEjB3C,OAAS,GACjBnG,KAAKgkB,OAAO/f,SAAS6d,IAClB,IAAIuE,EAAWvE,EAAEkD,MAAMlc,EAAQsd,GAC3BC,GAAYA,EAASlgB,OAAS,IAC/B2H,EAASuY,EACZ,IAMNvY,GAAU9N,KAAKgkB,QAAU,IAAIlb,OAAOA,IAjBYgF,CAqBtD,CAeAwY,UAAUxd,EAAS,MAAM,IACtB,OAAO9I,KAAK+B,GAAGukB,WAAWxE,GAChB9hB,KAAKikB,WAAW5W,QAAQyU,EAAElhB,KAAO,IACxCkI,OAAOA,EACb,CAEAyd,WAAWC,GACR,SAAIA,IAAWA,EAAQ5lB,KACbZ,KAAKikB,WAAW5W,QAAQmZ,EAAQ5lB,KAAO,CAIpD,CAeA6lB,MAAM3d,GACH,IAAIgF,EAAS,GACT2Y,EAAQ,GACRzB,EAAQ,GAEZ,QACKhlB,KAAKgkB,QAAUhkB,KAAKgkB,OAAO7d,OAAS,MACpCnG,KAAK0mB,QAAU1mB,KAAK0mB,OAAOvgB,OAAS,KA8BrC2C,GAEG9I,KAAK0mB,SACND,EAAQzmB,KAAK0mB,OAAO5d,OAAOA,IAEjB3C,OAAS,GAChBnG,KAAK0mB,OAAOziB,SAASmP,IAClB,IAAIuT,EAAWvT,EAAEqT,MAAM3d,GAAQ,GAC3B6d,GAAYA,EAASxgB,OAAS,IAC/BsgB,EAAQE,EACX,IAMLF,EAAMtgB,OACP2H,EAAS2Y,GAGT3Y,EAAS9N,KAAKgkB,OAAOlb,OAAOA,IAGjB3C,OAAS,GAjD1B,SAASygB,EAASlmB,GACXA,EAAKsjB,QAAUtjB,EAAKsjB,OAAO7d,QAC5BzF,EAAKsjB,OAAO/f,SAAS6d,IAElB,IAAI+E,EAAY/E,EAAE2E,MAAM3d,GAAQ,GAMhC,GAJI+d,GAAaA,EAAU1gB,OAAS,IACjC2H,EAAS+Y,GAGR/Y,EAAO3H,OAAS,EAAG,CAEpB,IAAIkgB,EAAWvE,EAAEkD,MAAMlc,GAAQ,GAE3Bud,GAAYA,EAASlgB,OAAS,IAC/B2H,EAASuY,GAERvY,EAAO3H,OAAS,GACjBygB,EAAS9E,EAEf,IAGT,CA4BS8E,CAAS5mB,QAOXA,KAAK0mB,SACND,EAAQzmB,KAAK0mB,QACHvgB,QACPsgB,EAAMxiB,SAASmP,IACZ,IAAIuT,EAAWvT,EAAEqT,OAAM,KAAM,IAAM,GAC/BE,GAAYA,EAASxgB,SACtBsgB,EAAQA,EAAMK,OAAOH,GACxB,IAML3mB,KAAKgkB,SACNgB,EAAQhlB,KAAKgkB,QACH7d,QACP6e,EAAM/gB,SAAS6d,IAEZ,IAAI+E,EAAY/E,EAAE2E,OAAM,KAAM,IAAM,GAChCI,GAAaA,EAAU1gB,SACxBsgB,EAAQA,EAAMK,OAAOD,IAGxB,IAAIR,EAAWvE,EAAEkD,OAAM,KAAM,IAAM,GAC/BqB,GAAYA,EAASlgB,SACtB6e,EAAQA,EAAM8B,OAAOT,GACrBA,EAASpiB,SAASqP,IACf,IAAIqT,EAAWrT,EAAImT,OAAM,KAAM,IAAM,GACjCE,GAAYA,EAASxgB,SACtBsgB,EAAQA,EAAMK,OAAOH,GACxB,IAEN,IAKT7Y,EAASA,EAAOgZ,OAAO9B,EAAOyB,KAjGvB3Y,CAqGb,CAOAiZ,QAAQrW,EAAK,MAAM,IAChB,OAAO+N,EAAcuI,SAAStW,EACjC,CAcAuW,gBAAgBne,EAAS,MAAM,IAC5B,OAAO9I,KAAK+B,GAAGmlB,SAASC,IACkB,GAAhCnnB,KAAKwjB,SAASnW,QAAQ8Z,EAAEvmB,MAC/BkI,OAAOA,EACb,CAWAse,gBAAgBte,EAAS,MAAM,GAAM6E,GAElC,MAAM4X,EAAS5X,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAMokB,cAAc3X,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAGmlB,SAASC,GACdnnB,KAAKwjB,SAASnW,QAAQ8Z,EAAEvmB,KAAO,IAErCkI,OAAOA,GACP6E,KAAK4X,EACZ,CAiCA8B,WAAWC,GACR,IAAIC,EAAQD,EAAQE,MAAM,KAEtBC,EAAY,CAAC3P,EAAK4P,KAEnB,GAAoB,GAAhBA,EAAMvhB,OACP,OAAO2R,EAIV,IAAIzT,EAAMqjB,EAAMnT,QAIhB,GAAW,KAAPlQ,EACD,OAAOojB,EAAUznB,KAAM0nB,GAK1B,GAAIva,MAAMC,QAAQ0K,GAIf,OAHAA,EAAMA,EAAIhP,QAAO,SAAUuc,GACxB,OAAOA,EAAEzkB,IAAMyD,CAClB,IAAG,GACIojB,EAAU3P,EAAK4P,GAIzB,GAAI5P,GAAOA,EAAIzT,GACZ,OAAOojB,EAAU3P,EAAIzT,GAAMqjB,GAG9B,GAAW,YAAPrjB,EAAmB,CACpBmE,QAAQ+G,MAAM,IAAIjH,MAAM,0CAGxB,IAAI1H,EAAK8mB,EAAMnT,QACf,OAAOkT,EAAUznB,KAAK+B,GAAGgW,WAAWnX,GAAK8mB,EAC5C,CAKA,OADAlf,QAAQ+G,MAAM,4BAA8B+X,GACrC,IAAI,EAGd,OAAOG,EAAUznB,KAAMunB,EAC1B,CAUAI,WAAWC,GAGR,OAAIA,EAAkB,KAAO5nB,KAAKY,GAAK,IAC3B,IACf,CAUAinB,UAAUD,GACP,OAAO5nB,KAAK2nB,WAAWC,GAAa,WACvC,CAUAE,QAAQF,GACL,OAAO5nB,KAAK2nB,WAAWC,GAAa,SACvC,CAUAG,SAASH,GACN,OAAO5nB,KAAK2nB,WAAWC,GAAa,WACvC,CAKII,uBACD,OAAOhoB,KAAKqkB,mBAAmBC,MAClC,CAEI0D,qBAAiB1D,GAClBtkB,KAAKqkB,mBAAmBC,OAASA,CACpC,CAEI2D,2BACD,OAAOjoB,KAAKqkB,mBAAmBE,UAClC,CAEI0D,yBAAqB1D,GACtBvkB,KAAKqkB,mBAAmBE,WAAaA,CACxC,CAEI2D,8BACD,OAAOloB,KAAKqkB,mBAAmBG,aAClC,CAEI0D,4BAAwB1D,GACzBxkB,KAAKqkB,mBAAmBG,cAAgBA,CAC3C,CAEI2D,wBACD,OAAOnoB,KAAKqkB,mBAAmBI,OAClC,CAEI0D,sBAAkB1D,GACnBzkB,KAAKqkB,mBAAmBI,QAAUA,CACrC,CAiBAZ,QAAQle,GAKL,OAFAA,EAAOtB,IAAM,OAENoa,EAAc2J,QAAQziB,EAAQ3F,KAAM,KAC9C,CASAqoB,SAASznB,GACN,OAAOZ,KAAKglB,OAAOhe,GAAMA,EAAEpG,IAAMA,IAAI,EACxC,CASA0nB,QAAQ3iB,EAAQZ,EAAagQ,GAC1B,OAAO0J,EAAc2J,QAAQziB,EAAQZ,EAAagQ,EACrD,CAMArP,YAIG,MAHuB,IAAI4C,MACxB,2EAKN,mBCr4BH,MAAMya,EAAY,EAAQ,OAM1B,IAAIwF,EAAgB,CACjB3nB,GAAI,OACJQ,MAAO,GACP6D,OAAQ,CAAC,EACTujB,MAAO,CAAC,EACRpiB,SAAU,CACPqiB,aAAc,GACdC,qBAAsB,GACtBC,YAAa,GACbC,gBAAiB,CACdC,iBAAkB,CAEfC,KAAM,MACN3H,MAAO,IAEV5U,WAAY,IAEfwc,SAAS,EAET9f,UAAU,EACV+f,SAAS,EAETC,UAAW,GAEXC,SAAU,IAIhB,MAAMC,EAAmB,GAGzB,IAAIC,EAAc,KAElB,SAASC,IAMN,GAA+B,GAA3BF,EAAiBhjB,OAArB,CAMA,IAAImjB,EAAKH,EAAiB5U,QAC1B+U,EAAG5Y,KACH0Y,EAAczU,WAAW0U,EAAUC,EAAGpX,QAHtC,MAFGkX,EAAc,IAMpB,CACA,SAASG,EAAe7Y,EAAIwB,EAAU,IACnCiX,EAAiB7kB,KAAK,CAAEoM,KAAIwB,YACvBkX,GACFC,GAEN,CAEA5pB,EAAOC,QAAU,cAAmCqjB,EACjDpjB,YAAYqjB,EAAYjhB,GACrBjC,MAAM,CAAC,SAAUiC,GAEjBihB,EAAaA,GAAc,CAAC,EAI5BhjB,KAAKiG,WAAW+c,GAEhBhjB,KAAKwpB,iBAAmBxpB,KAAKypB,mBAAmB,IAOhDzpB,KAAK0pB,0BAEL1pB,KAAK2pB,mBAAqB,GAC1B3pB,KAAK4pB,mBAAqB,GAM1B5pB,KAAK6pB,YAAc7pB,KAAK8pB,eAAeC,WAEvC/pB,KAAKgqB,aAAe,IAIvB,CAYAC,oBACG,MAAO,gBACV,CAQAhkB,WAAWN,GA4FR,GA3FA3F,KAAKY,GAAK+E,EAAO/E,GAIjBZ,KAAKmH,KAAOxB,EAAOwB,MAAQ,KAI3BnH,KAAK4B,KAAO+D,EAAO/D,MAAQ,iBAI3B+D,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAIlCpG,KAAKoG,SAASsiB,qBACX/iB,EAAOS,SAASsiB,sBAChBH,EAAcniB,SAASsiB,qBAK1B1oB,KAAKoG,SAASuiB,YACXhjB,EAAOS,SAASuiB,aAAeJ,EAAcniB,SAASuiB,YAKzD3oB,KAAKoG,SAASwiB,gBAAkBjjB,EAAOS,SAASwiB,iBAAmB,CAChEC,iBACGN,EAAcniB,SAASwiB,gBAAgBC,iBAC1Ctc,WAAYgc,EAAcniB,SAASwiB,gBAAgBrc,YAMtDvM,KAAKoG,SAAS6iB,UAAYtjB,EAAOS,SAAS6iB,UAG1CjpB,KAAKoG,SAAS2iB,QAAUlV,KAAK0D,MAC1B5R,EAAOS,SAAS2iB,SAAWR,EAAcniB,SAAS2iB,SAKrD/oB,KAAKoG,SAAS4iB,QAAUnV,KAAK0D,MAC1B5R,EAAOS,SAAS4iB,SAAWT,EAAcniB,SAAS4iB,SAMrDhpB,KAAKoG,SAAS6C,SAEqBihB,MAA5BvkB,EAAOS,SAAS6C,SACVtD,EAAOS,SAAS6C,SAGY,GAAnCtD,EAAOS,SAAS+jB,iBACmB,KAAnCxkB,EAAOS,SAAS+jB,iBAGL5B,EAAcniB,SAAS6C,SAQxCjJ,KAAKoG,SAAS8iB,SAAWrE,SACtBlf,EAAOS,SAAS8iB,UAAYX,EAAcniB,SAAS8iB,UAMtDlpB,KAAKoqB,aAAe,KAKpBpqB,KAAKoG,SAASqiB,aACX9iB,EAAOS,SAASqiB,cAAgBF,EAAcniB,SAASqiB,aAKtDzoB,KAAKoG,SAASqiB,aAAc,CAE7B,IAAI3Q,EAAM9X,KAAK+B,GAAGgW,WAAW/X,KAAKoG,SAASqiB,cACtC3Q,IAEFA,EAAM9X,KAAK+B,GAAGsoB,UAAUrqB,KAAKoG,SAASqiB,eAGrC3Q,GACD9X,KAAKoqB,aAAetS,EACpB9X,KAAKoG,SAAS4iB,QAAuB,UAAblR,EAAIlW,KACxB5B,KAAKoG,SAAS4iB,SACXhpB,KAAKoqB,aAAa3F,UACdzkB,KAAKsqB,mBACPtqB,KAAKsqB,iBAAmBtqB,KAAKuqB,sBAKhCvqB,KAAKwqB,WAAY,IAIvBhiB,QAAQ+G,MACL,oBAAoBvP,KAAKmH,SAASnH,KAAKY,kCAAkCZ,KAAKoG,SAASqiB,gBAGhG,CAsBA3oB,MAAMmG,WAAWN,EACpB,CAaAG,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,MAAO,CACJlF,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,MAAQnH,KAAKoB,MACxBQ,KAAM5B,KAAK4B,MAAQ,iBACnBwE,SAAUpG,KAAK+B,GAAG2D,UAAU1F,KAAKoG,UAAY,CAAC,GAC9Cse,aAAc5M,EAAI4M,aAExB,CAWAvf,aAKG,OAJKnF,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,YAE7BrH,MAAM8H,OACL5H,IACV,CAWA4U,UACG,IAAI6V,EAAyB,IACnB,IAAIhb,SAAQ,CAACib,EAAMviB,KACvBnI,KAAK+B,GAAG4oB,eAAenW,MAAMoW,IAG1B,IAAIC,EAAa,GASjB,OAPqBD,EAAK9hB,QAAQ8E,GACxBA,EAAE0X,yBAAyBD,GAAMA,EAAEzkB,IAAMZ,KAAKY,OAEzCqD,SAAS6mB,IACrBD,EAAWvmB,KAAKwmB,EAAIC,qBAAqB/qB,MAAM,IAG3CyP,QAAQ4R,IAAIwJ,GAAYrW,KAAKkW,GAAMjW,MAAMtM,EAAI,GACrD,IAIR,OAAOsH,QAAQC,UACX8E,MAAK,IACIiW,MAETjW,MAAK,IACI1U,MAAM8U,YAEfJ,MAAK,KACHxU,KAAKwP,KAAK,YAAY,GAE/B,CAOIwb,UACD,OAAOhrB,KAAKwpB,gBACf,CAQIyB,iBACD,IAAKjrB,KAAKoqB,aAAc,CACrB,GAAIpqB,KAAKY,IAAMZ,KAAKmH,KAAM,CAGvB,IAAIgB,EAAM,IAAIG,MACX,kBAAkBtI,KAAKmH,SAASnH,KAAKY,oCAExCZ,KAAK+B,GAAGqG,OAAO,UAAWD,EAAK,CAAE+iB,eAAgBlrB,KAAK8F,SACzD,CACA,OAAO,IACV,CACA,IAAIgS,EAAM9X,KAAK+B,GAAGgW,WAAW/X,KAAKoqB,aAAaxpB,IAI/C,OAHKkX,IACFA,EAAM9X,KAAK+B,GAAGsoB,UAAUrqB,KAAKoqB,aAAaxpB,KAEtCkX,CACV,CAQImT,eAAWhmB,GACZjF,KAAKoqB,aAAenlB,EAEpBjF,KAAK0pB,yBACR,CAQIyB,iBACD,OAAOnrB,KAAKoG,SAAS4iB,QAAU,QAAU,QAC5C,CAQIoC,yBACD,OAAKprB,KAAK+B,GAEH/B,KAAK+B,GAAGspB,mBAAmBrrB,KAAKoG,SAASsiB,sBAF3B,IAGxB,CAQI4C,gBACD,IAAIrmB,EAASjF,KAAKirB,WAClB,OAAKhmB,EAEEA,EAAO8I,UAAU/N,KAAKoG,SAASuiB,aAFlB,IAGvB,CAQI3gB,YACD,IAAI/C,EAASjF,KAAKirB,WAElB,OAAOhmB,EAASA,EAAO+C,QAAU,IACpC,CAEI8hB,qBACD,MAAO,CACJC,WAAY,EACZwB,aAAc,EACdC,YAAa,EAEnB,CAEIC,iBACD,OAAOzrB,KAAK6pB,WACf,CAMA6B,UAAUC,GAEP,GACG3rB,KAAKoG,SAAS6iB,YACc,uBAA3BjpB,KAAKoG,SAAS6iB,WACZjpB,KAAKoG,SAAS6iB,WAAa0C,GAE9B,OAEH,GAAI3rB,KAAKsqB,iBAAkB,CAExBtqB,KAAK4rB,cAAcD,GAGnB,IAAIE,EAAa7rB,KAAKsqB,iBAAiBwB,YACvC,GAAID,EAAY,CACb,IAAIE,EAAe/rB,KAAKsqB,iBAAiB0B,QAAQH,GAC7CE,IAAcJ,EAASI,EAAaE,QAC3C,CACH,CAEA,IAAIC,EAAKlsB,KAAKwpB,iBACV0C,IAEa,MAAVP,EACDO,EAAGR,UAAU,MAGPQ,EAAGJ,aAAeH,EACxB3rB,KAAKwP,KAAK,eAAgBxP,KAAK8rB,aAGzBI,EAAGC,OAAOR,IAChBO,EAAGR,UAAUC,GAGtB,CAMAC,cAAcD,GACX,IAAIS,EAAKpsB,KAAKsqB,iBACd,GAAI8B,GAAMA,EAAGN,aAAeH,EAGzB,GADiBS,EAAGC,KAAK,CAAEzrB,GAAI+qB,IAAU,GAEtCS,EAAGV,UAAUC,OAGX,CACF,IAAIW,EAAWF,EAAGC,KAAK,CAAEJ,QAASN,EAAQY,QAAS,IAAK,GACpDD,EAAUF,EAAGV,UAAUY,EAAS1rB,IAC/BwrB,EAAGV,UAAU,KACrB,CAEN,CAEAI,UAAUU,GAAa,GAEpB,GAAIA,GAAcxsB,KAAKsqB,iBAAkB,CACtC,IAAImC,EAASzsB,KAAKsqB,iBAAiBwB,YACnC,GAAIW,EAAQ,CACT,IAAIC,EAAW1sB,KAAKsqB,iBAAiB0B,QAAQS,GAG7CzsB,KAAKsqB,iBAAiBxhB,QAClBsF,GAASA,EAAK6d,SAAWS,EAAST,UAItC,IAAIU,EACD3sB,KAAKsqB,iBAAiBsC,YAAY,IAAM,KAK3C,OAFA5sB,KAAK6sB,oBAEEF,CACV,CACH,CAEA,IAAIT,EAAKlsB,KAAKwpB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGJ,YAGhB,OAFeI,EAAGF,QAAQS,EAG7B,CAEAK,iBACG,IAAIZ,EAAKlsB,KAAKwpB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGa,aAGhB,OAFeb,EAAGF,QAAQS,EAG7B,CAEAO,cAAcC,GACX,IAAIf,EAAKlsB,KAAKwpB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGgB,UAAUD,EAAOrsB,IAGjC,OAFesrB,EAAGF,QAAQS,EAG7B,CAQAI,oBAQG,IAAIM,EACAC,EAASptB,KAAKorB,mBACdgC,IACDD,EAAaC,EAAOtB,aAGvB,IAAIuB,EAAcC,GAEG,MAAdH,GACQntB,KAAKutB,oBAAoBD,GAGpCttB,KAAKwpB,kBAAkBxpB,KAAKwpB,iBAAiB1gB,OAAOukB,GACpDrtB,KAAKsqB,kBAAkBtqB,KAAKsqB,iBAAiBxhB,OAAOukB,EAC3D,CAEAG,kBACG,GAAIxtB,KAAKoG,SAAS6iB,UAEf,GAA+B,gBAA3BjpB,KAAKoG,SAAS6iB,UAA6B,CAC5C,IAAIrY,EAAW5Q,KAAKytB,sBAChBC,EAAa1tB,KAAKirB,WAAWlkB,QAAQC,GAAe,QAATA,EAAE3C,MAG7C6a,EAAMlf,KAAKwpB,iBAAiB6C,MAAMzc,IACnC,IAAI+d,GAAQ,EAeZ,OAbAD,EAAWzpB,SAAS+C,IACb2mB,GAA4B,MAAnB/d,EAAE5I,EAAEF,cAEb8I,EAAE5I,EAAEF,YAAYgC,OAEjB6kB,EACG/d,EAAE5I,EAAEF,YAAYgC,QAAQe,GAASA,EAAKjJ,IAAMgQ,IACxCzK,OAAS,EACRyJ,EAAE5I,EAAEF,aAAe8J,IAC3B+c,GAAQ,GACX,IAGIA,CAAK,IACZ,GAGCzO,IACDlf,KAAKwpB,iBAAiBkC,UAAUxM,EAAIte,IAEpCZ,KAAK4rB,cAAc1M,EAAIte,IAE7B,MAAO,GACuB,gBAA3BZ,KAAKoG,SAAS6iB,WACa,uBAA3BjpB,KAAKoG,SAAS6iB,UACf,CAgBC,IAAI2E,EAAY5tB,KAAKwpB,iBAAiBsC,YACtC,IACI8B,GACAA,IAAc5tB,KAAKwpB,iBAAiB2C,OAAOyB,GAC7C,CAIC,IAAIC,EAAQ7tB,KAAKwpB,iBAAiBuD,aAElC/sB,KAAKwpB,iBAAiBkC,UAAUmC,GAAS,MAEzC7tB,KAAK4rB,cAAciC,EAEtB,CACH,MACG7tB,KAAKwpB,iBAAiBkC,UAAU1rB,KAAKoG,SAAS6iB,WAE9CjpB,KAAK4rB,cAAc5rB,KAAKoG,SAAS6iB,UAG1C,CAaA6E,gBAAgBC,EAAO,MACpB/tB,KAAKgqB,aAAe+D,CACvB,CAEAzqB,OAEG,GAAItD,KAAKwrB,YAAa,OACtBxrB,KAAKwrB,aAAc,EAEdxrB,KAAKwpB,iBAAiBwE,MAAMC,sBAC9BjuB,KAAKwpB,iBAAiBwE,MAAMC,oBACzBjuB,KAAKwpB,iBAAiB0E,YAAY,uBAAuB,KAEtD,IAAIC,EAAWnuB,KAAK8rB,YAEpB9rB,KAAKwP,KAAK,eAAgB2e,EAAS,KAK5C,IAAIC,EAAY,CAACC,EAAYR,EAAOS,EAAK,OAClCnhB,MAAMC,QAAQihB,GACRA,EAAWvlB,QAAQsK,IAAOA,EAAEkb,IAAOlb,IAAMya,IAAO1nB,OAAS,EAEzDkoB,IAAeA,EAAWC,IAAOD,IAAeR,EAK7D7tB,KAAKoC,GAAG,4BAA6ByH,IAElC,IAAIiO,EAAM9X,KAAKirB,WACf,IAAKnT,EAAK,OAEV,IAAKjO,IAASA,EAAKA,KAAM,OAEzB,IAAI0kB,GAAU,EACVC,EAAc,GAElB/e,QAAQC,UACJ8E,MAAK,IACI,IAAI/E,SAAQ,CAACib,EAAM+D,KAEvB,GAAI3W,aAAe9X,KAAK+B,GAAGwc,MAAMmQ,cAAe,CAC7C,IAAIC,EACD7W,EAAI4N,SAASL,GAAMA,EAAEzkB,IAAMiJ,EAAKmO,YAAa,GAIhD,GAFAuW,EAAUI,EAAQxoB,OAAS,GAEtBooB,EAAS,OAAO7D,IAErB,IAAIkE,EAAQ,CACT9F,KAAM,KACN3H,MAAO,IAGVwN,EAAQ1qB,SAASohB,IACd,IAAIwJ,EAAYhlB,EAAKA,KAAK,GAAGwb,EAAEiJ,QAC1BO,GAELD,EAAMzN,MAAM7c,KAAK,CACdD,IAAK,GAAGghB,EAAEyJ,OAAShX,EAAIiX,YAAY1J,EAAEzkB,OAAOykB,EAAEiJ,OAC9CU,KAAM,SACNrsB,MAAOksB,GACR,IAGL/W,EAAI9P,QACAinB,QAAQ,CACNL,MAAOA,IAETpa,MAAM0a,IACJV,EAAcU,EAAarlB,MAAQ,GACnC2kB,EAAYvqB,SAASmP,WACXA,EAAExS,EAAE,IAGd8pB,GAAM,IAERjW,MAAMga,EACb,MAGGF,EAAUzW,EAAIlX,IAAMiJ,EAAKmO,SACzBwW,EAAc,CAAC3kB,EAAKA,MACpB6gB,GACH,MAGLlW,MAAK,KAmGH,GAlGI+Z,IAEWzW,EAAI9P,QACViQ,cAAcuW,IAEnBA,GAAe,IAAIvqB,SAASkrB,IAErBnvB,KAAKovB,YAAYD,KAKlBnvB,KAAKwpB,iBAAiB2C,OACpBgD,EAAS,GAAGrX,EAAIwW,UAElBtuB,KAAKqvB,gBAMLrvB,KAAKwpB,iBAAiB2C,OACpBgD,EAAS,GAAGrX,EAAIwW,UAEnBtuB,KAAKqvB,gBAGDrvB,KAAKutB,oBAAoB4B,IAGvBnvB,KAAK2pB,mBAAmB7C,OACrB9mB,KAAK4pB,oBAEQ3lB,SAASqrB,IAEzB,GAAI3rB,GAAG2rB,EAAQ,eACZ,OAAO,EAIV,IAAIC,EAAM,EACNxa,EAASpR,GAAG2rB,GAAO7jB,gBACnB9H,GAAG2rB,GAAO7jB,gBAAgBM,MAC3BwjB,EAAM5rB,GAAG2rB,GACL7jB,gBACAM,MAAMpI,GAAG2rB,IAEb3rB,GAAG2rB,GAAO7jB,gBAAgBA,gBAAgBM,QAK1CgJ,EAASpR,GAAG2rB,GACR7jB,gBACAA,gBACJ8jB,EAAM5rB,GAAG2rB,GACL7jB,gBACAA,gBACAM,MAAMpI,GAAG2rB,GAAO7jB,kBAIvB,IAAI+jB,EAAKxvB,KAET,GAAI+U,EAAO9J,QAAS,CACjB,IAAIlL,EAAIC,KAAK+B,GAAG9B,QAChB8U,EAAO9J,QACJ,CACGrK,GAAI0uB,EAAQ,cACZ5uB,KAAM,SACNiC,MAAO5C,EACJ,wCAEHmB,IAAK,2BACLK,MAAO,SAAUX,EAAI6uB,GAClBD,EAAGE,aACH/rB,GAAG/C,GAAI6K,gBAAgBD,WAAW5K,EACrC,GAEH2uB,EAEN,MAhENvvB,KAAKwpB,iBAAiBtI,IAAIiO,EAAU,GACpCnvB,KAAKwP,KAAK,SAAU2f,IAmEvB,IAIAnvB,KAAKsqB,kBAELtqB,KAAK2vB,oBAAoB,CACtB9lB,KAAM2kB,OAMT1W,aAAe9X,KAAK+B,GAAGwc,MAAMmQ,eAAgB,CAEhD,IAAI7I,EAAkB7lB,KAAKirB,WAAWnF,eAClC9e,GACEA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKmO,WAOtD,GAHAwW,EAAcA,EAAY,GAIvBA,GACA3I,GACAA,EAAgB1f,OAAS,EAC1B,CAEC,IAAImoB,EAAKzI,EAAgB,GAAG5gB,OAAOqpB,KAC9BE,EAAY5tB,IAAY,MAAN0tB,IACpBE,EAAY5tB,GAAK4tB,EAAYF,IAEhCtuB,KAAKwpB,iBAAiB6C,KAAK,CAAC,GAAGpoB,SAAS2rB,IACrC,IAAIC,EAAiB,CAAC,EAEtBhK,EAAgB5hB,SAAS+C,IACtB,IAAI8oB,EAAkB,CAAC,EACnB9oB,GAAKA,EAAEskB,YACRwE,EACGtB,EAAYxnB,EAAEskB,UAAUyE,iBAAmB,CAAC,GAGlD,IAAIC,EAAeJ,EAAE5oB,EAAE+oB,iBAAmB,CAAC,EAEvCE,EAAe7B,EAChB0B,EACAF,EAAEhvB,GACF0tB,GAKAnhB,MAAMC,QAAQ4iB,IACdA,EAAalnB,QACTsK,GACEA,GAAKob,EAAY5tB,IACjBwS,EAAExS,IAAM4tB,EAAY5tB,IACpBwS,EAAEkb,IAAOE,EAAY5tB,KACzBuF,OAAS,GACX8pB,GAEAD,EAAa1rB,KAAKkqB,GAElBqB,EAAe7oB,EAAE+oB,gBAAkBC,EACnCH,EAAe7oB,EAAEF,YAAc+oB,EAC5B7oB,EAAE+oB,gBACH5hB,KAAKiF,GAAMA,EAAExS,IAAMwS,EAAEkb,IAAOlb,KAE7BjG,MAAMC,QAAQ4iB,IACdA,GAAgBxB,EAAY5tB,IAC1BovB,EAAapvB,IAAM4tB,EAAY5tB,IAC/BovB,EAAa1B,IAAOE,EAAY5tB,KACnCqvB,IAEAJ,EAAe7oB,EAAE+oB,gBAAkBvB,EACnCqB,EAAe7oB,EAAEF,YACd0nB,EAAY5tB,IAAM4tB,EACxB,IAICra,OAAOC,KAAKyb,GAAgB1pB,OAAS,IAE1B2R,EAAI9P,QACViQ,cAAc4X,GAEpB7vB,KAAKwpB,iBAAiB0G,WACnBN,EAAEhvB,GACFivB,GAGC7vB,KAAKsqB,kBACNtqB,KAAKsqB,iBAAiB4F,WACnBN,EAAEhvB,GACFivB,GAGN7vB,KAAKwP,KACF,SACAxP,KAAKwpB,iBAAiBwC,QAAQ4D,EAAEhvB,KAEtC,GAEN,CACH,CAGAZ,KAAK6sB,oBACL7sB,KAAKwtB,iBAAiB,GACvB,IAGRxtB,KAAKoC,GAAG,4BAA6ByH,IAOlC,IAAIiO,EAAM9X,KAAKirB,WACf,IAAKnT,EAAK,OAGV,IAAInS,EAASkE,EAAKA,KAClB,IAAKlE,EAAQ,OAEb,IAAIwqB,GAAa,EACbC,GAAW,EACXC,EAAa,GAKbC,EAAiB,GACjB9B,EAAc,CAAC,EAGnB,GAAI1W,aAAe9X,KAAK+B,GAAGwc,MAAMmQ,cAAe,CAC7C,IAAIC,EAAU7W,EAAI4N,SAASL,GAAMA,EAAEzkB,IAAMiJ,EAAKmO,YAAa,GAC3DmY,EAAaxB,EAAQxoB,OAAS,EAC1BgqB,KACAxB,GAAW,IAAI1qB,SAASohB,IACtBgL,EAAaA,EAAWvJ,OACrB9mB,KAAKwpB,iBACD6C,MAAMje,GAEDA,EACG,GAAGpO,KAAKirB,WAAW8D,YAChB1J,EAAEzkB,OACAykB,EAAEiJ,UACJ3oB,EAAO0f,EAAEiJ,OAAS3oB,EAAO/E,MAGpCuN,KAAKkX,GAAMA,EAAEzkB,MAAO,IAIvBZ,KAAKsqB,mBACNgG,EAAiBA,EAAexJ,OAC7B9mB,KAAKsqB,iBACD+B,MAAMje,GAEDA,EACG,GAAGpO,KAAKirB,WAAW8D,YAChB1J,EAAEzkB,OACAykB,EAAEiJ,UACJ3oB,EAAO0f,EAAEiJ,OAAS3oB,EAAO/E,MAGpCuN,KAAKkX,GAAMA,EAAEzkB,MAAO,IAE9B,IAGHwvB,EAAWC,EAAWlqB,OAAS,EAE/BqoB,EAAcxuB,KAAKuwB,iBAAiB5B,EAAShpB,GAEnD,MAGGwqB,EAAarY,EAAIlX,IAAMiJ,EAAKmO,SACxBmY,IAEIxqB,EAAO/E,IAAkB,MAAZkX,EAAIwW,OAAc3oB,EAAO/E,GAAK+E,EAAOmS,EAAIwW,OAE3D+B,EAAW/rB,KAAKqB,EAAO/E,IAEvBwvB,EAAWpwB,KAAKwpB,iBAAiB2C,OAAOxmB,EAAO/E,IAC/C4tB,EAAc7oB,GAKpB,GAAIwqB,EACD,GAAIC,EACD,GAAIpwB,KAAKovB,YAAYZ,GAAc,CAO5BxuB,KAAKwpB,mBACN6G,EAAarwB,KAAK+B,GAAGygB,KAAK6N,GAC1BA,EAAWpsB,SAAS0nB,IACjB3rB,KAAKwpB,iBAAiB0G,WAAWvE,EAAQ6C,EAAY,KAIvDxuB,KAAKsqB,mBAENgG,EAAiBtwB,KAAK+B,GAAGygB,KAAK8N,GAC9BA,EAAersB,SAAS0nB,IACrB3rB,KAAKsqB,iBAAiB4F,WAAWvE,EAAQ6C,EAAY,KAI3DxuB,KAAKwP,KAAK,SAAUgf,GAGpB,IAAIL,EAAWnuB,KAAK8rB,YAChBqC,GAAYA,EAASvtB,IAAM4tB,EAAY5tB,IACxCZ,KAAKwP,KAAK,eAAgB2e,EAEhC,MAIGkC,EAAWpsB,SAASrD,IAEjB,IAAIutB,EAAWnuB,KAAK8rB,YAChBqC,GAAYA,EAASvtB,IAAMA,GAC5BZ,KAAKwP,KAAK,eAAgB,MAE7BxP,KAAKwpB,iBAAiB3O,OAAOja,GAO7BZ,KAAKwP,KAAK,SAAU5O,EAAG,SAKvBZ,KAAKovB,YAAYZ,KAGvBxuB,KAAKwpB,iBAAiBtI,IAAIsN,EAAa,GAEnCxuB,KAAKsqB,kBACNtqB,KAAK2vB,oBAAoB,CACtB9lB,KAAM,CAAC2kB,KAGbxuB,KAAKwP,KAAK,SAAUgf,IAK1B,IAAI3I,EAAkB/N,EAAIgO,eACtB9e,GAAMA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKmO,WAI1D,GACGF,aAAe9X,KAAK+B,GAAGwc,MAAMiS,UAC7B3K,GACAA,EAAgB1f,OAAS,EAC1B,CAEC,IAAImoB,EAAKzI,EAAgB,GAAG5gB,OAAOqpB,KAC9B3oB,EAAO/E,IAAY,MAAN0tB,IAAY3oB,EAAO/E,GAAK+E,EAAO2oB,IAE7CtuB,KAAKwpB,iBAAiBiH,QAAU,GACjCzwB,KAAKwpB,iBAAiB6C,KAAK,CAAC,GAAGpoB,SAAS2rB,IACrC,IAAIC,EAAiB,CAAC,EAEtBhK,EAAgB5hB,SAAS+C,IACtB,IAAKA,EAAG,OAER,IAAI8oB,EAAkB,CAAC,EACnBE,EAAeJ,EAAE5oB,EAAE+oB,iBAAmB,CAAC,EAEvC/oB,EAAEskB,YACHwE,EACGnqB,EAAOqB,EAAEskB,UAAUyE,iBAAmB,CAAC,GAE7C,IAAIE,EAAe7B,EAAU0B,EAAiBF,EAAEhvB,GAAI0tB,GAIjDnhB,MAAMC,QAAQ4iB,IACdA,EAAalnB,QACTsK,GACEA,GAAKzN,EAAO/E,IACZwS,EAAExS,IAAM+E,EAAO/E,IACfwS,EAAEkb,IAAO3oB,EAAO/E,KACpBuF,OAAS,IACV8pB,GAEDJ,EAAe7oB,EAAE+oB,gBAAkBC,EAAalnB,QAC5CsK,IAAOA,EAAExS,IAAMwS,EAAEkb,IAAOlb,IAAMzN,EAAO/E,KAEzCivB,EAAe7oB,EAAEF,YAAc+oB,EAC5B7oB,EAAE+oB,gBACH5hB,KAAKiF,GAAMA,EAAExS,IAAMwS,EAAEkb,IAAOlb,KAE7BjG,MAAMC,QAAQ4iB,IACdA,GAAgBrqB,EAAO/E,IACrBovB,EAAapvB,IAAM+E,EAAO/E,IAC1BovB,EAAa1B,IAAO3oB,EAAO/E,IAC7BqvB,IAEDJ,EAAe7oB,EAAE+oB,gBAAkB,KACnCF,EAAe7oB,EAAEF,YAAc,MAI9BqG,MAAMC,QAAQ4iB,IAAiBC,GAG7BD,EAAalnB,QACTsK,GACEA,GAAKzN,EAAO/E,IACZwS,EAAExS,IAAM+E,EAAO/E,IACfwS,EAAEkb,IAAO3oB,EAAO/E,KACpBuF,OAAS,EAEX6pB,EAAa/rB,SAAQ,CAACmP,EAAGrH,KAEnBqH,GAAKzN,EAAO/E,IACZwS,EAAExS,IAAM+E,EAAO/E,IACfwS,EAAEkb,IAAO3oB,EAAO/E,KAEhBovB,EAAajkB,GAASpG,EAAM,IAKlCqqB,EAAa1rB,KAAKqB,GAGrBkqB,EAAe7oB,EAAE+oB,gBAAkBC,EACnCH,EAAe7oB,EAAEF,YAAc+oB,EAC5B7oB,EAAE+oB,gBACH5hB,KAAKiF,GAAMA,EAAExS,IAAMwS,EAAEkb,IAAOlb,KAE7BjG,MAAMC,QAAQ4iB,IACdA,GAAgBrqB,EAAO/E,IACrBovB,EAAapvB,IAAM+E,EAAO/E,IAC1BovB,EAAa1B,IAAO3oB,EAAO/E,KAC9BqvB,IAEAJ,EAAe7oB,EAAE+oB,gBAAkBpqB,EACnCkqB,EAAe7oB,EAAEF,YAAcnB,EAAO/E,IAAM+E,EAC/C,IAICwO,OAAOC,KAAKyb,GAAgB1pB,OAAS,IAE1B2R,EAAI9P,QACViQ,cAAc4X,GAEjB7vB,KAAKsqB,kBACLtqB,KAAKsqB,iBAAiB6B,OAAOyD,EAAEhvB,KAE/BZ,KAAKsqB,iBAAiB4F,WAAWN,EAAEhvB,GAAIivB,GAGvC7vB,KAAKwpB,kBACLxpB,KAAKwpB,iBAAiB2C,OAAOyD,EAAEhvB,MAE/BZ,KAAKwpB,iBAAiB0G,WAAWN,EAAEhvB,GAAIivB,GACvC7vB,KAAKwP,KACF,SACAxP,KAAKwpB,iBAAiBwC,QAAQ4D,EAAEhvB,MAGzC,GAGT,CAEAZ,KAAK6sB,oBACL7sB,KAAKwtB,iBAAiB,IAKzBxtB,KAAKoC,GAAG,2BAA4ByH,IAIjC,GACI7J,KAAKirB,YACLjrB,KAAKgI,OACNhI,KAAKirB,WAAWrqB,IAAMiJ,EAAKmO,SAH9B,CASA,IAAIrS,EAASkE,EAAKA,KAElB,GAAKlE,EAAL,CAGA,IAAI2oB,EAAKtuB,KAAKgI,MAAM/C,OAAOqpB,KAK3B,GAJK3oB,EAAO2oB,KACTA,EAAK,MAGJ3oB,GACG3F,KAAKwpB,iBAAiB2C,OAAOxmB,EAAO2oB,IAAM,CAC3C,IAAIP,EAAO,CAAEa,MAAO,CAAC,GACrBb,EAAKa,MAAMN,GAAM3oB,EAAO2oB,GAExBtuB,KAAKgI,MAAM0oB,aAAa3C,GAAMvZ,MAAM4F,IAEjC,GAAIjN,MAAMC,QAAQgN,EAAIvQ,OAASuQ,EAAIvQ,KAAK1D,OAAQ,CAE7C,IAAI2R,EAAM9X,KAAKirB,WACf,IAAKnT,EAAK,OAEEA,EAAI9P,QACViQ,cAAcmC,EAAIvQ,KAAK,IAEzB7J,KAAKwpB,iBAAiB2C,OAAOxmB,EAAO2oB,KACrCtuB,KAAKwpB,iBAAiB0G,WACnBvqB,EAAO2oB,GACPlU,EAAIvQ,KAAK,IAKf,IAAIskB,EAAWnuB,KAAK8rB,YAChBqC,GAAYA,EAASG,IAAO3oB,EAAO2oB,IACpCtuB,KAAKwP,KAAK,eAAgB2e,EAEhC,MAGgBnuB,KAAK8rB,aACJnmB,EAAO2oB,IAAKtuB,KAAKwP,KAAK,eAAgB,MAEpDxP,KAAKwpB,iBAAiB3O,OAAOlV,EAAO2oB,IACpCtuB,KAAKwP,KAAK,SAAU7J,EAAO2oB,GAC9B,GAEN,CAIHtuB,KAAK6sB,oBACL7sB,KAAKwtB,iBAlDc,CALnB,CAuDsB,IAGzBxtB,KAAKoC,GAAG,4BAA6ByH,IAElC,IAAIiO,EAAM9X,KAAKirB,WACf,IAAKnT,EAAK,OAEV,IAAI6Y,EAAW9mB,EAAKA,KAChB+mB,GAAa,EACbC,EAAa,GACbC,EAAiB,GAGrB,GAAIhZ,aAAe9X,KAAK+B,GAAGwc,MAAMmQ,cAAe,CAC7C,IAAIC,EAAU7W,EAAI4N,SAASL,GAAMA,EAAEzkB,IAAMiJ,EAAKmO,YAAa,GAC3D4Y,EAAajC,EAAQxoB,OAAS,EAC1ByqB,IACAjC,GAAW,IAAI1qB,SAASohB,IACtBwL,EACG7wB,KAAKwpB,iBACD6C,MAAMje,GACGA,EAAK,GAAGiX,EAAEyJ,SAASzJ,EAAEiJ,SAAWqC,IAEzCxiB,KAAKkX,GAAMA,EAAEzkB,MAAO,GAGvBZ,KAAKsqB,mBACNwG,EACG9wB,KAAKsqB,iBACD+B,MAAMje,GACGA,EAAK,GAAGiX,EAAEyJ,SAASzJ,EAAEiJ,SAAWqC,IAEzCxiB,KAAKkX,GAAMA,EAAEzkB,MAAO,GAC9B,GAGT,MAGGgwB,EAAa9Y,EAAIlX,IAAMiJ,EAAKmO,SACxB4Y,GACDC,EAAWvsB,KAAKqsB,GAKtB,GAAIC,EAAY,CAEb,IAAIzC,EAAWnuB,KAAK8rB,YAEpB+E,EAAW5sB,SAAS8sB,IACb5C,GAAYA,EAASrW,EAAIwW,OAASyC,GACnC/wB,KAAKwP,KAAK,eAAgB,MAEzBxP,KAAKwpB,iBAAiB2C,OAAO4E,IAC9B/wB,KAAKwpB,iBAAiB3O,OAAOkW,EAAM,IAGrC/wB,KAAKsqB,kBACNwG,EAAe7sB,SAAS8sB,IACjB/wB,KAAKsqB,iBAAiB6B,OAAO4E,IAC9B/wB,KAAKsqB,iBAAiBzP,OAAOkW,EAAM,IAIxCF,EAAW,IAAI7wB,KAAKwP,KAAK,SAAUqhB,EAAW,GACrD,CAGA,IAAIhL,EAAkB/N,EAAIgO,eACtB9e,GAAMA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKmO,WAI1D,GACGF,aAAe9X,KAAK+B,GAAGwc,MAAMiS,UAC7B3K,GACAA,EAAgB1f,OAAS,EAC1B,CAEC,IAAImoB,EAAKzI,EAAgB,GAAG5gB,OAAOqpB,KAEnCtuB,KAAKwpB,iBAAiB6C,KAAK,CAAC,GAAGpoB,SAAS2rB,IACrC,IAAIoB,EAAmB,CAAC,EAExBnL,EAAgB5hB,SAAS+C,IACtB,IAAIiqB,EAAYrB,EAAE5oB,EAAE+oB,gBACH,MAAbkB,IAGD9jB,MAAMC,QAAQ6jB,IACdA,EAAUnoB,QACNsK,GACEA,GAAKud,GACLvd,EAAExS,IAAM+vB,GACRvd,EAAEkb,IAAOqC,IACbxqB,OAAS,GAEX6qB,EAAiBhqB,EAAE+oB,gBAAkBkB,EAAUnoB,QAC3CsK,IAAOA,EAAExS,IAAMwS,EAAEkb,IAAOlb,IAAMud,IAElCK,EAAiBhqB,EAAEF,YAAckqB,EAC9BhqB,EAAE+oB,gBACH5hB,KAAKiF,GAAMA,EAAExS,IAAMwS,EAAEkb,IAAOlb,KAE9B6d,GAAaN,GACbM,EAAUrwB,IAAM+vB,GAChBM,EAAU3C,IAAOqC,IAEjBK,EAAiBhqB,EAAE+oB,gBAAkB,KACrCiB,EAAiBhqB,EAAEF,YAAc,MACpC,IAICqN,OAAOC,KAAK4c,GAAkB7qB,OAAS,IAE5B2R,EAAI9P,QACViQ,cAAc+Y,GAEpBhxB,KAAKwpB,iBAAiB0G,WAAWN,EAAEhvB,GAAIowB,GAEnChxB,KAAKsqB,kBACNtqB,KAAKsqB,iBAAiB4F,WAAWN,EAAEhvB,GAAIowB,GAE1ChxB,KAAKwP,KAAK,SAAUxP,KAAKwpB,iBAAiBwC,QAAQ4D,EAAEhvB,KACvD,GAEN,KAIH,IAAIswB,EAASlxB,KAAKorB,mBACd8F,GAAUlxB,KAAKoG,SAAS2iB,SACzB/oB,KAAKmxB,SAAS,CACXC,QAASF,EACTG,UAAW,eACXC,SAAU,KACPtxB,KAAK6sB,oBACL7sB,KAAKwtB,iBAAiB,GAIlC,CAYA+D,kCAAkC/B,EAAIzQ,GACnC,OAAO,IAAItP,SAAQ,CAACC,EAASiH,KAC1B,OAAQ6Y,EAAG/D,YAER,KAAK+D,EAAG1F,eAAeC,WACpByF,EAAGgC,WAAW/c,MAAMkC,GAKvB,KAAK6Y,EAAG1F,eAAeyB,aAIpBvrB,KAAKmxB,SAAS,CACXC,QAAS5B,EACT6B,UAAW,kBACXC,SAAU,KAEP5hB,GAAS,IAGf,MAGH,KAAK8f,EAAG1F,eAAe0B,YAKvB,QACG9b,IAEN,GAEN,CAEA8hB,SAASC,EAAOC,GAET1xB,KAAK6pB,aAAe7pB,KAAK8pB,eAAeC,aACzC/pB,KAAK6pB,YAAc7pB,KAAK8pB,eAAeyB,aACvCvrB,KAAKwP,KAAK,mBAAoB,CAAC,IAGlC,IAAIsI,EAAM9X,KAAKirB,WACf,GAAW,MAAPnT,EAED,OADA9X,KAAK6pB,YAAc7pB,KAAK8pB,eAAe0B,YAChC/b,QAAQC,QAAQ,IAG1B,IAAI1H,EAAQ8P,EAAI9P,QAChB,GAAa,MAATA,EAED,OADAhI,KAAK6pB,YAAc7pB,KAAK8pB,eAAe0B,YAChC/b,QAAQC,QAAQ,IAI1B,IAAI/C,EAAQ3M,KAAKoG,SAASwiB,gBAAgBrc,YAAc,GAGpDolB,EAAS3xB,KAAKoG,SAASwiB,gBAAgBC,kBAAoB,KAE3D7oB,KAAKqvB,iBACNsC,EAAS3xB,KAAKqvB,gBAGbrvB,KAAKgqB,eAGH2H,EAFCA,EAAOxQ,MAAMhb,OAEL,CACN2iB,KAAM,MACN3H,MAAO,CAACwQ,EAAQ3xB,KAAKgqB,eAIfhqB,KAAKgqB,cAKpB,IAAI+D,EAAO,CACRa,MAAO+C,GAAU,CAAC,EAElBC,KAAMH,GAAS,EACf9jB,KAAMhB,EACN1D,SACGjJ,KAAKoG,SAAS6C,WACbjJ,KAAKoG,SAAS+jB,iBAcrB,OATIuH,IACD3D,EAAK2D,MAAQA,GAIZ1xB,KAAKoG,SAAS2iB,gBACRgF,EAAK2D,MAIZjiB,QAAQC,UAKJ8E,MAAK,KAEH,IAAIqd,EAAS7xB,KAAKorB,mBAClB,OAAKyG,EAEE7xB,KAAKuxB,kCAAkCM,GAF1BpiB,QAAQC,SAEyB,IAMvD8E,MAAK,IACI,IAAI/E,SAAQ,CAACC,EAASiH,KAC1B,GACa,MAAVgb,GACgB,MAAhBA,EAAOxQ,QACNwQ,EAAOxQ,MAAMhb,OAEd,OAAOuJ,IAEV,IAAIoiB,EAAY,GAEhBH,EAAOxQ,MAAMld,SAAS+qB,IAEnB,GACgB,sBAAbA,EAAKA,MACQ,0BAAbA,EAAKA,KACN,CACC,IAAI+C,EAAK/xB,KAAK+B,GAAGspB,mBAAmB2D,EAAKrsB,OACrCovB,GACDD,EAAUxtB,KACPtE,KAAKuxB,kCAAkCQ,GAGhD,KAGHtiB,QAAQ4R,IAAIyQ,GACRtd,MAAK,KACH9E,GAAS,IAEX+E,MAAMkC,EAAO,MAKtBnC,MAAK,IACI,IAAI/E,SAAQ,CAACC,EAASiH,KAK1B3W,KAAKgyB,wBAA0B,CAC5BtiB,QAASA,EACTiH,OAAQA,GAGX3W,KAAKiyB,aAAajqB,EAAO+lB,GAAMtZ,OAAOtM,IACnCwO,EAAOxO,EAAI,GACZ,KAIjB,CAEA8pB,aAAajqB,EAAO+lB,GAMjB,OAAO/lB,EAAMinB,QAAQlB,GAAMvZ,MAAM3K,GACvB7J,KAAKkyB,oBAAoBroB,IAEtC,CAcAqoB,oBAAoBroB,GACjB,OAAO4F,QAAQC,UAAU8E,MAAK,KAE3BxU,KAAKmyB,aAAetoB,EAAKuoB,YAGpBpyB,KAAKwpB,iBAAiB6C,KAAK,CAAC,GAAGlmB,SACjCnG,KAAKwpB,iBAAiB1O,WACtB9a,KAAKwpB,iBAAiBjS,MAAM1N,IAI/B0f,GAAe,KACZvpB,KAAKwpB,iBAAiB6I,MAAK,KAEpBryB,KAAKoG,SAAS2iB,SACfpU,YAAW,KACR3U,KAAK6sB,mBAAmB,GACxB,KAGChjB,IACR,GACF,GASH7J,KAAK2vB,oBAAoB9lB,GAEzB0f,GAAe,KAECvpB,KAAKorB,oBAGfprB,KAAK6sB,oBACL7sB,KAAKwtB,mBAGLxtB,KAAKwtB,iBACR,GACA,GACHjE,GAAe,KAERvpB,KAAK6pB,aAAe7pB,KAAK8pB,eAAe0B,cACzCxrB,KAAK6pB,YAAc7pB,KAAK8pB,eAAe0B,YACvCxrB,KAAKwP,KAAK,kBAAmB,CAAC,GACjC,GACA,IACH+Z,GAAe,KAGRvpB,KAAKoG,SAAS2iB,SACf/oB,KAAKwP,KAAK,WAAY,CAAC,EAC1B,GACA,IACH+Z,GAAe,KAERvpB,KAAKgyB,0BACNhyB,KAAKgyB,wBAAwBtiB,UAG7B1P,KAAKgyB,wBAA0B,KAClC,GACA,EAAE,GAEX,CAWAtC,WAAW+B,EAAOC,GAsCf,OAAOjiB,QAAQC,UAAU8E,MAAK,KAEvBxU,KAAKsyB,cAENve,aAAa/T,KAAKsyB,oBACXtyB,KAAKsyB,aAIVtyB,KAAKuyB,gBACPvyB,KAAKuyB,cAAgB,IAAI9iB,SAAQ,CAACC,EAASiH,KACxC3W,KAAKwyB,uBAAyB9iB,EAC9B1P,KAAKyyB,sBAAwB9b,CAAM,KAMzC3W,KAAKsyB,YAAc3d,YAAW,KAE3B3U,KAAK8a,WAEE9a,KAAKwxB,SAASC,EAAOC,GACxBld,MAAK,KACCxU,KAAKuyB,gBACNvyB,KAAKwyB,gCACExyB,KAAKuyB,qBACLvyB,KAAKwyB,8BACLxyB,KAAKyyB,uBAIf1e,aAAa/T,KAAKsyB,oBACXtyB,KAAKsyB,WAAW,IAEzB7d,OAAOtM,IACDnI,KAAKuyB,gBACNvyB,KAAKyyB,sBAAsBtqB,UACpBnI,KAAKuyB,qBACLvyB,KAAKwyB,8BACLxyB,KAAKyyB,uBAGf1e,aAAa/T,KAAKsyB,oBACXtyB,KAAKsyB,WAAW,MAE7B,IAIItyB,KAAKuyB,gBAElB,CAuBAG,aAAaf,GACV3xB,KAAKqvB,eAAiBsC,CACzB,CAEAgB,QAAQ7pB,GACL,IAAIojB,EAAKlsB,KAAKwpB,iBACd,OAAI0C,EACMA,EAAGG,MAAMnN,IACb,IAAI3Z,GAAU,EAiBd,OAVavF,KAAKorB,oBACJprB,KAAKoG,SAAS2iB,SAAWxjB,IACpCA,EAAUvF,KAAKutB,oBAAoBrO,IAIlC3Z,GAAWuD,IACZvD,EAAUuD,EAAOoW,IAGb3Z,CAAO,IAGV,EAEb,CAEAgoB,oBAAoBD,GAEjB,GAAe,MAAXA,EAAiB,OAAO,KAE5B,IAAI4D,EAASlxB,KAAKorB,mBAClB,GAAc,MAAV8F,EAAgB,OAAO,EAE3B,IAAI5F,EAAYtrB,KAAKsrB,UACrB,GAAiB,MAAbA,EAAmB,OAAO,EAI9B,IAAI6B,EAAa+D,EAAOpF,YACxB,GAAkB,MAAdqB,EACD,OAAO,EAGV,IAAIyF,EAAUtF,EAAQhC,EAAUyE,gBAChC,GAAe,MAAX6C,EAAiB,CAElB,IAAItF,EAAQhC,EAAUxkB,YAGnB,OAAO,EAFP8rB,EAAUtF,EAAQhC,EAAUxkB,WAIlC,CAEA,IAAIwnB,EAAKhD,EAAUrmB,OAAOqpB,KAG1B,OAAIsE,EAAQ9pB,OAEN8pB,EAAQ9pB,QAAQkN,IAASA,EAAIpV,IAAMoV,EAAIsY,IAAOtY,IAAQmX,EAAWvsB,KAC7DuF,OAAS,GAGRysB,EAAQhyB,IAAMgyB,EAAQtE,IAAOsE,IAAYzF,EAAWvsB,EAElE,CAEAka,WACO9a,KAAKwpB,kBAAkBxpB,KAAKwpB,iBAAiB1O,WAE7C9a,KAAKsqB,kBAAkBtqB,KAAKsqB,iBAAiBxP,WAEjD9a,KAAK6pB,YAAc7pB,KAAK8pB,eAAeC,UAC1C,CAEI8I,iBACD,OAAO7yB,KAAKmyB,cAAgB,CAC/B,CAUAW,OACGtqB,QAAQ+G,MAAM,mDACjB,CAEAwjB,SACGvqB,QAAQ+G,MAAM,qDACjB,CAEAyjB,gBAAgBC,GAEb,IAAIlnB,EAAQ/L,KAAK2pB,mBAAmBtc,QAAQ4lB,GAG5CjzB,KAAK2pB,mBAAmBxd,OAAOJ,EAAO,EACzC,CAcA2d,wBAAwBiI,EAAS,MAY9B,GAL+B,MAA3B3xB,KAAKkzB,qBACNlzB,KAAKkzB,mBAAqBlzB,KAAK+B,GAAGoxB,iBAC/B,GAAGnzB,KAAKY,wBAGVZ,KAAKirB,WAAY,CAIlB,IAAIpC,EAFJ7oB,KAAKkzB,mBAAmBE,WAAWpzB,KAAKirB,WAAWlkB,UAK/C/G,KAAKirB,sBAAsBjrB,KAAK+B,GAAGwc,MAAMmQ,gBAC1C7F,EAAmB7oB,KAAKirB,WAAW2D,OAYlC/F,EACD7oB,KAAKkzB,mBAAmBruB,SAASgkB,GAC/B7oB,KAAKkzB,mBAAmBruB,SAAS,CAAC,EAC1C,MACG7E,KAAKkzB,mBAAmBE,WAAW,IACnCpzB,KAAKkzB,mBAAmBruB,SACrB0jB,EAAcniB,SAASwiB,gBAAgBC,kBAwC7C,GAlCmC,MAA/B7oB,KAAKqzB,yBACNrzB,KAAKqzB,uBAAyBrzB,KAAK+B,GAAGoxB,iBACnC,GAAGnzB,KAAKY,4BAMdZ,KAAKqzB,uBAAuBD,WACzBpzB,KAAKirB,WAAajrB,KAAKirB,WAAWlkB,SAAW,IAG5C4qB,IAAQ3xB,KAAKoG,SAASwiB,gBAAgBC,iBAAmB8I,GAG1D3xB,KAAKoG,UACLpG,KAAKoG,SAASwiB,iBACd5oB,KAAKoG,SAASwiB,gBAAgBC,iBAE9B7oB,KAAKqzB,uBAAuBxuB,SACzB7E,KAAKoG,SAASwiB,gBAAgBC,kBAGjC7oB,KAAKqzB,uBAAuBxuB,SACzB0jB,EAAcniB,SAASwiB,gBAAgBC,kBAKnB,MAAtB7oB,KAAKszB,gBACNtzB,KAAKszB,cAAgBtzB,KAAK+B,GAAGoxB,iBAC1B,GAAGnzB,KAAKY,mBAGVZ,KAAKirB,WAAY,CAClB,IAAIsI,GAAavzB,KAAKwzB,YAAc,IAAI1qB,QACpC8D,IACGA,EAAE6mB,WACF7mB,EAAE8mB,WAAa,IAAIrmB,QAAQrN,KAAKirB,WAAWrqB,KAAO,IAEzD,GAAI2yB,GAAaA,EAAUptB,OAAS,EAAG,CAEpCnG,KAAKszB,cAAcF,WAAWpzB,KAAKirB,WAAWlkB,UAAY,IAG1D,IAAI4sB,EAAa,GACjBJ,EACIzqB,QACG8D,GAAMA,EAAE9D,QAAU8D,EAAE9D,OAAOqY,OAASvU,EAAE9D,OAAOqY,MAAMhb,SAEtDlC,SAAS2I,IACP,IAAIgnB,GAAUhnB,EAAE9D,OAAOqY,OAAS,IAAIrY,QAChC8G,GACE5P,KAAKirB,WAAWlkB,QAAQC,GAAMA,EAAEpG,IAAMgP,EAAEvL,MAAK8B,OAAS,IAG5DwtB,EAAaA,EAAW7M,OAAO8M,EAAO,IAG5C,IAAIC,EAAa,CACd/K,KAAM,KACN3H,MAAOwS,GAEV3zB,KAAKszB,cAAczuB,SAASgvB,EAC/B,CACH,CACH,CAEIpP,cACD,OAAOzkB,KAAKwqB,YAAa,CAC5B,CAMIsJ,mBACD,MAAO,CACJC,OAAQ,EACRC,OAAQ,EAEd,CAEI9K,eACD,OAAOlpB,KAAKoG,SAAS8iB,UAAYX,EAAcW,QAClD,CAYAO,qBACG,IAAIla,EAAQ,IAAIjH,MACb,qGAGH,OADAE,QAAQ+G,MAAMA,GACP,IACV,CASAgb,qBAIG,OAHA/hB,QAAQ+G,MACL,qGAEI,IACV,CAEAogB,oBAAoB9lB,EAAO,CAAC,GAErBA,IAAS,CAAC,GACXrB,QAAQ2O,IACL,2DAGT,CAkGAoZ,iBAAiB5B,EAAShpB,GACvB,IAAI6oB,EAAc,CAAC,EAgCnB,OA7BAra,OAAOC,KAAKzO,GAAQ1B,SAASI,IAC1BsqB,EAAQ1qB,SAASgwB,IACd,IAAInF,EAAQ9uB,KAAKirB,WAAW8D,YAAYkF,EAAMrzB,IAE9C4tB,EAAY,GAAGM,KAASzqB,KAASsB,EAAOtB,GAI9B,gBAAPA,GACAsB,EAAqB,cACrBA,EAAqB,aAAEQ,SAEvBqoB,EAAY9J,aAAe,GAE3B/e,EAAqB,aAAE1B,SAASiwB,IAC7B,IAAIC,EAAc,CAAC,EAEnBhgB,OAAOC,KAAK8f,GAAMjwB,SAASmwB,IACT,iBAAXA,EACDD,EAA2B,cAAID,EAAoB,cACjDC,EAAY,GAAGrF,KAASsF,KAAaF,EAAKE,EAAQ,IAG1D5F,EAAY9J,aAAapgB,KAAK6vB,EAAY,IAEhD,GACD,IAGE3F,CACV,CAEAY,YAAY9B,GACT,IAAIxf,GAAS,EAab,OATI9N,KAAKkzB,qBACNplB,EAASA,GAAU9N,KAAKkzB,mBAAmB3tB,QAAQ+nB,IAElDttB,KAAKqzB,yBACNvlB,EAASA,GAAU9N,KAAKqzB,uBAAuB9tB,QAAQ+nB,IAEtDxf,GAAU9N,KAAKszB,gBAChBxlB,EAASA,GAAU9N,KAAKszB,cAAc/tB,QAAQ+nB,IAE1Cxf,CACV,CAIAumB,MAAMjuB,GACHA,EAAWA,GAAYpG,KAAK8F,QAC5B,IAAIwuB,EAAuB,IAAIt0B,KAAKL,YAAYyG,EAAUpG,KAAK+B,IAC/DuyB,EAAqBlK,aAAepqB,KAAKoqB,aACzCkK,EAAqBzK,YAAc7pB,KAAK6pB,YAGxCyK,EAAqBjB,uBAAuBxuB,SACzCuB,EAASA,SAASwiB,gBAAgBC,kBAGvB,MACPyL,EAAqB9K,kBACtB8K,EAAqB9K,iBAAiBjS,MACnCvX,KAAKwpB,iBACD6C,KAAK,CAAC,GACNvjB,QAAQoW,GACNoV,EAAqBjB,uBAAuB9tB,QAAQ2Z,MAI5DoV,EAAqBhK,kBACtBgK,EAAqBhK,iBAAiB/S,MACnCvX,KAAKsqB,iBACD+B,KAAK,CAAC,GACNvjB,QAAQoW,GACNoV,EAAqBjB,uBAAuB9tB,QAAQ2Z,KAGhE,EAGHqV,GASAD,EAAqB9G,kBAErB,IAAIgH,EAAWx0B,KAAK8rB,YASpB,OARI0I,IAGGA,EAAS5zB,KAAI4zB,EAAWA,EAAS5zB,IAErC0zB,EAAqB5I,UAAU8I,IAG3BF,CAMV,CAEAG,cAAcC,GACX,IAAI5c,EAAM9X,KAAK8F,QAcf,OAXI4uB,GAASvT,OAAOhb,SACb2R,EAAI1R,SAASwiB,gBAAgBC,kBAAkB1H,OAAOhb,OACvD2R,EAAI1R,SAASwiB,gBAAgBC,iBAAiB1H,MAC3CrJ,EAAI1R,SAASwiB,gBAAgBC,iBAAiB1H,MAAM2F,OACjD4N,EAAQvT,OAGdrJ,EAAI1R,SAASwiB,gBAAgBC,iBAAmB6L,GAGvC10B,KAAKq0B,MAAMvc,EAE7B,CAiBAqZ,SAASwD,GACN,IAAKA,IAAQA,EAAIvD,UAAYuD,EAAIrD,SAAU,OAE3CtxB,KAAK40B,SAAW50B,KAAK40B,UAAY,GAEjC,IAAIzI,EAASnsB,KAAK40B,SAASvI,MAAMhiB,GACvBA,EAAE+mB,SAAWuD,EAAIvD,SAAW/mB,EAAEgnB,WAAasD,EAAItD,cAIpDlF,GAAUA,EAAOhmB,OAAS,KAE5BnG,KAAK40B,SAAStwB,KAAK,CAChB8sB,QAASuD,EAAIvD,QACbC,UAAWsD,EAAItD,UACfC,SAAUqD,EAAIrD,WAIjBqD,EAAIvD,QAAQhvB,GAAGuyB,EAAItD,UAAWsD,EAAIrD,UAExC,CAQAuD,aACO70B,KAAK40B,UAAY50B,KAAK40B,SAASzuB,OAAS,GACzCnG,KAAK40B,SAAS3wB,SAASoG,IACpBA,EAAE+mB,QAAQ0D,eAAezqB,EAAEgnB,UAAWhnB,EAAEinB,SAAS,GAG1D,CAEIkC,iBACD,MAAO,EACV,cCx4EH/zB,EAAOC,QAAU,MACdC,YAAYqjB,EAAYjhB,GACrB/B,KAAK+B,GAAKA,EACV/B,KAAKiG,WAAW+c,EACnB,CASA/c,WAAW+c,GASJA,EAAWpiB,KACZZ,KAAKY,GAAKoiB,EAAWpiB,IAExBZ,KAAKmH,KACF6b,GAAY7b,MACZ6b,GAAYzB,MAAMpa,MAClB6b,GAAYzB,MAAMngB,OAClB4hB,GAAYzB,MAAMmD,eAAe,IAAItjB,OACrC,GACEpB,KAAKmH,MACPnH,KAAK+B,GAAGqG,OAAO2sB,QACZ,IAAIzsB,MAAM,2CACV,CACGgH,QAAS,gCACT0T,eAIThjB,KAAK4B,KAAOohB,EAAWphB,MAAQohB,GAAYzB,MAAM3f,MAAQ,GACzD5B,KAAKuhB,KAAOyB,EAAWzB,MAAQ,IAClC,CAaAzb,QACG,MAAO,CACJlF,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,KACXvF,KAAM5B,KAAK4B,KACX2f,KAAMvhB,KAAKuhB,KAEjB,CAQA3M,UACG,OAAO5U,KAAK+B,GAAGizB,kBAAkBh1B,KAAKY,GACzC,CAQAuE,aACG,OAAInF,KAAKY,GACCZ,KAAK+B,GAAGkzB,iBAAiBj1B,KAAKY,GAAIZ,KAAK8F,SAEvC9F,KAAK+B,GAAGie,iBAAiBhgB,KAAK8F,QAE3C,oBC9EH,MAAMovB,EAAgB,EAAQ,OACxBC,EAAe,EAAQ,OAEvB51B,EAAc,EAAQ,MAEtBC,EAAiB,EAAQ,OAEzB41B,EAAU,EAAQ,MAClB5E,EAAW,EAAQ,OACnB6E,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAmB,EAAQ,OAC3B7G,EAAgB,EAAQ,OAExB8G,EAAY,EAAQ,OAEpBC,EAAuB,EAAQ,OAC/BC,EAAgB,EAAQ,OACxBC,EAAuB,EAAQ,OAE/BC,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OAMzBC,EAAY,EAAQ,OACpBtX,EAAgB,EAAQ,OAExBuE,EAAY,EAAQ,OAEpBxU,EAAe,EAAQ,OAq6B7B9O,EAAOC,QAn6BP,cAAwB6O,EACrB5O,YAAYye,GAaT,GANAte,QACAE,KAAKyY,gBAAgB,GAErBzY,KAAKigB,aAAe7B,GAAe,CAAC,EAGhCjR,MAAMC,QAAQgR,GAAc,CAC7B,IAAI2X,EAAO,CAAC,EACZ3X,EAAYna,SAAS2rB,IAClBmG,EAAKnG,EAAEhvB,IAAMgvB,CAAC,IAEjB5vB,KAAKigB,aAAe8V,CACvB,CAOA/1B,KAAKg2B,iBAAmB,GAGxBh2B,KAAKi2B,YAAc,GAGnBj2B,KAAKk2B,cAAgB,GAGrBl2B,KAAKm2B,YAAc,GAGnBn2B,KAAKo2B,oBAAsB,GAM3Bp2B,KAAKue,MAAQ,CACV2W,gBACA31B,cACA41B,eACA31B,iBACA41B,UACArS,YACAyN,WACA6E,mBACAC,iBACA5G,gBACA+G,uBAOAE,uBAEAC,mBACAC,kBAOH71B,KAAKmhB,MAAQ,CAOVgB,OAAQ,SAAU9d,GAKf,OAJc+d,OACX,4EACA,KAEYC,KAAKhe,EACvB,EASAgyB,WAAY,SAAUlvB,GACnB,OAAO+T,OAAO/T,GAAM6L,QAAQ,gBAAiB,GAChD,EASAsjB,wBAAyB,SAAUnvB,GAChC,MAAO,MAAQnH,KAAKq2B,WAAWlvB,EAClC,EAUAovB,sBAAuB,SAAUC,GAC9B,OAAOx2B,KAAKq2B,WAAWG,GAAW,YACrC,EAWAC,kBAAmB,SAAUC,EAAY5vB,GACtC,IAAI6vB,EAASD,EAAa,IAAM5vB,EAIhC,OAFI6vB,EAAOxwB,OAAS,KAAIwwB,EAASA,EAAOC,UAAU,EAAG,KAE9CD,CACV,EAcAE,0BAA2B,SACxBC,EACAC,EACAC,EACAR,GAeA,OAZAM,EAAU92B,KAAKs2B,wBAAwBQ,IAC3B3wB,OAAS,KAAI2wB,EAAUA,EAAQF,UAAU,EAAG,KAEpDG,EAAgB5wB,OAAS,KAC1B4wB,EAAkBA,EAAgBH,UAAU,EAAG,KAE9CI,EAAgB7wB,OAAS,KAC1B6wB,EAAkBA,EAAgBJ,UAAU,EAAG,MAElDJ,EAAUx2B,KAAKq2B,WAAWG,IACdrwB,OAAS,KAAIqwB,EAAUA,EAAQI,UAAU,EAAG,KAEjD,gDACH5jB,QAAQ,YAAa8jB,GACrB9jB,QAAQ,eAAgB+jB,GACxB/jB,QAAQ,eAAgBgkB,GACxBhkB,QAAQ,YAAawjB,EAC5B,EASAS,mBAAoB,SAAUP,GAC3B,MAAO,MAAM12B,KAAKq2B,WAAWK,IAChC,GAIH12B,KAAKoI,OAAO2sB,QAAU,IAAInf,KACvB5V,KAAKoI,OAAO,aAAcwN,EAAO,EAGpC5V,KAAKoI,OAAOC,UAAY,IAAIuN,KACzB5V,KAAKoI,OAAO,eAAgBwN,EAAO,CAEzC,CAQAshB,gBAAgBtH,GACb,GAAqB,iBAAVA,EAAErO,KACV,IACGqO,EAAErO,KAAO1N,KAAK0D,MAAMqY,EAAErO,KAIzB,CAHE,MAAOlX,GACN7B,QAAQ2O,IAAI9M,GACZ7B,QAAQ+G,MAAM,2BAA2BqgB,EAAEhvB,MAC9C,CAEN,CAEA0C,OACG,IAAI6zB,EAAiBhjB,OAAOC,KAAKpU,KAAKigB,cAAc9R,KAChDkG,GAAMrU,KAAKigB,aAAa5L,KAuB5B,OAlBA8iB,EAAelzB,SAAS2rB,IACrB5vB,KAAKk3B,gBAAgBtH,EAAE,IAI1B,CAAC,SAAU,QAAS,iBAAkB,UAAW,eAAe3rB,SAC5DrC,IACiBu1B,EAAeruB,QAAQ8mB,GAAMA,EAAEhuB,MAAQA,IAC7CqC,SAASwd,IACf,IAAI,QAAE2V,EAAO,MAAEC,GAAUr3B,KAAKs3B,gBAAgB7V,GAC1C2V,GACDp3B,KAAKo3B,GAAS9yB,KAAKtE,KAAKq3B,GAAO5V,EAAIF,MACtC,GACD,IAIRvhB,KAAKwP,KAAK,sBACHC,QAAQC,SAClB,CAmBA4nB,gBAAgB7V,GACb,OAAQA,EAAI7f,MACT,IAAK,cACF,MAAO,CAAEw1B,QAAS,mBAAoBC,MAAO,kBAEhD,IAAK,iBACF,MAAO,CACJD,QAAS,sBACTC,MAAO,qBAGb,IAAK,SACF,MAAO,CAAED,QAAS,cAAeC,MAAO,aAE3C,IAAK,UACF,MAAO,CAAED,QAAS,gBAAiBC,MAAO,cAE7C,IAAK,QACF,MAAO,CAAED,QAAS,cAAeC,MAAO,YAE3C,QAEG,MAAO,CAAED,QAAS,KAAMC,MAAO,MAExC,CAiBAzT,eAAehjB,EAAI22B,GAAQ,GACxB,OAAIv3B,KAAKigB,aAAarf,GACf22B,EACMv3B,KAAKigB,aAAarf,GAElBZ,KAAKigB,aAAarf,GAAI2gB,KAG5B,IACV,CASAzB,cAAcna,GACX,OAAO,IAAIwvB,EAAaxvB,EAAQ3F,KACnC,CAUAw3B,iBAAiBC,EAAO,IAiBrB,OAhBKtqB,MAAMC,QAAQqqB,KAChBA,EAAO,CAACA,IAKXA,EAAKxzB,SAAS2rB,IACX5vB,KAAKk3B,gBAAgBtH,GACrB5vB,KAAKigB,aAAa2P,EAAEhvB,IAAMgvB,CAAC,IAI9B6H,EAAKxzB,SAAS2rB,IACX5vB,KAAKwhB,eAAe,UAAWoO,EAAEhvB,GAAIgvB,EAAE,IAGnCngB,QAAQC,SAClB,CAaA8R,eAAe8H,EAAI1oB,EAAI6gB,GACpB,IAEOiW,GAFH,QAAEN,EAAO,MAAEC,GAAUr3B,KAAKs3B,gBAAgB7V,GAC9C,GAAI2V,EAED,OAAQ9N,GACL,IAAK,UACFtpB,KAAKo3B,GAAS9yB,KAAKtE,KAAKq3B,GAAO5V,EAAIF,OACnCvhB,KAAKwP,KAAK,qBAAsBiS,EAAIF,MACpC,MAEH,IAAK,UAEFmW,EAAO13B,KAAKo3B,GAAS/K,MAAMuD,GAAMA,EAAEhvB,IAAMA,IAGzCZ,KAAKo3B,GAAWp3B,KAAKo3B,GAAStuB,QAAQ8mB,GAAMA,EAAEhvB,IAAMA,IAEpDZ,KAAKo3B,GAAS9yB,KAAKtE,KAAKq3B,GAAO5V,EAAIF,OAK/BmW,EACDA,EAAKloB,KAAK,qBAAsBiS,EAAIF,MAEpCvhB,KAAKwP,KAAK,qBAAsBiS,EAAIF,MAEvC,MAEH,IAAK,aAEFmW,EAAO13B,KAAKo3B,GAAS/K,MAAMuD,GAAMA,EAAEhvB,IAAMA,OAGtCZ,KAAKo3B,GAAWp3B,KAAKo3B,GAAStuB,QAAQ8mB,GAAMA,EAAEhvB,IAAMA,IAGpD82B,EAAKloB,KAAK,qBAAsBiS,EAAIF,MAEpCvhB,KAAKwP,KAAK,qBAAsBiS,EAAIF,OAKnD,CAaAoJ,aAAaja,EAAK,MAAM,IACrB,OAAQ1Q,KAAKg2B,kBAAoB,IAAIltB,OAAO4H,EAC/C,CAYAinB,gBAAgBC,GACb,OAAO53B,KAAK2qB,cAAc/c,GAAMA,EAAEhN,IAAMg3B,IAAI,EAC/C,CAUAC,eAAelyB,GACZ,OAAO,IAAIuvB,EAAcvvB,EAAQ3F,KACpC,CAWAolB,gBAAgBtc,EAAS,MAAM,IAC5B,OAAQ9I,KAAKo2B,qBAAuB,IAAIttB,OAAOA,EAClD,CAYAuiB,mBAAmBuM,GAEhB,OAAKA,EAEE53B,KAAKolB,iBAAiB8G,GACnBA,EAAGtrB,IAAMg3B,GAAM1L,EAAG/kB,MAAQywB,GAAM1L,EAAG9qB,OAASw2B,IACnD,GAJa,IAKnB,CASAE,kBAAkBnyB,GACf,IAAIumB,EAAK,IAAIqJ,EAAiB5vB,EAAQ3F,MAOtC,OANAksB,EAAG9pB,GAAG,aAAa,KAEhBpC,KAAKo2B,oBAAsBp2B,KAAKo2B,oBAAoBttB,QAChD8mB,GAAMA,EAAEhvB,IAAMsrB,EAAGtrB,IACpB,IAEGsrB,CACV,CAaAhmB,SAASP,EAAQV,GAEd,OAAOzF,EAAeu4B,SAASpyB,EAAQV,EAC1C,CAOA+yB,SAASryB,EAAQV,GACd,OAAO,IAAImwB,EAAQzvB,EAAQV,EAC9B,CAaAhF,QACG,MAAO,CAACoE,EAAKwO,EAASlN,EAAS,MAC5B,IAAIvE,EAAQiD,EAcZ,OAbIwO,IACG1F,MAAMC,QAAQyF,GACflN,EAASkN,EAETzR,EAAQyR,GAIdlN,EAAO1B,SAAQ,CAACmP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACdjS,EAAQA,EAAMmS,WAAWD,EAAKF,EAAE,IAG5BhS,CAAK,CAElB,CAWAskB,QAAQ5c,EAAS,MAAM,IACpB,OAAQ9I,KAAKi2B,aAAe,IAAIntB,OAAOA,EAC1C,CAQAiP,WAAW6f,GACR,OAAO53B,KAAK0lB,SAASL,GACXA,EAAEzkB,IAAMg3B,GAAMvS,EAAEle,MAAQywB,GAAMvS,EAAEjkB,OAASw2B,IAChD,EACN,CAUAK,UAAUtyB,GAiBP,OAdyB,GAArBA,EAAOuyB,WACC,IAAI7C,EAAiB1vB,EAAQ3F,MACX,GAArB2F,EAAOiD,WACJ,IAAI0sB,EAAe3vB,EAAQ3F,MACzB,IAAIwwB,EAAS7qB,EAAQ3F,KAWtC,CAEAm4B,aACG,OAAOn4B,KAAK+X,WAAW,uCAC1B,CAEAqgB,iBACG,OAAOp4B,KAAK+X,WAAW,uCAC1B,CAEAsgB,oBACG,OAAOr4B,KAAK+X,WAAW,uCAC1B,CAEAugB,wBACG,OAAOt4B,KAAK+X,WAAW,uCAC1B,CAEAwgB,aACG,OAAOv4B,KAAK+X,WAAW,uCAC1B,CAEAygB,cACG,OAAOx4B,KAAK+X,WAAW,uCAC1B,CAEA0gB,cACG,OAAOz4B,KAAK+X,WAAW,uCAC1B,CAEA2gB,aACG,OAAO14B,KAAK+X,WAAW,uCAC1B,CAaAuO,UAAUxd,EAAS,MAAM,IACtB,OAAQ9I,KAAKk2B,eAAiB,IAAIptB,OAAOA,EAC5C,CAQAqb,YAAYyT,GACT,OAAO53B,KAAKsmB,WAAWxE,GACbA,EAAElhB,IAAMg3B,GAAM9V,EAAE3a,MAAQywB,GAAM9V,EAAE1gB,OAASw2B,IAChD,EACN,CAUAe,WAAWhzB,GACR,OAAO,IAAI6vB,EAAU7vB,EAAQ3F,KAChC,CAYA44B,kBAAkBh4B,EAAI4lB,GACnB,IAAIqS,EAAU74B,KAAK4jB,eAAehjB,GAClC,GAAIi4B,EACD,OAAQA,EAAQj3B,MACb,KAAK6zB,EAAqBrxB,WAAWxC,KAClC,OAAO,IAAI6zB,EAAqBoD,EAASrS,EAASxmB,MAGrD,KAAK01B,EAActxB,WAAWxC,KAC3B,OAAO,IAAI8zB,EAAcmD,EAASrS,EAASxmB,MAG9C,QAEG,OAAO21B,EAAqBmD,QAAQD,EAASrS,EAASxmB,MAI/D,OAAO,IACV,CAYA+4B,oCAAoCC,EAASxS,GAC1C,IAAIyS,EAAa,KAEjB,OAAQD,EAAQp3B,MACb,IAAK,mBACFq3B,EAAa,IAAIxD,EAAqB,CAAC,EAAGjP,EAASxmB,MACnD,MAEH,IAAK,YACFi5B,EAAa,IAAIvD,EAAc,CAAC,EAAGlP,EAASxmB,MAC5C,MAEH,QACG,IAAIk5B,EAAavD,EAAqBwD,qBAAqBH,GACvDE,IACDD,EAAatD,EAAqBmD,QAC/BI,EACA1S,EACAxmB,OAWZ,OAHIi5B,GACDA,EAAWG,YAAYJ,GAEnBC,CACV,CAWA/R,QAAQpe,EAAS,MAAM,IACpB,OAAQ9I,KAAKm2B,aAAe,IAAIrtB,OAAOA,EAC1C,CAgBAuhB,UAAUuN,GACP,OAAO53B,KAAKknB,SAASC,GACXA,EAAEvmB,IAAMg3B,GAAMzQ,EAAEhgB,MAAQywB,GAAMzQ,EAAE/lB,OAASw2B,IAChD,EACN,CAQAyB,SAAS1zB,GACN,OAAO,IAAI+oB,EAAc/oB,EAAQ3F,KACpC,CAQAs5B,aAAa15B,EAAKC,GAIf,OAHID,GACD4I,QAAQ+G,MAAM,uCAEV,IAAIumB,EAAUl2B,GAAOI,KAAKu5B,KAAM15B,EAAQG,KAClD,CAQAmzB,iBAAiBtzB,EAAQsC,EAAU,CAAC,GACjC,OAAO,IAAIqc,EAAc3e,EAAQG,KAAMmC,EAC1C,CAOAq3B,iBAAiB7zB,GAId,OAHK3F,KAAKy5B,WACPz5B,KAAKy5B,SAAWz5B,KAAK63B,eAAe,CAAC,IAEjC73B,KAAKy5B,SAASnR,QAAQ3iB,EAAQ3F,KAAKy5B,SAC7C,CAiBArxB,SACGI,QAAQ+G,MACL,oEAEN,CASAmqB,YAAY/X,GACT,IAAIgY,EAAW,CAAC,EAmEhB,OAjEIhY,GACDxN,OAAOC,KAAKuN,GAAM1d,SAASoQ,IACxB,OAAQA,GACL,IAAK,QACFslB,EAASC,SAAWjY,EAAKtN,GAAGpP,OAAOrE,GACnC+4B,EAASjD,WAAa/U,EAAKtN,GAAGpP,OAAOkC,KACrCwyB,EAASE,QAAUlY,EAAKtN,GAAGzT,GAC3B+4B,EAASG,UAAYnY,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KAC9C,MAEH,IAAK,SACFwyB,EAASC,SAAWjY,EAAKtN,GAAGzT,GAC5B+4B,EAASjD,WAAa/U,EAAKtN,GAAGlN,KAC9B,MAEH,IAAK,iBACFwyB,EAASI,iBAAmBpY,EAAKtN,GAAGzT,GACpC+4B,EAASK,mBAAqBrY,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KACvD,IAAI8yB,EAAKtY,EAAKtN,GAAG4W,WACbgP,IACDN,EAASO,mBAAqBD,EAAGr5B,GACjC+4B,EAASQ,qBAAuBF,EAAG9yB,MAEtC,MAEH,IAAK,UACFwyB,EAASvV,UAAYzC,EAAKtN,GAAGzT,GAC7B+4B,EAASS,YAAczY,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KAChD,MAEH,IAAK,MACFwyB,EAASU,IAAM,CACZpY,MAAON,EAAKtN,GAAG4N,MACflL,SAAU4K,EAAKtN,GAAGimB,UAClBC,KAAM5Y,EAAKtN,GAAGmmB,OAEjB,MAEH,IAAK,OACE7Y,EAAKtN,GAAGmS,UACTmT,EAASvV,UAAYzC,EAAKtN,GAAGmS,QAAQ5lB,GACrC+4B,EAASS,YACNzY,EAAKtN,GAAGmS,QAAQplB,OAASugB,EAAKtN,GAAGmS,QAAQrf,MAE/CwyB,EAASc,OAAS9Y,EAAKtN,GAAGzT,GAC1B+4B,EAASe,SAAW/Y,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KAC7C,MAEH,IAAK,OACEwa,EAAKtN,GAAGtP,cACT40B,EAASgB,cAAgBhZ,EAAKtN,GAAGtP,YAAYnE,GAC7C+4B,EAASiB,gBACNjZ,EAAKtN,GAAGtP,YAAY3D,OAASugB,EAAKtN,GAAGtP,YAAYoC,MAEvDwyB,EAASkB,OAASlZ,EAAKtN,GAAGzT,GAC1B+4B,EAASmB,SAAWnZ,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KAC7CwyB,EAASoB,QAAUpZ,EAAKtN,GAAGhQ,IAC3B,MACH,QACGs1B,EAAStlB,GAAKsN,EAAKtN,GAEzB,IAICslB,CACV,oBCj8BH,IAAI91B,EAAS,CAAC,EAEQ,CACnB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGKI,SAAS+2B,IACtBn3B,EAAOm3B,EAAM52B,WAAWC,KAAO22B,CAAK,IAGvCv7B,EAAOC,QAAU,MAMduqB,mBACG,IAAIljB,EAAS,GACb,IAAK,IAAIC,KAAKnD,EACXkD,EAAOzC,KAAKT,EAAOmD,IAEtB,OAAOD,CACV,CASAkjB,kBAAkB5lB,GACf,OAAOR,EAAOQ,EACjB,CAOA4lB,gBAAgBtkB,EAAQV,GACrB,IAAIU,EAAOtB,IAgBR,MAPAmE,QAAQ2O,IAAI,WACZ3O,QAAQ2O,IAAI,WACZ3O,QAAQ+G,MAAM5J,GACd6C,QAAQ2O,MACR3O,QAAQ+G,MAAM,WACd/G,QAAQ+G,MAAMtK,GACduD,QAAQ2O,IAAI,WACN,IAAI7O,MACP,iDAAiD3C,EAAOwB,SAASxB,EAAOtB,mBAAmBY,EAAOkC,SAhBrG,IACG,OAAO,IAAItD,EAAO8B,EAAOtB,KAAKsB,EAAQV,EAKzC,CAJE,MAAOkD,GACNK,QAAQ2O,IAAI,QAAShP,GACrBK,QAAQ2O,IAAI,mBAAoBtT,GAChC2E,QAAQ2O,IAAI,kBAAmBxR,EAAOtB,IACzC,CAcN,oBC5FH,MAAM0e,EAAY,EAAQ,OAE1BtjB,EAAOC,QAAU,cAA0BqjB,EACxCpjB,YAAYqjB,EAAY/d,GACrBnF,MAAM,CAAC,SAAUmF,EAAOlD,IACxB/B,KAAKiF,OAASA,EAEdjF,KAAKiG,WAAW+c,EACnB,CAEA/c,WAAW+c,GAWRhjB,KAAKY,GAAKoiB,EAAWpiB,GACrBZ,KAAK4B,KAAO,QACZ5B,KAAKmH,KAAO6b,EAAW7b,KACvBnH,KAAKI,OAASyT,KAAK0D,MAAMyL,EAAW5iB,SAAU,GAG1C4iB,EAAWiY,WAAa9tB,MAAMC,QAAQ4V,EAAWiY,YAClDjY,EAAWiY,SAAW,CAACjY,EAAWiY,WAGrCj7B,KAAK+G,QAAUic,EAAWiY,UAAY,IAClC9sB,KAAKnH,IACH,IAAIpB,EAAQ5F,KAAKiF,OAAO8I,UAAU/G,GAWlC,OAVKpB,GACF5F,KAAKwP,KACF,UACA,SAASxP,KAAKmH,SAASnH,KAAKY,uCAAuCoG,KACnE,CACG+E,MAAO/L,KAAKY,GACZgF,MAAOoB,IAITpB,CAAK,IAEdkD,QAAQoyB,GAAQA,IAEM,GAAtBl7B,KAAK+G,OAAOZ,QACbnG,KAAKwP,KACF,UACA,SAASxP,KAAKmH,SAASnH,KAAKY,oCAC5B,CACGmL,MAAO/L,KAAKY,GACZu6B,kBAAmBnY,EAAWiY,UAAY,KAMnDn7B,MAAMmG,WAAW+c,EACpB,CAaAld,QACG,IAAIgI,EAAShO,MAAMgG,QAmBnB,OAjBAgI,EAAOlN,GAAKZ,KAAKY,GACjBkN,EAAOlM,KAAO,QACdkM,EAAO3G,KAAOnH,KAAKmH,KACnB2G,EAAO1N,OAASJ,KAAKI,OAGjBJ,KAAK+G,SAAWoG,MAAMC,QAAQpN,KAAK+G,UACpC/G,KAAK+G,OAAS,CAAC/G,KAAK+G,SAGvB+G,EAAOmtB,UAAYj7B,KAAK+G,QAAU,IAC9BoH,KAAKnH,GAEIA,EAAEpG,IAAMoG,IAEjB8B,QAAQoyB,GAAQA,IAEbptB,CACV,CAEIstB,gBAID,MAAO,GAHSp7B,KAAKiF,OAAOo2B,iBAGLr7B,KAAKmH,OAAO6L,QAAQ,KAAM,IAAI4jB,UAAU,EAAG,GACrE,CAEI0E,iBAGD,MAAO,GAFSt7B,KAAKo7B,UAAUxE,UAAU,EAAG,YAG/C,oBClGH,IAAI2E,EAAY,EAAQ,OACxB97B,EAAOC,QAAU,cAA4B67B,EAC1C57B,YAAY67B,EAAWz5B,GACpBjC,QACAE,KAAKy7B,SAAWD,GAAa,CAAC,SAI9Bx7B,KAAK+B,GAAKA,CAGb,CAcAkE,WAAW+c,GACRhjB,KAAK0kB,aAAe1B,EAAW0B,aAG3B1kB,KAAK0kB,aAEN1kB,KAAK07B,aAKJ17B,KAAKy7B,UAAY,IAAIx3B,SAAS2B,IACxBod,EAAWpd,KACZ5F,KAAK4F,GAASod,EAAWpd,GAC5B,GAGT,CAUA+1B,oBAAoB50B,EAAQpB,GACzBA,EAASA,GAAU,CAAC,EAEpB,IAAIuU,EAAQ,CAIT0hB,cAAe,MAOlB,OAJA70B,EAAO9C,SAAS+C,IACbkT,EAAMlT,GAAKrB,EAAOqB,IAAMA,CAAC,IAGrB,CAACkT,EACX,CAOA2hB,kBACG,MAAO,IACV,CAOA/1B,QAGG,OAFA9F,KAAK87B,cAEE,CACJpX,aAAc1kB,KAAK0kB,aAEzB,CAOA7P,eACG,OAAO7U,KAAK+B,GAAG+d,cAAc,CAC1Blf,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,KACXvF,KAAM5B,KAAK4B,KACX2f,KAAMvhB,KAAK8F,SAEjB,CAiBA41B,UAAU5jB,EAAKyJ,EAAMxa,EAAQoJ,EAAe,MACpC2H,IAAKA,EAAM9X,MACXuhB,IAAMA,EAAOvhB,MACb+G,IAAQA,EAAS/G,KAAKy7B,UAAY,IAElCla,EAAKmD,eACPnD,EAAKmD,aAAe,IAGS,iBAArBnD,EAAKmD,eACbnD,EAAKmD,aAAe7Q,KAAK0D,MAAMgK,EAAKmD,eAGvC,IAAIqX,EAAe5rB,GAAgBnQ,KAAK67B,kBAExC,GAAI90B,GAAUA,EAAOZ,OAAS,EAAG,CAG9B,IAAI61B,EAAQ,KACRrO,GAAQ,EAEZpM,EAAKmD,aAAazgB,SAAQ,SAAUg4B,GAC5BD,IAAOA,EAAQC,GAGhBA,EAAEL,eAAiBG,IACpBpO,GAAQ,EAGR5mB,EAAO9C,SAAQ,SAAU+C,GACV,MAARi1B,EAAEj1B,KAAY8Q,EAAI9Q,GAAKi1B,EAAEj1B,IAE7B8Q,EAAI9Q,GAAKi1B,EAAEj1B,IAAM,EACpB,IAEN,KAIK2mB,GAASqO,GAEXj1B,EAAO9C,SAAQ,SAAU+C,GACN,MAAZg1B,EAAMh1B,IAA0B,IAAZg1B,EAAMh1B,GAC3B8Q,EAAI9Q,GAAK,IAAI+0B,KAAgBC,EAAMh1B,KACjC8Q,EAAI9Q,GAAK,EACjB,GAEN,CACH,CAiBA80B,YAAYhkB,EAAKyJ,EAAMxa,GACf+Q,IAAKA,EAAM9X,MACXuhB,IAAMA,EAAOvhB,MACb+G,IAAQA,EAAS/G,KAAKy7B,UAAY,IAElCla,EAAKmD,eACPnD,EAAKmD,aAAe,IAGvB,IAAIqX,EAAe/7B,KAAK67B,kBAExB,GAAI90B,GAAUA,EAAOZ,OAAS,EAAG,CAC9B,IAAI+1B,GAAW,EAmBf,GAjBA3a,EAAKmD,aAAazgB,SAAQ,SAAUg4B,GAE7BA,EAAEL,eAAiBG,IAEpBh1B,EAAO9C,SAAQ,SAAU+C,GAGR,MAAV8Q,EAAI9Q,KACLi1B,EAAEj1B,GAAK8Q,EAAI9Q,GAEjB,IAEAk1B,GAAW,EAEjB,KAGKA,EAAU,CAEZ,IAAIC,EAAQ,CAAC,EAGbA,EAAMP,cAAgBG,EAEtBh1B,EAAO9C,SAAQ,SAAU2B,GACJ,MAAdkS,EAAIlS,KACLu2B,EAAMv2B,GAASkS,EAAIlS,GAEzB,IAEA2b,EAAKmD,aAAapgB,KAAK63B,EAC1B,CACH,CACH,cCpOH18B,EAAOC,QAAU,MACdC,YAAYsF,GAETjF,KAAKiF,OAASA,EACdjF,KAAK+B,GAAKkD,EAAOlD,GAEjB/B,KAAKo8B,OAAS,KACdp8B,KAAKq8B,MAAQ,KACbr8B,KAAKs8B,MAAQ,KACbt8B,KAAKu8B,OAAS,KAEdv8B,KAAKw8B,uBAAwB,EAC7Bx8B,KAAKy8B,gBAAkB,CAEvB,EACAz8B,KAAK08B,oBAAsB,GAC3B18B,KAAK28B,oBAAsB,KAG3B38B,KAAK48B,gBAAkB,CAAEv4B,IAAK,KAAMiL,QAAS,CAAC,EACjD,CAaAutB,WAAWx4B,GACRrE,KAAK48B,gBAAgBv4B,IAAMA,GAAO,IACrC,CAEAy4B,cAAcn3B,GACX3F,KAAK48B,gBAAgBttB,QAAU3J,GAAU,CAAC,CAC7C,CAIAo3B,wBAAwBp3B,GAErB,IAAI81B,EAAWz7B,KAAKiF,OAAO+3B,qBAEvBC,GAAkB,EAClBxB,EAASt1B,QACVs1B,EAASx3B,SAAQ,SAAU2B,GACH,MAAjBD,EAAOC,KACRq3B,GAAkB,EAExB,IAECA,IAEyB,MAAvBt3B,EAAO+e,mBACuB,IAAvB/e,EAAO+e,cACS,IAAvB/e,EAAO+e,eAEP/e,EAAO+e,aAAe,IAEzB1kB,KAAKiF,OAAO62B,YAAYn2B,EAAQA,EAAQ81B,GAE9C,CAEArjB,QAAQpB,EAAQpB,GAIb,OAHApN,QAAQ+G,MACL,+DAEIE,QAAQC,SAClB,CA2FAwtB,gBAAgBv3B,GACb,MAAO,CACJ2K,IAAKtQ,KAAKiF,OAAOk4B,UACjBvnB,OAAQjQ,EAEd,CAEAy3B,gBAAgBx8B,GACb,MAAO,CACJ0P,IAAKtQ,KAAKiF,OAAOo4B,YAAYz8B,GAEnC,CAEA08B,cAAcvP,GACX,MAAO,CACJzd,IAAKtQ,KAAKiF,OAAOk4B,UACjBvnB,OAAQmY,GAAQ,CAAC,EAEvB,CAEAwP,gBAAgB38B,EAAI+E,GACjB,MAAO,CACJ2K,IAAKtQ,KAAKiF,OAAOo4B,YAAYz8B,GAC7BgV,OAAQjQ,EAEd,CAMA8qB,MAAM1C,GACHA,EAAOA,GAAQ,CAAC,EAEhB,IAAInY,EAAS,CACVtF,IAAKtQ,KAAKiF,OAAOu4B,eACjB5nB,OAAQmY,GAEX,OAAO/tB,KAAKoY,QAAQ,MAAOxC,GACvBpB,MAAMipB,IACJ/tB,QAAQ+tB,EAAa,IAEvBhpB,OAAOtM,IAMLK,QAAQ+G,MAAMpH,EAAI,GAE3B,CAYAuoB,aAAa3C,GAEV,IAAIO,EAAKtuB,KAAKiF,OAAOqpB,KAEjBoP,EAAS3P,EAAKO,GAKlB,OAJIP,EAAKa,QACN8O,EAAS3P,EAAKa,MAAMN,IAGhB,IAAI7e,SAAQ,CAACC,EAASiH,KAC1B,IAAK+mB,EAAQ,CACV,IAAIC,EAAM,IAAIr1B,MACX,4CAA8CgmB,GAIjD,OAFAqP,EAAI5P,KAAOA,OACXpX,EAAOgnB,EAEV,CAGA,IAAIzjB,EAAQ,CACTxK,QAASA,EACTiH,OAAQA,GAEXuD,EAAMoU,GAAMoP,EAGZ19B,KAAK08B,oBAAoBp4B,KAAK4V,GAGzBla,KAAKw8B,wBAEHx8B,KAAK28B,qBACN5oB,aAAa/T,KAAK28B,qBAErB38B,KAAK28B,oBAAsBhoB,YAAW,KACnC3U,KAAK49B,qBAAqB,GAC1B,KACN,GAEN,CAMAA,sBACG59B,KAAKw8B,uBAAwB,EAC7B,IAAIqB,EAAiB79B,KAAK08B,oBAC1B18B,KAAK08B,oBAAsB,GAC3B,IAAIpO,EAAKtuB,KAAKiF,OAAOqpB,KAEjBwP,EAAe,CAEnB,EACI/P,EAAO,CAAEa,MAAO,CAAC,GACrBb,EAAKa,MAAMN,GAAM,GAEjB9lB,QAAQ2O,IACL,yCACG0mB,EAAe13B,OACf,aAEN03B,EAAe55B,SAASoG,IACrByzB,EAAazzB,EAAEikB,IAAOwP,EAAazzB,EAAEikB,KAAQ,GAC7CwP,EAAazzB,EAAEikB,IAAKhqB,KAAK+F,EAAE,IAG9B0jB,EAAKa,MAAMN,GAAMna,OAAOC,KAAK0pB,GAE7B99B,KAAKivB,QAAQlB,GAAMvZ,MAAM4F,IAElBjN,MAAMC,QAAQgN,EAAIvQ,OAASuQ,EAAIvQ,KAAK1D,QACrCiU,EAAIvQ,KAAK5F,SAAS4F,IAEXi0B,EAAaj0B,EAAKykB,KAGLwP,EAAaj0B,EAAKykB,IACxBrqB,SAASiW,KAEdxK,EADcwK,EAAMxK,SACZ,CAAE7F,KAAM,CAACA,IAAQ,WAGrBi0B,EAAaj0B,EAAKykB,KAEzB9lB,QAAQ+G,MACL,2EACA1F,EACAi0B,EAEN,IAMN,IAAIC,EAAU5pB,OAAOC,KAAK0pB,GACtBC,EAAQ53B,OAAS,GAClBqC,QAAQC,KACL,gCACGs1B,EAAQ53B,OACR,gCAGT43B,EAAQ95B,SAASI,KAEdqL,EADcouB,EAAaz5B,GAAKqL,SACxB,CAAE7F,KAAM,YACTi0B,EAAaz5B,EAAI,IAIvBrE,KAAK08B,oBAAoBv2B,OAAS,EAEnCnG,KAAK49B,sBAGL59B,KAAKw8B,uBAAwB,CAChC,GAEN,CAsCAwB,cAAcj3B,EAAQ8C,GAYnB,YAXmB,IAARA,IACHsD,MAAMC,QAAQrG,IAA4B,iBAAVA,IAClC8C,EAAO9C,EACPA,EAAS,KAIM,iBAAVA,IACRA,EAAS,CAACA,IAGN,IAAI0I,SAAQ,CAACC,EAASiH,KAE1B,IAAK9M,EAAKjJ,GAGP,YADA8O,EAAQ,MAIX,IAAIqe,EAAO,CAAC,EACZA,EAAK/tB,KAAKiF,OAAOqpB,MAAQzkB,EAAKjJ,GAC9BZ,KAAKivB,QAAQ,CAAEL,MAAOb,EAAMkQ,qBAAqB,IAC7CzpB,MAAM0pB,IACJ,GACIA,EAAQr0B,MACRsD,MAAMC,QAAQ8wB,EAAQr0B,OACA,GAAvBq0B,EAAQr0B,KAAK1D,OAHhB,CAUA,IAAIg4B,EAAQD,EAAQr0B,KAAK,GAGzB,GAAqB,GAAjB9C,EAAOZ,OAAa,CACrB,IAAI0D,EACDs0B,EACGp3B,EAAO,GAAGiM,QAAQ,gBAAiB,IAAM,cAE/C,OAAKnJ,GAEAsD,MAAMC,QAAQvD,KAAOA,EAAO,CAACA,SAElC6F,EAAQ7F,IAJU6F,EAAQ,GAM7B,CAGqB,GAAjB3I,EAAOZ,QACQnG,KAAKiF,OAAO8B,QAAQC,GAC1BA,EAAEZ,SAASa,WAEXhD,SAAS+C,IAChBD,EAAOzC,KAAK0C,EAAEF,WAAW,IAI/B,IAAIs3B,EAAa,CAAC,EAClBr3B,EAAO9C,SAASuyB,IACb4H,EAAW5H,GACR2H,EAAM3H,EAAQxjB,QAAQ,gBAAiB,IAAM,aAAa,IAGhEtD,EAAQ0uB,EAnCR,MAFG1uB,EAAQ,GAqCQ,IAErB+E,OAAOtM,IACLK,QAAQ+G,MAAM,0CAA2CpH,GACzDwO,EAAOxO,EAAI,GACZ,GAEX,CA0JAk2B,OAAO14B,GAIJ,IAAK,IAAItB,KAHTrE,KAAK+8B,wBAAwBp3B,GAGbA,EACM,MAAfA,EAAOtB,WAAqBsB,EAAOtB,GAG1C,IAAIuR,EAAS,CACVtF,IAAKtQ,KAAKiF,OAAOk4B,UACjBvnB,OAAQjQ,GAEX,OAAO3F,KAAKoY,QAAQ,MAAOxC,GACvBpB,MAAM3K,IAGJ7J,KAAKiY,cAAcpO,GAEZA,KAMT4K,OAAOtM,IACLK,QAAQ+G,MAAMpH,EAAI,GAE3B,CAQAymB,MAAMb,GAEH,OADA/tB,KAAKo8B,OAASrO,EACP/tB,IACV,CAQA2N,KAAKogB,GAEF,OADA/tB,KAAKq8B,MAAQtO,EACN/tB,IACV,CAMA0E,UAEG,OADA8D,QAAQ+G,MAAM,qDACPE,QAAQC,SAMlB,CAEAuI,cAAcpO,GAELA,aAAgBsD,QAAQtD,EAAO,CAACA,IAGtC,IAAIgc,EAAkB7lB,KAAKiF,OAAO6gB,gBAG9B2V,EAAWz7B,KAAKiF,OAAO+3B,qBAGvBsB,EACDt+B,KAAKiF,OAAO8B,QAAO,SAAUC,GAC1B,MAAgB,QAATA,EAAE3C,KAA0B,YAAT2C,EAAE3C,GAC/B,KAAM,GAGLk6B,EAAmBv+B,KAAKiF,OAAO8B,QAAQC,GAAe,aAATA,EAAE3C,MAEnDwF,EAAK5F,SAAS2rB,IACF,MAALA,IAGCA,EAAEhvB,IAA0B,MAApBZ,KAAKiF,OAAOqpB,OAAcsB,EAAEhvB,GAAKgvB,EAAE5vB,KAAKiF,OAAOqpB,OAG5DzI,EAAgB5hB,SAASV,IAEtB,IAAIwsB,EAAexsB,EAAEwsB,eAMrB,GAAuB,MAAnBH,EAAEG,GAAuB,OAIA,iBAAnBH,EAAEG,IACTH,EAAEG,GAAc5pB,OAAS,IAGzBypB,EAAEG,GAAgBlc,KAAK0D,MAAMqY,EAAEG,KAI9B5iB,MAAMC,QAAQwiB,EAAEG,IACjBH,EAAEG,GAAc9rB,SAAS2L,IAElBA,EAAE8U,cAAyC,iBAAlB9U,EAAE8U,eAE5B9U,EAAE8U,aAAe7Q,KAAK0D,MAAM3H,EAAE8U,cACjC,IAIHkL,EAAEG,GAAcrL,cACuB,iBAAhCkL,EAAEG,GAAcrL,eAGvBkL,EAAEG,GAAcrL,aAAe7Q,KAAK0D,MACjCqY,EAAEG,GAAcrL,eAKtB,IAAI8Z,EAAaj7B,EAAEqD,eAEhB43B,GACmB,MAAnBA,EAAWlQ,MACXsB,EAAEG,KACDH,EAAEG,GAAcnvB,KAGbgvB,EAAEG,GAAc9rB,QACjB2rB,EAAEG,GAAc9rB,SAASw6B,IAClBA,EAAQD,EAAWlQ,QACpBmQ,EAAQ79B,GAAK69B,EAAQD,EAAWlQ,MAAK,IAEnCsB,EAAEG,GAAcyO,EAAWlQ,QACnCsB,EAAEG,GAAcnvB,GAAKgvB,EAAEG,GAAcyO,EAAWlQ,QAItD,IAAIoQ,EAAkBF,EAAWxB,qBAC7B0B,EAAgBv4B,QACjBq4B,EAAW9C,UACR9L,EAAEG,GACFH,EAAEG,GACF2O,GAKD9O,EAAErsB,EAAEuD,cAAa8oB,EAAErsB,EAAEuD,YAAc8oB,EAAEG,GAAa,IAGtD0L,EAASt1B,QACVnG,KAAKiF,OAAOy2B,UAAU9L,EAAGA,EAAG6L,GAI/B6C,EAAWr6B,SAASwc,IACbmP,GAA2B,MAAtBA,EAAEnP,EAAK3Z,aAEoB,iBAAtB8oB,EAAEnP,EAAK3Z,cACC,QAAZ2Z,EAAKpc,IAGNurB,EAAEnP,EAAK3Z,YAAc9G,KAAK+B,GAAGof,MAAMhB,OAAOyP,EAAEnP,EAAK3Z,YAAa,CAC3DwZ,OAAQ,aACRD,YAAY,IAIfuP,EAAEnP,EAAK3Z,YAAc9G,KAAK+B,GAAGof,MAAMhB,OAAOyP,EAAEnP,EAAK3Z,aAI1D,IAGHy3B,EAAiBt6B,SAAS06B,IACvB/O,EAAE+O,EAAS73B,YAAc63B,EAASre,OAAOsP,EAAE,IAC5C,GAER,oBCxyBH,IAAIgP,EAAU,EAAQ,OAClB7b,EAAY,EAAQ,OAExB,MAAMhjB,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,MAAMm/B,UAAqB9b,EACzCpjB,YAAYqjB,EAAYjhB,GACrBjC,MAAM,CAAC,SAAUiC,GA6BjB/B,KAAKiG,WAAW+c,EACnB,CASAiH,oBACG,MAAO,QACV,CAMAhkB,WAAW+c,GA4BRhjB,KAAKY,GAAKoiB,EAAWpiB,GAIrBZ,KAAK4B,KAAOohB,EAAWphB,MAAQ,SAI/B5B,KAAK8+B,SAAW9b,EAAW8b,eAAY5U,EAKvClqB,KAAKmH,KAAO6b,EAAW7b,MAAQ,GAK/BnH,KAAK++B,YAAc/b,EAAW+b,aAAe,GAK7C/+B,KAAKg/B,cAAgBhc,EAAWgc,eAAiB,CAAC,EAGlDh/B,KAAKg/B,cAAcC,iBAAmBpa,SACnC7kB,KAAKg/B,cAAcC,kBAAoB,GAI1Cj/B,KAAK4I,WAAaic,SAAS7B,EAAWpa,YAAc,GAMpD5I,KAAKk4B,WAAarT,SAAS7B,EAAWkV,YAAc,GAUpDl4B,KAAKk/B,UAAYlc,EAAWkc,WAAa,GAMzCl/B,KAAKk/B,UAAYl/B,KAAKk/B,UAAUlsB,QAAQ,mBAAoB,IAE5DhT,KAAKm/B,kBAAoBnc,EAAWmc,mBAAqB,GAMzDn/B,KAAKo/B,gBAAkBpc,EAAWoc,iBAAmB,GAIrDp/B,KAAKq/B,QAAUrc,EAAWqc,SAAW,GAIrCr/B,KAAKijB,eAAiBD,EAAWC,oBAOA,IAAvBjjB,KAAKijB,gBACW,SAAvBjjB,KAAKijB,iBAELjjB,KAAKijB,gBAAiB,GAGzBjjB,KAAKs/B,eAAiBtc,EAAWsc,oBAMQ,IAA9Btc,EAAW4F,uBACiC,IAAzC5F,EAAW4F,gBAAgBrc,aACnCyW,EAAW4F,gBAAgBrc,WAAa,SACe,IAA/CyW,EAAW4F,gBAAgBC,mBACnC7F,EAAW4F,gBAAgBC,iBAAmB,SACO,IAA7C7F,EAAW4F,gBAAgB2W,iBACnCvc,EAAW4F,gBAAgB2W,eAAiB,SACO,IAA3Cvc,EAAW4F,gBAAgB4W,eACnCxc,EAAW4F,gBAAgB4W,aAAe,KAEhDx/B,KAAK4oB,gBAAkB5F,EAAW4F,iBAAmB,CAClDrc,WAAY,GACZsc,iBAAkB,GAClB0W,eAAgB,GAChBC,aAAc,IAQjB,IAAIz4B,EAAS,GACb/G,KAAKi7B,SAAWjY,EAAWiY,UAAY,GAMvCj7B,KAAKy/B,iBAAmBzc,EAAWyc,kBAAoB,GAKvDz/B,KAAKi7B,SAASh3B,SAASrD,IACpB,GAAKA,EAAL,CAEA,IAAI6gB,EAAMzhB,KAAK+B,GAAG6hB,eAAehjB,GAC7B6gB,EACD1a,EAAOzC,KAAKtE,KAAK+B,GAAGmE,SAASub,EAAKzhB,OAElCA,KAAKwP,KACF,UACA,KAAKxP,KAAKmH,6CAA6CvG,KACvD,CACGkX,IAAK9X,KAAKY,GACVgF,MAAOhF,GAXD,CAcf,IAEHZ,KAAK0/B,QAAU34B,EAGf/G,KAAK2/B,cAAc3c,EAAW4c,UAG9B9/B,MAAMmG,WAAW+c,EACpB,CAQA2c,cAAcC,GACX,IAAIC,EAAU,IACbD,GAAY,IAAI37B,SAASrD,IACvB,IAAI6gB,EAAMzhB,KAAK+B,GAAG6hB,eAAehjB,GAC7B6gB,EACDoe,EAAQv7B,KAAKtE,KAAK+B,GAAGi2B,SAASvW,EAAKzhB,OAEnCA,KAAKwP,KACF,UACA,KAAKxP,KAAKmH,6CAA6CvG,KACvD,CACGkX,IAAK9X,KAAKY,GACVmL,MAAOnL,GAGhB,IAEHZ,KAAK8/B,SAAWD,CACnB,CAuCA/5B,QAEG,IAAIgS,EAAMhY,MAAMgG,QAGZm1B,EAAWj7B,KAAK+G,SAASoH,KAAKnH,GAAMA,EAAEpG,KAGtCg/B,EAAW5/B,KAAK6/B,UAAU1xB,KAAKnH,GAAMA,EAAEpG,KAE3C,MAAO,CACJA,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,SACnBk9B,SAAU9+B,KAAK8+B,SACf33B,KAAMnH,KAAKmH,KACX43B,YAAa/+B,KAAK++B,YAClBC,cAAeh/B,KAAKg/B,eAAiB,CAAC,EACtCp2B,WAAY5I,KAAK4I,WACjBsvB,WAAYl4B,KAAKk4B,WACjBgH,UAAWl/B,KAAKk/B,UAEhBC,kBAAmBn/B,KAAKm/B,kBAExBC,gBAAiBp/B,KAAKo/B,gBAEtBC,QAASr/B,KAAKq/B,QAEdzW,gBAAiB5oB,KAAK4oB,gBACtB3F,eAAgBjjB,KAAKijB,eAErByB,aAAc5M,EAAI4M,aAClBuW,SAAUA,EACVwE,iBAAkBz/B,KAAKy/B,iBACvBG,SAAUA,EACVN,eAAgBt/B,KAAKs/B,eAE3B,CAcAS,cAGG,OAFoB//B,KAAK8lB,gBAEJ3X,KAAKnH,GAAMA,EAAEJ,gBACrC,CAcAG,OAAO2J,EAAK,MAAM,IACf,OAAO1Q,KAAK0/B,QAAQ52B,OAAO4H,EAC9B,CASA3C,UAAUnN,GACP,OAAOZ,KAAK+G,QAAQC,GAAMA,GAAGpG,IAAMA,IAAI,EAC1C,CAWAklB,cAAcpV,EAAK,MAAM,IACtB,OAAO1Q,KAAK+G,QAAQC,GAAMA,GAAKA,EAAEg5B,eAAcl3B,OAAO4H,EACzD,CAWAuvB,YAAYr/B,GACT,GAAKA,KAEqC,GAAtCZ,KAAKy/B,iBAAiBpyB,QAAQzM,IAC/BZ,KAAKy/B,iBAAiBn7B,KAAK1D,IAIhBZ,KAAK0/B,QAAQrT,MAAMrlB,GAAMA,EAAEpG,IAAMA,KACjC,CACX,IAAI6gB,EAAMzhB,KAAK+B,GAAG6hB,eAAehjB,GAC7B6gB,EACDzhB,KAAK0/B,QAAQp7B,KAAKtE,KAAK+B,GAAGmE,SAASub,EAAKzhB,OAExCA,KAAKwP,KACF,UACA,KAAKxP,KAAKmH,0CAA0CvG,KACpD,CACGkX,IAAK9X,KAAKY,GACVgF,MAAOhF,GAInB,CACH,CAaAsF,SAASP,GACN,OAAO3F,KAAK+B,GAAGmE,SAASP,EAAQ3F,KACnC,CAWAkgC,YAAYt6B,GACT,IAAIu6B,EAAUngC,KAAK0/B,QAAQv5B,OAW3B,OAVAnG,KAAK0/B,QAAU1/B,KAAK+G,QAAO,SAAUse,GAClC,OAAOA,EAAEzkB,IAAMgF,EAAMhF,EACxB,IAIAZ,KAAKy/B,iBAAmBz/B,KAAKy/B,iBAAiB32B,QAC1Cs3B,GAAQA,GAAOx6B,EAAMhF,KAGrBZ,KAAK0/B,QAAQv5B,OAASg6B,EAChBngC,KAAK4H,OAIR6H,QAAQC,SAClB,CAUA2wB,aAAaC,EAAUC,GAIpB,IAAIC,EAAY,KACZC,EAAO,EACX,IAAK,IAAIptB,EAAI,EAAGA,EAAIrT,KAAK0/B,QAAQv5B,OAAQkN,IACtC,GAAIrT,KAAK0/B,QAAQrsB,GAAGvM,YAAcw5B,EAAU,CACzCE,EAAYxgC,KAAK0/B,QAAQrsB,GACzBrT,KAAK0/B,QAAQvzB,OAAOkH,EAAG,GACvBotB,EAAOptB,EACP,KACH,CAKH,IAAK,IAAIqtB,EAAI,EAAGA,EAAI1gC,KAAK0/B,QAAQv5B,OAAQu6B,IACtC,GAAI1gC,KAAK0/B,QAAQgB,GAAG55B,YAAcy5B,EAAU,CAIrCE,GAAQC,GACTA,IAEH1gC,KAAK0/B,QAAQvzB,OAAOu0B,EAAG,EAAGF,GAC1B,KACH,CAGH,OAAOxgC,KAAK4H,MACf,CAWA+4B,UAAU/6B,GAEP,OADiB5F,KAAK+N,UAAUnI,EAAMhF,IAM/B6O,QAAQC,WAJZ1P,KAAK0/B,QAAQp7B,KAAKsB,GACX5F,KAAK4H,OAIlB,CAWAg5B,SAASh7B,GAEN,OADiB5F,KAAK+N,UAAUnI,EAAMhF,IAQ/B6O,QAAQC,WALZ1P,KAAK0/B,QAAQp7B,KAAKsB,GACX5F,KAAK4H,OAKlB,CAWAi5B,YAAYnwB,EAAK,MAAM,IACpB,OAAO1Q,KAAK+G,QAAQC,GAAMA,GAAc,SAATA,EAAE3C,MAAgByE,OAAO4H,EAC3D,CASAssB,qBACG,OAAOh9B,KAAK+G,QAAQC,GAAMA,GAAKA,EAAE85B,iBAAgB3yB,KAAKnH,GAAMA,EAAEF,YACjE,CAWA+4B,QAAQ/2B,EAAS,MAAM,IACpB,OAAO9I,KAAK8/B,SAASh3B,OAAOA,EAC/B,CASAi4B,UAAUngC,GACP,OAAOZ,KAAK6/B,SAAS74B,GAAMA,EAAEpG,IAAMA,IAAI,EAC1C,CASAogC,YAAYj1B,GACT,IAAIo0B,EAAUngC,KAAK8/B,SAAS35B,OAM5B,OALAnG,KAAK8/B,SAAW9/B,KAAK6/B,SAAQ,SAAUoB,GACpC,OAAOA,EAAIrgC,IAAMmL,EAAMnL,EAC1B,IAGIu/B,GAAWngC,KAAK8/B,SAAS35B,OACnBnG,KAAK4H,OAIR6H,QAAQC,SAClB,CASAwxB,UAAUn1B,GAEP,OADiB/L,KAAK+gC,UAAUh1B,EAAMnL,IAM/B6O,QAAQC,WAJZ1P,KAAK8/B,SAASx7B,KAAKyH,GACZ/L,KAAK4H,OAIlB,CAWAI,QACG,IAAIA,EAAQ,IAAI42B,EAAQ5+B,MAMxB,OAHAgI,EAAM60B,WAAWgC,EAAahC,cAC9B70B,EAAM80B,cAAc,CAAEl8B,GAAIZ,KAAKY,KAExBoH,CACV,CAWAm1B,UACG,MAAO,sBAAsBn9B,KAAKY,IACrC,CAOAugC,eACG,MAAO,4BAA4BnhC,KAAKY,IAC3C,CAOAy8B,YAAYz8B,GACT,MAAO,sBAAsBZ,KAAKY,MAAMA,GAC3C,CAOAwgC,aACG,MAAO,uBAAuBphC,KAAKY,UACtC,CAOAygC,iBACG,MAAO,oCAAoCrhC,KAAKY,IACnD,CAOA48B,eACG,MAAO,4BAA4Bx9B,KAAKY,IAC3C,CAKI0gC,0BAED,GAAIthC,KAAKuhC,eAAgB,CACtB,IAAIC,EAAWxhC,KAAKuhC,eAAeE,iBACnC,OAAID,EAAiBA,EAASj1B,WAClB,IACf,CAGG,OAAOvM,KAAK4oB,gBAAgBrc,UAElC,CAEI+0B,wBAAoBv6B,GAErB,GAAI/G,KAAKuhC,eAAgB,CACtB,IAAIC,EAAWxhC,KAAKuhC,eAAeE,iBAC/BD,IAAUA,EAASj1B,WAAaxF,EACvC,MAGG/G,KAAK4oB,gBAAgBrc,WAAaxF,CAExC,CAEI26B,gCAED,GAAI1hC,KAAKuhC,eAAgB,CACtB,IAAIC,EAAWxhC,KAAKuhC,eAAeE,iBACnC,OAAID,EAAiBA,EAAS3Y,iBAClB,IACf,CAGG,OAAO7oB,KAAK4oB,gBAAgBC,gBAElC,CAEI6Y,8BAA0B7Y,GAE3B,GAAI7oB,KAAKuhC,eAAgB,CACtB,IAAIC,EAAWxhC,KAAKuhC,eAAeE,iBAC/BD,IAAUA,EAAS3Y,iBAAmBA,EAC7C,MAGG7oB,KAAK4oB,gBAAgBC,iBAAmBA,CAE9C,CAEI8Y,8BACD,OAAO3hC,KAAK4oB,gBAAgB2W,cAC/B,CAEIoC,4BAAwB/gC,GACzBZ,KAAK4oB,gBAAgB2W,eAAiB3+B,CACzC,CAEIghC,4BACD,OAAO5hC,KAAK4oB,gBAAgB4W,cAAgB,EAC/C,CAEIoC,0BAAsB76B,GACvB/G,KAAK4oB,gBAAgB4W,aAAez4B,CACvC,CAOI86B,iBACD,OAAO7hC,KAAK4I,YAAc5I,KAAKk4B,UAClC,CASA4J,gBACG,IAAIn8B,EAAS,CAAC,EAKd,OAJA3F,KAAK+G,SAAS9C,SAAS+C,IACpBA,EAAE+6B,aAAap8B,EAAO,IAGlBA,CACV,CASAypB,cAGG,OADA5mB,QAAQC,KAAK,4CACN,CACV,CAYAkf,WAAWC,GAGR,OAFApf,QAAQ+G,MAAM,wBAEU,MAApBvP,KAAK+E,YAA4B,KAE9B/E,KAAK+E,YAAY8iB,UAAUD,GAAa5nB,KAAKY,EACvD,CAUAohC,SAASpa,GAGN,OAFApf,QAAQ+G,MAAM,wBAEPvP,KAAK2nB,WAAWC,GAAa,WACvC,CAQA0G,KACG,OAAOtuB,KAAKm/B,mBAAqB,MACpC,CAEA8C,aAAap4B,GACVrB,QAAQ2O,IACL,UAAYnX,KAAKmH,KAAO,yCACxB0C,EAEN,CAQAwqB,QAGG,IAEI6N,EAAWruB,KAAK0D,MAAM1D,KAAKC,UAAU9T,OAMzC,MARkB,CAAC,cAAe,WAItBiE,SAASk+B,IAClBD,EAASC,GAAQniC,KAAKmiC,EAAK,IAGvBD,CACV,CAGAE,YAAY9U,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAImO,EAAWz7B,KAAKg9B,qBACpBh9B,KAAK07B,UAAUpO,EAASA,EAASmO,GAEjC,IAAI4G,EAAYriC,KAAK++B,aAAe,GAGpC,IAAKsD,GAAariC,KAAK+G,SAASZ,OAAS,EAAG,CACzC,IAAIm8B,EAAetiC,KAAK+G,QAAQC,GAAMA,EAAEu7B,oBAAmB,GAC3D,GAAID,EAAcD,EAAY,IAAMC,EAAa1hC,GAAK,SAGnD,IAAKyhC,EAAUG,OAAQ,CACpB,IAAIxD,EAAgBh/B,KAAKg/B,eAAiB,CAAC,EAExCqD,EADCrD,GAAiBA,EAAcC,iBACpBl/B,EAAEi/B,EAAcyD,aAAe,cAG/B,GACTziC,KAAK+B,GAAGof,MAAMgB,OAAOmL,EAAQ1sB,IAAM,OAAS,KAC5C0sB,EAAQ1sB,IAEjB,CAEN,CAIA,IAAI8hC,EAASL,EAAUM,MAAM,cAc7B,GAZID,GAAUA,EAAOz+B,SAClBy+B,EAAOz+B,SAAS2+B,IACb,IAAIC,EAAiBD,EAAM5vB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDpN,EAAQ5F,KAAK+N,UAAU80B,GACd,MAATj9B,IAEJy8B,EAAYA,EAAUrvB,QAAQ4vB,EAAOh9B,EAAM0a,OAAOgN,IAAY,IAAG,KAKlE+U,EAAUG,OAAQ,CACpB,IAAIxD,EAAgBh/B,KAAKg/B,eAAiB,CAAC,EAExCqD,EADCrD,GAAiBA,EAAcC,iBACpBl/B,EAAEi/B,EAAcyD,aAAe,cAG/B,GAAGziC,KAAK+B,GAAGof,MAAMgB,OAAOmL,EAAQ1sB,IAAM,OAAS,KACxD0sB,EAAQ1sB,IAGjB,CAEA,OAAOyhC,CACV,oBC76BH,IAAI7R,EAAW,EAAQ,OACnBsS,EAAe,EAAQ,OAE3BrjC,EAAOC,QAAU,cAAgC8wB,EAC9C7wB,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAgDlB/B,KAAKgpB,SAAU,CAKlB,CAeAiB,oBACG,MAAO,OACV,CAQAhkB,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAK4B,KAAO,QAMZ5B,KAAK+iC,UAAY,CAAC,EAKlB/iC,KAAKujB,UAAY,GAKjBvjB,KAAK86B,SAAW9X,EAAW8X,UAAY,GAMvC96B,KAAKgjC,YAAYhgB,EAAWigB,OAAS,CAAC,GAGtCjjC,KAAK0/B,QAAU,KACf1/B,KAAKkjC,aAAalgB,EAAWjc,QAAU,IASvC/G,KAAK4uB,MAAQ5L,EAAW4L,OAAS,CAAC,EAG/B5uB,KAAK4uB,QACJ5uB,KAAK4uB,MAAM9F,MACZ9oB,KAAK4uB,MAAMzN,OACXnhB,KAAK4uB,MAAMzN,MAAMhb,OAAS,IAE1BnG,KAAK4uB,MAAM9F,KAAO,OAErB9oB,KAAKmjC,sBAAwBngB,EAAWogB,sBAAwB,CAAC,EAEjEpjC,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAE9B4c,GAAcA,EAAW5c,WAE1BpG,KAAKoG,SAASi9B,SAAWxvB,KAAK0D,MAC3ByL,EAAW5c,SAASi9B,WAAY,GAEnCrjC,KAAKoG,SAASk9B,WAAazvB,KAAK0D,MAC7ByL,EAAW5c,SAASk9B,aAAc,GAG3C,CAUAx9B,QACG,IAAIgI,EAAShO,MAAMgG,QAUnB,OARAgI,EAAOgtB,SAAW96B,KAAK86B,SAEvBhtB,EAAOm1B,MAAQjjC,KAAKujC,cACpBz1B,EAAO/G,OAAS/G,KAAKwjC,eACrB11B,EAAO8gB,MAAQ5uB,KAAK4uB,MAEpB9gB,EAAO1H,SAAWpG,KAAKoG,SAEhB0H,CACV,CAcAo1B,aAAaO,GACV,IAAIC,EAAY,IACfD,GAAiB,IAAIx/B,SAAS0/B,IAC5B,GAAiB,MAAbA,EAAmB,OAGvB,IAAI1+B,EAASjF,KAAK4jC,cAAcD,EAAU7U,OAa1C,IAVK7pB,GAAUjF,KAAK+B,KACjBkD,EAASjF,KAAK+B,GAAGgW,WAAW4rB,EAAU/J,UAGlC30B,IACDjF,KAAK6jC,SAAW7jC,KAAK6jC,UAAY,CAAC,EAClC7jC,KAAK6jC,SAASF,EAAU7U,OAAS7pB,KAIlCA,EAUF,YATAjF,KAAKwP,KACF,UACA,2CACGm0B,EAAU/J,8BACS/lB,KAAKC,UAAU6vB,KACrC,CACGA,cAMT,IAAI/9B,EAAQX,EAAO8I,UAAU41B,EAAU9J,SACvC,IAAKj0B,EAWF,YAVA5F,KAAKwP,KACF,UACA,yBAAyBvK,EAAOrE,4BAC7B+iC,EAAU9J,6BACShmB,KAAKC,UAAU6vB,KACrC,CACG1+B,OAAQA,EAAOa,QACf69B,cAMJ3jC,KAAK8jC,eAAel+B,IACtB5F,KAAKwP,KACF,UACA,SAAS5J,EAAMhF,kCAAkCiT,KAAKC,UACnD6vB,mCAEH,CACG/9B,MAAOA,EAAME,QACb69B,cAMT,IAAII,EACDL,EAAU56B,QACN9B,GACEA,EAAE8nB,OAAS6U,EAAU7U,OAAS9nB,EAAEpB,MAAMhF,IAAM+iC,EAAU9J,UAC1D1zB,OAAS,EAkBd,GAhBK49B,GACF/jC,KAAKwP,KACF,UACA,SACGm0B,EAAU9J,uCACmBhmB,KAAKC,UAClC6vB,qBAEH,CACG/9B,MAAOA,EAAME,QACb69B,cAML/9B,GAAS5F,KAAK8jC,eAAel+B,IAAUm+B,EAAO,CAG/C,IAAItiB,EAAM7b,EAAME,QAChB,IAAIk+B,EAAc,IAAIp+B,EAAMjG,YAAY8hB,EAAK7b,EAAMX,QAEnD++B,EAAYlV,MAAQ6U,EAAU7U,MAE9B,IAAIA,EAAQ6U,EAAU7U,MAClB3hB,MAAMC,QAAQpN,KAAKijC,WAEpBnU,EAAQlpB,EAAMX,OAAOkC,MAGxBu8B,EAAUp/B,KAAK,CACZwqB,MAAOA,EACPlpB,MAAOo+B,GAEb,KAEHhkC,KAAK0/B,QAAUgE,CAClB,CAOAF,eACG,IAAIS,EAAa,GAQjB,OAPAjkC,KAAK0/B,QAAQz7B,SAAS0/B,IACnBM,EAAW3/B,KAAK,CACbwqB,MAAO6U,EAAU7U,MACjB8K,SAAU+J,EAAU/9B,MAAMX,OAAOrE,GACjCi5B,QAAS8J,EAAU/9B,MAAMhF,IAC1B,IAEEqjC,CACV,CAUAl9B,OAAO2J,EAAK,MAAM,IAEf,OADKA,IAAIA,EAAK,KAAM,GACb1Q,KAAK0/B,QAAQvxB,KAAKnH,GAAMA,EAAEpB,QAAOkD,OAAO4H,EAClD,CAaAuyB,QACG,OAAOjjC,KAAKkkC,QAAU,CAAC,CAC1B,CASAxe,QAAQhV,EAAK,MAAM,IAIhB,OAAO1Q,KAAK+B,GAAG2jB,SAASL,GAAMrlB,KAAKujB,UAAUlW,QAAQgY,EAAEzkB,KAAO,IAAGkI,OAC9D4H,EAEN,CASAqe,YAAY/W,GACT,IAAIlK,EAAS,KAQb,OANAqG,OAAOC,KAAKpU,KAAK+iC,WAAa,CAAC,GAAG9+B,SAAS6qB,IACnChhB,GAAU9N,KAAK+iC,UAAUjU,IAAU9W,IACrClK,EAASghB,EACZ,IAGIhhB,CACV,CAQAq2B,aACG,OAAKnkC,KAAKkkC,OAAOtK,UAEV55B,KAAK+B,GAAGgW,WAAW/X,KAAKkkC,OAAOtK,WAFJ,IAGrC,CASAgK,cAAc9U,GACX,IAAIsV,EAAQpkC,KAAK+iC,UAAUjU,GAC3B,OAAIsV,EACMpkC,KAAK0lB,SAASL,GAAMA,EAAEzkB,IAAMwjC,IAAO,GAEtC,IACV,CASArsB,WAAWqsB,GACR,OAAIA,EACMpkC,KAAK0lB,SAASL,GAAMA,EAAEzkB,IAAMwjC,IAAO,GAEtC,IACV,CASAC,MAAMv7B,EAAS,MAAM,IAClB,OAAQ9I,KAAKskC,QAAU,IAAIx7B,OAAOA,EACrC,CASAk6B,YAAY58B,GAETpG,KAAKkkC,OAASlkC,KAAK+B,GAAG2D,UAAUU,GAEhC,IAAIm+B,EAAkB,CAAC,EAKnBC,EAAW,GAIf,IAAIC,EAAc,CAACx/B,EAAQ6pB,KACnB7pB,IAMLjF,KAAK+iC,UAAUjU,GAAS7pB,EAAOrE,GAC/B2jC,EAAgBt/B,EAAOrE,IAAMqE,EAAOrE,GAAE,EAQrC8jC,EAAcL,KACdA,GAAS,IAAIpgC,SAAS0gC,IAGpBH,EAASlgC,KAAKqgC,EAAK,GAEpB,EAGDC,EAAc,CAACC,EAAY5B,KACvB4B,IAEJ5B,GAAS,IAAIh/B,SAAS0gC,IAkBpB,IAAIG,EAAYD,EAAW92B,UAAU42B,EAAK9K,SAC1C,GAAKiL,EAAL,CAQA,IAAIn+B,EAAa3G,KAAK+B,GAAGgW,WAAW+sB,EAAU1+B,SAASO,YAClDA,GAWL89B,EAAY99B,EAAYg+B,EAAK7V,OAE7B4V,EAAWC,EAAKN,OAEhBO,EAAYj+B,EAAYg+B,EAAKN,QAd1BrkC,KAAKwP,KACF,UACA,mDACA,CACGm1B,QATT,MAJG3kC,KAAKwP,KAAK,UAAW,kCAAmC,CACrDm1B,QAsB6B,GACpC,EAQL,IAAII,EAAa/kC,KAAKmkC,aACjBY,GAQLN,EAAYM,EAAY,eAExBL,EAAWt+B,EAASi+B,OAEpBO,EAAYG,EAAY3+B,EAASi+B,OAGjCrkC,KAAKskC,OAASE,EACdxkC,KAAKujB,UAAYpP,OAAOC,KAAKmwB,IAd1BvkC,KAAKwP,KAAK,UAAW,oCAAqC,CACvDoqB,SAAU55B,KAAKkkC,QAAQtK,UAchC,CAOA2J,cACG,OAAOvjC,KAAK+B,GAAG2D,UAAU1F,KAAKkkC,QAAU,CAAC,EAC5C,CAWAl8B,QACG,IAAIA,EAAQ,IAAI86B,EAAa9iC,MAM7B,OAHAgI,EAAM60B,WAAW78B,KAAKL,YAAYk9B,cAClC70B,EAAM80B,cAAc,CAAEl8B,GAAIZ,KAAKY,KAExBoH,CACV,CASAg9B,gBAAgB//B,GACb,QAAKA,GAIFjF,KAAK0lB,SAAS5N,GACJA,EAAIlX,IAAMqE,EAAOrE,KACxBuF,OAAS,CAElB,CASA29B,eAAel+B,GACZ,IAAKA,EAAO,OAAO,EAGnB,IAAIX,EAASW,EAAMX,OAKnB,IAAIggC,EAAer/B,EAAMgB,eAEzB,OAAO5G,KAAKglC,gBAAgB//B,IAAWjF,KAAKglC,gBAAgBC,EAC/D,CAYAtd,WAAWC,GAIR,OAHApf,QAAQ+G,MACL,sEAEIvP,KAAK+E,YAAYgjB,SAASH,GAAa5nB,KAAKY,EACtD,CAOI6jB,cACD,OAAOzkB,KAAKoG,SAASi9B,WAAY,CACpC,CAOIxB,iBACD,OAAO,CACV,CAQAqD,aACG,OAAOllC,KAAKmlC,WAAY,CAC3B,CAEIzD,gCACD,IAAI7Y,EAAmB/oB,MAAM4hC,0BAS7B,OAPuB,MAApB7Y,GAC0B,MAA1BA,EAAiB1H,OAChB0H,EAAiB1H,MAAMhb,SAExB0iB,EAAmB7oB,KAAK4uB,OAGpB/F,CACV,oBClqBH,IAAI9F,EAAY,EAAQ,OACxB,MAAMqiB,EAAU,EAAQ,OAExB3lC,EAAOC,QAAU,cAA4BqjB,EAC1CpjB,YAAYqjB,EAAYjhB,GACrBjC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAKiG,WAAW+c,GAGhBhjB,KAAKkJ,WAAWjF,SAASoG,IACtBA,EAAEg7B,gBAAgB,GAExB,CASAp/B,WAAW+c,GASRhjB,KAAKY,GAAKoiB,EAAWpiB,GACrBZ,KAAKmH,KAAO6b,EAAW7b,MAAQ,GAC/BnH,KAAK4B,KAAOohB,EAAWphB,MAAQ,UAC/B5B,KAAKslC,cAAgBtiB,EAAWsiB,eAAiB,KAGjD,IAAIC,EAAevlC,KAAKwlC,WAAa,CAAC,EACtCxlC,KAAKwlC,UAAY,CAAC,GACjBxiB,EAAWyiB,YAAc,IAAIxhC,SAASyhC,IACpC,IAAIC,EAAM3lC,KAAK+B,GAAG62B,kBAAkB8M,EAAK1lC,MACrC2lC,EACD3lC,KAAKwlC,UAAUE,GAAOC,EAIlBJ,EAAaG,GACd1lC,KAAKwlC,UAAUE,GAAOH,EAAaG,GAEnC1lC,KAAKwP,KACF,UACA,KAAKxP,KAAKmH,sDAAsDu+B,KAChE,CAAElf,QAASxmB,KAAKY,GAAI8kC,OAG7B,IAGH1lC,KAAK4lC,aAAe5iB,EAAW6iB,aAAe,CAAC,EAE/C/lC,MAAMmG,WAAW+c,GAGZhjB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAQArB,QAEQ9F,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAQjB,IAAK,IAAIuE,IANU,CAAC,KAAM,OAAQ,iBACrBpG,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGpB6C,EAAK47B,WAAa,GACJzlC,KAAKwlC,UAGhB37B,EAAK47B,WAAWnhC,KACbtE,KAAKwlC,UAAUn7B,GAAGzJ,IAAMZ,KAAKwlC,UAAUn7B,GAAGy7B,WAWhD,OAPAj8B,EAAKg8B,YAAc7lC,KAAK4lC,aAOjB/7B,CACV,CAWAk8B,kBACG,OAAO/lC,KAAKslC,aACf,CAOAU,WACGhmC,KAAKslC,cAAgB,saACkWtlC,KAAKY,8gBAc/X,CAQAqlC,YAAYC,GACTlmC,KAAKslC,cAAgBY,CACxB,CAcAL,YAAYn1B,GAQT,OAPKA,IACFA,EAAK,KACK,GAEQyD,OAAOC,KAAKpU,KAAK4lC,cAAcz3B,KAAK9D,GAC/CrK,KAAK4lC,aAAav7B,KAENvB,OAAO4H,EAChC,CAQAy1B,uBAAuBC,GACpB,OAAOpmC,KAAK6lC,aAAa5J,GACfA,EAAEr7B,IAAMwlC,IACf,EACN,CAQAC,oBAAoBD,GACjB,OAAOpmC,KAAK6lC,aAAatiC,GACfA,EAAE+iC,IAAMF,GAErB,CAQAG,oBAAoBH,GACjB,OAAOpmC,KAAK6lC,aAAatiC,GACfA,EAAEijC,MAAQJ,GAEvB,CAQAK,iBAAiBzN,UACPh5B,KAAK4lC,aAAa5M,EAAQp4B,GACpC,CAcA8lC,wBAAwB1N,GACrB,IAAI2N,EAAK3N,EAAQ4N,eACbJ,EAAO,KACPG,EAAGE,YACJL,EAAOG,EAAGE,UAAUjmC,IAGvB,IAAI0lC,EAAK,KAWT,OAVIK,EAAGG,YACJR,EAAKK,EAAGG,UAAUlmC,IAGJ,CACdA,GAAIo4B,EAAQp4B,GACZgB,KAAMo3B,EAAQp3B,KACd4kC,KAAMA,EACNF,GAAIA,EAGV,CAQAS,iBAAiB/N,GACd,IAAIgO,EAAahnC,KAAK0mC,wBAAwB1N,GAC1CgO,EAAWR,MAAQQ,EAAWV,IAAMtN,EAAQjkB,OAC7C/U,KAAK4lC,aAAaoB,EAAWpmC,IAAMomC,EAInChnC,KAAKymC,iBAAiBzN,EAE5B,CAUA9vB,SAASwH,EAAK,MAAM,IAIjB,OAHkByD,OAAOC,KAAKpU,KAAKwlC,WAAWr3B,KAAK9D,GACzCrK,KAAKwlC,UAAUn7B,KAENvB,OAAO4H,EAC7B,CAQAu2B,WAAWjO,GACRh5B,KAAKwlC,UAAUxM,EAAQp4B,IAAMo4B,EAAQ8M,WAAa9M,CACrD,CAQAkO,YAAYtmC,GACT,OAAOZ,KAAKwlC,UAAU5kC,IAAO,IAChC,CAQAumC,oBAAoBf,GACjB,OAAOpmC,KAAKkJ,UAAU+yB,GACZA,EAAE6J,WAAaM,IACtB,EACN,CASAgB,cAAc3lB,UACJzhB,KAAKwlC,UAAU/jB,EAAI7gB,IAAM6gB,EAAIqkB,UACvC,CASAuB,cAAchjC,GACX,OAAsC,MAA/BrE,KAAKsnC,kBAAkBjjC,EACjC,CASAkjC,mBAAmBC,GAChB,IAAIt+B,EAAW,GAYf,OAXsBlJ,KAAK6lC,aAAatiC,GAC9BA,EAAEijC,MAAQgB,EAAY1B,YAEhB7hC,SAASV,IACtB,IAAIy1B,EAAUh5B,KAAKkJ,UAAUmB,GACnBA,EAAEy7B,WAAaviC,EAAE+iC,KACxB,GACCtN,GACD9vB,EAAS5E,KAAK00B,EACjB,IAEI9vB,CACV,CASAu+B,uBAAuBD,GACpB,IAAIt+B,EAAW,GAYf,OAXsBlJ,KAAK6lC,aAAatiC,GAC9BA,EAAE+iC,IAAMkB,EAAY1B,YAEd7hC,SAASV,IACtB,IAAIy1B,EAAUh5B,KAAKkJ,UAAUmB,GACnBA,EAAEy7B,WAAaviC,EAAEijC,OACxB,GACCxN,GACD9vB,EAAS5E,KAAK00B,EACjB,IAEI9vB,CACV,CAUAw+B,YAAYF,EAAa5xB,GAStB,IAAI+xB,EAAa3nC,KAAK4nC,iBAAiBJ,GACnC7hC,EAASkiC,EAAmBF,EAAY,cAAe/xB,EAAQ5V,MACnE,OAAO2F,EAAOQ,OAAS,EAClBR,EAAOQ,OAAS,EACbR,EACAA,EAAO,GACV,IACR,CAYAmiC,kBAAkBN,GACf,IAAIG,EAAa3nC,KAAK4nC,iBAAiBJ,GAEnCzgC,EAAS8gC,EACVF,EACA,oBACA,KACA3nC,MAEH,OAAO+G,EAAOZ,OAAS,EAAIY,EAAS,IACvC,CAWAghC,oCAAoCC,EAAMC,GACjBjoC,KAAK6lC,aAAatiC,GAC9BA,EAAE+iC,IAAM0B,EAAKxB,OAGPviC,SAASV,IACjB0kC,EAAS1kC,EAAE3C,MACbqnC,EAAS1kC,EAAE3C,IAAM2C,EACjBvD,KAAK+nC,oCAAoCxkC,EAAG0kC,GAC/C,GAEN,CACAC,iCAAiCV,GAC9B,IAAIW,EAAkBnoC,KAAK6lC,aAAatiC,GAC9BA,EAAE+iC,IAAMkB,EAAY1B,YAE1BmC,EAAW,CAEf,EAYA,OATAE,EAAgBlkC,SAASV,IACtB0kC,EAAS1kC,EAAE3C,IAAM2C,EACjBvD,KAAK+nC,oCAAoCxkC,EAAG0kC,EAAS,IAOjD9zB,OAAOC,KAAK6zB,GAAU95B,KAAKkG,GAAM4zB,EAAS5zB,IACpD,CAEAuzB,iBAAiBJ,GACd,IAGIY,EAHAC,EAAY,CAAC,EAiBjB,OAfGroC,KAAKkoC,iCAAiCV,GAElBvjC,SAAS+jC,KAE7BI,EAAOpoC,KAAKmnC,oBAAoBa,EAAK1B,OAC3B+B,EAAUD,EAAKxnC,IAAMwnC,IAE/BA,EAAOpoC,KAAKmnC,oBAAoBa,EAAKxB,SAC3B6B,EAAUD,EAAKxnC,IAAMwnC,EAAI,IAGrBj0B,OAAOC,KAAKi0B,GACzBl6B,KAAKkG,GAAMg0B,EAAUh0B,KACrBvL,QAAQmzB,GAAMA,EAAEr7B,IAAM4mC,EAAY5mC,IAGzC,CAUA0nC,mBAAmBd,GAChB,IAAIG,EAAa3nC,KAAKynC,uBAAuBD,GACzCzgC,EAAS8gC,EACVF,EACA,qBACA,KACA3nC,MAEH,OAAO+G,EAAOZ,OAAS,EAAIY,EAAS,IACvC,CAQAugC,kBAAkBjjC,GAIf,OAHcrE,KAAKkJ,UAAU+yB,GACnBA,EAAEsM,YAAclkC,IACvB,IAIO,IAEb,GAsCH,IAAIwjC,EAAqB,CACtB59B,EACA+M,EACAwxB,EACAhiB,EACAiiB,EACAC,KAUA,QANwB,IAAbD,IACRA,EAAY,SAEY,IAAhBC,IACRA,EAAe,IAEC,GAAfz+B,EAAK9D,OACN,OAAOsiC,EAGP,IAAIL,EAAOn+B,EAAKsK,QAGhB,IAA6C,GAAzCm0B,EAAar7B,QAAQ+6B,EAAKtC,WAAkB,CAE7C4C,EAAapkC,KAAK8jC,EAAKtC,WAGvB,IAAInjC,EAAQylC,EAAKpxB,GAAQ2xB,MAAMP,EAAMI,GACvB,OAAV7lC,IAAgBA,EAAQ,IAC5B8lC,EAAYrD,EAAQqD,EAAW9lC,GAG/BsH,EAAOm7B,EAAQn7B,EAAMuc,EAAQihB,uBAAuBW,GACvD,CAGA,OAAOP,EACJ59B,EACA+M,EACAwxB,EACAhiB,EACAiiB,EACAC,EAEN,mBClmbD,EAAS3kC,SAASmP,IACXA,EAAE01B,SAASC,SACZ31B,EAAIA,EAAE01B,SAETD,EAAMz1B,EAAE21B,SAAS1kC,KAAO+O,CAAC,IAG5B3T,EAAOC,QAAU,MAMduqB,gBAAgBvZ,EAAK,MAAM,IACxB,IAAI+V,EAAQ,GACZ,IAAK,IAAIrT,KAAKy1B,EAAO,CAClB,IAAIG,EAAIH,EAAMz1B,GACV1C,EAAGs4B,IACJviB,EAAMniB,KAAK0kC,EAEjB,CACA,OAAOviB,CACV,CAOAwD,eAAetkB,EAAQZ,EAAagQ,GAQjC,GAPAA,EAASA,GAAU,KAED,qBAAdpP,EAAOtB,MACRsB,EAAOtB,IAAM,iBAIZsB,EAAOtB,IACR,OAAKwkC,EAAMljC,EAAOtB,KASX,IAAIwkC,EAAMljC,EAAOtB,KAAKsB,EAAQZ,EAAagQ,IAR/CvM,QAAQ+G,MACL,WACG5J,EAAOtB,IACP,+CAEC,IAAIwkC,EAAY,KAAEljC,EAAQZ,EAAagQ,IAKjD,IAAI5M,EAAM,IAAIG,MAAM,qBAAqB3C,EAAOtB,QAOhD,OANAmE,QAAQ+G,MAAMpH,GACdK,QAAQ+G,MAAM,CACXA,MAAOpH,EACPxC,OAAQA,EACRZ,YAAaA,IAET,IAEb,CAEAklB,iBAAiB5lB,GACd,GAAIwkC,EAAMxkC,GACP,OAAOwkC,EAAMxkC,GAEhBmE,QAAQ+G,MAAM,oBAAoBlL,KAErC,oBC9IH,MAAM9E,EAAc,EAAQ,MAM5B,SAAS0pC,EAAY3b,EAAS1nB,GAC3B,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMkB,WAAY,OAAO,KAC9B,MAAMA,EAAalB,EAAMkB,WAEzB,IAAInE,EAAQ,KAEZ,GAAImE,EAAWuG,QAAQ,MAAQ,EAAG,CAC/B,IAAImpB,EAAU1vB,EAAW0gB,MAAM,KAAK,GACpC7kB,EAAQ2qB,EAAQxmB,IAAewmB,EAAQkJ,EAC1C,MACG7zB,EAAQ2qB,EAAQxmB,GAGnB,QAAoB,IAATnE,EACR,OAAOA,EAKV,IAAK,MAAM0R,KAAKiZ,EAAS,CACtB,MAAMjpB,EAAMgQ,EAAEmT,MAAM,KAAK,GACrBnjB,GAAOA,GAAOuB,EAAMhF,KACrB+B,EAAQ2qB,EAAQjZ,GAEtB,CACA,OAAO1R,CACV,CA2BAlD,EAAOC,QAAU,cAAgCH,EAC9CI,YAAYE,EAAQkC,GACjBlC,EAASA,GAAU,yBAED,IAAPkC,GACRyG,QAAQ+G,MAAM,oDAGjBzP,MAAM,KAAMD,EAAQkC,GAEpB/B,KAAK4S,QAAU,CAAEhC,SAAU,MAC3B5Q,KAAKqM,UAAY,CAAC,EAClBrM,KAAKkpC,UAAY,CAAC,EAGlBlpC,KAAKmpC,aAAe,GACpBnpC,KAAKopC,QAGWppC,KAAKwB,OAAS,CAC3BgC,UAAW,CACRnB,SAAU,QAGbgnC,eAAgB,SAAUh7B,GACvB,MAAMi7B,EAAMC,SAASC,cAAc,OAGnC,OAFAF,EAAIG,UAAYp7B,EAETi7B,EAAII,aAAeJ,EAAIK,WAAa,EAC9C,EAQN,CAEArmC,KAAKnB,GACEA,GAASynC,iBACV5pC,KAAKqM,UAAUu9B,eAAiBznC,EAAQynC,eAE9C,CAQArkC,QAAQ+nB,GACL,MAAM4b,EAAYlpC,KAAKkpC,UACjB1nC,EAASxB,KAAKwB,OAGpB,GACgB,MAAb0nC,GACmB,MAAnBA,EAAU/nB,OACgB,GAA1B+nB,EAAU/nB,MAAMhb,OAEhB,OAAO,EAEV,GAAe,MAAXmnB,EAAiB,OAAO,EAE5B,IAAIxf,EAA4B,QAAnBo7B,EAAUpgB,KAiFvB,OA/EAogB,EAAU/nB,MAAMld,SAAS6E,IACtB,IAAKA,EAAOzE,MAAQyE,EAAOkmB,KAAM,OAEjC,MAAM2U,GAAa3jC,KAAKopC,SAAW,IAAItgC,QACnC9B,GAAMA,EAAEpG,IAAMkI,EAAOzE,MACvB,GAEF,IAAKs/B,EAAW,OAEhB,IAAIkG,EAAa,KAIbC,EAAgBnG,EAAUt/B,SAEF,IAAjBs/B,EAAUt/B,MACE,eAAhBs/B,EAAU/iC,IACX+iC,EAAUt/B,IAAM,eAChBylC,EAAgBnG,EAAUt/B,KACtBylC,EAAgB,eAG1B,IAAInnC,EAAQ,KAQZ,OALGA,EADCghC,EAAU5T,aApHvB,SAA8BzC,EAAS1nB,GACpC,IAAImkC,EAAe,GAEnB,GAAIzc,EAAS,CACV,IAAIyC,EAAenqB,EAAMmqB,eACzB,GAAIzC,EAAQyC,GACTga,GACInkC,EAAMyB,WACFimB,EAAQyC,GAAcnqB,EAAMyB,WAAWP,YACvC,QACJlB,EAAM0B,YACFgmB,EAAQyC,GAAcnqB,EAAM0B,YAAYR,YACxC,OACLwmB,EAAQyC,GAAcnvB,IACtB0sB,EAAQyC,OACP,CACJ,IAAIia,EAAWf,EAAY3b,EAAS1nB,GACpB,MAAZokC,IACDD,EAAeC,EAErB,CACH,CACA,OAAOD,CACV,CA8FoBE,CAAqB3c,EAASqW,GAE9BsF,EAAY3b,EAASqW,GAGxBmG,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACW,MAATnnC,IAAeA,EAAQ,IAE3BknC,EAAa7pC,KAAKkqC,UAAUvnC,EAAOmG,EAAOkmB,KAAMlmB,EAAOnG,OACvD,MACH,IAAK,OACL,IAAK,WACFknC,EAAa7pC,KAAKmqC,UAAUxnC,EAAOmG,EAAOkmB,KAAMlmB,EAAOnG,OACvD,MACH,IAAK,SACFknC,EAAa7pC,KAAKoqC,YAAYznC,EAAOmG,EAAOkmB,KAAMlmB,EAAOnG,OACzD,MACH,IAAK,OACFknC,EAAa7pC,KAAKqqC,UAAU1nC,EAAOmG,EAAOkmB,KAAMlmB,EAAOnG,OACvD,MACH,IAAK,UACFknC,EAAa7pC,KAAKsqC,aAAa3nC,EAAOmG,EAAOkmB,KAAMlmB,EAAOnG,OAC1D,MACH,IAAK,OACFknC,EAAa7pC,KAAKuqC,UAAU5nC,EAAOmG,EAAOkmB,KAAMlmB,EAAOnG,OACvD,MACH,IAAK,eACL,IAAK,gBACFknC,EAAa7pC,KAAKwqC,kBACfld,EACAqW,EACA76B,EAAOkmB,KACPlmB,EAAOnG,OAEV,MACH,IAAK,cACFknC,EAAaroC,EAAOipC,gBACjBnd,EACAxkB,EAAOkmB,KACPlmB,EAAOnG,OAMbmL,EADoB,QAAnBo7B,EAAUpgB,KACFhb,GAAU+7B,EAEV/7B,GAAU+7B,CACtB,IAGI/7B,CACV,CAEAo8B,UAAUvnC,EAAOqsB,EAAM0b,GACpB,IAAI58B,GAAS,EAEbnL,EAAQA,EAAM6/B,OAAOrqB,cACrBxV,EAAQ3C,KAAKwB,OAAO6nC,eAAe1mC,GAKnC,MAAMgoC,GAHND,EAAeA,EAAalI,OAAOrqB,cAAcnF,QAAQ,OAAQ,MAG/BwU,MAAM,KAExC,OAAQwH,GACL,IAAK,WACF2b,EAAa1mC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,EAAM0K,QAAQ2I,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFlI,GAAS,EACT68B,EAAa1mC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,EAAM0K,QAAQ2I,GAAO,EAAC,IAErC,MACH,IAAK,SACF20B,EAAa1mC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,GAASqT,EAAG,IAE3B,MACH,IAAK,YACFlI,GAAS,EACT68B,EAAa1mC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,GAASqT,EAAG,IAE3B,MACH,IAAK,WACFlI,EAAkB,IAATnL,GAAwB,MAATA,EACxB,MACH,IAAK,eACFmL,EAAkB,IAATnL,GAAwB,MAATA,EACxB,MACH,QACGmL,EAAS9N,KAAK4qC,gBAAgBjoC,EAAOqsB,EAAM0b,GAIjD,OAAO58B,CACV,CAEAq8B,UAAUxnC,EAAOqsB,EAAM0b,GACpB,IAAI58B,GAAS,EAOb,OALMnL,aAAiB4d,OAAO5d,EAAQ,IAAI4d,KAAK5d,IAEzC+nC,aAAwBnqB,OAC3BmqB,EAAe,IAAInqB,KAAKmqB,IAEnB1b,GACL,IAAK,OACFlhB,EAASnL,EAAQ+nC,EACjB,MACH,IAAK,UACF58B,EAASnL,EAAQ+nC,EACjB,MACH,IAAK,gBACF58B,EAASnL,GAAS+nC,EAClB,MACH,IAAK,mBACF58B,EAASnL,GAAS+nC,EAClB,MACH,QACG58B,EAAS9N,KAAK4qC,gBAAgBjoC,EAAOqsB,EAAM0b,GAIjD,OAAO58B,CACV,CAEAs8B,YAAYznC,EAAOqsB,EAAM0b,GACtB,IAAI58B,GAAS,EAKb,OAHAnL,EAAQkoC,OAAOloC,GACf+nC,EAAeG,OAAOH,GAEd1b,GACL,IAAK,SACFlhB,EAASnL,GAAS+nC,EAClB,MACH,IAAK,YACF58B,EAASnL,GAAS+nC,EAClB,MACH,IAAK,OACF58B,EAASnL,EAAQ+nC,EACjB,MACH,IAAK,UACF58B,EAASnL,EAAQ+nC,EACjB,MACH,IAAK,gBACF58B,EAASnL,GAAS+nC,EAClB,MACH,IAAK,mBACF58B,EAASnL,GAAS+nC,EAClB,MACH,QACG58B,EAAS9N,KAAK4qC,gBAAgBjoC,EAAOqsB,EAAM0b,GAIjD,OAAO58B,CACV,CAEAu8B,UAAU1nC,EAAOqsB,EAAM0b,GACpB,IAAI58B,GAAS,EAMb,OAFKX,MAAMC,QAAQs9B,KAAeA,EAAe,CAACA,IAE1C1b,GACL,IAAK,SACErsB,IAAOmL,EAAS48B,EAAar9B,QAAQ1K,IAAU,GACnD,MACH,IAAK,YACSmL,GAAPnL,GAAgB+nC,EAAar9B,QAAQ1K,GAAS,EAElD,MACH,QACGmL,EAAS9N,KAAK4qC,gBAAgBjoC,EAAOqsB,EAAM0b,GAIjD,OAAO58B,CACV,CAEAw8B,aAAa3nC,EAAOqsB,EAAM0b,GACvB,IAAI58B,GAAS,EAWb,OAPMA,EADE,WADAkhB,EAEOrsB,GAAS+nC,EAGT1qC,KAAK4qC,gBAAgBjoC,EAAOqsB,EAAM0b,GAI1C58B,CACV,CAEAy8B,UAAU5nC,EAAOqsB,EAAM0b,GACpB,IAAK/nC,EAAO,OAAO,EACnB,IAAImL,GAAS,EAIb,OAAQkhB,GACL,IAAK,kBACFlhB,EAASnL,GAAS3C,KAAK4S,QAAQhC,SAC/B,MACH,IAAK,sBACF9C,EAASnL,GAAS3C,KAAK4S,QAAQhC,SAC/B,MACH,IAAK,uBACGzD,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EACGnL,EAAMmG,QAAQsK,IAAOA,EAAExC,UAAYwC,IAAMpT,KAAK4S,QAAQhC,WAClDzK,OAAS,EAChB,MACH,IAAK,2BACGgH,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EACGnL,EAAMmG,QAAQsK,IAAOA,EAAExC,UAAYwC,IAAMpT,KAAK4S,QAAQhC,WAClDzK,OAAS,EAChB,MACH,IAAK,SACF2H,EAASnL,EAAM0K,QAAQq9B,IAAiB,EACxC,MACH,IAAK,YACF58B,EAASnL,EAAM0K,QAAQq9B,GAAgB,EACvC,MACH,QACG58B,EAAS9N,KAAK4qC,gBAAgBjoC,EAAOqsB,EAAM0b,GAIjD,OAAO58B,CACV,CAEA88B,gBAAgBtd,EAAS0B,EAAM0b,GAC5B,IAAI58B,GAAS,EAEb,IAAK48B,EAAc,OAAO58B,EAG1B,MAAMg9B,EAAUJ,EAAaljB,MAAM,KAAK,GACrC9c,EAAUggC,EAAaljB,MAAM,KAAK,GAG/BgB,EAAQxoB,KAAK+B,GAAGmlB,SAASC,GAAMA,EAAEvmB,IAAMkqC,IAAS,GACtD,IAAKtiB,EAAO,OAAO1a,EAInB,IADc0a,EAAMzhB,QAAQC,GAAMA,EAAEpG,IAAM8J,IAAS,GACvC,OAAOoD,EAEnB,IAAIi9B,EAAU,4BACP/3B,QAAQ,WAAYhT,KAAKH,QACzBmT,QAAQ,OAAQwV,EAAM5nB,IAC1BoqC,EAAqB,IAAIhrC,KAAKL,YAAYorC,EAAS/qC,KAAK+B,IAK3D,OAJAipC,EAAmBp4B,QAAU5S,KAAK4S,QAClCo4B,EAAmB5X,WAAW5K,EAAMzhB,UACpCikC,EAAmBnmC,SAAS2jB,EAAMkZ,2BAE1B1S,GACL,IAAK,iBACFlhB,EAASk9B,EAAmBzlC,QAAQ+nB,GACpC,MACH,IAAK,qBACFxf,GAAUk9B,EAAmBzlC,QAAQ+nB,GAI3C,OAAOxf,CACV,CAEAm9B,aAAa3d,EAAS0B,EAAM0b,GACzB,IAAI58B,GAAS,EAEb,IAAK48B,IAAiB1qC,KAAK+B,GAAI,OAAO+L,EAGtC,IAAI0a,EAAQxoB,KAAK+B,GAAGmlB,SAASC,GAAMA,EAAEvmB,IAAM8pC,IAAc,GACzD,IAAKliB,EAAO,OAAO1a,EAEnB,IAAIi9B,EAAU,sBACP/3B,QAAQ,WAAYhT,KAAKH,QACzBmT,QAAQ,OAAQwV,EAAM5nB,IAC1BsqC,EAAgB,IAAIlrC,KAAKL,YAAYorC,EAAS/qC,KAAK+B,IAKtD,OAJAmpC,EAAct4B,QAAU5S,KAAK4S,QAC7Bs4B,EAAc9X,WAAW5K,EAAMzhB,UAC/BmkC,EAAcrmC,SAAS2jB,EAAMkZ,2BAErB1S,GACL,IAAK,WACFlhB,EAASo9B,EAAc3lC,QAAQ+nB,GAC/B,MACH,IAAK,eACFxf,GAAUo9B,EAAc3lC,QAAQ+nB,GAItC,OAAOxf,CACV,CAEAq9B,oBAAoBxoC,EAAOqsB,EAAM0b,GAC9B,IAAI58B,GAAS,EAEb,IAAK48B,EAAc,OAAO58B,EAE1B,IAAIoe,EAAKlsB,KAAK+B,GAAGqjB,iBAAiBwK,GAAMA,EAAEhvB,IAAM8pC,IAAc,GAE9D,OAAQ1b,GACL,IAAK,qBACF,IAAK9C,EAAI,OAAO,EAEhBpe,EAASoe,EAAGyG,SAAS/C,GAAMA,EAAEhvB,IAAM+B,EAAM/B,KAAIuF,OAAS,EACtD,MACH,IAAK,yBACF,IAAK+lB,EAAI,OAAO,EAEhBpe,EAASoe,EAAGyG,SAAS/C,GAAMA,EAAEhvB,IAAM+B,EAAM/B,KAAIuF,OAAS,EAI5D,OAAO2H,CACV,CAEA08B,kBAAkBld,EAAS1nB,EAAOopB,EAAM0b,GACrC,IAAI3a,EAAenqB,EAAMmqB,eAErBga,EAAe,GAEnB,GAAIzc,EACD,GAAIA,EAAQyC,GACTga,IACInkC,EAAMyB,WACFimB,EAAQyC,GAAcnqB,EAAMyB,WAAWP,YACvC,QACJlB,EAAM0B,YACFgmB,EAAQyC,GAAcnqB,EAAM0B,YAAYR,YACxC,OACLwmB,EAAQyC,GAAcnvB,IACtB0sB,EAAQyC,IAEPrb,WACAyD,kBACA,CACJ,IAAI6xB,EAAWf,EAAY3b,EAAS1nB,GACpB,MAAZokC,IACDD,EAAeC,EAErB,CAGH,IAAIoB,GAAyBV,GAAgB,IAAIvyB,cAEjD,OAAQ6W,GACL,IAAK,WACF,OAAO+a,EAAar1B,WAAWrH,QAAQ+9B,IAA0B,EACpE,IAAK,eACF,OAAkE,GAA3DrB,EAAar1B,WAAWrH,QAAQ+9B,GAC1C,IAAK,SACF,OAAOrB,GAAgBqB,EAC1B,IAAK,YACF,OAAOrB,GAAgBqB,EAC1B,IAAK,WACL,IAAK,eACF,OAAOprC,KAAKirC,aAAa3d,EAAQyC,GAAef,EAAM0b,GACzD,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAO1qC,KAAKuqC,UAAUR,EAAc/a,EAAM0b,GAC7C,IAAK,WACF,OAC4B,MAAzBpd,EAAQyC,IACRzC,EAAQyC,GAAc5pB,OAAS,GACN,IAAzBmnB,EAAQyC,GAEd,IAAK,eACF,OAC4B,MAAzBzC,EAAQyC,KACN5iB,MAAMC,QAAQkgB,EAAQyC,KACrBzC,EAAQyC,GAAc5pB,OAAS,GACN,IAAzBmnB,EAAQyC,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAO/vB,KAAKmrC,oBAAoBpB,EAAc/a,EAAM0b,GAE7D,CAEAD,gBAAgBnd,EAAS0B,EAAM0b,GAC5B,IACIliB,EAAQ,KACR6iB,EAAkB,KAClBvc,EAAQ,KACRwc,EAAa,KAEjB,OAAQtc,GAEL,IAAK,WACL,IAAK,eACF,QAAKhvB,KAAKurC,UAGV/iB,EAAQxoB,KAAK+B,GAAGmlB,SAASC,GAAMA,EAAEvmB,IAAM8pC,IAAc,KAEhDliB,IAEL6iB,EAAkB7iB,EAAM9C,SAASL,GACvBA,EAAEzkB,IAAMZ,KAAKurC,QAAQ3qC,KAG3ByqC,EAAgBllC,OAAS,GAK1BqC,QAAQ+G,MACL,iFAGI,IAIVuf,EAAQtG,EAAMuG,YAAY/uB,KAAKurC,QAAQ3qC,IAGvC0qC,EAAa,CAAC,EAEdn3B,OAAOC,KAAKkZ,GAASrpB,SAASI,IAC3BinC,EAAW,GAAGxc,KAASzqB,KAASipB,EAAQjpB,EAAI,IAIxCrE,KAAKirC,aAAaK,EAAYtc,EAAM0b,MAG9C,IAAK,qBACL,IAAK,yBAEF,OAAO1qC,KAAKmrC,oBAAoB7d,EAAS0B,EAAM0b,GAExD,CAEAc,kBAAkBC,EAAgB,IAC3BA,IAAkBt+B,MAAMC,QAAQq+B,KACjCA,EAAgB,CAACA,IAEpBzrC,KAAK0rC,eAAiBD,EAEtBzrC,KAAK2rC,QACR,CASAvY,WAAWrsB,EAAS,GAAI9B,EAAS,MAS9B,GARAjF,KAAKopC,QAAUriC,EAAO+B,QAClB9B,GAAMA,GAAKA,EAAE4kC,mBAAqB5kC,EAAE4kC,sBAExC5rC,KAAKmpC,aAAenpC,KAAKopC,QACpBppC,KAAKopC,QAAQtgC,QAAQ9B,GAAMA,GAAKA,EAAEg5B,cAAyB,QAATh5B,EAAE3C,MACpD,GAGDY,EAAQ,CACTjF,KAAKurC,QAAUtmC,EAGf,IAAI4mC,EAAgB,CACjBjrC,GAAI,cACJQ,MAAO6D,EAAO7D,MACdiD,IAAK,QAMJY,EAAO61B,WACR+Q,EAAc/c,MAAQ,eAGzB9uB,KAAKopC,QAAQ0C,QAAQD,EACxB,aACU7rC,KAAKurC,OAElB,CAEAQ,aA8JG,OAhIc/rC,KAAKopC,SAAW,IAAIj7B,KAAKnH,IACpC,IAAI5F,EAAQ4F,EAAE5F,MACVpB,KAAKqM,UAAUu9B,gBAAkB5iC,EAAE/B,QAAU+B,EAAE/B,OAAO7D,QACvDA,EAAQ,GAAG4F,EAAE/B,OAAO7D,SAAS4F,EAAE5F,SAElC,IAAIQ,EAAO,OACPoqC,EAAa,GACbC,EAAmB,GACvB,OAAQjlC,EAAE3C,KACP,IAAK,UACF2nC,EAAaA,EACTllB,OAAO9mB,KAAKksC,wBAAwBllC,IACpC8f,OAAO9mB,KAAKmsC,2BAA2BnlC,IAC3CilC,EAAmB,CAAC,WACpB,MACH,IAAK,gBACFD,EAAahsC,KAAKosC,sBAAsBplC,GACxCilC,EAAmB,CAAC,iBACpB,MACH,IAAK,OACL,IAAK,WACFrqC,EAAO,OACPoqC,EAAaA,EACTllB,OAAO9mB,KAAKqsC,qBAAqBrlC,IACjC8f,OAAO9mB,KAAKmsC,2BAA2BnlC,IAC3CilC,EAAmB,CAAC,OAAQ,YAC5B,MACH,IAAK,YACL,IAAK,UACL,IAAK,SACFrqC,EAAO,SACPoqC,EAAaA,EACTllB,OAAO9mB,KAAKssC,uBAAuBtlC,IACnC8f,OAAO9mB,KAAKmsC,2BAA2BnlC,IAC3CilC,EAAmB,CAAC,YAAa,UAAW,UAC5C,MACH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACFD,EAAaA,EACTllB,OAAO9mB,KAAKusC,uBAAuBvlC,IACnC8f,OAAO9mB,KAAKmsC,2BAA2BnlC,IAC3CilC,EAAmB,CAAC,SAAU,WAAY,QAAS,aACnD,MACH,IAAK,OACFD,EAAaA,EACTllB,OAAO9mB,KAAKwsC,qBAAqBxlC,IACjC8f,OAAO9mB,KAAKmsC,2BAA2BnlC,IAC3C,MACH,IAAK,OACFglC,EAAaA,EACTllB,OAAO9mB,KAAKysC,qBAAqBzlC,IACjC8f,OAAO9mB,KAAKmsC,2BAA2BnlC,IAC3CilC,EAAmB,CAAC,QACpB,MACH,IAAK,OACFD,EAAaA,EAAWllB,OACrB9mB,KAAK0sC,2BAA2B1lC,IAEnC,MACH,QACGpF,EAAO,OAsCb,OAlCI5B,KAAK2sC,gBACNX,EAAaA,EAAWllB,OAAO9mB,KAAK4sC,2BAA2B5lC,MAI9DhH,KAAK0rC,gBAAkB,IAAI5iC,QAAQ+jC,IACjC,IAAKA,EAAc,OAAO,EAE1B,GAAIA,EAAajnC,MACd,OAAOqmC,EAAiBa,SAASD,EAAajnC,MAAMvB,KAChD,GAAIwoC,EAAaxoC,IAAK,CAE1B,IAAI0oC,EAAiBF,EAAaxoC,IAAImjB,MAAM,KAAKwlB,MACjD,OAAOD,GAAkB/lC,EAAEpG,IAAMmsC,GAAkB/lC,EAAE3C,GACxD,KACA8B,OAAS,IAGZ6lC,EAAaA,EAAWllB,OAAO9mB,KAAKitC,wBAAwBjmC,KAgBxD,CACJpG,GAAIoG,EAAEF,YAAcE,EAAEpG,GACtB+B,MAAOvB,EACPQ,KAAMA,EACNoqC,WAAYA,EAEd,GAuBP,CAEAK,qBAAqBzmC,GAClB,IAAIsnC,EAAiB,CAClBC,KAAMntC,KAAKwS,OAAOrS,UAAUitC,gBAC5BC,QAASrtC,KAAKwS,OAAOrS,UAAUmtC,eAC/BC,cAAevtC,KAAKwS,OAAOrS,UAAUqtC,oBACrCC,iBAAkBztC,KAAKwS,OAAOrS,UAAUutC,mBACxCC,aAAc3tC,KAAKwS,OAAOrS,UAAUytC,uBACpCC,gBAAiB7tC,KAAKwS,OAAOrS,UAAU2tC,sBACvCC,sBACG/tC,KAAKwS,OAAOrS,UAAU6tC,2BACzBC,yBACGjuC,KAAKwS,OAAOrS,UAAU+tC,0BACzBC,UAAWnuC,KAAKwS,OAAOrS,UAAUiuC,oBACjCC,UAAWruC,KAAKwS,OAAOrS,UAAUmuC,qBAGhCxgC,EAAS,GAEb,IAAK,IAAIygC,KAAWrB,EACjBp/B,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAOuqC,EAAeqB,GACtBC,MAAO,aACPC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKmqC,UAAUv8B,EAAG2gC,EAAS1gC,KAIpD,OAAOC,CACV,CAEAy+B,uBAAuB3mC,GACpB,IAAI8oC,EAAmB,CACpBC,SAAU,CACPH,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUyuC,mBAEhCC,aAAc,CACXL,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU2uC,sBAEhCC,OAAQ,CACLP,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU6uC,aAEhCC,UAAW,CACRT,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU+uC,gBAEhCC,SAAU,CACPX,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUivC,SAEhCC,aAAc,CACXb,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUmvC,aAI/BxhC,EAAS,GAEb,IAAK,IAAIygC,KAAWG,EACjB5gC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAO+rC,EAAiBH,GAASntC,MACjCotC,MAAOE,EAAiBH,GAASC,MACjCC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKkqC,UAAUt8B,EAAG2gC,EAAS1gC,KAIpD,OAAOC,CACV,CAEAw+B,uBAAuB1mC,GACpB,IAAI2pC,EAAmB,CACpBR,OAAQ/uC,KAAKwS,OAAOrS,UAAUqvC,eAC9BP,UAAWjvC,KAAKwS,OAAOrS,UAAUsvC,kBACjCtC,KAAMntC,KAAKwS,OAAOrS,UAAUuvC,kBAC5BrC,QAASrtC,KAAKwS,OAAOrS,UAAUwvC,kBAC/BpC,cAAevtC,KAAKwS,OAAOrS,UAAUyvC,yBACrCnC,iBAAkBztC,KAAKwS,OAAOrS,UAAU0vC,0BAGvC/hC,EAAS,GAEb,IAAK,IAAIygC,KAAWgB,EACjBzhC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAO4sC,EAAiBhB,GACxBC,MAAO,OACPC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKoqC,YAAYx8B,EAAG2gC,EAAS1gC,KAItD,OAAOC,CACV,CAEA0+B,qBAAqB5mC,GAClB,IAAIkqC,EAAiB,CAClBf,OAAQ/uC,KAAKwS,OAAOrS,UAAU4vC,mBAC9Bd,UAAWjvC,KAAKwS,OAAOrS,UAAU6vC,uBAGhCliC,EAAS,GAEb,IAAK,IAAIygC,KAAWuB,EACjBhiC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAOmtC,EAAevB,GACtBC,MAAO,OACPC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKqqC,UAAUz8B,EAAG2gC,EAAS1gC,KAIpD,OAAOC,CACV,CAEAo+B,wBAAwBtmC,GACrB,IAAIqqC,EAAoB,CACrBlB,OAAQ/uC,KAAKwS,OAAOrS,UAAU4vC,oBAG7BjiC,EAAS,GAEb,IAAK,IAAIygC,KAAW0B,EACjBniC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAOstC,EAAkB1B,GACzBC,MAAO,UACPC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKsqC,aAAa18B,EAAG2gC,EAAS1gC,KAIvD,OAAOC,CACV,CAEA2+B,qBAAqB7mC,GAClB,IAAIsqC,EAAiB,CAClBC,gBAAiB,CACd3B,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUiwC,wBAEhCC,oBAAqB,CAClB7B,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUmwC,2BAEhCC,qBAAsB,CACnB/B,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUqwC,8BAEhCC,yBAA0B,CACvBjC,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUuwC,iCAEhC3B,OAAQ,CACLP,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU4vC,oBAEhCd,UAAW,CACRT,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU6vC,wBAI/BliC,EAAS,GAEb,IAAK,IAAIygC,KAAW2B,EACjBpiC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAOutC,EAAe3B,GAASntC,MAC/BotC,MAAO0B,EAAe3B,GAASC,MAC/BC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKuqC,UAAU38B,EAAG2gC,EAAS1gC,KAIpD,OAAOC,CACV,CAEAs+B,sBAAsBxmC,GACnB,IAAI+qC,EAAoB,CACrBC,SAAU,CACPpC,MAAO,QACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU0wC,QAC7BpC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKirC,aAAar9B,EAAG,WAAYC,IAEvDijC,aAAc,CACXtC,MAAO,QACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU4wC,WAC7BtC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKirC,aAAar9B,EAAG,eAAgBC,IAE3DmjC,aAAc,CACXxC,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU8wC,WAC7BxC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKuqC,UAAU38B,EAAG,eAAgBC,IAExDqjC,iBAAkB,CACf1C,MAAO,OACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUgxC,cAC7B1C,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKuqC,UAAU38B,EAAG,mBAAoBC,IAE5DujC,mBAAoB,CACjB5C,MAAO,iBACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUkxC,iBAC7B5C,QAAS,CAAC7gC,EAAGC,IACV7N,KAAKmrC,oBAAoBv9B,EAAG,qBAAsBC,IAExDyjC,uBAAwB,CACrB9C,MAAO,iBACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUoxC,oBAC7B9C,QAAS,CAAC7gC,EAAGC,IACV7N,KAAKmrC,oBAAoBv9B,EAAG,yBAA0BC,KAS3DC,EAAS,GAEb,IAAK,IAAIygC,KAAWoC,EACjB7iC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAOguC,EAAkBpC,GAASntC,MAClCotC,MAAOmC,EAAkBpC,GAASC,MAClCC,QAASkC,EAAkBpC,GAASE,UAmB1C,OAbG7oC,EAAMQ,SAASgB,aAEc,OAA3BxB,EAAMQ,SAASa,UACgB,QAA9BrB,EAAMQ,SAASc,aAEa,OAA3BtB,EAAMQ,SAASa,UACiB,OAA9BrB,EAAMQ,SAASc,aACftB,EAAMQ,SAASM,YAGrBoH,EADsB9N,KAAKusC,uBAAuB3mC,GAC3BkhB,OAAOhZ,IAG1BA,CACV,CAEAq+B,2BAA2BvmC,GACxB,IAAI4rC,EAAuB,CACxBC,eAAgBzxC,KAAKwS,OAAOrS,UAAUuxC,aACtCC,mBAAoB3xC,KAAKwS,OAAOrS,UAAUyxC,iBAGzC9jC,EAAS,GAEb,IAAK,IAAIygC,KAAWiD,EACjB1jC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAO6uC,EAAqBjD,GAC5BC,MAAO,aACPC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAK4qC,gBAAgBh9B,EAAG2gC,EAAS1gC,KAI1D,OAAOC,CACV,CAEA4+B,2BAA2B9mC,GACxB,IAAIisC,EAAuB,CACxBjB,SAAU,CACPpC,MAAO,QACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU0wC,SAEhCC,aAAc,CACXtC,MAAO,QACPptC,MAAOpB,KAAKwS,OAAOrS,UAAU4wC,YAEhCK,mBAAoB,CACjB5C,MAAO,iBACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUkxC,kBAEhCC,uBAAwB,CACrB9C,MAAO,iBACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUoxC,sBAI/BzjC,EAAS,GAEb,IAAK,IAAIygC,KAAWsD,EACjB/jC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAOkvC,EAAqBtD,GAASntC,MACrCotC,MAAOqD,EAAqBtD,GAASC,MACrCC,QAAS,CAAC7gC,EAAGC,IAAM7N,KAAKyqC,gBAAgB78B,EAAG2gC,EAAS1gC,KAI1D,OAAOC,CACV,CAEA8+B,2BAA2BhnC,GACxB,IAAIksC,EAAuB,CACxBC,cAAe/xC,KAAKwS,OAAOrS,UAAU6xC,YACrCC,kBAAmBjyC,KAAKwS,OAAOrS,UAAU+xC,gBAGxCpkC,EAAS,GAEb,IAAK,IAAIygC,KAAWuD,EACjBhkC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAOmvC,EAAqBvD,GAC5BC,MAAO,aACPC,QAAS,CAAC7gC,EAAGC,KAAM,IAIzB,OAAOC,CACV,CAEAm/B,wBAAwBrnC,GACrB,IAAIusC,EAAoB,CACrBC,eAAgB,CACb5D,MAAO,UACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUkyC,mBAC7B5D,QAAS,CAAC7gC,EAAGC,IAAMD,GAAKC,GAE3BykC,kBAAmB,CAChB9D,MAAO,UACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUoyC,+BAC7B9D,QAAS,CAAC7gC,EAAGC,IAAMD,GAAKC,GAE3B2kC,WAAY,CACThE,MAAO,UACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUsyC,wBAC7BhE,QAAS,CAAC7gC,EAAGC,IAAMD,EAAEP,QAAQQ,IAAM,GAEtC6kC,eAAgB,CACblE,MAAO,UACPptC,MAAOpB,KAAKwS,OAAOrS,UAAUwyC,2BAC7BlE,QAAS,CAAC7gC,EAAGC,KAAuB,GAAjBD,EAAEP,QAAQQ,KAI/BC,EAAS,GAEb,IAAK,IAAIygC,KAAW4D,EACjBrkC,EAAOxJ,KAAK,CACT1D,GAAI2tC,EACJ5rC,MAAOwvC,EAAkB5D,GAASntC,MAClCotC,MAAO2D,EAAkB5D,GAASC,MAClCC,QAAS0D,EAAkB5D,GAASE,UAI1C,OAAO3gC,CACV,CAEA8kC,YAAY1rB,EAAU,IACnBlnB,KAAK6yC,SAAW3rB,CACnB,CAWAA,QAAQpe,EAAS,MAAM,IAGpB,OAFkB9I,KAAK6yC,UAAY7yC,KAAK+B,IAAImlB,aAAe,IAE1Cpe,QAAQqe,GAAMre,EAAOqe,IACzC,CAEAtiB,SAASuB,GACNpG,KAAKkpC,UAAY9iC,GAAY,CAAC,EAE9BpG,KAAKkpC,UAAU/nB,MAAQnhB,KAAKkpC,UAAU/nB,OAAS,EAClD,CAiBAlV,WAMG,YAHkC,IAAvBjM,KAAKkpC,UAAUpgB,OACvB9oB,KAAKkpC,UAAUpgB,KAAO,OAElB9oB,KAAKkpC,SACf,CAEA4J,aACG,IAAIhlC,GAAS,EAEb,MAAMilC,EAAe,CAClB,kBACA,sBACA,uBACA,2BACA,eACA,oBAGGC,EAAkB,CAAC7xB,EAAQ,MAChB,GAAVrT,GAEJqT,EAAMld,SAAS2L,IACRA,GAAGuR,OAAShU,MAAMC,QAAQwC,GAAGuR,OAC9B6xB,EAAgBpjC,GAAGuR,OAEnBrT,EACGA,GACU,MAAV8B,GAAGvL,KACO,IAAVuL,GAAGvL,KACQ,MAAXuL,GAAGof,MACQ,IAAXpf,GAAGof,OACW,MAAZpf,GAAGjN,OAA6B,IAAZiN,GAAGjN,OACtBowC,EAAa1lC,QAAQuC,GAAGof,OAAS,EAC1C,GACD,EAKL,OAFAgkB,EAAgBhzC,KAAKkpC,WAAW/nB,OAEzBrT,CACV,oBClvCH,MAAMvO,EAAc,EAAQ,MAK5B,SAAS0pC,EAAY3b,EAAS1nB,EAAOqtC,GAAiB,GACnD,IAAKrtC,EAAO,OAAO,KACnB,IAAKA,EAAMkB,WAAY,OAAO,KAE1BwmB,GAAWA,EAAQ,KAAIA,EAAUA,EAAQ,IAE7C,IAAIniB,EAAWvF,EAAMhF,GACjBkG,EAAalB,EAAMkB,WAEnBnE,EAAQ,KACZ,GAAImE,EAAWuG,QAAQ,MAAQ,EAAG,CAC/B,IAAImpB,EAAU1vB,EAAW0gB,MAAM,KAAK,GACpC7kB,EAAQ2qB,EAAQxmB,IAAewmB,EAAQkJ,IAAYlJ,EAAQniB,EAC9D,MACGxI,EAAQ2qB,EAAQxmB,IAAewmB,EAAQniB,GAG1C,GAAIxI,EACD,OAAOA,EAKV,IAAK,IAAI0R,KAAKiZ,EAAS,CACpB,IAAIjpB,EAAMgQ,EAAEmT,MAAM,KAAK,IACnBnjB,GAAQA,GAAO8G,GAAY9G,GAAOyC,IACnCnE,EAAQ2qB,EAAQjZ,GAEtB,CAQA,OALI1R,GAASwK,MAAMC,QAAQzK,KACxBA,EAAQA,EAAMmG,QAAQsK,GAAW,MAALA,IACxB6/B,IAAgBtwC,EAAQA,EAAM,KAG9BA,CACV,CAEAlD,EAAOC,QAAU,cAA4BH,EAC1CI,YAAYC,EAAKC,EAAQkC,GAGtBjC,MAAMF,EAFNC,EAASA,GAAU,gBAEAkC,GAEnB/B,KAAK4S,QAAU,CAAEhC,SAAU,MAC3B5Q,KAAKqM,UAAY,CAAC,EAClBrM,KAAKkzC,gBAAkB,CAAC,EAGxBlzC,KAAKmpC,aAAe,GACpBnpC,KAAKopC,QAGL,IAAI5nC,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRnB,SAAU,QAkBb4J,SAAU,IACAjM,KAAKkzC,gBAGf7J,eAAgB,SAAUh7B,GACvB,IAAIP,EAAS,GACb,IACG,IAAIw7B,EAAMC,SAASC,cAAc,OACjCF,EAAIG,UAAYp7B,EAEhBP,EAASw7B,EAAII,aAAeJ,EAAIK,WAAa,EAGhD,CAFE,MAAOxhC,GACN2F,GAAUO,GAAQ,IAAI2E,QAAQ,gBAAiB,GAClD,CAEA,OAAOlF,CACV,EAEAo8B,UAAW,SAAU5c,EAAS1nB,EAAOopB,EAAM0b,GACxC,IAAI58B,GAAS,EAETnL,EAAQsmC,EAAY3b,EAAS1nB,GACpB,MAATjD,IAAeA,EAAQ,IAE3BA,EAAQA,EAAM+R,WAAW8tB,OAAOrqB,cAChCxV,EAAQnB,EAAO6nC,eAAe1mC,GAS9B,IAAIgoC,GAPJD,EAAeA,EACXh2B,WACA8tB,OACArqB,cACAnF,QAAQ,OAAQ,MAGYwU,MAAM,KAEtC,OAAQwH,GACL,IAAK,WACF2b,EAAa1mC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,EAAM0K,QAAQ2I,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFlI,GAAS,EACT68B,EAAa1mC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,EAAM0K,QAAQ2I,GAAO,EAAC,IAErC,MACH,IAAK,SACF20B,EAAa1mC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,GAASqT,EAAG,IAE3B,MACH,IAAK,YACFlI,GAAS,EACT68B,EAAa1mC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,GAASqT,EAAG,IAE3B,MACH,IAAK,WACFlI,EAAkB,MAATnL,GAA0B,IAATA,EAC1B,MACH,IAAK,eACFmL,EAAkB,MAATnL,GAA0B,IAATA,EAC1B,MACH,QACGmL,EAAStM,EAAO2xC,WAAW7lB,EAAS0B,EAAM0b,GAIhD,OAAO58B,CACV,EAEAq8B,UAAW,SAAU7c,EAAS1nB,EAAOopB,EAAM0b,GACxC,IAAI58B,GAAS,EAETnL,EAAQsmC,EAAY3b,EAAS1nB,GAMjC,OALMjD,aAAiB4d,OAAO5d,EAAQ,IAAI4d,KAAK5d,IAEzC+nC,aAAwBnqB,OAC3BmqB,EAAe,IAAInqB,KAAKmqB,IAEnB1b,GACL,IAAK,SACFlhB,EAASnL,GAAS+nC,EAClB,MACH,IAAK,YACF58B,EAASnL,GAAS+nC,EAClB,MACH,IAAK,OACF58B,EAASnL,EAAQ+nC,EACjB,MACH,IAAK,UACF58B,EAASnL,EAAQ+nC,EACjB,MACH,IAAK,gBACF58B,EAASnL,GAAS+nC,EAClB,MACH,IAAK,mBACF58B,EAASnL,GAAS+nC,EAClB,MACH,QACG58B,EAAStM,EAAO2xC,WAAW7lB,EAAS0B,EAAM0b,GAIhD,OAAO58B,CACV,EAEAs8B,YAAa,SAAU9c,EAAS1nB,EAAOopB,EAAM0b,GAC1C,IAAI58B,GAAS,EAETnL,EAAQsmC,EAAY3b,EAAS1nB,GAIjC,OAHAjD,EAAQkoC,OAAOloC,GACf+nC,EAAeG,OAAOH,GAEd1b,GACL,IAAK,SACFlhB,EAASnL,GAAS+nC,EAClB,MACH,IAAK,YACF58B,EAASnL,GAAS+nC,EAClB,MACH,IAAK,OACF58B,EAASnL,EAAQ+nC,EACjB,MACH,IAAK,UACF58B,EAASnL,EAAQ+nC,EACjB,MACH,IAAK,gBACF58B,EAASnL,GAAS+nC,EAClB,MACH,IAAK,mBACF58B,EAASnL,GAAS+nC,EAClB,MACH,QACG58B,EAAStM,EAAO2xC,WAAW7lB,EAAS0B,EAAM0b,GAIhD,OAAO58B,CACV,EAEAu8B,UAAW,SAAU/c,EAAS1nB,EAAOopB,EAAM0b,GACxC,IAAI58B,GAAS,EAETnL,EAAQsmC,EAAY3b,EAAS1nB,GAOjC,OANIjD,GAASA,EAAMwV,cAAaxV,EAAQA,EAAMwV,eAE9CuyB,EAAeA,EAAavyB,cAEvBhL,MAAMC,QAAQs9B,KAAeA,EAAe,CAACA,IAE1C1b,GACL,IAAK,SACErsB,IAAOmL,EAAS48B,EAAar9B,QAAQ1K,IAAU,GACnD,MACH,IAAK,YACSmL,GAAPnL,GAAgB+nC,EAAar9B,QAAQ1K,GAAS,EAElD,MACH,QACGmL,EAAStM,EAAO2xC,WAAW7lB,EAAS0B,EAAM0b,GAIhD,OAAO58B,CACV,EAEAw8B,aAAc,SAAUhd,EAAS1nB,EAAOopB,EAAM0b,GAC3C,IAAI58B,GAAS,EAETnL,EAAQsmC,EAAY3b,EAAS1nB,GAKjC,OAFa,MAATjD,IAAeA,GAAQ,GAEnBqsB,GACL,IAAK,SACFlhB,EAASnL,GAAS+nC,EAClB,MACH,IAAK,YACF58B,EAASnL,GAAS+nC,EAClB,MACH,QACG58B,EAAStM,EAAO2xC,WAAW7lB,EAAS0B,EAAM0b,GAIhD,OAAO58B,CACV,EAEAy8B,UAAW,CAACjd,EAAS1nB,EAAOopB,EAAM0b,KAC/B,IAAI58B,GAAS,EAETnL,EAAQsmC,EAAY3b,EAAS1nB,GAIjC,OAAQopB,GACL,IAAK,kBACFlhB,EAASnL,GAAS3C,KAAK4S,QAAQhC,SAC/B,MACH,IAAK,sBACF9C,EAASnL,GAAS3C,KAAK4S,QAAQhC,SAC/B,MACH,IAAK,uBACF,IAAKjO,EAAO,CACTmL,GAAS,EACT,KACH,CACKX,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,GACInL,GAAS,IAAImG,QAAQsK,KACfA,IAEGA,EAAExC,UAAYwC,EAAExS,IAAMwS,EAAE/E,MAAQ+E,IACjCpT,KAAK4S,QAAQhC,WAKnBzK,OAAS,EACf,MACH,IAAK,2BACF,IAAKxD,EAAO,CACTmL,GAAS,EACT,KACH,CACKX,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EAUgB,IATZnL,GAAS,IAAImG,QAAQsK,KACfA,IAEGA,EAAExC,UAAYwC,EAAExS,IAAMwS,EAAE/E,MAAQ+E,IACjCpT,KAAK4S,QAAQhC,WAKnBzK,OACN,MACH,IAAK,SACF2H,EAASnL,EAAM0K,QAAQq9B,IAAiB,EACxC,MACH,IAAK,YACF58B,EAASnL,EAAM0K,QAAQq9B,GAAgB,EACvC,MACH,QACG58B,EAAStM,EAAO2xC,WAAW7lB,EAAS0B,EAAM0b,GAIhD,OAAO58B,CAAM,EAGhBqlC,WAAY,CAAC7lB,EAAS0B,EAAM0b,KACzB,IAAI58B,GAAS,EAEb,IAAK9N,KAAK+B,KAAO2oC,EAAc,OAAO58B,EAGtC,IAAIg9B,EAAUJ,EAAaljB,MAAM,KAAK,GACnC9c,EAAUggC,EAAaljB,MAAM,KAAK,GAGjCgB,EAAQxoB,KAAKknB,SAASC,GAAMA,EAAEvmB,IAAMkqC,IAAS,GACjD,IAAKtiB,EAAO,OAAO1a,EAInB,IADY0a,EAAMzhB,QAAQC,GAAMA,EAAEpG,IAAM8J,IAAS,GACrC,OAAOoD,EAEnB,IAAIi9B,EAAU,4BACP/3B,QAAQ,WAAYnT,GACpBmT,QAAQ,OAAQwV,EAAM5nB,IAC1BoqC,EAAqB,IAAIhrC,KAAKL,YAAYK,KAAKJ,IAAKmrC,GAMvD,OALAC,EAAmBp4B,QAAU5S,KAAK4S,QAElCo4B,EAAmB5X,WAAW5K,EAAMzhB,UACpCikC,EAAmBnmC,SAAS2jB,EAAMkZ,2BAE1B1S,GACL,IAAK,iBACFlhB,EAASk9B,EAAmBzlC,QAAQ+nB,GACpC,MACH,IAAK,qBACFxf,GAAUk9B,EAAmBzlC,QAAQ+nB,GAI3C,OAAOxf,CAAM,EAGhBm9B,aAAc,CAAC3d,EAASxmB,EAAYkoB,EAAM0b,KACvC,IAAI58B,GAAS,EAMb,GAJIhH,IACDwmB,EAAUA,EAAQxmB,IAAe,CAAC,IAGhC4jC,IAAiB1qC,KAAK+B,GAAI,OAAO+L,EAGtC,IAAI0a,EAAQxoB,KAAKknB,SAASC,GAAMA,EAAEvmB,IAAM8pC,IAAc,GACtD,IAAKliB,EAAO,OAAO1a,EAEnB,IAAIi9B,EAAU,sBACP/3B,QAAQ,WAAYnT,GACpBmT,QAAQ,OAAQwV,EAAM5nB,IAC1BsqC,EAAgB,IAAIlrC,KAAKL,YAAYK,KAAKJ,IAAKmrC,GAMlD,OALAG,EAAct4B,QAAU5S,KAAK4S,QAE7Bs4B,EAAc9X,WAAW5K,EAAMzhB,UAC/BmkC,EAAcrmC,SAAS2jB,EAAMkZ,2BAErB1S,GACL,IAAK,WACFlhB,EAASo9B,EAAc3lC,QAAQ+nB,GAC/B,MACH,IAAK,eACFxf,GAAUo9B,EAAc3lC,QAAQ+nB,GAItC,OAAOxf,CAAM,EAGhBq9B,oBAAqB,CAAC7d,EAASxmB,EAAYkoB,EAAM0b,KAC9C,IAAI58B,GAAS,EAEb,IAAK48B,IAAiB1qC,KAAK+B,GAAI,OAAO+L,EAElChH,IACDwmB,EAAUA,EAAQxmB,IAAe,CAAC,GAGrC,IAAIolB,EAAKlsB,KAAK+B,GAAGspB,mBAAmBqf,GAEpC,OAAQ1b,GACL,IAAK,qBACF,IAAK9C,EAAI,OAAO,EAEhBpe,EACGoe,EAAGyG,SACC/C,IAAOA,EAAEhvB,IAAMgvB,EAAE/f,QAAUyd,EAAQ1sB,IAAM0sB,EAAQzd,QACnD1J,OAAS,EACd,MACH,IAAK,yBACF,IAAK+lB,EAAI,OAAO,EAEhBpe,EACGoe,EAAGyG,SACC/C,IAAOA,EAAEhvB,IAAMgvB,EAAE/f,QAAUyd,EAAQ1sB,IAAM0sB,EAAQzd,QACnD1J,OAAS,EAIpB,OAAO2H,CAAM,EAGhB08B,kBAAmB,SAAUld,EAAS1nB,EAAOopB,EAAM0b,GAChD,IAAI3a,EAAenqB,EAAMmqB,eAGrBga,GAFankC,EAAMkB,WAEJ,IAEnB,GAAIwmB,EACD,GAAIA,EAAQyC,GACTga,KACInkC,EAAMyB,YACFimB,EAAQyC,GAAcnqB,EAAMyB,WAAWP,eAE3ClB,EAAM0B,aACFgmB,EAAQyC,GAAcnqB,EAAM0B,YAAYR,aAE7CwmB,EAAQyC,GAAcnvB,IACtB0sB,EAAQyC,IAEPrb,WACAyD,kBACA,CACJ,IAAI6xB,EAAWf,EAAY3b,EAAS1nB,GACpB,MAAZokC,IACDD,EAAeC,EAErB,CAGH,IAAIoB,GAAyBV,GAAgB,IAAIvyB,cAEjD,OAAQ6W,GACL,IAAK,WACF,OACG+a,EAAar1B,WAAWrH,QAAQ+9B,IAA0B,EAEhE,IAAK,eACF,OAEI,GADDrB,EAAar1B,WAAWrH,QAAQ+9B,GAGtC,IAAK,SACF,OAAOrB,GAAgBqB,EAC1B,IAAK,YACF,OAAOrB,GAAgBqB,EAC1B,IAAK,WACL,IAAK,eACF,OAAO5pC,EAAOypC,aACX3d,EACAyC,EACAf,EACA0b,GAEN,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAOlpC,EAAO+oC,UAAUjd,EAAS1nB,EAAOopB,EAAM0b,GACjD,IAAK,WACF,OAC4B,MAAzBpd,EAAQyC,IACRzC,EAAQyC,GAAc5pB,OAAS,GACN,IAAzBmnB,EAAQyC,GAEd,IAAK,eACF,OAC4B,MAAzBzC,EAAQyC,KACN5iB,MAAMC,QAAQkgB,EAAQyC,KACrBzC,EAAQyC,GAAc5pB,OAAS,GACN,IAAzBmnB,EAAQyC,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAOvuB,EAAO2pC,oBACX7d,EACAyC,EACAf,EACA0b,GAGZ,EAEAD,gBAAiB,CAACnd,EAAS0B,EAAM0b,KAG9B,OAAQ1b,GAEL,IAAK,WACL,IAAK,eACF,IAAKhvB,KAAK+B,KAAO/B,KAAKurC,QAAS,OANxB,EASP,IAAI/iB,EAAQxoB,KAAKknB,SAASC,GAAMA,EAAEvmB,IAAM8pC,IAAc,GACtD,IAAKliB,EAAO,OAVL,EAeP,GAHsBA,EAAM9C,SAASL,GAC3BA,EAAEzkB,IAAMZ,KAAKurC,QAAQ3qC,KAEXuF,OAAS,EAQ1B,OAHAqC,QAAQ+G,MACL,iFAEI,EAIV,IAAIuf,EAAQtG,EAAMuG,YAAY/uB,KAAKurC,QAAQ3qC,IAGvC0qC,EAAa,CAAC,EAMlB,OALAn3B,OAAOC,KAAKkZ,GAASrpB,SAASI,IAC3BinC,EAAW,GAAGxc,KAASzqB,KAASipB,EAAQjpB,EAAI,IAIxC7C,EAAOypC,aACXK,EACA,KACAtc,EACA0b,GAKN,IAAK,qBACL,IAAK,yBAEF,OAAOlpC,EAAO2pC,oBACX7d,EACA,KACA0B,EACA0b,GAGT,GAON1qC,KAAKiM,SAAWzK,EAAOyK,QAG1B,CAEA3I,KAAKnB,GACEA,EAAQynC,iBACT5pC,KAAKqM,UAAUu9B,eAAiBznC,EAAQynC,eAE9C,CAQArkC,QAAQ+nB,GACL,IAAI4lB,EAAkBlzC,KAAKkzC,gBACvB1xC,EAASxB,KAAKwB,OAGlB,GACsB,MAAnB0xC,GACyB,MAAzBA,EAAgB/xB,OACgB,GAAhC+xB,EAAgB/xB,MAAMhb,OAEtB,OAAO,EAEV,GAAe,MAAXmnB,EAAiB,OAAO,EAE5B,IAAIxf,EAAkC,QAAzBolC,EAAgBpqB,KAiG7B,OA/FAoqB,EAAgB/xB,MAAMld,SAAS6E,IAC5B,GAAKA,EAAOzE,KAAQyE,EAAOkmB,KAA3B,CAEA,IAAI2U,EAAY3jC,KAAKopC,QAAQtgC,QAAQ9B,GAAMA,EAAEpG,IAAMkI,EAAOzE,MAAK,GAC/D,GAAKs/B,EAAL,CAEA,IAAIkG,EAIAC,EAAgBnG,EAAUt/B,IAQ9B,YAP4B,IAAjBs/B,EAAUt/B,MACE,eAAhBs/B,EAAU/iC,IACX+iC,EAAUt/B,IAAM,eAChBylC,EAAgBnG,EAAUt/B,KACtBylC,EAAgB,eAGlBA,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACFD,EAAaroC,EAAO0oC,UACjB5c,EACAqW,EACA76B,EAAOkmB,KACPlmB,EAAOnG,OAEV,MACH,IAAK,OACL,IAAK,WACFknC,EAAaroC,EAAO2oC,UACjB7c,EACAqW,EACA76B,EAAOkmB,KACPlmB,EAAOnG,OAEV,MACH,IAAK,SACFknC,EAAaroC,EAAO4oC,YACjB9c,EACAqW,EACA76B,EAAOkmB,KACPlmB,EAAOnG,OAEV,MACH,IAAK,OACFknC,EAAaroC,EAAO6oC,UACjB/c,EACAqW,EACA76B,EAAOkmB,KACPlmB,EAAOnG,OAEV,MACH,IAAK,UACFknC,EAAaroC,EAAO8oC,aACjBhd,EACAqW,EACA76B,EAAOkmB,KACPlmB,EAAOnG,OAEV,MACH,IAAK,OACFknC,EAAaroC,EAAO+oC,UACjBjd,EACAqW,EACA76B,EAAOkmB,KACPlmB,EAAOnG,OAEV,MACH,IAAK,eACL,IAAK,gBACFknC,EAAaroC,EAAOgpC,kBACjBld,EACAqW,EACA76B,EAAOkmB,KACPlmB,EAAOnG,OAEV,MACH,IAAK,cACFknC,EAAaroC,EAAOipC,gBACjBnd,EACAxkB,EAAOkmB,KACPlmB,EAAOnG,OAMbmL,EAD0B,QAAzBolC,EAAgBpqB,KACRhb,GAAU+7B,EAEV/7B,GAAU+7B,CAvFA,CAHiB,CA2FvC,IAGI/7B,CACV,CAsBAslB,WAAWrsB,EAAS,GAAI9B,EAAS,MAS9B,GARAjF,KAAKopC,QAAUriC,EAAO+B,QAAQ9B,GAAMA,GAAKA,EAAE4kC,sBAG3C5rC,KAAKmpC,aAAenpC,KAAKopC,QACpBppC,KAAKopC,QAAQtgC,QAAQ9B,GAAMA,GAAKA,EAAEg5B,cAAyB,QAATh5B,EAAE3C,MACpD,GAGDY,EAAQ,CACTjF,KAAKurC,QAAUtmC,EAEf,IAAI4mC,EAAgB,CACjBjrC,GAAI,cACJQ,MAAO6D,EAAO7D,OAIb6D,EAAO61B,WACR+Q,EAAc/c,MAAQ,eAGzB9uB,KAAKopC,QAAQ0C,QAAQD,EACxB,aACU7rC,KAAKurC,OAElB,CAEAqH,YAAY1rB,EAAU,IACnBlnB,KAAK6yC,SAAW3rB,CACnB,CAQAA,QAAQpe,EAAS,MAAM,IACpB,IAAIgF,EAAS,GAcb,OAZI9N,KAAK+B,KACN+L,EAASA,EAAOgZ,OAAO9mB,KAAK+B,GAAGmlB,QAAQpe,KAGtC9I,KAAK6yC,WACN/kC,EAASA,EAAOgZ,QACZ9mB,KAAK6yC,UAAY,IAAI/pC,QAClBqe,GAAMre,EAAOqe,IAAMrZ,EAAOhF,QAAQ8G,GAAMA,EAAEhP,IAAMumB,EAAEvmB,KAAIuF,OAAS,MAKlE2H,CACV,CAEAjJ,SAASuB,GACNpG,KAAKkzC,gBAAkB9sC,GAAY,CAAC,EACpCpG,KAAKkzC,gBAAgB/xB,MAAQnhB,KAAKkzC,gBAAgB/xB,OAAS,EAC9D,oBC7xBH,MAAMiyB,EAAU,EAAQ,OAExB,SAASrzC,EAAEsE,EAAKwO,GAEb,OAAOA,CACV,CAEA,MAAMwgC,EAA2B,CAC9BhvC,IAAK,YAGLivC,YAAa,uBAIb/nC,KAAM,MAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,aAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,UAAW,WAAY,YAAa,MAAO,YAO/D/R,EAAgB,CACnBnnB,OAAQ,GACRm5B,UAAW,OACXC,cAAe,EACfC,YAAa,QAGhBv0C,EAAOC,QAAU,cAAmC0zC,EACjDzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQouC,EACzB,CAGAppB,kBACG,OAAOopB,CACV,CAEAppB,uBACG,OAAO6X,CACV,CAEA7X,wBAAwB5b,GACrB,MAAM4lC,EAAgBj0C,KAAKk0C,gBAAgBprC,QAAQsF,GACzCA,EAAKxN,IAAMyN,IAClB,GAEH,OAAO4lC,EAAgBA,EAAcE,KAAO,EAC/C,CAEAlqB,uBACG,MAAO,CACJ,CAAErpB,GAAI,OAAQ+B,MAAO5C,IAAWo0C,KAAM,IACtC,CAAEvzC,GAAI,QAAS+B,MAAO5C,IAAYo0C,KAAM,MACxC,CAAEvzC,GAAI,QAAS+B,MAAO5C,IAAYo0C,KAAM,KACxC,CAAEvzC,GAAI,QAAS+B,MAAO5C,IAAYo0C,KAAM,KACxC,CAAEvzC,GAAI,OAAQ+B,MAAO5C,IAAWo0C,KAAM,KACtC,CAAEvzC,GAAI,QAAS+B,MAAO5C,IAAYo0C,KAAM,KAE9C,CAEAlqB,uBAAuBtP,EAAQm5B,EAAWC,EAAeK,GAMtD,OAJGz5B,EACA3a,KAAKq0C,iBAAiBP,IACrB,aAAeM,GAAelhC,OAAO2R,SAASkvB,GAGrD,CAEA9tC,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS2tC,cAAgBlvB,SAAS7kB,KAAKoG,SAAS2tC,cACxD,CAQAhS,aAAap8B,UAEHA,EAAO3F,KAAK8G,WACtB,CAEAwZ,OAAOgN,GACJ,IAAKA,EAAQttB,KAAK8G,YAAa,MAAO,GAEtC,IAQG,OAPwB9G,KAAKL,YAAY20C,gBACtCt0C,KAAKoG,SAASuU,OACd3a,KAAKoG,SAAS0tC,UACd9zC,KAAKoG,SAAS2tC,cACdzmB,EAAQttB,KAAK8G,YAMnB,CAFE,MAAOqB,GACN,MAAO,EACV,CACH,oBC/IH,MAAMirC,EAAU,EAAQ,OAOlBmB,EAAyB,CAC5BlwC,IAAK,UAGLivC,YAAa,sDAIb/nC,KAAM,iBAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,WAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAKrBC,qBAAsB,CAAC,OAAQ,YAM5B/R,EAAgB,CACnBgH,QAAS,GAGZrpC,EAAOC,QAAU,cAAiC0zC,EAC/CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQsvC,EACzB,CAGAtqB,kBACG,OAAOsqB,CACV,CAEAtqB,uBACG,OAAO6X,CACV,CAYA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEY,MAAzB3F,KAAKoG,SAAS0iC,UACf9oC,KAAKoG,SAAS0iC,QAAUjkB,SAAS7kB,KAAKoG,SAAS0iC,SACrD,CAQA/G,aAAap8B,GACqB,MAA3BA,EAAO3F,KAAK8G,aAAgD,MAAzB9G,KAAKoG,SAAS0iC,UAClDnjC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0iC,QAE9C,kECzGH,MAAMsK,QAAU,oBAAQ,OAExB,SAASrzC,EAAEsE,EAAKwO,GAEb,OAAOA,CACV,CAGA,SAAS2hC,IAAIC,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIn0B,KAAKk0B,GAC1B,IAAKC,EAAU,OAAO,EAEtB,MAEMC,GAFQ,IAAIp0B,KAESm0B,GADX,QAGhB,OAAIC,EAAY,EAAUpuC,KAAKquC,MAAkB,GAAZD,GAAkB,GAE3CpuC,KAAKC,MAAMmuC,EAc1B,CAEA,SAASE,KAAKJ,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIn0B,KAAKk0B,GAC1B,OAAKC,EAEEA,EAASI,cAFM,CAGzB,CAEA,SAASC,MAAMN,GAEZ,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIn0B,KAAKk0B,GAC1B,OAAKC,EAGEA,EAASM,WAHM,CAIzB,CAEA,SAASC,IAAIR,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIn0B,KAAKk0B,GAC1B,OAAKC,EAEEA,EAASQ,UAFM,CAGzB,CAEA,SAASC,KAAKV,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIn0B,KAAKk0B,GAC1B,OAAKC,EAMEnuC,KAAKquC,MAAMF,EAASU,UAHZ,OAHO,CAOzB,CAEA,SAASC,KAAKZ,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIn0B,KAAKk0B,GAC1B,OAAKC,EAMEnuC,KAAKquC,MAAMF,EAASU,UAHX,MAHM,CAOzB,CAEA,SAASE,OAAOb,GAEb,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIn0B,KAAKk0B,GAC1B,OAAKC,EAMEnuC,KAAKquC,MAAMF,EAASU,UAHT,KAHI,CAOzB,CAEA,SAASG,eAAeC,GACrB,MAAMC,EAAQD,EAAO,GACfE,EAASnvC,KAAKC,MAAMivC,GACpBE,EAA6B,IAAlBF,EAAQC,GACnBE,EAAWrvC,KAAKquC,MAAMe,GAE5B,OAAOE,WAAW,GAAGH,KAAUE,IAClC,CAEA,MAAME,yBAA2B,CAC9BzxC,IAAK,YAGLivC,YAAa,mDAIb/nC,KAAM,aAINgoC,aAAe3tC,GAKiB,GAJD,CAAC,iBAAkB,OAAQ,OAAQ,UACvBkD,QAAQsF,GAC7CxI,EAAMQ,SAAS2vC,QAAQjJ,SAAS1+B,KAEhBjI,OAQtBqtC,YAAY,EAMZrvC,SAAU,YAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOA/R,cAAgB,CACnBiU,QAAS,GACTC,YAAa,OACbC,cAAe,GAGlBx2C,OAAOC,QAAU,MAAMw2C,6BAA6B9C,QACjDzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ6wC,yBACzB,CAGA7rB,kBACG,OAAO6rB,wBACV,CAEA7rB,uBACG,OAAO6X,aACV,CAWA7X,mBAAmBhlB,OAAQ8wC,QAASzoB,QAAS6oB,MAAOrnB,MAAQ,MACzD,OAAKinB,SAGLA,QAAUA,QAAQ/iC,QAAQ,eAAgB,gBAE1C/N,OAAO8B,SAAS9C,SAAS+C,IACtB,IAAIwvB,EAAUxvB,EAAEF,WAMhB,GALI0vB,EAAQnpB,QAAQ,MAAQ,IAEzBmpB,EAAUA,EAAQhP,MAAM,KAAK,IAG5BuuB,QAAQ1oC,QAAQ,IAAMmpB,EAAU,KAAO,EAAG,OAE9C,MAAM3sB,EACHyjB,QAAQ,GAAGroB,OAAO6pB,OAASA,SAAS9nB,EAAEF,eACtCwmB,QAAQtmB,EAAEF,YAGb,GAAa,UAATE,EAAE3C,IAAiB,CACpB,MAAM+xC,EAAY,IAAIvsC,GAAQ,KAC9BksC,QAAUA,QAAQ/iC,QACf,IAAIoP,OAAO,IAAMoU,EAAU,IAAK,KAChC4f,EAEN,MAEK,GAAa,aAATpvC,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAAkB,CAClD,IAAIgyC,EAASrvC,EAAEsZ,OAAOgN,UAAY,EAGb,iBAAV+oB,IACRA,EAASA,EAAOrjC,QAAQ,YAAa,KAExCqjC,EAAS,IAAIA,KAEbN,QAAUA,QAAQ/iC,QACf,IAAIoP,OAAO,IAAMoU,EAAU,IAAK,KAChC6f,EAEN,MAEK,GAAa,QAATrvC,EAAE3C,IAAe,CACvB,MAAMiyC,EAAU,IAAIzsC,GAAQ,MAC5BksC,QAAUA,QAAQ/iC,QACf,IAAIoP,OAAO,IAAMoU,EAAU,IAAK,KAChC8f,EAEN,MAEK,GAAa,WAATtvC,EAAE3C,IAAkB,CAC1B,MAAMkyC,EAAa,IAAI1sC,GAAQ,KAC/BksC,QAAUA,QAAQ/iC,QACf,IAAIoP,OAAO,IAAMoU,EAAU,IAAK,KAChC+f,EAEN,KAMIC,KAAKT,SAASU,QAAQN,OAAS,IA9DjB,EA+DxB,CAYApU,aAAap8B,UAEHA,EAAO3F,KAAK8G,WACtB,CAEAwZ,OAAOgN,GACJ,IAAI6oB,EAAQ,EACqB,QAA7Bn2C,KAAKoG,SAAS4vC,cACfG,EAAQn2C,KAAKoG,SAAS6vC,eAGzB,IACG,IAAInoC,EAAS9N,KAAKL,YAAY+2C,YAC3B12C,KAAKiF,OACLjF,KAAKoG,SAAS2vC,QACdzoB,EACA6oB,EACAn2C,KAAK8uB,OAGR,OAAQ9uB,KAAKoG,SAAS4vC,aACnB,IAAK,QACFloC,EAASA,EAAOkF,QAAQ,IAAK,KAC7B,MACH,IAAK,QACFlF,EAASA,EAAOkF,QAAQ,IAAK,KAInC,OAAOlF,CAGV,CAFE,MAAO3F,GACN,MAAO,EACV,CACH,oBClUH,MAAMirC,EAAU,EAAQ,OAOlBuD,EAA0B,CAC7BtyC,IAAK,WAGLivC,YAAa,iBAIb/nC,KAAM,MAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,iBAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1C/R,EAAgB,CACnB8U,eAAgB,GAKhB9C,UAAW,QAGdr0C,EAAOC,QAAU,cAAiC0zC,EAC/CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ0xC,EACzB,CAGA1sB,kBACG,OAAO0sB,CACV,CAEA1sB,uBACG,OAAO6X,CACV,CAEA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0tC,UACXnuC,EAAOS,SAAS0tC,WAAahS,EAAcgS,SACjD,CAQA/R,aAAap8B,UAEHA,EAAO3F,KAAK8G,WACtB,CAEA+vC,WAcG,OAbA72C,KAAK82C,UAAY,IAEhB92C,KAAKoG,SAASwwC,eAAepvB,MAAM,MAAQ,IAAIvjB,SAASrD,IAC1CZ,KAAKiF,OAAO8I,UAAUnN,IAE/BZ,KAAKwP,KAAK,UAAW,4BAA6B,CAC/CqqB,QAASj5B,EACTg2C,eAAgB52C,KAAKoG,SAASwwC,gBAEpC,IAII52C,KAAK82C,SACf,oBCrHH,IAAI1D,EAAU,EAAQ,OAOtB,MAAM2D,EAAyB,CAC5B1yC,IAAK,gBAGLivC,YAAa,oCAIb/nC,KAAM,gBAINgoC,cAAc,EAOdC,WAAa5tC,GAEH,CAAC,WAAY,WAAWyH,QADd,GAAGzH,GAAOQ,UAAUa,YAAYrB,GAAOQ,UAAUc,gBACd,EAOvD/C,SAAU,4BAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvC/R,EAAgB,CACnBn7B,WAAY,GAGZM,SAAU,MAIVC,YAAa,OAIbe,WAAY,GAIZvB,SAAU,KAUVU,WAAY,EAKZC,WAAY,GASZC,YAAa,IAMhB7H,EAAOC,QAAU,cAAiC0zC,EAC/CzzC,YAAYgG,EAAQV,EAAQ+xC,EAAgBD,GACzCj3C,MAAM6F,EAAQV,EAAQ+xC,GAEtBh3C,KAAKggC,cAAe,CAUvB,CAGA/V,kBACG,OAAO8sB,CACV,CAEA9sB,uBACG,OAAO6X,CACV,CAMA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASM,SAAWme,SAAS7kB,KAAKoG,SAASM,UAAY,GAC5D1G,KAAKoG,SAASgB,WAAayd,SAAS7kB,KAAKoG,SAASgB,YAAc,EACnE,CAEAyvC,WAyBG,OAxBA72C,KAAK82C,UAAY,GAED92C,KAAKsrB,WAElBtrB,KAAKwP,KACF,UACA,gBAAgBxP,KAAKoB,UAAUpB,KAAKY,sCAAsCZ,KAAKoG,SAAS6B,cACxF,CACGA,WAAYjI,KAAKoG,SAAS6B,aAKrBjI,KAAK4G,gBAEhB5G,KAAKwP,KACF,UACA,gBAAgBxP,KAAKoB,UAAUpB,KAAKY,uCAAuCZ,KAAKoG,SAASO,cACzF,CACGA,WAAY3G,KAAKoG,SAASO,aAK5B3G,KAAK82C,SACf,CAYA/U,eAA4B,CAU5B3S,YAAYvlB,EAAMtC,GACfzH,MAAMsvB,YAAYvlB,EAAMtC,EAC3B,CAEAwoB,eAEG,GAAI/vB,KAAK8G,WAAWuG,QAAQ,MAAQ,EAAG,CACpC,MAAM4pC,EAAQj3C,KAAK8G,WAAW0gB,MAAM,KACpC,MAAO,GAAGyvB,EAAM,MAAMj3C,KAAK+B,GAAGof,MAAMoV,sBAAsB0gB,EAAM,KACnE,CACG,OAAOj3C,KAAK+B,GAAGof,MAAMoV,sBAAsBv2B,KAAK8G,WAEtD,CAOIF,qBACD,MAAMswC,EAAUl3C,KAAK+B,GAAGgW,WAAW/X,KAAKoG,SAASO,YACjD,IAAKuwC,EAAS,CACX,MAAMC,EAAc,IAAI7uC,MACrB,gBAAgBtI,KAAKoB,UAAUpB,KAAKY,iCAAiCZ,KAAKoG,SAASO,eAEtF3G,KAAK+B,GAAGqG,OAAO2sB,QAAQoiB,EAAa,CACjCvxC,MAAO5F,KACP2G,WAAY3G,KAAKoG,SAASO,YAEhC,CACA,OAAOuwC,CACV,CAOI5rB,gBACD,MAAMkT,EAAax+B,KAAK4G,eACxB,IAAK43B,EAAY,OAAO,KAExB,MAAMv2B,EAAau2B,EAAWzwB,UAAU/N,KAAKoG,SAAS6B,YACtD,IAAKA,EAAY,CACd,MAAMkvC,EAAc,IAAI7uC,MACrB,gBAAgBtI,KAAKoB,UAAUpB,KAAKY,iCAAiCZ,KAAKoG,SAAS6B,eAEtFjI,KAAK+B,GAAGqG,OAAO2sB,QAAQoiB,EAAa,CACjCvxC,MAAO5F,KACPiI,WAAYjI,KAAKoG,SAAS6B,YAEhC,CACA,OAAOA,CACV,CAQAmvC,mBAAmBl4B,GAChB,IAAIm4B,EAGJ,MAAMpS,EAAejlC,KAAK4G,eAE1B,IAAIiD,EAAO7J,KAAKs3C,UAAUp4B,GAC1B,GAAIrV,GAAQo7B,EAAc,CAEvB,GAAmB,iBAARp7B,EACR,IACGA,EAAOgK,KAAK0D,MAAM1N,EAKrB,CAJE,MAAOQ,GAGNgtC,EAAextC,CAClB,CAGHwtC,EAAextC,CAClB,CAEA,OAAOwtC,CACV,CAEAC,UAAUhqB,GACP,GAAe,MAAXA,EAAiB,MAAO,GAE5B,MAAMiqB,EAAW,GAAGv3C,KAAKiF,OAAOkC,QAAQnH,KAAK+vB,iBAE7C,OACGzC,EAAQttB,KAAK+vB,iBACbzC,EAAQiqB,IACRjqB,EAAQttB,KAAK8G,aACb,EAEN,CAEAwZ,OAAOgN,GACJ,MAAMtX,EAAMhW,KAAKo3C,mBAAmB9pB,GAC9B2X,EAAejlC,KAAK4G,eAG1B,OAAIuG,MAAMC,QAAQ4I,GACRA,EACH7H,KAAKiF,GACW,MAAVA,EAAE/E,KAAqB42B,EAAa7C,YAAYhvB,IAAM,GAC9CA,EAAE/E,MAAQ,KAExBC,KAAK,MAEH0H,EACU,MAAZA,EAAI3H,KAAqB42B,EAAa7C,YAAY9U,IAAY,GACzDtX,EAAI3H,KAAa2H,EAAI3H,MAAQ,QAAjC,EAGI,EACf,CAOApH,WACG,OAAOjH,KAAKoG,SAASa,QACxB,CAOAC,cACG,OAAOlH,KAAKoG,SAASc,WACxB,CAOAR,WACG,OAAO1G,KAAKoG,SAASM,QACxB,CAMIW,iBACD,IAAKrH,KAAKoG,SAASgB,aAAepH,KAAKoG,SAASiB,WAC7C,OAAO,KAIV,GAC6B,OAA1BrH,KAAKoG,SAASa,UACe,QAA7BjH,KAAKoG,SAASc,YAEd,OAAOlH,KAAK4G,eAAeG,QACvBC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASiB,aAC9B,GAGA,GACwB,OAA1BrH,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,YAEd,OAAIlH,KAAKoG,SAASM,SACR1G,KAAK4G,eAAeG,QACvBC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASiB,aAC9B,GAEKrH,KAAKiF,OAAO8B,QACfC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASiB,aAC9B,GAIH,GACwB,QAA1BrH,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,YAEd,OAAOlH,KAAKiF,OAAO8B,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASiB,aAAY,GAGjE,GACwB,QAA1BrH,KAAKoG,SAASa,UACe,QAA7BjH,KAAKoG,SAASc,YACf,CACC,IAAIG,EAAarH,KAAKiF,OAAO8B,QACzBC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASiB,aAC9B,GAOF,OALkB,MAAdA,IACDA,EAAarH,KAAK4G,eAAeG,QAC7BC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASiB,aAC9B,IAEEA,CACV,CAEA,OAAO,IACV,CAMIC,kBACD,IAAKtH,KAAKoG,SAASgB,aAAepH,KAAKoG,SAASkB,YAC7C,OAAO,KAGV,IAAID,EAiBJ,MAb6B,QAA1BrH,KAAKoG,SAASa,UACe,QAA7BjH,KAAKoG,SAASc,cAEdG,EAAarH,KAAKiF,OAAO8B,QACrBC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASkB,cAC9B,GAEgB,MAAdD,IACDA,EAAarH,KAAK4G,eAAeG,QAC7BC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASkB,cAC9B,KAGDD,CACV,CAWAmwC,iBAAiBlqB,EAASnrB,EAAU,CAAC,GAClC,GAAe,MAAXmrB,EAAiB,OACrB,IAAIkJ,EACJ,MAAMnvB,EAAarH,KAAKqH,WAClBT,EAAiB5G,KAAK4G,eAI5B,GAC6B,QAA1B5G,KAAKoG,SAASa,UACe,QAA7BjH,KAAKoG,SAASc,YACf,CACC,MAAMI,EAActH,KAAKsH,YAErBD,GAAcA,EAAWpC,OAAOrE,IAAMgG,EAAehG,GACtD41B,EAAUnvB,EAAWP,WACbQ,GAAeA,EAAYrC,OAAOrE,IAAMgG,EAAehG,KAC/D41B,EAAUlvB,EAAYR,WAE5B,MAGGO,IAC4B,OAA1BrH,KAAKoG,SAASa,UACgB,QAA7BjH,KAAKoG,SAASc,aACa,OAA1BlH,KAAKoG,SAASa,UACiB,OAA7BjH,KAAKoG,SAASc,aACdlH,KAAKoG,SAASM,UAEpB8vB,EAAUnvB,EAAWP,WAIK,QAA1B9G,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,YAOXsvB,EADCr0B,EAAQs1C,UACC7wC,EAAe0nB,KAEfjnB,EACLA,EAAWP,WACX9G,KAAKsrB,UAAUxkB,WAIjBF,IACN4vB,EAAU5vB,EAAe0nB,MAG5B,IAAIxgB,EAASwf,EAAQkJ,IAAYlJ,EAAQ1sB,IAAM0sB,EAM/C,MAJe,MAAXkJ,IACD1oB,EAAS+W,SAAS/W,IAGdA,CACV,oBCjfH,MAAMiV,EAAY,EAAQ,OAE1BtjB,EAAOC,QAAU,cAA0BqjB,EACxCpjB,YAAYgG,EAAQV,EAAQ+xC,GACzBl3C,MAAM,CAAC,SAAUmF,EAAOlD,IAGxB/B,KAAKoE,SAAW4yC,GAAiB,CAAC,EAsBlCh3C,KAAKiF,OAASA,EAEdjF,KAAKiG,WAAWN,EACnB,CAQW+xC,2BACR,MAAO,CACJ,KACA,aACA,aACA,aACA,YACA,YAEN,CAEAztB,uBACG,MAAO,CAAC,CACX,CAGAvgB,WACG,OAAO1J,KAAKoE,SAASC,GACxB,CAMAszC,gBACG,OAAI33C,KAAKoE,SAASwvC,mBACXzmC,MAAMC,QAAQpN,KAAKoE,SAASwvC,oBACtB5zC,KAAKoE,SAASwvC,mBAEd,CAAC5zC,KAAKoE,SAASwvC,oBAGlB,EAEb,CAMAgE,kBACG,OAAI53C,KAAKoE,SAASyvC,qBACX1mC,MAAMC,QAAQpN,KAAKoE,SAASyvC,sBACtB7zC,KAAKoE,SAASyvC,qBAEd,CAAC7zC,KAAKoE,SAASyvC,sBAGlB,EAEb,CAGAgE,YACG,OAAO73C,KAAKoE,SAASmH,IACxB,CAGAusC,gBACG,OAAO93C,KAAKoE,SAASD,QACxB,CAGA4zC,mBACG,OAAO/3C,KAAKoE,SAASkvC,WACxB,CAGA1H,oBACG,OAAkC,MAA9B5rC,KAAKoE,SAASmvC,aAC2B,mBAA/BvzC,KAAKoE,SAASmvC,aACfvzC,KAAKoE,SAASmvC,aAAavzC,MAE3BA,KAAKoE,SAASmvC,aAIpB,CACV,CAGA3nC,kBACG,OAAgC,MAA5B5L,KAAKoE,SAASovC,WACyB,mBAA7BxzC,KAAKoE,SAASovC,WACfxzC,KAAKoE,SAASovC,WAAWxzC,MAEzBA,KAAKoE,SAASovC,WAIpB,CACV,CAGAjR,kBACG,OAAgC,MAA5BviC,KAAKoE,SAASuvC,WACyB,mBAA7B3zC,KAAKoE,SAASuvC,WACf3zC,KAAKoE,SAASuvC,WAAW3zC,MAEzBA,KAAKoE,SAASuvC,WAIpB,CACV,CAEAqE,sBACG,OAAIh4C,KAAKoE,SAASqvC,gBAAuBzzC,KAAKoE,SAASqvC,cAG1D,CAEAwE,oBACG,OAAkC,MAA9Bj4C,KAAKoE,SAAS8zC,eAC2B,mBAA/Bl4C,KAAKoE,SAAS8zC,aACfl4C,KAAKoE,SAAS8zC,aAAal4C,MAE3BA,KAAKoE,SAAS8zC,aAK9B,CAgBApyC,QACG,MAAMgS,EAAMhY,MAAMgG,QAElB,MAAO,CACJlF,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,QACnByC,IAAKrE,KAAKqE,IACVkH,KAAMvL,KAAKuL,KACX3C,WAAY5I,KAAK4I,WACjB9B,WAAY9G,KAAK8G,WACjBV,SAAUpG,KAAKoG,SACfse,aAAc5M,EAAI4M,aAExB,CAEAyzB,aAAaniC,EAAKoiC,GACf,IAAIC,EAAYD,EAIhB,YAHkB,IAAPpiC,IACRqiC,EAAYriC,GAERqiC,CACV,CAQApyC,WAAWN,GACH3F,KAAKY,KAAIZ,KAAKY,GAAK+E,EAAO/E,IAC/BZ,KAAK4B,KAAQ+D,EAAO/D,KACpB5B,KAAKqE,IAAMsB,EAAOtB,KAAOrE,KAAK0J,WAC9B1J,KAAKuL,KAAO5F,EAAO4F,MAAQvL,KAAK63C,YAEhClyC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EAItCpG,KAAKoB,MAAQuE,EAAOvE,OAASuE,EAAOS,SAAShF,OAAS,UAEtDpB,KAAK8G,WAAanB,EAAOmB,YAAc,GAEvC9G,KAAK4I,WAAajD,EAAOiD,YAAc,EAEvC5I,KAAKoG,SAAWT,EAAOS,SACvBpG,KAAKoG,SAASC,SAAWrG,KAAKm4C,aAAaxyC,EAAOS,SAASC,SAAU,KACrErG,KAAKoG,SAASkyC,SAAWt4C,KAAKm4C,aAAaxyC,EAAOS,SAASkyC,SAAU,KACrEt4C,KAAKoG,SAASpF,MAAQhB,KAAKm4C,aAAaxyC,EAAOS,SAASpF,MAAO,KAG/DhB,KAAK4I,WAAaic,SAAS7kB,KAAK4I,YAChC5I,KAAKoG,SAASC,SAAWwe,SAAS7kB,KAAKoG,SAASC,UAChDrG,KAAKoG,SAASkyC,SAAWzzB,SAAS7kB,KAAKoG,SAASkyC,UAChDt4C,KAAKoG,SAAShG,OAASykB,SAAS7kB,KAAKoG,SAAShG,QAAU,GACxDJ,KAAKoG,SAASpF,MAAQ6jB,SAAS7kB,KAAKoG,SAASpF,OAG7C,MAAM8gC,EAAgB9hC,KAAKL,YAAYmiC,iBAAmB,CAAC,EAC3D,IAAK,MAAM/P,KAAM+P,EACd9hC,KAAKoG,SAAS2rB,GAAM/xB,KAAKm4C,aACtBxyC,EAAOS,SAAS2rB,GAChB+P,EAAc/P,IAKpBjyB,MAAMmG,WAAWN,GAGjB3F,KAAK8G,WAAa9G,KAAK8G,YAAc9G,KAAKoB,MAI1CpB,KAAK8G,WAAa9G,KAAK8G,WAAWkM,QAAQ,mBAAoB,GACjE,CAQA2U,aACG,OAAO3nB,KAAKiF,OAAO+8B,WAAahiC,KAAKY,EACxC,CAQAmhC,aAAap8B,GACVA,EAAO3F,KAAK8G,YAAc,EAC7B,CAQAsoB,YAAYvlB,EAAMtC,IAGZvH,KAAKoG,SAASkyC,UACY,MAAzBzuC,EAAK7J,KAAK8G,aAAgD,IAAzB+C,EAAK7J,KAAK8G,aACnB,GAAzB+C,EAAK7J,KAAK8G,aAEVS,EAAUgW,SAASvd,KAAK8G,WAAY,4BAE1C,CAOIg6B,qBACD,OAAO,CACV,CAEAwW,UAAUhqB,GACP,MAAMiqB,EAAW,GAAGv3C,KAAK8uB,OAAS9uB,KAAKiF,OAAOkC,QAAQnH,KAAK8G,aAE3D,IAAIgH,EAAS,GAOb,OANgC,MAA5Bwf,EAAQttB,KAAK8G,YACdgH,EAASwf,EAAQttB,KAAK8G,YACO,MAArBwmB,EAAQiqB,KAChBzpC,EAASwf,EAAQiqB,IAGbzpC,CACV,CAQAwS,OAAOgN,GACJ,OAAIA,EACMttB,KAAKs3C,UAAUhqB,GACX,EACjB,CASAzY,eACG,MAAM0jC,EAAQz4C,MAAM+U,eAWpB,MAPkB,IAAd0jC,EAAMpxC,OACPoxC,EAAMpxC,KACHoxC,EAAMh3B,KAAKpa,MAAQoxC,EAAMh3B,KAAKngB,OAASm3C,EAAMh3B,KAAKza,YAEpD9G,KAAKiF,QAAUjF,KAAKiF,OAAOkC,OAC5BoxC,EAAMpxC,KAAO,GAAGnH,KAAKiF,OAAOkC,SAASoxC,EAAMpxC,QAEvCoxC,CACV,oBC5VH,MAAMnF,EAAU,EAAQ,OAExB,SAASrzC,EAAEsE,EAAKwO,GAEb,OAAOA,CACV,CAEA,MAAM2lC,EAAsB,CACzBn0C,IAAK,OAGLivC,YAAa,4BAIb/nC,KAAM,WAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,OAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpB/R,EAAgB,CACnB2W,WAAY,EACZC,YAAa,EACbC,iBAAkB,KAClBC,kBAAmB,OACnBC,kBAAmB,OACnBC,oBAAqB,EACrBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,MAGpBx5C,EAAOC,QAAU,cAA8B0zC,EAC5CzzC,YAAYgG,EAAQV,EAAQ68B,EAAgB0W,GACzC14C,MAAM6F,EAAQV,EAAQ68B,EACzB,CAGA7X,kBACG,OAAOuuB,CACV,CAEAvuB,uBACG,OAAO6X,CACV,CAgBA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASqyC,WAAa5zB,SAAS7kB,KAAKoG,SAASqyC,YAClDz4C,KAAKoG,SAASsyC,YAAc7zB,SAAS7kB,KAAKoG,SAASsyC,YACtD,CAYA3W,aAAap8B,GACV,GAA+B,MAA3BA,EAAO3F,KAAK8G,YAAqB,OAErC,IAAIoyC,EAG6B,GAA7Bl5C,KAAKoG,SAASsyC,YACfQ,EAAa,IAAI34B,KAIY,GAA7BvgB,KAAKoG,SAASsyC,aACd14C,KAAKoG,SAASuyC,mBAEdO,EAAa,IAAI34B,KAAKvgB,KAAKoG,SAASuyC,mBAIrB,MAAdO,IACDvzC,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAGof,MAAMX,aAAa04B,EAAY,CAC9D54B,OAAQ,eAIjB,CASA8O,YAAYvlB,EAAMtC,GAGf,GAFAzH,MAAMsvB,YAAYvlB,EAAMtC,GAEpBsC,EAAK7J,KAAK8G,YAAa,CACxB,IAAInE,EAAQkH,EAAK7J,KAAK8G,YAQtB,GANMnE,aAAiB4d,OACpB5d,EAAQ3C,KAAK+B,GAAGof,MAAMhB,OAAOxd,IAMa,kBAA1CwR,OAAOglC,UAAUzkC,SAAS0kC,KAAKz2C,IAC/B02C,SAAS12C,GACV,CACC,IAAI4C,GAAU,EAGd,GAAIvF,KAAKoG,UAAYpG,KAAKoG,SAASwyC,kBAAmB,CACnD,MAAMU,EAAYt5C,KAAKoG,SAAS4yC,kBACxB,IAAIz4B,KAAKvgB,KAAKoG,SAAS4yC,mBACvB,KACLO,EAAUv5C,KAAKoG,SAAS6yC,gBACnB,IAAI14B,KAAKvgB,KAAKoG,SAAS6yC,iBACvB,KACLO,EAAmBx5C,KAAKy5C,eAAeH,GACvCI,EAAiB15C,KAAKy5C,eAAeF,GAClCI,EAAU35C,KAAK+B,GAAGof,MAAMN,aAC3B,IAAIN,KACJvgB,KAAKoG,SAAS0yC,oBACd94C,KAAKoG,SAASyyC,mBAEXe,EAAU55C,KAAK+B,GAAGof,MAAMF,QAC3B,IAAIV,KACJvgB,KAAKoG,SAAS2yC,mBACd/4C,KAAKoG,SAASyyC,mBAEjB,OAAQ74C,KAAKoG,SAASwyC,mBACnB,IAAK,YACEe,EAAUh3C,GAASA,EAAQi3C,EAASr0C,GAAU,GAE/CA,GAAU,EACVgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAoC,CACnCC,KAAKy5C,eAAeE,GACpB35C,KAAKy5C,eAAeG,OAK7B,MACH,IAAK,UACEN,EAAY32C,GAASA,EAAQ42C,EAASh0C,GAAU,GAEjDA,GAAU,EACVgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAoC,CACnCy5C,EACAE,MAIT,MACH,IAAK,aACE/2C,EAAQ22C,GAAaC,EAAU52C,EAAO4C,GAAU,GAEjDA,GAAU,EACVgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAwC,CACvCy5C,EACAE,MAIT,MACH,IAAK,IACFn0C,EACG5C,EAAMyyC,SACNkE,EAAUlE,SACVzyC,EAAMyyC,WAAakE,EAAUlE,UAC3B7vC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAoB,CAACy5C,KAE7B,MACH,IAAK,KACFj0C,EACG5C,EAAMyyC,SACNkE,EAAUlE,SACVzyC,EAAMyyC,WAAakE,EAAUlE,UAC3B7vC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAwB,CAACy5C,KAEjC,MACH,IAAK,IACFj0C,EACG5C,EAAMyyC,SACNkE,EAAUlE,SACVzyC,EAAMyyC,UAAYkE,EAAUlE,UAC1B7vC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAoB,CAACy5C,KAE7B,MACH,IAAK,IACFj0C,EACG5C,EAAMyyC,SACNkE,EAAUlE,SACVzyC,EAAMyyC,UAAYkE,EAAUlE,UAC1B7vC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAqB,CAACy5C,KAE9B,MACH,IAAK,KACFj0C,EACG5C,EAAMyyC,SACNkE,EAAUlE,SACVzyC,EAAMyyC,WAAakE,EAAUlE,UAC3B7vC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAA6B,CAACy5C,KAEtC,MACH,IAAK,KACFj0C,EACG5C,EAAMyyC,SACNkE,EAAUlE,SACVzyC,EAAMyyC,WAAakE,EAAUlE,UAC3B7vC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAA8B,CAACy5C,KAIhD,CAEIj0C,IAGDsE,EAAK7J,KAAK8G,YAAc9G,KAAK65C,YAAYl3C,GAE/C,MAEG4E,EAAUgW,SAASvd,KAAK8G,WAAY,oBAE1C,CACH,CAEAwZ,OAAOgN,GACJ,MAAMsC,EAAI5vB,KAAKs3C,UAAUhqB,GAEzB,GAAS,IAALsC,GAAgB,MAALA,EACZ,MAAO,GAIV,MAAMkqB,EAAU95C,KAAK+B,GAAGof,MAAMhB,OAAOyP,GACrC,OAAO5vB,KAAKy5C,eAAeK,EAI9B,CAEAC,YACG,IAAIC,EAAmB,GAOvB,OAJGh6C,KAAKoG,UAAYpG,KAAKoG,SAASqyC,WAC1Bz4C,KAAKoG,SAASqyC,WACd,IAIL,KAAS,EAuBT,QAEMuB,EAAmB,WAEtB,MArBH,KAAK,EAECA,EAAmB,WAEtB,MAEH,KAAK,EAECA,EAAmB,YAEtB,MAEH,KAAK,EAECA,EAAmB,YAU5B,OAAOA,CACV,CAEAP,eAAeQ,GACZ,MAAMxB,EAAaz4C,KAAK+5C,YAExB,OAAO/5C,KAAKk6C,aAAazB,EAAYwB,EACxC,CAmBAJ,YAAYl3C,GACT,OAAOA,EAAQ3C,KAAK+B,GAAGof,MAAMX,aAAa7d,EAAO,CAC9C2d,OAAQ,eACN,EAER,CAEA45B,aAAazB,EAAYwB,GACtB,OAAIA,GAAYA,EAASvlC,SAAiBulC,EAASvlC,WACvC,EACf,GAKHjV,EAAOC,QAAQy6C,MAAQ,+CCvZvB,MAAMC,EAAkB,EAAQ,OAO1B5B,EAAsB,CACzBn0C,IAAK,WAGLivC,YAAa,6BAIb/nC,KAAM,UAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,cAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,YAKrBC,qBAAsB,CAAC,aAMpB/R,EAAgB,CACnBuY,WAAY,EACZC,YAAa,EACbC,iBAAkB,MAGrB96C,EAAOC,QAAU,cAAkC06C,EAChDz6C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQuzC,EACzB,CAGAvuB,kBACG,OAAOuuB,CACV,CAEAvuB,uBACG,MAAMuwB,EAAc16C,MAAMgiC,gBAC1B,OAAO3tB,OAAOsmC,OAAOD,EAAa1Y,EACrC,CAgBA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASi0C,WAAax1B,SAAS7kB,KAAKoG,SAASi0C,YAClDr6C,KAAKoG,SAASk0C,YAAcz1B,SAAS7kB,KAAKoG,SAASk0C,YACtD,CAYAvY,aAAap8B,GACV,GAA+B,MAA3BA,EAAO3F,KAAK8G,YAAqB,OAIrC,IAAIoyC,EAYJ,GAdAp5C,MAAMiiC,aAAap8B,GAKfA,EAAO3F,KAAK8G,cACboyC,EAAal5C,KAAK+B,GAAGof,MAAMhB,OAAOxa,EAAO3F,KAAK8G,cAQhB,GAA7B9G,KAAKoG,SAASk0C,YAAkB,CACjC,MAAMI,EAAW,IAAIn6B,KAEH,MAAd24B,IAAoBA,EAAa,IAAI34B,MAEzC24B,EAAWyB,SAASD,EAASE,YAC7B1B,EAAW2B,WAAWH,EAASI,cAC/B5B,EAAW6B,WAAWL,EAASM,cAC/B9B,EAAW+B,gBAAgBP,EAASQ,kBACvC,MAEK,GAC2B,GAA7Bl7C,KAAKoG,SAASk0C,aACdt6C,KAAKoG,SAASm0C,iBACf,CACC,MAAMD,EAAc,IAAI/5B,KAAKvgB,KAAKoG,SAASm0C,kBAEzB,MAAdrB,IAAoBA,EAAa,IAAI34B,MAEzC24B,EAAWyB,SAASL,EAAYM,YAChC1B,EAAW2B,WAAWP,EAAYQ,cAClC5B,EAAW6B,WAAWT,EAAYU,cAClC9B,EAAW+B,gBAAgBX,EAAYY,kBAC1C,CAGkB,MAAdhC,IACDvzC,EAAO3F,KAAK8G,YAAcoyC,EAAWiC,cAC3C,CAEApB,YACG,MAAMM,EAAar6C,KAAKo7C,gBAIxB,OAFAp7C,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAEF,GAA5BpG,KAAKoG,SAASqyC,WACR4B,EAKH,GAFYv6C,MAAMi6C,eAEDM,GAC3B,CAEA/5B,OAAOgN,GACJ,MAAM+tB,EAAiBr7C,KAAK+5C,YACtBnqB,EAAI5vB,KAAKs3C,UAAUhqB,GACnBwsB,EAAU95C,KAAK+B,GAAGof,MAAMhB,OAAOyP,GAErC,MAAS,IAALA,GAAgB,MAALA,EACL,GAGHnsB,MAAM8c,KAAK+6B,UAAUD,EAArB53C,CAAqCq2C,EAC/C,CAEAsB,gBAEG,OADAp7C,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAC1BpG,KAAKoG,SAASi0C,YACnB,KAAK,EACF,MAAO,YACV,KAAK,EACF,MAAO,SACV,QACG,MAAO,GAEhB,CAOAR,YAAYp5B,GACT,OAAOA,GAAM06B,iBAAmB,EACnC,GAKH17C,EAAOC,QAAQy6C,MACZ,0ECnNH,MAAM/G,EAAU,EAAQ,OAOlBmI,EAAuB,CAC1Bl3C,IAAK,QAGLivC,YAAa,kDAIb/nC,KAAM,WAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,QAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvC/R,EAAgB,CACnBgH,QAAS,GACT0S,gBAAiB,GAGpB/7C,EAAOC,QAAU,cAA+B0zC,EAC7CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQs2C,EACzB,CAGAtxB,kBACG,OAAOsxB,CACV,CAEAtxB,uBACG,OAAO6X,CACV,CAMA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0iC,QAAUnjC,EAAOS,SAAS0iC,SAAW,EACtD,CAYA/G,aAAap8B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAAS0iC,UACfnjC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0iC,QAGjD,CAUA1Z,YAAYvlB,EAAMtC,GACf,GAAIsC,EAAK7J,KAAK8G,YAAa,CACxB,MAAM20C,EAAM,wJAEZ,IAAI94C,EAAQkH,EAAK7J,KAAK8G,YACtBnE,EAAQuY,OAAOvY,GAAOwV,cACjBsjC,EAAIp5B,KAAK1f,IACX4E,EAAUgW,SAASvd,KAAK8G,WAAY,gBAE1C,CACH,oBC/HH,MAAMssC,EAAU,EAAQ,OAOlBsI,EAAsB,CACzBr3C,IAAK,OAGLivC,YAAa,gCAIb/nC,KAAM,OAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,kBAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvC/R,EAAgB,CACnB6Z,mBAAoB,EACpBC,SAAU,EACVC,SAAU,IAGbp8C,EAAOC,QAAU,cAA8B0zC,EAC5CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQy2C,EACzB,CAGAzxB,kBACG,OAAOyxB,CACV,CAEAzxB,uBACG,OAAO6X,CACV,CAMA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASw1C,SAAW/2B,SAAS7kB,KAAKoG,SAASw1C,UAChD57C,KAAKoG,SAAS01C,cAAgBj3B,SAAS7kB,KAAKoG,SAAS01C,eACrD97C,KAAKoG,SAAS21C,cAAgBl3B,SAAS7kB,KAAKoG,SAAS21C,eACrD/7C,KAAKoG,SAASu1C,mBAAqB92B,SAChC7kB,KAAKoG,SAASu1C,mBAEpB,CAcArE,UAAUhqB,GACP,MAAMiqB,EAAW,GAAGv3C,KAAK8uB,OAAS9uB,KAAKiF,OAAOkC,QAAQnH,KAAK8G,aAE3D,IAAIgH,EAASwf,EAAQttB,KAAK8G,aAAewmB,EAAQiqB,IAAa,CAAC,EAC/D,GAAqB,iBAAVzpC,EACR,IACGA,EAAS+F,KAAK0D,MAAMzJ,EAGvB,CAFE,MAAO3F,GAET,CAGH,OAAO2F,CACV,CAcAi0B,aAAap8B,GACVA,EAAO3F,KAAK8G,YAAc,IAC7B,CAEAwZ,OAAOgN,GACJ,IAAIxf,EAAS9N,KAAKs3C,UAAUhqB,GAC5B,GAAIxf,EAAQ,CACT,GAAqB,iBAAVA,EACR,IACGA,EAAS+F,KAAK0D,MAAMzJ,EAGvB,CAFE,MAAO3F,GAET,CAIH,OAAO2F,GAASA,EAAOkuC,UAAiB,EAC3C,CACG,MAAO,EAEb,CAQAC,aAAaC,GACV,MAAMC,EAAcr8C,MAAMm8C,aAAaC,GAQvC,MAJsC,MAAlCC,IAAcn8C,KAAK8G,oBACbq1C,EAAYn8C,KAAK8G,YAGpBq1C,CACV,oBC5KH,MAAM/I,EAAU,EAAQ,OAMlBgJ,EAAyB,CAC5B/3C,IAAK,UAGLivC,YACG,qEAIH/nC,KAAM,iBAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,UAIV+zC,aAAetyC,IACZ,MAAM0lB,EAAY1lB,EAAM0lB,UACxB,OAAiB,MAAbA,GAGqB,cAAlBA,EAAUjnB,GAAmB,EAGvCovC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOA/R,EAAgB,CACnBl8B,MAAO,GACP44B,WAAY,GACZlT,UAAW,GACX1pB,KAAM,MACNgtB,MAAO,IAGVnvB,EAAOC,QAAU,cAAiC0zC,EAC/CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQm3C,EACzB,CAGAnyB,kBACG,OAAOmyB,CACV,CAEAnyB,uBACG,OAAO6X,CACV,CAYAC,aAAap8B,UAEHA,EAAO3F,KAAK8G,WACtB,CAWAwZ,OAAOgN,EAAS+uB,GAAc,EAAOC,GAAY,GAC9C,MAAMhxB,EAAYtrB,KAAKsrB,UAEjBixB,EAAYC,IAEf,GAAKlxB,GAA8B,aAAjBA,EAAUjnB,IAErB,CACJ,MAAMo4C,EAAgB,CAAC,EAEvB,OADAA,EAAcnxB,EAAUxkB,YAAc01C,EAC/BlxB,EAAUhL,OAAOm8B,EAC3B,CALG,OAAOD,CAKV,EAKH,GAAgC,MAA5BlvB,EAAQttB,KAAK8G,cAAwBu1C,IAAgBC,EAEtD,OAAOC,EAASjvB,EAAQttB,KAAK8G,aACzB,GAAgC,MAA5BwmB,EAAQttB,KAAK8G,cAAwBu1C,GAAeC,EAC5D,OAAOhvB,EAAQttB,KAAK8G,YAGvB,IAAKwkB,EAAW,OAAO,EAEvB,MAAMoxB,EAAY18C,KAAK08C,YACvB,IAAKA,EAAW,OAAO,EAEvB,IAAI7yC,EACDyjB,EAAQovB,EAAU3sB,iBAClBzC,EAAQovB,EAAU51C,aAClB,GACEqG,MAAMC,QAAQvD,KAAOA,EAAO,CAACA,IAI/BA,GACAA,EAAK1D,QACLnG,KAAKoG,UACLpG,KAAKoG,SAASwoB,OACd5uB,KAAKoG,SAASwoB,MAAMzN,OACpBnhB,KAAKoG,SAASwoB,MAAMzN,MAAMhb,SAE1BnG,KAAK28C,aAAa93C,SAAS7E,KAAKoG,SAASwoB,OACzC/kB,EAAOA,EAAKf,QAAQsF,GAASpO,KAAK28C,aAAap3C,QAAQ6I,MAG1D,IAAIwuC,EAAa,GAGjB,OAAQtxB,EAAUjnB,KACf,IAAK,YACFwF,EAAK5F,SAAS2rB,IACXgtB,EAAWt4C,KAAKuxC,WAAWvqB,EAAUhL,OAAOsP,IAAM,GAAG,IAExD,MACH,IAAK,SACFgtB,EAAa/yC,EAAKsE,KAAKyhB,GAAMA,EAAEtE,EAAUxkB,aAAe,IAI9D,IAAIgH,EAAS,EAGb,MAAM+uC,EAAcvxB,EAAUwxB,iBAG9B,OAAQ98C,KAAKoG,SAASxE,MACnB,IAAK,MACF,GAAIg7C,EAAWz2C,OAAS,EAAG,CAGxB,MAAM42C,EAAax2C,KAAKy2C,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAW34C,SAAS+R,IACjBinC,GAAOjnC,EAAM+mC,GAAc,CAAC,IAG/BjvC,EAASmvC,EAAMF,CAClB,CACA,MAEH,IAAK,UACF,GAAIH,EAAWz2C,OAAS,EAAG,CAGxB,MAAM42C,EAAax2C,KAAKy2C,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAW34C,SAAS+R,IACjBinC,GAAOjnC,EAAM+mC,GAAc,CAAC,IAI/BjvC,EAASmvC,EAAMF,EAAaH,EAAWz2C,MAC1C,CACA,MAEH,IAAK,MACF2H,EAASvH,KAAK22C,OAAON,IAAe,EACpC,MACH,IAAK,MACF9uC,EAASvH,KAAK42C,OAAOP,IAAe,EACpC,MACH,IAAK,QACF9uC,EAAS8uC,EAAWz2C,OAO1B,OAHAmnB,EAAQttB,KAAK8G,YAAcgH,EAGN,aAAjBwd,EAAUjnB,IACJyJ,EAEAyuC,EAASzuC,EAEtB,CAEA4uC,YACG,OAAO18C,KAAKiF,OAAO8B,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASR,QAAO,EACjE,CAEI0lB,gBACD,MAAMxT,EAAM9X,KAAKiF,OAAOlD,GAAG2jB,SACvB5N,GAAQA,EAAIlX,IAAMZ,KAAKoG,SAASnB,SAClC,GACF,IAAK6S,EAAK,OAAO,KAGjB,OADcA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASklB,YAAW,IAC9C,IAGtB,CAEIqxB,mBAUD,OATuB,MAAnB38C,KAAKo9C,aACNp9C,KAAKo9C,WAAap9C,KAAK+B,GAAGoxB,iBAAiB,GAAGnzB,KAAKY,oBAE/CZ,KAAKsrB,WAAatrB,KAAKsrB,UAAUrmB,SAClCjF,KAAKo9C,WAAWhqB,WAAWpzB,KAAKsrB,UAAUrmB,OAAO8B,UACjD/G,KAAKo9C,WAAWv4C,SAAS7E,KAAKoG,SAASwoB,SAItC5uB,KAAKo9C,UACf,oBCvRH,MAAMhK,EAAU,EAAQ,OAElBiK,EAAuB,CAC1Bh5C,IAAK,QAGLivC,YAAa,kCAIb/nC,KAAM,eAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,mBAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvC/R,EAAgB,CACnBwb,SAAU,EACVC,WAAY,GACZC,UAAW,EACXC,YAAa,GACb9B,mBAAoB,EACpB+B,iBAAiB,EACjBC,gBAAiB,IAGpBl+C,EAAOC,QAAU,cAA+B0zC,EAC7CzzC,YAAYgG,EAAQV,GAIjB,GAHAnF,MAAM6F,EAAQV,EAAQo4C,GAIc,qBAAjCA,EAAqBl5C,UACrBnE,KAAK+B,GAAG9B,MACT,CACC,MAAMF,EAAIC,KAAK+B,GAAG9B,QAClBo9C,EAAqBl5C,SAAWpE,EAC7B,8BACA,qBAEHs9C,EAAqB/J,YAAcvzC,EAChC,iCACA,mCAEN,CAaH,CAGAkqB,kBACG,OAAOozB,CACV,CAEApzB,uBACG,OAAO6X,CACV,CAMA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASk3C,SAAWz4B,SAAS7kB,KAAKoG,SAASk3C,UAChDt9C,KAAKoG,SAASo3C,UAAY34B,SAAS7kB,KAAKoG,SAASo3C,WACjDx9C,KAAKoG,SAASm3C,WAAa14B,SAAS7kB,KAAKoG,SAASm3C,YAClDv9C,KAAKoG,SAASq3C,YAAc54B,SAAS7kB,KAAKoG,SAASq3C,aACnDz9C,KAAKoG,SAASs3C,gBAAkB74B,SAAS7kB,KAAKoG,SAASs3C,iBACvD19C,KAAKoG,SAASu1C,mBAAqB92B,SAChC7kB,KAAKoG,SAASu1C,mBAEpB,CAUAvsB,YAAYvlB,EAAMtC,GACfzH,MAAMsvB,YAAYvlB,EAAMtC,EAC3B,oBCvIH,MAAM6rC,EAAU,EAAQ,OAElBwK,EAAsB,CACzBv5C,IAAK,OAGLivC,YAAa,aAIb/nC,KAAM,OAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,OAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpB/R,EAAgB,CAAC,EAEvBriC,EAAOC,QAAU,cAA8B0zC,EAC5CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ24C,EACzB,CAGA3zB,kBACG,OAAO2zB,CACV,CAEA3zB,uBACG,OAAO6X,CACV,CAQAC,aAAap8B,GAIb,oBChFH,MAAMytC,EAAU,EAAQ,OAOlByK,EAAsB,CACzBx5C,IAAK,OAGLivC,YACG,6EAIH/nC,KAAM,UAINgoC,aAAe3tC,IACRA,EAAMQ,SAAS03C,WAYtBtK,WAAa5tC,IACNA,EAAMQ,SAAS03C,WAWtB35C,SAAU,cAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,OACA,UACA,YAMHkK,UAAYn4C,KACLA,EAAMQ,SAAS23C,WAQnBjc,EAAgB,CACnBgc,WAAY,EAIZC,UAAW,EAIX57C,QAAS,GAST2mC,QAAS,OACTkV,gBAAiB,IAGpBv+C,EAAOC,QAAU,cAA8B0zC,EAC5CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ44C,GAEtB79C,KAAKi+C,iBAAmB,EAI3B,CAGAh0B,kBACG,OAAO4zB,CACV,CAEA5zB,uBACG,OAAO6X,CACV,CAYA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGb3F,KAAKoG,SAASjE,SAAWnC,KAAKoG,SAASjE,QAAQgE,OAAS,GACzDnG,KAAKoG,SAASjE,QAAQ8B,SAASi6C,IAC5Bl+C,KAAK07B,UAAUwiB,EAAKA,EAAK,CAAC,QAAQ,IAIxCl+C,KAAKoG,SAAS03C,WAAaj5B,SAAS7kB,KAAKoG,SAAS03C,YAClD99C,KAAKoG,SAAS23C,UAAYl5B,SAAS7kB,KAAKoG,SAAS23C,UACpD,CAaAj4C,QACG,MAAMgS,EAAMhY,MAAMgG,QAOlB,OAJAgS,EAAI1R,SAASjE,QAAQ8B,SAASi6C,IAC3Bl+C,KAAK87B,YAAYoiB,EAAKA,EAAK,CAAC,QAAQ,IAGhCpmC,CACV,CAYAiqB,aAAap8B,GAEV,GAAgC,GAA5B3F,KAAKoG,SAAS03C,WAAoB,CACnC,IAAIK,EAAc,GAClBn+C,KAAKoG,SAAS43C,gBAAgB/5C,SAASwd,IACpCzhB,KAAKoG,SAASjE,QAAQ8B,SAASi6C,IACxBA,EAAIt9C,IAAM6gB,EAAIpT,MACf8vC,EAAY75C,KAAK45C,EACpB,GACD,IAELv4C,EAAO3F,KAAK8G,YAAcq3C,GAAe,EAC5C,MAESn+C,KAAKoG,SAAS0iC,SAAoC,IAAzB9oC,KAAKoG,SAAS0iC,UAC7CnjC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0iC,QAE9C,CAUA1Z,YAAYvlB,EAAMtC,GACfzH,MAAMsvB,YAAYvlB,EAAMtC,EAC3B,CAOApF,UACG,OAAOnC,KAAKoG,SAASjE,QAAQgM,KAAK+vC,IACxB,CACJt9C,GAAIs9C,EAAIt9C,GACRyN,KAAM6vC,EAAI7vC,KACV+vC,IAAKF,EAAIE,IAAMF,EAAIE,IAAM,GACzB15B,aAAcw5B,EAAIx5B,aAAew5B,EAAIx5B,aAAe,MAG7D,CAEApE,OAAOgN,EAASnrB,EAAU,CAAC,GACxB,IAAI6T,EAAMhW,KAAKs3C,UAAUhqB,IAAY,GAErC,GAAkB,iBAAPtX,EACR,IACGA,EAAMnC,KAAK0D,MAAMvB,EAGpB,CAFE,MAAO3L,GAET,CAqBH,OAjBK8C,MAAMC,QAAQ4I,KAAMA,EAAM,CAACA,IAEZhW,KAAKoG,SAASjE,QAC9B2G,QAAQo1C,GAAQloC,EAAIlN,QAAQsK,IAAOA,EAAExS,IAAMwS,IAAM8qC,EAAIt9C,KAAIuF,OAAS,IAClEgI,KAAK+vC,IACH,IAAI7vC,EAAO6vC,EAAI7vC,KACf,MAAM8B,EAAehO,EAAQgO,cAAgB,KAGvCkuC,GAAWH,EAAIx5B,cAAgB,IAAI5b,QACrCuc,GAAMA,EAAEuW,eAAiBzrB,IAC3B,GAGF,OAFIkuC,IAAShwC,EAAOgwC,EAAQhwC,MAErBA,CAAI,IAGEC,KAAK,KAC3B,oBCpQH,MAAM8kC,EAAU,EAAQ,OASlBkL,EAA0B,CAC7Bj6C,IAAK,WAELivC,YAAa,yBAIb/nC,KAAM,cAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,YAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAAY,aAAc,QAK/CC,qBAAsB,CAAC,OAAQ,aAAc,YAK7C0K,gBA1DqB,KAgElBzc,EAAgB,CACnBgH,QAAS,GACT0V,oBAAqB,GAGxB/+C,EAAOC,QAAU,cAA8B0zC,EAC5CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQq5C,EAUzB,CAGAr0B,kBACG,OAAOq0B,CACV,CAEAr0B,uBACG,OAAO6X,CACV,CAYA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0iC,QAAUnjC,EAAOS,SAAS0iC,SAAW,GAGnD9oC,KAAKoG,SAASo4C,oBACX74C,EAAOS,SAASo4C,oBAAsB,IACtC1c,EAAc0c,oBAGjBx+C,KAAKoG,SAASo4C,oBAAsB35B,SACjC7kB,KAAKoG,SAASo4C,qBAGbx+C,KAAKoG,SAASo4C,oBACXx+C,KAAKiF,QACNjF,KAAKiF,OAAOy2B,UAAU17B,KAAKoG,SAAUpG,KAAKoG,SAAU,CAAC,YACpDpG,KAAKoG,SAAS0iC,QAAUnjC,EAAOS,SAAS0iC,SAAW,EAC7D,CAaAhjC,QACG,MAAMgS,EAAMhY,MAAMgG,QAOlB,OALI9F,KAAKoG,SAASo4C,sBACXx+C,KAAKiF,OACNjF,KAAKiF,OAAO62B,YAAYhkB,EAAI1R,SAAU0R,EAAI1R,SAAU,CAAC,YACnD0R,EAAI1R,SAAS0iC,QAAU9oC,KAAKoG,SAAS0iC,SAEtChxB,CACV,CAOIgpB,qBACD,OAA4C,GAArC9gC,KAAKoG,SAASo4C,mBACxB,CAQAzc,aAAap8B,GACqB,MAA3BA,EAAO3F,KAAK8G,cACuB,iBAAzB9G,KAAKoG,SAAS0iC,QACtBnjC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0iC,QAExCnjC,EAAO3F,KAAK8G,YAAc,GAGnC,CAUAsoB,YAAYvlB,EAAMtC,GACfzH,MAAMsvB,YAAYvlB,EAAMtC,GAGrBsC,GACAA,EAAK7J,KAAK8G,aACV+C,EAAK7J,KAAK8G,YAAYX,OAxLP,KA0LfoB,EAAUgW,SACPvd,KAAK8G,WACL,4CAGT,oBCjMH,MAAMssC,EAAU,EAAQ,OAElBqL,EAAwB,CAC3Bp6C,IAAK,SAGLivC,YAAa,2BAIb/nC,KAAM,UAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,SAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOA/R,EAAgB,CAEnBgH,QAAS,GACT4V,WAAY,OACZC,aAAc,OACdC,kBAAmB,EACnBC,aAAc,OACdC,cAAe,OACfC,WAAY,EACZC,gBAAiB,GACjBC,gBAAiB,IAGpB,IAAIl/C,EAAI,KAERN,EAAOC,QAAU,cAAgC0zC,EAC9CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQw5C,GAkBjB1+C,IACFA,EAAIC,KAAK+B,GAAG9B,QAElB,CAGAgqB,kBACG,OAAOw0B,CACV,CAEAx0B,uBACG,OAAO6X,CACV,CAEA7X,kBAAkBi1B,GAEf,OADIA,IAAOn/C,IAAGA,EAAIm/C,GACX,CACJ,CAAEt+C,GAAI,OAAQ+B,MAAO5C,EAAE,SACvB,CACGa,GAAI,SACJ+B,MAAO5C,EAAE,KACTo0C,KAAM,IACNxzC,SAAU,UAEb,CACGC,GAAI,MACJ+B,MAAO5C,EAAE,KACTo0C,KAAM,IACNxzC,SAAU,UAEb,CACGC,GAAI,QACJ+B,MAAO5C,EAAE,KACTo0C,KAAM,IACNxzC,SAAU,UAEb,CACGC,GAAI,aACJ+B,MAAO5C,EAAE,cACTo0C,KAAM,IACNxzC,SAAU,UAEb,CACGC,GAAI,YACJ+B,MAAO5C,EAAE,aACTo0C,KAAM,IACNxzC,SAAU,WAEb,CACGC,GAAI,UACJ+B,MAAO5C,EAAE,KACTo0C,KAAM,IACNxzC,SAAU,WAGnB,CAEAspB,uBACG,MAAO,CACJ,CAAErpB,GAAI,OAAQ+B,MAAO5C,EAAE,SACvB,CACGa,GAAI,QACJ+B,MAAO5C,EAAE,SACTo0C,KAAM,KAET,CACGvzC,GAAI,SACJ+B,MAAO5C,EAAE,UACTo0C,KAAM,KAET,CACGvzC,GAAI,QACJ+B,MAAO5C,EAAE,SACTo0C,KAAM,KAGf,CAMAluC,WAAWN,GACR7F,MAAMmG,WAAWN,GAIjB3F,KAAKoG,SAAS24C,WAAal6B,SAAS7kB,KAAKoG,SAAS24C,WACrD,CAYAhd,aAAap8B,GAEmB,IAAzB3F,KAAKoG,SAAS0iC,UACfnjC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0iC,QAE9C,CAUA1Z,YAAYvlB,EAAMtC,GAKf,GAJAzH,MAAMsvB,YAAYvlB,EAAMtC,GAIK,MAAzBsC,EAAK7J,KAAK8G,aAAgD,IAAzB+C,EAAK7J,KAAK8G,YAAmB,CAC/D,IAAInE,EAAQkH,EAAK7J,KAAK8G,YAGtB,GAAkC,QAA9B9G,KAAKoG,SAASu4C,aACfh8C,EAAQkiB,SAASliB,OACb,CACJ,MAAMw8C,EAASt6B,SAAS7kB,KAAKoG,SAASw4C,oBAAsB,EAC5Dj8C,EAAQkzC,WAAWA,WAAWlzC,GAAO8zC,QAAQ0I,GAChD,CAUA,GARmBC,EAGJz8C,GAFJkoC,OAAOwU,MAAMxJ,WAAWuJ,KAAOvU,OAAOwO,SAAS+F,IAGvD73C,EAAUgW,SAASvd,KAAK8G,WAAY/G,EAAE,mBAKV,GAA5BC,KAAKoG,SAAS24C,YACmB,MAAjC/+C,KAAKoG,SAAS44C,iBACdh/C,KAAKoG,SAAS44C,gBAAkBr8C,EACjC,CACC,MAAM28C,EAAav/C,EAAE,6BAA8B,CAChDC,KAAKoG,SAAS44C,kBAGjBz3C,EAAUgW,SAASvd,KAAK8G,WAAYw4C,EACvC,CAGA,GAC+B,GAA5Bt/C,KAAKoG,SAAS24C,YACmB,MAAjC/+C,KAAKoG,SAAS64C,iBACdj/C,KAAKoG,SAAS64C,gBAAkBt8C,EACjC,CACC,MAAM28C,EAAav/C,EAAE,0BAA2B,CAC7CC,KAAKoG,SAAS64C,kBAGjB13C,EAAUgW,SAASvd,KAAK8G,WAAYw4C,EACvC,CACH,CAhCqB,IAACF,CAiCzB,CAEA9+B,OAAOgN,GACJ,GAC+B,MAA5BA,EAAQttB,KAAK8G,aACgB,GAA5BwmB,EAAQttB,KAAK8G,aAAgD,IAA5BwmB,EAAQttB,KAAK8G,YAE/C,MAAO,GAEV,IAAI+C,EAAOyjB,EAAQttB,KAAK8G,aAAe,EAEpB,iBAAR+C,IACRA,EAAOA,EAAKmJ,QAAQ,KAAM,KAIzBqsC,MAAMxJ,WAAWhsC,MAAQA,EAAO,GAEpC,MAAM01C,EAAav/C,KAAKL,YACpB6/C,aACA12C,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAASs4C,aAAY,GACpDzI,EACgC,QAAnCj2C,KAAKoG,SAASw4C,kBACT/5B,SAAS7kB,KAAKoG,SAASw4C,mBACvB,EAER,IAAIa,EAAgBz/C,KAAKL,YACrBu0C,gBACAprC,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAAS04C,gBAAe,GACzD9I,EAAch2C,KAAKL,YACnBu0C,gBACAprC,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAASu4C,eAAc,GACxDhkC,EAAS,GACT+kC,EAAU,GAEd,GAAIH,GAAcA,EAAWpL,KAC1B,OAAQoL,EAAW5+C,UAChB,IAAK,SACFga,EAAS4kC,EAAWpL,KACpB,MACH,IAAK,UACFuL,EAAUH,EAAWpL,KAS9B,GAJA6B,EAAcA,EAAY7B,MAAQ,GAClCsL,EAAgBA,EAActL,MAAQ,GAGJ,aAA9Bn0C,KAAKoG,SAASy4C,aAA6B,CAC5C,MAAMc,EAAQp5C,KAAKy2C,IAAI,GAAI/G,GAC3BpsC,EAAOtD,KAAKC,MAAMqD,EAAO81C,GAASA,CACrC,CASA,MAAO,GAAGhlC,KAPK3a,KAAK4/C,aAAa/1C,EAAM,CACpCg2C,eAAgBJ,EAChBK,UAAW,EACXC,iBAAkB/J,EAClB6G,YAAa5G,OAGcyJ,GACjC,CAEAE,aAAa/1C,EAAM1H,EAAU,CAAC,GAC3B,GAAa,KAAT0H,GAAuB,MAARA,EAAc,OAAOA,EAGxC,MAAMm2C,GADNn2C,EAAOgsC,WAAWhsC,IACU,EAAI,IAAM,GAGhCo2C,GAFNp2C,EAAOtD,KAAK25C,IAAIr2C,IAEK6K,WACfyrC,EAAaF,EAAQz4B,MAAM,KAAK,GAChC44B,EAAaH,EAAQz4B,MAAM,KAAK,GAEtC,IAAI64B,EAAe,GAGnB,GAAIl+C,EAAQ09C,eAAgB,CACzB,MAAMS,EAAO,EACb,IAAIjtC,EAAI8sC,EAAWh6C,OAEnB,GACGkN,GAAKitC,EAKLD,EAAe,GAHZhtC,EAAI,EACC8sC,EAAWI,OAAOltC,EAAGitC,GACrBH,EAAWI,OAAO,EAAGD,EAAOjtC,KAEjCgtC,EAAel+C,EAAQ09C,eAAiBQ,EAAe,WAEpDhtC,EAAI,EAChB,MACGgtC,EAAeF,EAGlB,IAAIryC,EAAS,GAgBb,OAZGA,EADC3L,EAAQ49C,kBAAoB59C,EAAQ06C,YAC5B,GAAGmD,IAAeK,IACxBD,EACKj+C,EAAQ49C,iBACRK,EAAW1rC,WAAW6rC,OAAO,EAAGp+C,EAAQ06C,aACxC,KAKC,GAAGmD,IAAeK,IAGvBvyC,CACV,CAEAgvC,iBACG,MAAuC,QAAnC98C,KAAKoG,SAASw4C,kBACR/5B,SAAS7kB,KAAKoG,SAASw4C,mBAEvB,CAEb,oBCrYH,MAAMxL,EAAU,EAAQ,OAIlBoN,EAAwB,CAC3Bn8C,IAAK,SAGLivC,YAAa,qBAIb/nC,KAAM,OAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,mBAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1C0K,gBAtDqB,KA2DlBzc,EAAgB,CACnBgH,QAAS,GACT0V,oBAAqB,GAGxB/+C,EAAOC,QAAU,cAAgC0zC,EAC9CzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQu7C,EAUzB,CAGAv2B,kBACG,OAAOu2B,CACV,CAEAv2B,uBACG,OAAO6X,CACV,CAYA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS0iC,QAAUnjC,EAAOS,SAAS0iC,SAAWhH,EAAcgH,QACjE9oC,KAAKoG,SAASo4C,oBACX74C,EAAOS,SAASo4C,oBAAsB,IACtC1c,EAAc0c,oBAGjBx+C,KAAKoG,SAASo4C,oBAAsB35B,SACjC7kB,KAAKoG,SAASo4C,qBAGbx+C,KAAKoG,SAASo4C,oBACfx+C,KAAK07B,UAAU17B,KAAKoG,SAAUpG,KAAKoG,SAAU,CAAC,YAC1CpG,KAAKoG,SAAS0iC,QAAUnjC,EAAOS,SAAS0iC,SAAW,EAC7D,CAaAhjC,QACG,MAAMgS,EAAMhY,MAAMgG,QAMlB,OAJI9F,KAAKoG,SAASo4C,oBACfx+C,KAAK87B,YAAYhkB,EAAI1R,SAAU0R,EAAI1R,SAAU,CAAC,YAC1C0R,EAAI1R,SAAS0iC,QAAU9oC,KAAKoG,SAAS0iC,QAErChxB,CACV,CAYAiqB,aAAap8B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAAS0iC,UACX9oC,KAAKoG,SAAS0iC,QAAQz7B,QAAQ,WAAa,EAC5C1H,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG8N,OAElClK,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0iC,QAIpD,CAUA1Z,YAAYvlB,EAAMtC,GACfzH,MAAMsvB,YAAYvlB,EAAMtC,GAExB,MAAMxH,EAAIC,KAAK+B,GAAG9B,QAGf4J,GACAA,EAAK7J,KAAK8G,aACV+C,EAAK7J,KAAK8G,YAAYX,OAjLP,KAmLfoB,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,2CAA4C,CArLlC,MAwLrB,CAOI+gC,qBACD,OAA4C,GAArC9gC,KAAKoG,SAASo4C,mBACxB,kECnMH,MAAMpL,QAAU,oBAAQ,OAExB,SAASrzC,EAAEsE,EAAKwO,GAEb,OAAOA,CACV,CAEA,MAAM4tC,2BAA6B,CAChCp8C,IAAK,cAGLivC,YAAa,eAIb/nC,KAAM,WAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,eAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1C/R,cAAgB,CACnB4e,YAAa,IAoBhB,SAASC,kBAAkB17C,OAAQ27C,cAAetzB,SAC/C,IAAKszB,cAAe,OAEpB,MAAMC,YAAc,aACdC,oBAAsBF,cAAcje,MAAMke,aA8BhD,OA7BAC,oBAAoB78C,SAAS+0B,UAC1B,MAAMlyB,WAAakyB,QAAQhmB,QAAQ,SAAU,IAC7C/N,OAAO8B,SAAS9C,SAAS2B,QACtB,GAAIA,MAAMkB,YAAcA,WACrB,GAAiB,aAAblB,MAAMvB,IAAoB,CAE3B,MAAM08C,EAAen7C,MAAM0a,OAAOgN,UAAY,EAC9CszB,cAAgBA,cAAc5tC,QAAQgmB,QAAS+nB,EAClD,MAAO,GAAiB,aAAbn7C,MAAMvB,IAAoB,CAElC,MAAMgyC,OAAS,IAAIzwC,MAAM0a,OAAOgN,UAAY,KAC5CszB,cAAgBA,cAAc5tC,QAAQgmB,QAASwd,KAAKH,QACvD,MACGuK,cADqB,QAAbh7C,MAAMvB,IACEu8C,cAAc5tC,QAC3BgmB,QACA1L,QAAQxmB,YACHlB,MAAMi0C,YAAYvsB,QAAQxmB,aAC1B,IAGQ85C,cAAc5tC,QAC3BgmB,QACA1L,QAAQxmB,YAAclB,MAAM0a,OAAOgN,SAAW,GAGvD,GACD,IAGEszB,aACV,CASA,SAASI,yBAAyBj/C,EAAI6+C,GACnC,MACMK,EAAwBL,EAAcje,MADtB,gBAEtB,GAAIse,EAAuB,CACxB,MAAMC,EAAcC,qBACpBF,EAAsBh9C,SAAS+0B,IAC5B,MAAMooB,EAAgBpoB,EAAQxR,MAAM,SAC9B65B,EACHD,EAAcj7C,OAAS,GAAyB,IAApBi7C,EAAc,GACvCE,EAAeF,EAAc,GAC7BG,EAAmBH,EAAc,GAAG55B,MAAM,KAChD,IAAIg6B,GAAU,EACd,IAAK,IAAInuC,EAAI,EAAGA,EAAI6tC,EAAY/6C,OAAQkN,IAAK,CAC1C,IAAIouC,EAAmBzoB,EACvB,GAAIsoB,GAAgBJ,EAAY7tC,GAAGzS,GAAI,CACpC,GAAI2gD,EAAiBp7C,QAAU+6C,EAAY7tC,GAAGquC,eAAgB,CAC3D,OAAQJ,GACL,IAAK,OACFG,EAAmBE,QAChBJ,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,QACFE,EAAmBG,SAChBL,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,MACFE,EAAmBI,OAChBN,EAAiB,GACjBA,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,OACFE,EAAmBK,QAAQP,EAAiB,IAC5C,MACH,IAAK,WACFE,EAAmBM,YAAYR,EAAiB,IAChD,MACH,IAAK,YACFE,EAAmBO,aAAaT,EAAiB,IACjD,MACH,IAAK,SACFE,EAAmBQ,UAAUV,EAAiB,IAC9C,MACH,IAAK,eACFE,EAAmBS,iBAChBX,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,eACFV,EAAmBW,gBAChBb,EAAiB,GACjBA,EAAiB,GAAGY,YAEvB,MACH,IAAK,UACFV,EAAmBY,WAChBd,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,QACFV,EAAmBa,SAASf,EAAiB,IAC7C,MACH,IAAK,QACFE,EAAmBc,SAAShB,EAAiB,IAC7C,MACH,IAAK,aACFE,EAAmBe,cAAcjB,EAAiB,IAClD,MACH,IAAK,SACFE,EAAmBgB,UAAUlB,EAAiB,IAC9C,MACH,IAAK,gBACFE,EAAmBiB,iBAChBnB,EAAiB,IAEpB,MACH,IAAK,uBACEF,IACDroB,GAAoB,KAEvByoB,EAAmBkB,qBAChB5gD,EACAw/C,EAAiB,IAEpB,MACH,IAAK,yBACEF,IACDroB,GAAoB,KAEvByoB,EAAmBmB,uBAChB7gD,EACAw/C,EAAiB,IAEpB,MACH,IAAK,aACFE,EAAmBoB,cAChBtB,EAAiB,GACjBA,EAAiB,GAAGY,YAW7B,OALAX,GAAU,OACVZ,EAAgBA,EAAc5tC,QAC3BgmB,EACAyoB,GAGN,CACGA,EAAmBH,EAAe,kBAClCV,EAAgBA,EAAc5tC,QAC3BgmB,EACAyoB,EAGT,CACH,IAEN,CACA,OAAOb,CACV,CAEA,SAASO,qBA0GN,MAzGqB,CAClB,CACGvgD,GAAI,OACJ+B,MAAO,yBACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,QACJ+B,MAAO,0BACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,MACJ+B,MAAO,2BACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,OACJ+B,MAAO,sBACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,WACJ+B,MAAO,0BACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,YACJ+B,MAAO,2BACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,SACJ+B,MAAO,wBACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,eACJ+B,MAAO,kDACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,eACJ+B,MAAO,mCACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,UACJ+B,MAAO,sDACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,QACJ+B,MAAO,uBACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,QACJ+B,MAAO,uBACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,aACJ+B,MAAO,4BACPf,KAAM,WACN8/C,eAAgB,GAEnB,CAAE9gD,GAAI,SAAU+B,MAAO,YAAaf,KAAM,WAAY8/C,eAAgB,GACtE,CACG9gD,GAAI,gBACJ+B,MAAO,2CACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,uBACJ+B,MAAO,sCACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,yBACJ+B,MAAO,wCACPf,KAAM,WACN8/C,eAAgB,GAEnB,CACG9gD,GAAI,aACJ+B,MAAO,2CACPf,KAAM,WACN8/C,eAAgB,GAIzB,CAEA,SAASC,QAAQmB,EAAQC,GACtB,OAAOD,EAAOlsB,UAAU,EAAG/R,SAASk+B,GACvC,CAEA,SAASnB,SAASkB,EAAQE,GACvB,MAAMC,EAAaC,cAAcJ,GAAQlsB,UAAU,EAAG/R,SAASm+B,IAC/D,OAAOE,cAAcD,EACxB,CAEA,SAASC,cAAcJ,GACpB,OAAOA,EAAOt7B,MAAM,KAAK27B,UAAU70C,KAAK,IAC3C,CAEA,SAASuzC,OAAOiB,EAAQM,EAAej9C,GACpC,OAAI28C,EAAO38C,OAASi9C,EAAsB,qBACnCN,EAAOlsB,UACX/R,SAASu+B,GACTv+B,SAASu+B,GAAiBv+B,SAAS1e,GAEzC,CAEA,SAAS27C,QAAQgB,GACd,OAAOA,EAAOtgB,MACjB,CAEA,SAASuf,YAAYe,GAClB,OAAOA,EAAOX,UACjB,CAEA,SAASH,aAAac,GACnB,OAAOA,EAAOO,WACjB,CAEA,SAASpB,UAAUa,GAChB,OAAOA,EAAO38C,MACjB,CAEA,SAAS+7C,iBAAiBY,EAAQQ,EAAQC,GACvC,OAAOT,EAAO9vC,QAAQswC,EAAQC,EACjC,CAEA,SAASnB,gBAAgBU,EAAQQ,GAC9B,MAAME,EAAgBV,EAAOngB,MAAM2gB,GACnC,OAAIn2C,MAAMC,QAAQo2C,GACRA,EAAc,GAEjBA,CACV,CAEA,SAASnB,WAAWS,EAAQW,EAAaC,GACtC,OAAOZ,EAAO9vC,QAAQywC,EAAaC,EACtC,CAEA,SAASpB,SAASQ,GACf,OAAOA,EAAO3qC,aACjB,CAEA,SAASoqC,SAASO,GACf,OAAOA,EAAOa,aACjB,CAEA,SAASnB,cAAcM,GACpB,OAAOA,EACH3qC,cACAqP,MAAM,KACNrZ,KAAKvB,GAAMA,EAAEg3C,OAAO,GAAGD,cAAgB/2C,EAAEgqB,UAAU,KACnDtoB,KAAK,IACZ,CAEA,SAASm0C,UAAUvF,GAChB,OAAO32C,KAAKC,MAAMD,KAAKE,UAAYy2C,EAAM,GAC5C,CAEA,SAASwF,iBAAiB5hC,GACvB,MAAMgiC,EAAShiC,EAAO0hB,KAAK,KAAK9tB,WAEhC,IAAImvC,EACDC,EACAC,EACAtyB,EACAuyB,EACAC,EACAC,EACAC,EACAC,EACA/wC,EACAgxC,EACAC,EAKH,GAAyB,IAArBz/B,SAASi+B,GACV,MAAO,OAuEV,IAnEAe,EAAQ,CACL,GACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,UACA,UACA,YACA,WACA,YAIHC,EAAO,CACJ,GACA,GACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,UAIHC,EAAS,CACN,GACA,WACA,UACA,UACA,WACA,cACA,cACA,aACA,aACA,YACA,YACA,YACA,cACA,eACA,eACA,sBACA,gBACA,eACA,mBACA,gBACA,iBACA,eACA,cAIHtyB,EAAQqxB,EAAO38C,OACf89C,EAAS,GACFxyB,EAAQ,GACZuyB,EAAMvyB,EACNwyB,EAAO3/C,KAAKw+C,EAAO5vC,MAAOue,EAAQlrB,KAAK22C,IAAI,EAAGzrB,EAAQ,GAAKuyB,IAK9D,GADAE,EAAYD,EAAO99C,OACf+9C,EAAYH,EAAO59C,OACpB,MAAO,GAKV,IADAm+C,EAAQ,GACHjxC,EAAI,EAAGA,EAAI6wC,EAAW7wC,IACxB8wC,EAAQt/B,SAASo/B,EAAO5wC,IAEpB8wC,IAEDC,EAAOH,EAAO5wC,GAAGmU,MAAM,IAAI27B,UAAUh1C,IAAI0nC,YAGzB,IAAZuO,EAAK,KACNA,EAAK,IAAM,KAITC,EAAON,EAAO1wC,KAChBixC,EAAMhgD,KAAK+/C,IAITA,EAAOR,EAAMO,EAAK,MACpBE,EAAMhgD,KAAK+/C,IAITA,EAAOP,EAAKM,EAAK,MACnBE,EAAMhgD,KAAK+/C,IAIVD,EAAK,IAAMA,EAAK,MAEbA,EAAK,KAAQ/wC,GAAK6wC,IACnBI,EAAMhgD,KAvHN,KA4HD+/C,EAAOR,EAAMO,EAAK,MACpBE,EAAMhgD,KAAK+/C,EAAO,aAK3B,OAAOC,EAAMnB,UAAU70C,KAAK,IAC/B,CAEA,SAASq0C,qBAAqB5gD,EAAI0e,GAK/B,OAAO1e,EAAGof,MAAMX,aAAaC,EAAM,CAChCH,OAAQ,OACRK,WAAY5e,EAAG6Q,QAAQ1C,YAE7B,CAEA,SAAS0yC,uBAAuB7gD,EAAI0e,GAKjC,OAAO1e,EAAGof,MAAMX,aAAaC,EAAM,CAChCH,OAAQ,OACRK,WAAY5e,EAAG6Q,QAAQ1C,YAE7B,CAEA,SAAS2yC,cAAcpiC,EAAMH,GAE1B,OADW,IAAIC,KAAKE,GACV/L,SAAS4L,EACtB,CAEA7gB,OAAOC,QAAU,cAAqC0zC,QACnDzzC,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQw7C,2BAazB,CAGAx2B,kBACG,OAAOw2B,0BACV,CAEAx2B,uBACG,OAAO6X,aACV,CAEA7X,4BACG,OAAOk3B,oBACV,CAYApf,aAAap8B,GAELA,EAAO3F,KAAK8G,WAIpB,CAUAsoB,YAAYvlB,EAAMtC,GAKf,OAJYzH,MAAMyF,SAKrB,CAOIu7B,qBAED,OAAO,CACV,CAEAxgB,OAAOgN,GACJ,IACG,IAAKttB,KAAKoG,SAASs6C,YAAa,MAAO,GAEvC,IAAI6D,EAAgBvkD,KAAKoG,SAASs6C,YAQlC,OALA6D,EAAgB5D,kBAAkB3gD,KAAKiF,OAAQs/C,EAAej3B,GAG9Di3B,EAAgBvD,yBAAyBhhD,KAAK+B,GAAIwiD,GAE3CA,CAGV,CAFE,MAAOp8C,GACN,MAAO,EACV,CACH,oBClsBH,MAAMq8C,EAAqB,EAAQ,OAO7BC,EAAsB,CACzBpgD,IAAK,OAGLivC,YACG,2GAIH/nC,KAAM,UAINgoC,cAAc,EAOdC,YAAY,EAMZrvC,SAAU,YAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAM1C/R,EAAgB,CACnB3/B,QAAS,IAGZ1C,EAAOC,QAAU,cAA8B8kD,EAC5C7kD,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQw/C,EACzB,CAGAx6B,kBACG,OAAOw6B,CACV,CAEAx6B,uBACG,OAAO6X,CACV,CAYA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGb3F,KAAKoG,SAASjE,SAAWnC,KAAKoG,SAASjE,QAAQgE,OAAS,GACzDnG,KAAKoG,SAASjE,QAAQ8B,SAASi6C,IAC5Bl+C,KAAK07B,UAAUwiB,EAAKA,EAAK,CAAC,QAAQ,GAG3C,CAaAp4C,QACG,MAAMgS,EAAMhY,MAAMgG,QASlB,OANIgS,EAAI1R,SAASjE,SAAW2V,EAAI1R,SAASjE,QAAQgE,OAAS,GACvD2R,EAAI1R,SAASjE,QAAQ8B,SAASi6C,IAC3Bl+C,KAAK87B,YAAYoiB,EAAKA,EAAK,CAAC,QAAQ,IAInCpmC,CACV,CAYAiqB,aAAap8B,GAAS,CAUtBypB,YAAYvlB,EAAMtC,GACfzH,MAAMsvB,YAAYvlB,EAAMtC,EAC3B,oBClJH,MAAMm9C,EAAiB,EAAQ,OAOzBC,EAAsB,CACzBtgD,IAAK,OAGLivC,YAAa,yBAIb/nC,KAAM,SAINgoC,cAAc,EAOdC,WAAa5tC,IACNA,EAAMQ,SAAS03C,WAWtB35C,SAAU,OAIVsvC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1C+Q,kBAAmB,wCAMhB9iB,EAAgB,CACnB+iB,SAAU,EACV/G,WAAY,EACZgH,cAAe,EACfC,mBAAoB,EACpBC,eAAgB,GAGnBvlD,EAAOC,QAAU,cAA8BglD,EAC5C/kD,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ0/C,EACzB,CAGA16B,kBACG,OAAO06B,CACV,CAEA16B,uBACG,OAAO6X,CACV,CAMA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASy+C,SAAWhgC,SAAS7kB,KAAKoG,SAASy+C,UAChD7kD,KAAKoG,SAAS03C,WAAaj5B,SAAS7kB,KAAKoG,SAAS03C,YAClD99C,KAAKoG,SAAS0+C,cAAgBjgC,SAAS7kB,KAAKoG,SAAS0+C,eACrD9kD,KAAKoG,SAAS2+C,mBAAqBlgC,SAChC7kB,KAAKoG,SAAS2+C,oBAEjB/kD,KAAKoG,SAAS4+C,eAAiBngC,SAAS7kB,KAAKoG,SAAS4+C,eACzD,CAMA1kC,OAAOgN,GACJ,IAAItX,EAAMhW,KAAKs3C,UAAUhqB,IAAY,GAKrC,OAHItX,IAAQ7I,MAAMC,QAAQ4I,KAAMA,EAAM,CAACA,IAClCA,IAAKA,EAAM,IAETA,EAAI7H,KAAKiF,GAAMA,EAAExC,UAAYwC,IAAG9E,KAAK,KAC/C,oBCzHH,MAAMmnB,EAAuB,EAAQ,OAE/BwvB,EAAwB,CAC3BrjD,KAAM,gBASTnC,EAAOC,QAAU,cAAgC+1B,EAC9C91B,YAAYqjB,EAAYwD,EAASzkB,GAC9BjC,MAAMkjB,EAAYwD,EAASzkB,EAK9B,CAEAkoB,kBACG,OAAOg7B,CACV,CAEAh/C,WAAW+c,GASRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAK4B,KAAOohB,EAAWphB,MAAQqjD,EAAsBrjD,IACxD,oBCrCH,MAAMmhB,EAAY,EAAQ,OAEpBmiC,EAA+B,CAClCtjD,KAAM,uBAOTnC,EAAOC,QAAU,cAAuCqjB,EACrDpjB,YAAYqjB,EAAYwD,EAASzkB,GAC9BjC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAKwmB,QAAUA,EACVxmB,KAAKokB,YACPpkB,KAAKokB,UAAYoC,EAAQ5lB,IAG5BZ,KAAKiG,WAAW+c,EAKnB,CAEAiH,kBACG,OAAOi7B,CACV,CAEAj/C,WAAW+c,GAwBR,SAASmiC,EAAaC,GACnB,YAA2B,IAAbA,GAAyC,MAAbA,CAC7C,CAhBAplD,KAAKY,GAAKoiB,EAAWpiB,GACrBZ,KAAKmH,KAAO6b,EAAW7b,MAAQ,GAC/BnH,KAAK4B,KAAOohB,EAAWphB,MAAQsjD,EAA6BtjD,KAC5D5B,KAAKqE,IAAM2e,EAAW3e,KAAO6gD,EAA6BtjD,KAG1D5B,KAAKokB,UAAYpB,EAAWoB,WAAa,KACzCpkB,KAAK8lC,UAAY9iB,EAAW8iB,WAAa,cACzC9lC,KAAKqlD,QAAUriC,EAAWqiC,SAAW,GACrCrlD,KAAKslD,SAAU,EACXtiC,EAAWsiC,SAAiC,IAAtBtiC,EAAWsiC,UAClCtlD,KAAKslD,QAAUtiC,EAAWsiC,SAO7BtlD,KAAK8kB,QAAU,EACXqgC,EAAaniC,EAAW8B,WACzB9kB,KAAK8kB,QAAUD,SAAS7B,EAAW8B,UAGtC9kB,KAAK+kB,KAAO,EACRogC,EAAaniC,EAAW+B,QACzB/kB,KAAK+kB,KAAO/B,EAAW+B,MAG1B/kB,KAAKulD,WAAa,EACdJ,EAAaniC,EAAWuiC,cACzBvlD,KAAKulD,WAAa1gC,SAAS7B,EAAWuiC,aAGzCvlD,KAAKwlD,QAAU,EACXL,EAAaniC,EAAWwiC,WACzBxlD,KAAKwlD,QAAUxiC,EAAWwiC,SAG7BxlD,KAAKylD,SAAW,EACZN,EAAaniC,EAAWyiC,YACzBzlD,KAAKylD,SAAW5gC,SAAS7B,EAAWyiC,WAGvCzlD,KAAK0lD,UAAY,GACbP,EAAaniC,EAAW0iC,aACzB1lD,KAAK0lD,UAAY1iC,EAAW0iC,WAI/B1lD,KAAK+G,OAAS,GACVo+C,EAAaniC,EAAWjc,UACzB/G,KAAK+G,OAASic,EAAWjc,QAG5BjH,MAAMmG,WAAW+c,GAGZhjB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAaArB,SAEQ9F,KAAKoB,OAASpB,KAAKmH,MAAqB,IAAbnH,KAAKmH,OAClCnH,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAuBjB,MArBmB,CAChB,KACA,OACA,OACA,YACA,YACA,UACA,QACA,UACA,OACA,aACA,UACA,WACA,YACA,SACA,WAEU7B,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGb6C,CACV,CAOAw7B,iBAAkB,oBClJrB,IAAIsgB,EAAQ,CAAC,EAWTC,EAAkB,CAAC,EAEnBC,EAAqB,CACtB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGXA,EAAmB5hD,SAAS6hD,IAGzB,OAFAH,EAAMG,EAAQ1hD,WAAWC,KAAOyhD,EAExBA,EAAQ1hD,WAAW2hD,UACxB,IAAK,QACL,IAAK,MACFH,EACGE,EAAQE,iBAAiBC,OAAOC,qBAC/BJ,EAAQ1hD,WACZ,MAEH,IAAK,UACL,IAAK,OACFwhD,EACGE,EAAQE,iBAAiBC,OAAOrkD,MAC/BkkD,EAAQ1hD,WAElB,IAGH3E,EAAOC,QAAU,CAMdymD,SAAU,WACP,IAAIC,EAAQ,GACZ,IAAK,IAAInqB,KAAK0pB,EACXS,EAAM9hD,KAAKqhD,EAAM1pB,IAEpB,OAAOmqB,CACV,EAOAttB,QAAS,SAAUnzB,EAAQ6gB,EAASzkB,GACjC,GAAI4D,EAAOtB,IACR,OAAO,IAAIshD,EAAMhgD,EAAOtB,KAAKsB,EAAQ6gB,EAASzkB,EAIpD,EAEAskD,iCAAkC,SAAUzkD,GAMzC,OALkBikD,EAAmB/8C,QAAQuB,GACnCA,EAAEjG,WAAW2hD,UAAYnkD,IAChCuM,KAAK9D,GACEA,EAAE27C,kBAGf,EAEAM,YAAa,WACV,OAAOtmD,KAAKqmD,iCAAiC,QAChD,EAEAE,SAAU,WACP,OAAOvmD,KAAKqmD,iCAAiC,UAChD,EAEAV,MAAO,WACJ,OAAO3lD,KAAKqmD,iCAAiC,OAChD,EAEAG,UAAW,WACR,OAAOxmD,KAAKqmD,iCAAiC,MAChD,EAEAltB,qBAAsB,SAAUH,GAG7B,IAAI30B,EAAM,KACV,GAAI20B,EAAQ4N,eAAe6f,iBAAkB,CAC1C,IAAIhlC,EAAMuX,EAAQ4N,eAAe6f,iBAAiB,GAC9ChlC,IACDpd,EAAMod,EAAIilC,MAEhB,CAOA,OAJKriD,IACFA,EAAM20B,EAAQp3B,MAGVgkD,EAAgBvhD,EAC1B,oBCvIH,IAAI0e,EAAY,EAAQ,OAExBtjB,EAAOC,QAAU,cAAgCqjB,EAC9CpjB,YAAYqjB,EAAYwD,EAASzkB,EAAI+/B,GAClChiC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAKoE,SAAW09B,GAAiB,CAAEz9B,IAAK,OAAQkH,KAAM,QAKtDvL,KAAKiG,WAAW+c,GAEhBhjB,KAAKwmB,QAAUA,EACVxmB,KAAKokB,YACPpkB,KAAKokB,UAAYoC,EAAQ5lB,IAQ5BZ,KAAK2mD,MAAQ,IAChB,CAMA1gD,WAAW+c,GAURhjB,KAAKY,GAAKoiB,EAAWpiB,GACrBZ,KAAKmH,KAAO6b,EAAW7b,MAAQ,GAC/BnH,KAAK4B,KAAOohB,EAAWphB,MAAQ,uBAG/B5B,KAAKqE,IAAM2e,EAAW3e,KAAOrE,KAAKoE,SAASC,KAAO,QAClDrE,KAAKokB,UAAYpB,EAAWoB,WAAa,KACzCpkB,KAAK8lC,UAAY9iB,EAAW8iB,WAAa,cACzC9lC,KAAK4mD,cAAgB5jC,EAAW4jC,eAAiB,WAU7C5mD,KAAKoE,UAAYpE,KAAKoE,SAASgC,UAChCpG,KAAKoE,SAASgC,SAASnC,SAAS2I,SACD,IAAjBoW,EAAWpW,GAAmB5M,KAAK4M,GAAK,KAC9C5M,KAAK4M,GAAKoW,EAAWpW,EAAE,IAIlC9M,MAAMmG,WAAW+c,GAGZhjB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAaArB,SAEQ9F,KAAKoB,OAASpB,KAAKmH,MAAqB,IAAbnH,KAAKmH,OAClCnH,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAsBjB,MApBmB,CAChB,KACA,OACA,OACA,YACA,YACA,gBACA,OAEU7B,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAIhBhH,KAAKoE,UAAYpE,KAAKoE,SAASgC,UAChCpG,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B/C,EAAK+C,GAAK5M,KAAK4M,EAAE,IAIhB/C,CACV,CAmBAg9C,YAAYC,EAAU/nC,EAAKhY,EAAS,IACjC/G,KAAKmX,IAAI2vC,EAAU/nC,GACnB,IAAIxP,EAAQ,IAAIjH,MAAM,GAAGtI,KAAK4B,SAASmd,KACnC4C,EAAO,CAAEymB,KAAMpoC,MAMnB,OALKmN,MAAMC,QAAQrG,KAASA,EAAS,CAACA,IACtCA,EAAO9C,SAAS2B,IACb+b,EAAK/b,GAAS5F,KAAK4F,EAAM,IAE5B5F,KAAK+B,GAAGqG,OAAO2sB,QAAQxlB,EAAOoS,GACvBlS,QAAQkH,OAAOpH,EACzB,CAYAw3C,UAAUz3C,EAASlL,EAAU4R,GAiB1B,GAhBA5R,EAAWA,GAAY,CAAC,EACnB4R,IACFA,EAAM5R,EACNA,EAAW,CAAC,EAGRpE,KAAKoE,UAAYpE,KAAKoE,SAAS4iD,gBAChChnD,KAAKoE,SAAS4iD,eAAe/iD,SAASmP,IACnChP,EAASgP,GAAK,IAAI,KAK3B9D,EAAQ23C,UAAY33C,EAAQ23C,WAAa,CAAC,GAGrC33C,EAAQ23C,UAAUjnD,KAAK8lC,WAAY,CAKrC,IAAK,IAAIlW,KAJTtgB,EAAQ23C,UAAUjnD,KAAK8lC,WAAa,CACjCta,aAAa,EACbnU,OAAQ,eAEGjT,EACXkL,EAAQ23C,UAAUjnD,KAAK8lC,WAAWlW,GAAKxrB,EAASwrB,GAEnD,IAAK,IAAIxc,KAAK4C,EACX1G,EAAQ23C,UAAUjnD,KAAK8lC,WAAW1yB,GAAK4C,EAAI5C,EAEjD,CACH,CAOA8zC,YACG,OAAO,CACV,CAQA/vC,IAAI2vC,KAAaK,GACd,IAAI94C,EAAO,GAAGrO,KAAK8lC,eAChB9lC,KAAKmH,KAAOnH,KAAKmH,KAAOnH,KAAKqE,SAC1B8iD,EAAQ74C,KAAK,OACnBw4C,EAAS3vC,IAAI7S,KAAK+J,EACrB,CAQA+4C,SACG,OAAOpnD,KAAKwmB,QAAQ2gB,oBAAoBnnC,KAAK4mD,cAChD,CAQAS,QAAQP,GACL,OAAOA,EAASx3C,QAAQ23C,UAAUjnD,KAAK8lC,UAC1C,CASAwhB,UAAUR,GACP,IAAIQ,EAAY,GAEZC,EAAeT,EAASU,mBAAmBxnD,KAAK8lC,WACpD,IAAKyhB,EAAc,CAChB,IAAIh4C,EAAQ,IAAIjH,MACb,2DAA2DtI,KAAK8lC,cAGnE,OADA9lC,KAAKynD,QAAQX,EAAUv3C,GAChB,IACV,CAUA,IAAIm4C,EAAYH,EAAa,kBAC7B,IAAKG,EAMF,OALIn4C,EAAQ,IAAIjH,MACb,gEAAgEtI,KAAK8lC,cAExE9lC,KAAK+B,GAAGqG,OAAO2sB,QAAQxlB,EAAO,CAAE64B,KAAMpoC,OACtCA,KAAKynD,QAAQX,EAAUv3C,GAChB,KAGLpC,MAAMC,QAAQs6C,KAChBA,EAAY,CAACA,IAGhB,IAAIC,EAAiBC,IAIlB,IAAIC,EAAUf,EAASU,mBAAmBI,EAAY,OACtD,GAAKC,EAAL,CAEA,IAAIC,EAAYD,EAAqB,YAAa,UAC7CC,IAEA36C,MAAMC,QAAQ06C,KAChBA,EAAY,CAACA,IAGhBA,EAAU7jD,SAAS8jD,IAChB,IAAIC,EAAahoD,KAAKwmB,QAAQ2gB,oBAAoB4gB,GAClD,GAAIC,EACGV,GACDA,EAAUhjD,KAAK0jD,OAEd,CACJ,IAAIz4C,EAAQ,IAAIjH,MACb,8DAA8Dy/C,MAEjE/nD,KAAK+B,GAAGqG,OAAO2sB,QAAQxlB,EAAO,CAAE64B,KAAMpoC,OACtCA,KAAKynD,QAAQX,EAAUv3C,GACvB+3C,EAAY,IACf,KAtBiB,CAuBlB,EAOL,OAJAI,EAAUzjD,SAAS+C,IAChB2gD,EAAc3gD,EAAE,IAGZsgD,CACV,CAQAG,QAAQX,EAAUv3C,GACf,GAAIA,EAAO,CACR,IAAIlB,EAAO,GAAGkB,EAAMmF,aACpB1U,KAAKmX,IAAI2vC,EAAUz4C,EACtB,CACcrO,KAAKqnD,QAAQP,GACnBzvC,OAAS,OACpB,CAUAywB,oBACG,OAAO,IACV,CAQAJ,YAAYof,EAAUziD,GACnB,OAAO,IACV,CAQAikC,qBACG,OAAO,IACV,CAQA2f,sBAAsBnB,GACnB,IAAIoB,EAAiBloD,KAAKwmB,QAAQshB,kBAAkB9nC,MAChDmoD,EAAuB,CAAC,EAO5B,OANAD,EAAejkD,SAAS+C,IACrBmhD,EAAqBnhD,EAAE3C,KAAOrE,KAAKwmB,QAAQkhB,YAAY1nC,KAAM,CAC1D8mD,EACA9/C,EAAE3C,KACH,IAEE8jD,CACV,CAWA7tC,MAAMwsC,GAEH,IAAIO,EAAUrnD,KAAKqnD,QAAQP,GAItBO,EAKoB,aAAlBA,EAAQhwC,QAA2C,SAAlBgwC,EAAQhwC,gBAEnCyvC,EAASx3C,QAAQ23C,UAAUjnD,KAAK8lC,WAGvC9lC,KAAK+mD,UAAUD,EAASx3C,SAGTtP,KAAKqnD,QAAQP,GACnBsB,WAAaf,EACtBrnD,KAAKmX,IAAI2vC,EAAU,qCAdtB9mD,KAAK+mD,UAAUD,EAASx3C,QAiB9B,CAOA+4C,eAAevB,GACE9mD,KAAKqnD,QAAQP,GACnBzvC,OAAS,WACpB,CAQAixC,YAAYxB,EAAUnhD,GACnBA,EAASA,GAAU,CAAC,EACpB,IAAI0hD,EAAUrnD,KAAKqnD,QAAQP,GAC3B,IAAK,IAAI1zC,KAAKzN,EACX0hD,EAAQj0C,GAAKzN,EAAOyN,EAE1B,CAQAm1C,kBAAkBzB,GACf,IAAIH,EAAQ3mD,KAAKqnD,QAAQP,GACzB,OAAIH,EACsB,aAAhBA,EAAMtvC,QAAyC,SAAhBsvC,EAAMtvC,QAG5C7O,QAAQC,KACL,4FACAq+C,GAGH9mD,KAAK+mD,UAAUD,EAASx3C,SACjBtP,KAAKuoD,kBAAkBzB,GAEpC,CAMAzhB,iBAAkB,CAEdmjB,oBAMD,OAJGxoD,KAAKwmB,QAAQtd,UACTE,GACEA,GAAQA,EAAKhF,UAAuC,UAA3BgF,EAAKhF,SAAS2hD,YACxC,EAEX,CAEI0C,uBACD,OAAOzoD,KAAKwmB,QAAQihB,uBAAuBznC,KAC9C,CAEI0oD,2BACD,MAAMC,EAAY3oD,KAAKwoD,cAAc,GACrC,OAAKG,EAEE3oD,KAAK+B,GAAGgW,WAAW4wC,EAAU/uB,UAFb,IAG1B,CAEIgvB,0BACD,IAGIhvB,EAHAivB,EAAW7oD,KAAKyoD,iBAAiB,GACrC,OAAKI,GAKCjvB,EADE,+BADAivB,EAASjnD,KAEAinD,EAASC,MAAQD,EAASC,MAAMlvB,SAAW,KAI3CivB,EAASjvB,SAInB55B,KAAK+B,GAAGgW,WAAW6hB,IAbJ,IAczB,oBC/eH,MAAMmvB,EAAmB,EAAQ,OAEjC,IAAIC,EAA2B,CAC5BjD,SAAU,MAQVh/C,OAAQ,GAIRwE,KAAM,OAKNlH,IAAK,OAKR5E,EAAOC,QAAU,cAAmCqpD,EACjDppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,mBACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAIinD,EAGlC,CAGA/+B,kBACG,OAAO++B,CACV,CAEA/+B,wBACG,MAAO,CACJ7oB,MAAO,sBACP6nD,WAAY,6BACZC,UAAW,gCACXjD,OAAQ,CACLrkD,KAAM,gBACNskD,oBAAqB,iCAG9B,CA4BAa,UAAUz3C,EAAS0G,GAKhBlW,MAAMinD,UAAUz3C,EAJC,CACd65C,WAAW,GAGuBnzC,EACxC,CAOAkxC,YACG,OAAO,CACV,CASAI,UAAUR,GAEP,MAAO,EACV,oBCvGH,MAAMiC,EAAmB,EAAQ,OAEjC,IAAIK,EAAoC,CACrCrD,SAAU,UAQVx6C,KAAM,eAKNy7C,eAAgB,GAIhB3iD,IAAK,mBAIL+B,SAAU,CAAC,eAMd3G,EAAOC,QAAU,cAA4CqpD,EAC1DppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,4BACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAIqnD,EAGlC,CAGAn/B,kBACG,OAAOm/B,CACV,CAEAn/B,wBACG,MAAO,CACJ7oB,MAAO,oBACP6nD,WAAY,iCACZC,UAAW,wBACXjD,OAAQ,CACLrkD,KAAM,yBAGf,CAEAqE,WAAW+c,GASRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAKgsC,WAAahsC,KAAKgsC,YAAc,CAAC,CACzC,oBChEH,MAAM+c,EAAmB,EAAQ,OAEjC,IAAIM,EAA6B,CAC9BtD,SAAU,OAQVh/C,OAAQ,CACL,KACA,OACA,UACA,UACA,WACA,aACA,UACA,YACA,iBACA,oBAKHwE,KAAM,QAINlH,IAAK,SAKR5E,EAAOC,QAAU,cAAqCqpD,EACnDppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,qBACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAIsnD,EAGlC,CAGAp/B,kBACG,OAAOo/B,CACV,CAEAp/B,wBACG,MAAO,CACJ7oB,MAAO,YACP6nD,WAAY,yBACZC,UAAW,iBACXjD,OAAQ,CACLrkD,KAAM,iBAGf,CAEAqE,WAAW+c,GASRljB,MAAMmG,WAAW+c,GAEjBqmC,EAA2BtiD,OAAO9C,SAAS+C,IACxChH,KAAKgH,GAAKgc,EAAWhc,EAAE,GAE7B,CAkBAlB,QACG,IAAI+D,EAAO/J,MAAMgG,QAMjB,OAJAujD,EAA2BtiD,OAAO9C,SAAS+C,IACxC6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGb6C,CACV,CA8BAk9C,UAAUz3C,EAAS0G,GAChB,IAAIszC,EAAa,CACdhjB,GAAI,GACJE,KAAM,GACN+iB,QAASvpD,KAAKupD,QACdj4C,QAAStR,KAAKsR,SAGjBxR,MAAMinD,UAAUz3C,EAASg6C,EAAYtzC,EACxC,mBC5IH,MAAM+yC,EAAmB,EAAQ,OAEjC,IAAIS,EAAoC,CACrCzD,SAAU,KAQVx6C,KAAM,eAINy7C,eAAgB,GAIhB3iD,IAAK,4BAIL+B,SAAU,CACP,cACA,oBACA,oBACA,4BACA,WACA,iBACA,YACA,gBACA,wBACA,WACA,yBACA,iBACA,YACA,mBAON3G,EAAOC,QAAU,cAA4CqpD,EAC1DppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,kDACtB9B,MAAMkjB,EAAYwD,EAASzkB,EAAIynD,EAGlC,CAGAv/B,kBACG,OAAOu/B,CACV,CAEAv/B,wBACG,OAAO,IACV,oBC5DH,MAAM8+B,EAAmB,EAAQ,OAEjC,IAAIU,EAA4B,CAC7B1D,SAAU,KAQVx6C,KAAM,eAINy7C,eAAgB,GAIhB3iD,IAAK,oBAIL+B,SAAU,CACP,iBACA,WACA,WACA,YACA,eACA,cACA,gBACA,gBACA,kBACA,iBACA,iBACA,YACA,eACA,gBACA,eACA,gBACA,kBACA,sBACA,iBACA,mBAON3G,EAAOC,QAAU,cAAoCqpD,EAClDppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,0CACtB9B,MAAMkjB,EAAYwD,EAASzkB,EAAI0nD,EAGlC,CAGAx/B,kBACG,OAAOw/B,CACV,CAEAx/B,wBACG,OAAO,IACV,oBClEH,MAAM8+B,EAAmB,EAAQ,OAEjC,IAAIW,EAAgC,CACjC3D,SAAU,KAQVx6C,KAAM,eAINy7C,eAAgB,GAIhB3iD,IAAK,wBAIL+B,SAAU,CACP,qBACA,eACA,gBACA,WACA,gBACA,oBACA,iBACA,mBACA,iBACA,oBACA,oBACA,oBACA,kBACA,sBACA,wBACA,YACA,iBACA,eACA,qBACA,sBACA,uBAON3G,EAAOC,QAAU,cAAwCqpD,EACtDppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,8CACtB9B,MAAMkjB,EAAYwD,EAASzkB,EAAI2nD,EAGlC,CAGAz/B,kBACG,OAAOy/B,CACV,CAEAz/B,wBACG,OAAO,IACV,oBCnEH,MAAM8+B,EAAmB,EAAQ,OAEjC,IAAIY,EAA8B,CAC/B5D,SAAU,KAQVx6C,KAAM,UAINy7C,eAAgB,GAIhB3iD,IAAK,sBAIL+B,SAAU,CACP,oBACA,cACA,gBACA,WACA,kBAEA,wBACA,iBACA,YACA,wBACA,qBACA,iBACA,YACA,gBAON3G,EAAOC,QAAU,cAAsCqpD,EACpDppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,4CACtB9B,MAAMkjB,EAAYwD,EAASzkB,EAAI4nD,EAGlC,CAGA1/B,kBACG,OAAO0/B,CACV,CAEA1/B,wBACG,OAAO,IACV,oBC5DH,MAAM8+B,EAAmB,EAAQ,OAEjC,IAAIa,EAAoB,CACrB7D,SAAU,KAQVx6C,KAAM,aAINy7C,eAAgB,GAIhB3iD,IAAK,YAIL+B,SAAU,CAAC,gBAGd3G,EAAOC,QAAU,cAAgCqpD,EAC9CppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,iCACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAI6nD,EAGlC,CAGA3/B,kBACG,OAAO2/B,CACV,CAEA3/B,wBACG,OAAO,IACV,CAUA6d,oBACG,MAAM1mC,EAAQ,GAAGpB,KAAKoB,eAWtB,OAPKpB,KAAK6pD,WACP7pD,KAAK8pD,SAAW9pD,KAAK+B,GAAGk2B,UAAU,CAAC,GACnCj4B,KAAK6pD,SAAW7pD,KAAK+B,GAAGmE,SACrB,CAAE7B,IAAK,SAAU8C,KAAM/F,EAAOA,SAC9BpB,KAAK8pD,WAGJ,CACJzlD,IAAK,GAAGrE,KAAKY,WACbQ,QACAwE,MAAO5F,KAAK6pD,SAElB,oBCzDH,MAAMd,EAAmB,EAAQ,OAEjC,IAAIgB,EAA+B,CAChChE,SAAU,OAQVx6C,KAAM,eAINy7C,eAAgB,GAIhB3iD,IAAK,cAIL+B,SAAU,IAMb3G,EAAOC,QAAU,cAAuCqpD,EACrDppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,uBACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAIgoD,EAGlC,CAGA9/B,kBACG,OAAO8/B,CACV,CAEA9/B,wBACG,MAAO,CACJ7oB,MAAO,eACP6nD,WAAY,4BACZC,UAAW,oBACXjD,OAAQ,CACLrkD,KAAM,oBAGf,oBC5DH,MAAMmnD,EAAmB,EAAQ,OAE3BiB,EAA2C,CAC9CjE,SAAU,KAQVx6C,KAAM,cAINy7C,eAAgB,GAIhB3iD,IAAK,sBAIL+B,SAAU,CAAC,UAMd3G,EAAOC,QAAU,cAAmD,EAGjEC,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,2CACtB9B,MAAMkjB,EAAYwD,EAASzkB,EAAIioD,EAGlC,CAGA//B,kBACG,OAAO+/B,CACV,CAEA//B,wBACG,OAAO,IACV,CAUA6d,oBACG,MAAO,CACJzjC,IAAK,GAAGrE,KAAKY,SACbQ,MAAO,GAAGpB,KAAKoB,aAErB,oBChEH,MAAM2nD,EAAmB,EAAQ,OAEjC,IAAIkB,EAAuB,CACxBlE,SAAU,KAQVx6C,KAAM,cAINy7C,eAAgB,GAIhB3iD,IAAK,eAIL+B,SAAU,CACP,WACA,cACA,WACA,aACA,iBAIN3G,EAAOC,QAAU,cAA+BqpD,EAC7CppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,oCACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAIkoD,EAGlC,CAGAhgC,kBACG,OAAOggC,CACV,CAEAhgC,wBACG,OAAO,IACV,CAEAhkB,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAKkqD,SAAWr2C,KAAK0D,MAAMyL,EAAWknC,WAAY,EACrD,CAEIC,mBAID,OAHgBnqD,KAAKwmB,QAAQtd,UACzBE,GAASA,GAAQA,EAAKhF,UAAsC,SAA1BgF,EAAKhF,SAAS2hD,WAClD,EAEL,CAEIqE,sBACD,OAAOpqD,KAAKwmB,QAAQihB,uBAAuBznC,MAAM,EACpD,CAEI0oD,2BACD,IAAIC,EAAY3oD,KAAKmqD,aACrB,OAAKxB,EAEc3oD,KAAK+B,GAAGgW,WAAW4wC,EAAU/uB,UAFzB,IAI1B,CAEIgvB,0BACD,IAGIhvB,EAHAivB,EAAW7oD,KAAKoqD,gBACpB,OAAKvB,GAKCjvB,EADE,+BADAivB,EAASjnD,KAEAinD,EAASC,MAAQD,EAASC,MAAMlvB,SAAW,KAI3CivB,EAASjvB,SAInB55B,KAAK+B,GAAGgW,WAAW6hB,IAbJ,IAczB,CAEIywB,kBACD,IAAIvyC,EAAM9X,KAAK0oD,qBACf,OAAK5wC,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKsqD,eAAc,GAFnC,IAGpB,oBCjGH,MAAMvB,EAAmB,EAAQ,OAE3BwB,EAAc,EAAQ,OAEtBC,EAAoC,CACvCzE,SAAU,KAQVx6C,KAAM,eAINy7C,eAAgB,GAIhB3iD,IAAK,mBAIL+B,SAAU,CAAC,UAMd3G,EAAOC,QAAU,cAA4CqpD,EAC1DppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,6BACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAIyoD,EAGlC,CAGAvgC,kBACG,OAAOugC,CACV,CAEAvgC,wBACG,OAAO,IACV,CAEAhkB,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAGjBhjB,KAAKyqD,aAAe,GAGhBzqD,KAAK8oD,QACN9oD,KAAK8oD,MAAQyB,EAAYG,eAAe1qD,KAAK8oD,MAAO9oD,KAAMA,KAAK+B,IAErE,CAQA+D,QACG,MAAM+D,EAAO/J,MAAMgG,QAKnB,OAFI9F,KAAK8oD,QAAOj/C,EAAKi/C,MAAQ9oD,KAAK8oD,MAAMhjD,SAEjC+D,CACV,CAEA8gD,mBAAmB7yC,GAChB9X,KAAKyqD,aAAanmD,KAAKwT,EAC1B,CA+BAgwB,oBAEG,IAAI/gC,EAAS,KAcb,OAZI/G,KAAKyqD,aAAatkD,OAAS,IAC5BY,EAAS,GAET/G,KAAKyqD,aAAaxmD,SAAS2I,IACxB,MAAM47B,EAAQ57B,EAAEg+C,iBAAiB5qD,KAAKY,GAAIZ,KAAKoB,OAE3ConC,GACDzhC,EAAOzC,KAAKkkC,EACf,KAICzhC,CACV,CAQA2gC,YAAYof,EAAUziD,GACnB,MAAMkjB,EAAQljB,EAAImjB,MAAM,KAExB,OAAID,EAAM,KAAOvnB,KAAKY,GACHZ,KAAKqnD,QAAQP,GAEdv/B,EAAM,IAGjB,IACV,oBC/IH,MAAMwhC,EAAmB,EAAQ,OAEjC,IAAI8B,EAAqB,CACtB9E,SAAU,OAQVx6C,KAAM,eAINy7C,eAAgB,GAIhB3iD,IAAK,aAIL+B,SAAU,CACP,WACA,cACA,kBACA,aACA,aAIN,MAAM0kD,EAAS,CAEf,EAGArrD,EAAOC,QAAU,cAA6BqpD,EAC3CppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,kCACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAI8oD,EAGlC,CAGA5gC,kBACG,OAAO4gC,CACV,CAEA5gC,wBAEG,MAAO,CACJ7oB,MAAO,cACP6nD,WAAY,0BACZC,UAAW,gCACXjD,OAAQ,CACLrkD,KAAM,kBACNmpD,YAAY,GAGrB,CAEA9kD,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAGjBhjB,KAAKgrD,SAA4B,MAAjBhrD,KAAKgrD,UAA0Bn3C,KAAK0D,MAAMvX,KAAKgrD,UAE/D,IAAIzlB,EAAevlC,KAAKwlC,WAAa,CAAC,EACtCxlC,KAAKirD,mBAAqB,GAC1BjrD,KAAKwlC,UAAY,CAAC,GACjBxiB,EAAWyiB,YAAc,IAAIxhC,SAASyhC,IACpC,IAAIC,EAAM3lC,KAAK+B,GAAG62B,kBAAkB8M,EAAK1lC,MACrC2lC,EACD3lC,KAAKwlC,UAAUE,GAAOC,EAIlBJ,EAAaG,GACd1lC,KAAKwlC,UAAUE,GAAOH,EAAaG,GAEnC1lC,KAAKirD,mBAAmB3mD,KAAKohC,EAEnC,IAGH1lC,KAAKirD,mBAAmBhnD,SAASyhC,IAC9B,IAAIrhC,EAAM,WAAWrE,KAAKokB,mBAAmBpkB,KAAKoB,gDAAgDskC,KAClG,IAAKolB,EAAOzmD,GAAM,CACf,IAAI8D,EAAM,IAAIG,MAAMjE,GACpBrE,KAAK+B,GAAGqG,OAAO2sB,QAAQ5sB,EAAK,CAAE+iD,YAAalrD,KAAKY,GAAI8kC,QACpDolB,EAAOzmD,IAAO,CACjB,KAGHrE,KAAK4lC,aAAe5iB,EAAWmoC,iBAAmB,CAAC,CACtD,CAaArlD,QACG,IAAI+D,EAAO/J,MAAMgG,QAEjB+D,EAAK47B,WAAa,GAClB,IAAK,IAAIp7B,KAAKrK,KAAKwlC,UAChB37B,EAAK47B,WAAWnhC,KAAKtE,KAAKwlC,UAAUn7B,GAAGzJ,IAK1C,OAFAiJ,EAAKshD,gBAAkBnrD,KAAK4lC,aAErB/7B,CACV,CAYAi+B,kBAAkBN,GACf,GAAwB,MAApBxnC,KAAKorD,YAAqB,MAAO,GAErC,IAAIC,GAAgBrrD,KAAKwmB,QAAQshB,kBAAkB9nC,OAAS,IAAI8I,QAC5Do1C,GAAQA,EAAI75C,KAAOrE,KAAKorD,cAC1B,GACF,GAAoB,MAAhBC,EAAsB,MAAO,GAEjC,IAAIv9C,EAAS,GAIVu9C,EAAazlD,OACa,iBAA1BylD,EAAazlD,MAAMvB,KACnBgnD,EAAazlD,MAAMgB,gBACnBykD,EAAazlD,MAAMgB,eAAeG,QAElC+G,EAAOxJ,KAAK,CACTD,IAAK,GAAGrE,KAAKY,UACbQ,MAAO,GAAGpB,KAAKoB,wBACf6D,OAAQomD,EAAazlD,MAAMgB,iBAG9BykD,EAAazlD,MAAMgB,eAAeG,SAAS9C,SAAS+C,IACjD8G,EAAOxJ,KAAK,CACTD,IAAK,GAAGrE,KAAKY,MAAMoG,EAAEpG,KACrBQ,MAAO,GAAGpB,KAAKoB,sBAAsB4F,EAAE5F,QACvCwE,MAAOoB,EACP/B,OAAQ+B,EAAE/B,QACX,KAKL6I,EAAOxJ,KAAK,CACTD,IAAKgnD,EAAazlD,MACb,GAAG5F,KAAKY,MAAMyqD,EAAazlD,MAAMhF,KACjC,GAAGZ,KAAKY,gBACbQ,MAAO,GAAGpB,KAAKoB,qBACfwE,MAAOylD,EAAazlD,MACpBX,OAAQomD,EAAapmD,SAI3B,IAAIqmD,EAAiBtrD,KAAKwmB,QAAQshB,kBAAkBsR,KACjDp5C,KACAwnC,GAMH,OAJI8jB,GAAkBA,EAAenlD,OAAS,IAC3C2H,EAASA,EAAOgZ,OAAOwkC,IAGnBx9C,CACV,CAUA45B,YAAYF,EAAa5xB,GACtB,IAEI/L,EAFAi9C,EAAWlxC,EAAO,GAClBvR,EAAMuR,EAAO,GAGjB,GAAIkxC,GAAYziD,GAAKknD,aAAavrD,KAAKY,IAAK,CACzC,IAAI8J,EAAUrG,EAAImjB,MAAM,KAAK,GACzB6/B,EAAUrnD,KAAKqnD,QAAQP,GACvB0E,EAAYnE,EAAUA,EAAQx9C,KAAO,KAGzC,GAFAA,EAAO2hD,EAEHA,GAAa9gD,EAAS,CACvB,IAAI2gD,GACDrrD,KAAKwmB,QAAQshB,kBAAkB9nC,OAAS,IACzC8I,QAAQo1C,GAAQA,EAAI75C,KAAOrE,KAAKorD,cAAa,GAEf,iBAA5BC,GAAczlD,OAAOvB,MACjB8I,MAAMC,QAAQo+C,KAAYA,EAAY,CAACA,IAG5C3hD,EAAO2hD,EAAUr9C,KAAKC,IACnB,GAAe,QAAX1D,GAAgC,MAAXA,EACtB,OAAO0D,EAAKyB,MAAQzB,EAAKxN,GACrB,GAAIyqD,EAAazlD,MAAMgB,eAAgB,CAC3C,IAAI6kD,EAAcJ,EAAazlD,MAAMgB,eAAeG,QAChDC,GAAMA,EAAEpG,IAAM8J,IAChB,GACF,OAAI+gD,EAAoBr9C,EAAKq9C,EAAY3kD,YAC7BsH,CACf,KAGT,CACH,CAOA,OALY,MAARvE,IACDA,EAAO7J,KAAKwmB,QAAQkhB,YAAY0R,KAAKp5C,KAAMwnC,EAAa5xB,IAE/C,MAAR/L,IAAcA,EAAO7J,KAAKwmB,QAAQkhB,YAAY1nC,KAAM4V,IAEjD/L,CACV,CAcAg8B,YAAYn1B,GACT,OAAO1Q,KAAKwmB,QAAQqf,YAAYuT,KAAKp5C,KAAM0Q,EAC9C,CAQAy1B,uBAAuBC,GACpB,GAAKA,EAEL,OAAOpmC,KAAKwmB,QAAQ2f,uBAAuBiT,KAAKp5C,KAAMomC,EACzD,CAQAC,oBAAoBD,GACjB,GAAKA,EAEL,OAAOpmC,KAAKwmB,QAAQ6f,oBAAoB+S,KAAKp5C,KAAMomC,EACtD,CAQAG,oBAAoBH,GACjB,GAAKA,EAEL,OAAOpmC,KAAKwmB,QAAQ+f,oBAAoB6S,KAAKp5C,KAAMomC,EACtD,CAQAK,iBAAiBzN,GACTA,GAELh5B,KAAKwmB,QAAQigB,iBAAiB2S,KAAKp5C,KAAMg5B,EAC5C,CAcA0N,wBAAwB1N,GACrB,GAAKA,EAEL,OAAOh5B,KAAKwmB,QAAQkgB,wBAAwB0S,KAAKp5C,KAAMg5B,EAC1D,CAQA+N,iBAAiB/N,GACTA,GAELh5B,KAAKwmB,QAAQugB,iBAAiBqS,KAAKp5C,KAAMg5B,EAC5C,CASAyO,uBAAuBD,GACpB,GAAKA,EAEL,OAAOxnC,KAAKwmB,QAAQihB,uBAAuB2R,KAAKp5C,KAAMwnC,EACzD,CAUAt+B,SAASwH,EAAK,MAAM,IACjB,OAAO1Q,KAAKwmB,QAAQtd,SAASkwC,KAAKp5C,KAAM0Q,EAC3C,CAQAu2B,WAAWjO,GACHA,GAELh5B,KAAKwmB,QAAQygB,WAAWmS,KAAKp5C,KAAMg5B,EACtC,CAQAmO,oBAAoBf,GACjB,OAAKA,EAEEpmC,KAAKwmB,QAAQ2gB,oBAAoBiS,KAAKp5C,KAAMomC,GAFlC,IAGpB,CASAgB,cAAc3lB,GACNA,GAELzhB,KAAKwmB,QAAQ4gB,cAAcgS,KAAKp5C,KAAMyhB,EACzC,oBCzYH,MAAMsnC,EAAmB,EAAQ,OAE3B2C,EAAc,EAAQ,OAE5B,IAAIC,EAAgC,CACjC5F,SAAU,KAQVx6C,KAAM,eAINy7C,eAAgB,CAAC,aAAc,oBAI/B3iD,IAAK,WAIL+B,SAAU,CAAC,MAAO,UAAW,gBAMhC3G,EAAOC,QAAU,cAA4CqpD,EAC1DppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,6BACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAI4pD,EAGlC,CAGA1hC,kBACG,OAAO0hC,CACV,CAEA1hC,wBACG,OAAO,IACV,CAEAhkB,WAAW+c,GASRljB,MAAMmG,WAAW+c,GAEjB,SAAS4oC,EAAW9zC,GACbA,GACD3D,OAAOC,KAAK0D,GAAK7T,SAASoQ,IACT,SAAVyD,EAAIzD,GACLyD,EAAIzD,IAAK,EACS,QAAVyD,EAAIzD,GACZyD,EAAIzD,IAAK,EACgB,iBAAVyD,EAAIzD,IACnBu3C,EAAW9zC,EAAIzD,GAClB,GAGT,CACAu3C,CAAW5rD,KAAK6rD,YACnB,CA8CAC,6BACG,IAAI/kD,EAAS/G,KAAKwmB,QAAQshB,kBAAkB9nC,MAmD5C,OAlDI+G,GAAU/G,KAAK6rD,aAAe7rD,KAAK6rD,YAAYE,YAChD/rD,KAAK6rD,YAAYE,WAAW9nD,SAASV,IAC9BA,EAAEyoD,UACHjlD,EAAO+B,QAAQoR,IACZ,GAAIA,EAAMtU,OAAOhF,IAAM2C,EAAEyoD,YACtBzoD,EAAEnC,MAAQ8Y,EAAMtU,MAAMxE,MACtBmC,EAAEc,IAAM6V,EAAM7V,IACVd,EAAEsG,MAAMlE,QAAUuU,EAAMtU,MAAMQ,SAASjE,SAAS,CACjD,IAAIsD,EAAO,GACXyU,EAAMtU,MAAMQ,SAASjE,QAAQ8B,SAASi6C,IACnCz4C,EAAKnB,KAAK,CACPlD,MAAO88C,EAAI7vC,KACX1L,MAAOu7C,EAAIt9C,IACZ,IAEL2C,EAAEsG,KAAKlE,OAASF,CACnB,CACH,IAEKlC,EAAEwoD,YAAcxoD,EAAEwoD,WAAW5lD,SACrC5C,EAAEc,IAAMd,EAAE0oD,KACV1oD,EAAEwoD,WAAW9nD,SAASohB,IACnB,GAAIA,EAAE2mC,UAAW,CAGd,IAAIE,EAAQnlD,EAAO+B,QAAQ9B,GACjBA,EAAE3C,KAAOd,EAAE0oD,OAClB,GACH,IAAKC,EAAO,OACZA,EAAMjnD,OAAO8B,SAAS+B,QAAQoR,IAC3B,GAAIA,GAAOtZ,IAAMykB,EAAE2mC,YAChB3mC,EAAEjkB,MAAQ8Y,EAAM9Y,MAChBikB,EAAEhhB,IAAM6V,EAAMpT,WACVue,EAAExb,MAAMlE,QAAUuU,EAAM9T,SAASjE,SAAS,CAC3C,IAAIsD,EAAO,GACXyU,EAAM9T,SAASjE,QAAQ8B,SAASi6C,IAC7Bz4C,EAAKnB,KAAK,CACPlD,MAAO88C,EAAI7vC,KACX1L,MAAOu7C,EAAIt9C,IACZ,IAELykB,EAAExb,KAAKlE,OAASF,CACnB,CACH,GAEN,KAEN,IAGCzF,KAAK6rD,WACf,CAUA/jB,oBAEG,IAAI3lC,EAAU,GACdnC,KAAK6rD,YAAYE,WAAW9nD,SAASkoD,IACjB,UAAbA,EAAKvqD,MAAmC,SAAfuqD,EAAKC,QAAqBD,EAAK18B,OACzDttB,EAAQmC,KAAK,CACV1D,GAAIurD,EAAK18B,MACTphB,KAAM89C,EAAK/qD,OAEjB,IAMH,IAAIirD,EAAOrsD,KAAK8lC,UAKZ3H,EAAQn+B,KAAK+B,GAAGk2B,UAAU,CAAC,GAC3Bq0B,EAAY,IAAIZ,EACjB,CACG9qD,GAAI,GAAGyrD,qBACPjrD,MAAO,GAAGpB,KAAKoB,kBACf0F,WAAY,GAAGulD,qBACfjmD,SAAU,CACPjE,QAASA,IAGfg8B,GAGH,MAAO,CACJ,CACG95B,IAAK,GAAGgoD,qBACRjrD,MAAO,GAAGpB,KAAKoB,kBACfwE,MAAO0mD,EACPrnD,OAAQ,MAGjB,CAQAyiC,YAAYof,EAAUziD,GACnB,GAAIA,EAAK,CACN,IAAIkjB,EAAQljB,EAAImjB,MAAM,KACtB,GAAID,EAAM,IAAMvnB,KAAK8lC,UAElB,OADc9lC,KAAKqnD,QAAQP,GACZv/B,EAAM,GAE3B,CACA,OAAO,IACV,oBCjOH,MAAMwhC,EAAmB,EAAQ,OAEjC,IAAIwD,EAA4B,CAC7BxG,SAAU,OAQVx6C,KAAM,OAINy7C,eAAgB,GAIhB3iD,IAAK,WAIL+B,SAAU,IAMb3G,EAAOC,QAAU,cAAoCqpD,EAClDppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,oBACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAIwqD,EAGlC,CAGAtiC,kBACG,OAAOsiC,CACV,CAEAtiC,wBAEG,MAAO,CACJ7oB,MAAO,YACP6nD,WAAY,yBACZC,UAAW,iBACXjD,OAAQ,CACLrkD,KAAM,iBAGf,CA8BAmlD,UAAUz3C,EAAS0G,GAMhBlW,MAAMinD,UAAUz3C,EALC,CACdJ,MAAO,GACPzO,GAAI,MAG8BuV,EACxC,oBCtGH,MAAM+yC,EAAmB,EAAQ,OAE3ByD,EAAoC,CACvCzG,SAAU,KAQVx6C,KAAM,cAINy7C,eAAgB,CAAC,aAAc,oBAI/B3iD,IAAK,WAIL+B,SAAU,CAAC,MAAO,UAAW,QAM1BA,EAAW,CACdqmD,IAAK,IACLC,QAAS,KACTp8C,IAAK,IAGR7Q,EAAOC,QAAU,cAA4CqpD,EAC1DppD,YAAYqjB,EAAYwD,EAASzkB,GAC9B,IAAK,MAAMsC,KAAO+B,EACf4c,EAAW3e,GAAO2e,EAAW3e,IAAQ+B,EAAS/B,GACjDvE,MACGqU,OAAOsmC,OACJ,CACG74C,KAAM,iCAETohB,GAEHwD,EACAzkB,EACAyqD,EAIN,CAGAviC,kBACG,OAAOuiC,CACV,CAEAviC,wBACG,OAAO,IACV,CAUA6d,oBACG,MAAO,CACJ,CACGzjC,IAAK,GAAGrE,KAAKY,sBACbQ,MAAO,GAAGpB,KAAKoB,mBAGxB,oBChFH,MAAM2nD,EAAmB,EAAQ,OAEjC,IAAI4D,EAA2B,CAC5B5G,SAAU,QAQVh/C,OAAQ,GAIRwE,KAAM,MAINlH,IAAK,WAKR5E,EAAOC,QAAU,cAAmCqpD,EACjDppD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,UACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAI4qD,EAGlC,CAGA1iC,kBACG,OAAO0iC,CACV,CAEA1iC,wBACG,MAAO,CACJ7oB,MAAO,qBACP6nD,WAAY,4BACZC,UAAW,+BACXjD,OAAQ,CACLrkD,KAAM,kBAGNskD,oBAAqB,8BAG9B,CAEAjgD,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAKuoC,WAAavlB,EAAWulB,YAAc,eAC9C,CAaAziC,QACG,IAAI+D,EAAO/J,MAAMgG,QAIjB,OAFA+D,EAAK0+B,WAAavoC,KAAKuoC,WAEhB1+B,CACV,oBCxEH,MAAM+iD,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzC9G,SAAU,QAQVh/C,OAAQ,CACL,WACA,gBAKHwE,KAAM,MAINlH,IAAK,oBAKR5E,EAAOC,QAAU,cAAwCktD,EACtDjtD,YAAYqjB,EAAYwD,EAASzkB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,UACrC9B,MAAMkjB,EAAYwD,EAASzkB,EAAI8qD,EAGlC,CAGA5iC,kBACG,OAAO4iC,CACV,CAEA5iC,wBACG,MAAO,CACJ7oB,MAAO,2BACP6nD,WAAY,sCAEZC,UAAW,+BACXjD,OAAQ,CACLrkD,KAAM,kBAGNskD,oBAAqB,sBAG9B,CAEAjgD,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAK45B,SAAW5W,EAAW4W,UAAY,WACvC55B,KAAK8sD,aAAe9pC,EAAW8pC,cAAgB,iBAClD,CAaAhnD,QACG,IAAI+D,EAAO/J,MAAMgG,QAIjB,OAFA+D,EAAK+vB,SAAW55B,KAAK45B,SACrB/vB,EAAKijD,aAAe9sD,KAAK8sD,aAClBjjD,CACV,CAUAi+B,oBACG,IAAI/gC,EAAS,KACb,GAAI/G,KAAK45B,SAAU,CAChB7yB,EAAS,GACT,IAAI9B,EAASjF,KAAK+B,GAAGgW,WAAW/X,KAAK45B,UACrC,GAAI30B,EAAQ,CACT,IAAIonD,EAAOrsD,KAAK8lC,UAChB7gC,EAAO8B,SAAS9C,SAAS2B,IACtBmB,EAAOzC,KAAK,CACTD,IAAK,GAAGgoD,KAAQzmD,EAAMhF,KACtBQ,MAAO,GAAGpB,KAAKoB,UAAU6D,EAAO7D,UAAUwE,EAAMxE,QAChDwE,QACAX,UACD,IAEL8B,EAAOzC,KAAK,CACTD,IAAK,GAAGgoD,SACRjrD,MAAO,GAAGpB,KAAKoB,UAAU6D,EAAO7D,QAChCwE,MAAO,KACPX,UAEN,KAAO,CAGJ,IAAIsK,EAAQ,IAAIjH,MACb,4DAA4DtI,KAAKY,gDAAgDZ,KAAK45B,aAEzH55B,KAAK+B,GAAGqG,OAAO2sB,QAAQxlB,EAAO,CAC3B64B,KAAMpoC,KAAKY,GACXwjC,MAAOpkC,KAAK45B,UAElB,CACH,CACA,OAAO7yB,CACV,CAQA2gC,YAAYof,EAAUziD,GACnB,IAAIkjB,EAAQljB,EAAImjB,MAAM,KACtB,GAAID,EAAM,IAAMvnB,KAAK8lC,UAAW,CAC7B,IAAIuhB,EAAUrnD,KAAKqnD,QAAQP,GAC3B,GAAIO,EAAc,KAAG,CAClB,IA2BOzhD,EAvBP,GAHIA,EADS5F,KAAK+B,GAAGgW,WAAW/X,KAAK45B,UAClB7yB,QAAQC,GACjBA,EAAEpG,IAAM2mB,EAAM,KACrB,GAEA,OAAIA,EAAM,GACA3hB,EAAM2hB,EAAM,IAAI6xB,KAAKxzC,EAAOyhD,EAAc,OAKO,GAApD,CAAC,YAAa,eAAeh6C,QAAQzH,EAAMvB,KACrCuB,EAAM0a,OAAO+mC,EAAc,MACb,iBAAbzhD,EAAMvB,IAEXgjD,EAAc,KAAEzhD,EAAMkB,aACtBugD,EAAc,KAAEzhD,EAAMmqB,gBAGlBs3B,EAAc,KAAEzhD,EAAMkB,YAG/B,GAAgB,QAAZygB,EAAM,GACd,OAAO8/B,EAAc,KAAQ,KAO7B,GAHIzhD,EADS5F,KAAK+B,GAAGgW,WAAW/X,KAAK45B,UAClB7yB,QAAQC,GACjBA,EAAEpG,IAAM2mB,EAAM,KACrB,GAEA,OAAIA,EAAM,GACA3hB,EAAM2hB,EAAM,IAAI6xB,KAAKxzC,EAAOyhD,EAAc,MAG1CA,EAAc,KAAEzhD,EAAMkB,WAIzC,CACH,CACA,OAAO,IACV,CAQAwhC,qBACG,IAAI5iB,EAAU,KAId,OAHI1lB,KAAK45B,WACNlU,EAAU,CAAC1lB,KAAK+B,GAAGgW,WAAW/X,KAAK45B,YAE/BlU,CACV,oBClMH,MAAMknC,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzC9G,SAAU,QAQVh/C,OAAQ,CACL,cACA,aACA,cACA,eACA,gBACA,aAKHwE,KAAM,UAINlH,IAAK,kBAIL0oD,YAAa,QACbC,WAAY,QACZC,YAAa,MACbC,aAAc,MACdC,cAAe,OACfC,WAAW,GAGd3tD,EAAOC,QAAU,cAAoCktD,EAClDjtD,YAAYqjB,EAAYwD,EAASzhB,GAC9Bie,EAAWphB,KAAOohB,EAAWphB,MAAQ,UACrC9B,MACGkjB,EACAwD,EACAzhB,EACA8nD,EAEN,CAGA5iC,kBACG,OAAO4iC,CACV,CAEA5iC,wBACG,MAAO,CACJ7oB,MAAO,oBACP6nD,WAAY,kCAEZC,UAAW,8BACXjD,OAAQ,CACLrkD,KAAM,kBAGNskD,oBAAqB,yBAG9B,CAEAjgD,WAAW+c,GAoBR,GAnBAljB,MAAMmG,WAAW+c,GAEjBhjB,KAAK+sD,YACF/pC,EAAW+pC,aACXF,EAAsCE,YAEzC/sD,KAAKitD,YACFjqC,EAAWiqC,aACXJ,EAAsCI,YAEzCjtD,KAAKktD,aACFlqC,EAAWkqC,cACXL,EAAsCK,aAEzCltD,KAAKmtD,cACFnqC,EAAWmqC,eACXN,EAAsCM,cAGrCnqC,EAAWgqC,WAAY,CACxB,IAAIK,EAAWrqC,EAAWgqC,WAAWxlC,MAAM,KACvCkzB,EAAW,IAAIn6B,KACnBm6B,EAAS4S,YAAYD,EAAS,IAC9B3S,EAAS6S,cAAcF,EAAS,IAChCrtD,KAAKgtD,WAAa,GAAGtS,EAASE,cAAcF,EAASI,cACxD,MACG96C,KAAKgtD,WAAaH,EAAsCG,gBAGxB,IAAxBhqC,EAAWoqC,UACnBptD,KAAKotD,UAAYv5C,KAAK0D,MAAMyL,EAAWoqC,WAEvCptD,KAAKotD,UAAYP,EAAsCO,SAE7D,CAaAtnD,QACG,IAAI+D,EAAO/J,MAAMgG,QAejB,OAbA+D,EAAKkjD,YAAc/sD,KAAK+sD,YACxBljD,EAAKojD,YAAcjtD,KAAKitD,YACxBpjD,EAAKqjD,aAAeltD,KAAKktD,aACzBrjD,EAAKsjD,cAAgBntD,KAAKmtD,cAG1BtjD,EAAKmjD,WAAahtD,KAAKgtD,WACnBnjD,EAAKmjD,YAAcnjD,EAAKmjD,sBAAsBzsC,OAC/C1W,EAAKmjD,WAAa,GAAGnjD,EAAKmjD,WAAWQ,iBAAiB3jD,EAAKmjD,WAAWlS,gBAGzEjxC,EAAKujD,UAAYptD,KAAKotD,UAEfvjD,CACV,CAEA4jD,oBACG,IAIIC,EACAC,EACAC,EANAP,EAAWrtD,KAAKgtD,WAAWxlC,MAAM,KAEjCqmC,EAASR,EAAS,GAClBS,EAAOT,EAAS,GAMpB,OAAQrtD,KAAK+sD,aACV,IAAK,QACFW,EAAM,IACNC,EAAQ,IACRC,EAA8B,WAApB5tD,KAAKitD,YAA2B,MAAQ,IAClD,MACH,IAAK,SACFS,EAAM,IACNC,EAAQ,IACRC,EAAU5tD,KAAKktD,aACf,MACH,IAAK,UACFQ,EAAM1tD,KAAKmtD,cACXQ,EAAQ,IACRC,EAAU,IAIhB,MAAO,KAAaC,KAAUC,KAAQJ,KAAOC,KAASC,KACzD,oBC5JH,IAAIryB,EAAY,EAAQ,OAwKxB97B,EAAOC,QAvKP,cAAuB67B,EACpB57B,YAAYqjB,EAAY+qC,EAAsBC,EAAQ5lB,EAAMrmC,GACzDjC,QAGKqN,MAAMC,QAAQ2gD,KAChBA,EAAuB,CAACA,IAG3B/tD,KAAK+tD,qBAAuBA,EAE5B/tD,KAAKiF,OAAS+oD,EAASA,EAAO/oD,OAAS,KAOnC+oD,GAAUA,EAAOC,YAAWjuD,KAAKiF,OAAS+oD,EAAOC,WAErDjuD,KAAKguD,OAASA,EACdhuD,KAAKooC,KAAOA,EAMZpoC,KAAK+B,GAAKA,EACV/B,KAAK0qB,KAAO,KAEZ1qB,KAAK0qD,eAAe1nC,EACvB,CAKAkrC,WAAWlrC,GAAa,CAExB0nC,eAAe1nC,GAsCZ,GA3BAhjB,KAAKqE,IAAMrE,KAAKL,YAAY0E,KAAO,KAGnCrE,KAAK4V,OAASoN,EAAWpN,QAAU,CAAC,EAKpC5V,KAAK45B,SAAW5W,EAAW4W,UAAY,KAGnC55B,KAAK45B,WAAU55B,KAAKiF,OAASjF,KAAKmuD,aAAanuD,KAAK45B,WAExD55B,KAAKkuD,WAAWlrC,GAGZhjB,KAAK45B,WAAa55B,KAAKiF,QACxBjF,KAAK+B,GAAGqG,OAAOC,UACZ,IAAIC,MACD,6DAA6DtI,KAAK45B,aAErE,CACG5W,aACA4W,SAAU55B,KAAK45B,WAIpB5W,EAAW0H,KAAM,CAClB,IAAI0jC,EAAS,KAMb,IAJCpuD,KAAKquD,WAAaruD,KAAKL,YAAY0uD,WAAWpqD,SAASqqD,IACjDA,EAAGjqD,MAAQ2e,EAAW0H,KAAKrmB,MAAK+pD,EAASE,EAAE,IAG9CF,EAAQ,CAET,MAAMG,EAAO,IAAIH,EAAOprC,EAAW0H,KAAM1qB,KAAMA,KAAKooC,KAAMpoC,KAAK+B,IAE/D/B,KAAK0qB,KAAO6jC,CACf,CACH,CACH,CAUAJ,aAAa/pB,GACV,OAAOpkC,KAAK+B,GAAG2jB,SAASL,IACrB,MAAMmpC,EAAc,IAAInpC,EAAEjkB,SAE1B,OAEGikB,EAAEzkB,KAAOwjC,GAAwC,IAA/BoqB,EAAYnhD,QAAQ+2B,EACxC,IACD,EACN,CAQAqqB,iCACG,MAAMC,EACH1uD,KAAKooC,KAAK5hB,QAAQshB,kBAAkB9nC,KAAKooC,OAAS,GAC/CumB,EAAe,CAAC,EAUtB,OARAD,EAA2BzqD,SAAS+C,IAC7BA,EAAEpB,MACH+oD,EAAa3nD,EAAEpB,MAAMhF,IAAMoG,EAE3B2nD,EAAa3nD,EAAE3C,KAAO2C,CACzB,IAGI2nD,CACV,CAUAC,aAAaC,GAAO,CAQpB/oD,QACG,MAAMgS,EAAM,CACTzT,IAAKrE,KAAKL,YAAY0E,IAEtBuR,OAAQ5V,KAAK4V,OAGbgkB,SAAU55B,KAAKiF,QAAQrE,IAAM,MAOhC,OAJIZ,KAAK0qB,OACN5S,EAAI4S,KAAO1qB,KAAK0qB,KAAK5kB,SAGjBgS,CACV,oBCtKH,MAAMg3C,EAAO,EAAQ,OACfT,EAAY,EAAQ,OAMpBU,EAAuB,CAC1B,CACGntD,KAAM,mBACNuF,KAAM,SAIZ,MAAM6nD,UAAqBF,EACxBnvD,YAAYqjB,EAAYgrC,EAAQ5lB,EAAMrmC,GACnCjC,MAAMkjB,EAAY+rC,EAAsBf,EAAQ5lB,EAAMrmC,EACzD,EAOHitD,EAAa3qD,IAAM,OACnB2qD,EAAa5tD,MAAQ,OACrB4tD,EAAaX,UAAYA,EAEzB5uD,EAAOC,QAAUsvD,mBC5BjB,MAGMC,EAAkB,CAarBvE,eAAgB,SAAU1nC,EAAYolB,EAAMrmC,GACzC,IAAKihB,EAAY,OAAO,KAExB,MAAMksC,EAAc,GAMpB,OAJAD,EAAgBE,MAAMlrD,SAASmrD,IACxBA,EAAG/qD,MAAQ2e,EAAW3e,KAAK6qD,EAAY5qD,KAAK8qD,EAAG,IAG3B,IAAvBF,EAAY/oD,OAGA,IAAI+oD,EAAY,GAAGlsC,EAAYolB,EAAMrmC,GAGvC,IACjB,EAMAotD,MArCW,CADG,EAAQ,SAwCzB1vD,EAAOC,QAAUuvD,mBCtCjB,MAAMH,EAAO,EAAQ,OAMfT,EAAY,CADH,EAAQ,QAGjBU,EAAuB,CAC1B,CACGntD,KAAM,aACNuF,KAAM,SAIZ,MAAMkoD,UAAuBP,EAC1BnvD,YAAYqjB,EAAYolB,EAAMrmC,GAE3BjC,MAAMkjB,EAAY+rC,EAAsB,KAAM3mB,EAAMrmC,EACvD,CAKAmsD,WAAWlrC,GACR,IAAKhjB,KAAKiF,QAAUjF,KAAK4V,OAAQ,CAC9B,MAAM05C,EAAatvD,KAAK+tD,qBAAqB1hC,MAAMwiC,GAC3B,eAAdA,EAAKjtD,OAGX0tD,IACDtvD,KAAK45B,SAAW55B,KAAK4V,OAAO05C,EAAWnoD,MACvCnH,KAAKiF,OAASjF,KAAKmuD,aAAanuD,KAAK45B,WAGnC55B,KAAKiF,QACPjF,KAAKuvD,eAAe,qBAAsB,CACvC31B,SAAU55B,KAAK45B,UAGxB,CACH,CAEA9zB,QACG,MAAMgS,EAAMhY,MAAMgG,QAIlB,IAAKgS,EAAI8hB,UAAY55B,KAAK4V,OAAQ,CAC/B,MAAM05C,EAAatvD,KAAK+tD,qBAAqB1hC,MAAMwiC,GAC3B,eAAdA,EAAKjtD,OAGX0tD,IAAYx3C,EAAI8hB,SAAW55B,KAAK4V,OAAO05C,EAAWnoD,MACzD,CAEA,OAAO2Q,CACV,EAGHu3C,EAAehrD,IAAM,SACrBgrD,EAAejuD,MAAQ,SACvBiuD,EAAehB,UAAYA,EAE3B5uD,EAAOC,QAAU2vD,mBClEjB,MAAMG,EAAW,EAAQ,KACnBC,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAExBjwD,EAAOC,QAAU,CAAC8vD,EAAUC,EAAQC,oBCDpC,MAAMC,EAAe,EAAQ,MACvBC,EAAgB,EAAQ,KACxBC,EAAc,EAAQ,OAE5B,MAAMC,UAAyBH,EAExBtB,gBACD,IAAI0B,EAAY,GAEhB,MAAMnqD,EAAQ5F,KAAK4F,OAAS5F,KAAKiF,OAAO8I,UAAU/N,KAAK65B,UAAY,KAGnE,OAAQj0B,GAAOvB,KAEZ,IAAK,gBACF,GAAgC,SAA5BuB,EAAMQ,SAASa,SAAqB,CAIrC8oD,EAFgB,EAAQ,OAIxB,KACH,CAGAA,EAAY/vD,KAAKguD,OAAOruD,YAAY0uD,UAAUvlD,QAC1CknD,GACEA,EAAS3rD,MAAQrE,KAAKL,YAAY0E,KAClC2rD,EAAS3rD,MAAQurD,EAAcvrD,MAGrC,MAEH,QAEG0rD,EAAY/vD,KAAKguD,OAAOruD,YAAY0uD,UAAUvlD,QAC1CknD,GAAaA,EAAS3rD,MAAQwrD,EAAYxrD,MAMpD,OAAO0rD,CACV,EAGHD,EAAiBzrD,IAAM,YACvByrD,EAAiB1uD,MAAQ,gCACzB0uD,EAAiBzB,UAAY,GAE7B5uD,EAAOC,QAAUowD,mBCpDjB,MAAMG,EAAc,EAAQ,OAE5B,MAAMC,UAAwBD,GAE9BC,EAAgB7rD,IAAM,WACtB6rD,EAAgB9uD,MAAQ,oBACxB8uD,EAAgB7B,UAAY,GAG5B5uD,EAAOC,QAAUwwD,mBCVjB,MAAMpB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACGntD,KAAM,eACNuF,KAAM,WAIZ,MAAMgpD,UAA0BrB,EAC7BnvD,YAAYqjB,EAAYgrC,EAAQ5lB,EAAMrmC,GACnCjC,MAAMkjB,EAAY+rC,EAAsBf,EAAQ5lB,EAAMrmC,GAKtD/B,KAAKL,YAAY0uD,UAAYL,EAAOruD,YAAY0uD,SACnD,EAOH8B,EAAkB9rD,IAAM,SACxB8rD,EAAkB/uD,MAAQ,qBAC1B+uD,EAAkB9B,UAAY,GAG9B5uD,EAAOC,QAAUywD,mBC9BjB1wD,EAAOC,QAAU,CACd,EAAQ,OACR,EAAQ,MACR,EAAQ,yBCFX,MAAMovD,EAAO,EAAQ,OACfsB,EAAU,EAAQ,OAMxB,MAAMC,UAAyBvB,EAC5BnvD,YAAYqjB,EAAYgrC,EAAQ5lB,EAAMrmC,GACnCjC,MAAMkjB,EAAY,GAAIgrC,EAAQ5lB,EAAMrmC,EACvC,EAOHsuD,EAAiBhsD,IAAM,QACvBgsD,EAAiBjvD,MAAQ,0BACzBivD,EAAiBhC,UAAY+B,EAE7B3wD,EAAOC,QAAU2wD,mBCrBjB,MAAMvB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACGntD,KAAM,eACNuF,KAAM,YAIZ,MAAMmpD,UAAyBxB,EAC5BnvD,YAAYqjB,EAAYgrC,EAAQ5lB,EAAMrmC,GACnCjC,MAAMkjB,EAAY+rC,EAAsBf,EAAQ5lB,EAAMrmC,EACzD,CAMA2oD,eAAe1nC,GAIZhjB,KAAKL,YAAY0uD,UAAYruD,KAAKguD,OAAOruD,YAAY0uD,UAKrDruD,KAAK65B,QAAU7W,EAAW6W,QAC1B75B,KAAK4F,MAAQ5F,KAAKiF,QAAQ8I,UAAU/N,KAAK65B,SAkBrC7W,EAAWutC,cACZvwD,KAAKiuD,UAAYjuD,KAAKmuD,aAAanrC,EAAWutC,cAEjDzwD,MAAM4qD,eAAe1nC,EACxB,CAEAld,QACG,MAAMgS,EAAMhY,MAAMgG,QAElB,GAAI9F,KAAK65B,QACN/hB,EAAI+hB,QAAU75B,KAAK65B,QAEf75B,KAAKiuD,YAAWn2C,EAAIy4C,YAAcvwD,KAAKiuD,UAAUrtD,QACjD,CACJkX,EAAI+hB,QAAU75B,KAAK4V,OAAOhQ,OAAS,KAEnC,MAAMA,EAAQ5F,KAAKiF,OAAO8I,UAAU+J,EAAI+hB,SAEpCj0B,GAAOo6B,eAAcloB,EAAIy4C,YAAc3qD,EAAMgB,eAAehG,GACnE,CAEA,OAAOkX,CACV,EAGHw4C,EAAiBjsD,IAAM,YACvBisD,EAAiBlvD,MAAQ,gCACzBkvD,EAAiBjC,UAAY,GAE7B5uD,EAAOC,QAAU4wD,mBC5EjB,MAAMxB,EAAO,EAAQ,OAEfC,EAAuB,CAC1B,CACGntD,KAAM,YACNuF,KAAM,eAIZ,MAAMqpD,UAAwB1B,EAC3BnvD,YAAYqjB,EAAYgrC,EAAQ5lB,EAAMrmC,GACnCjC,MAAMkjB,EAAY+rC,EAAsBf,EAAQ5lB,EAAMrmC,GAGlD/B,KAAKywD,YACNroB,EAAKuiB,mBAAmB3qD,MACxBA,KAAK0wD,YAAa,EAExB,CAMAhG,eAAe1nC,GAIZhjB,KAAKL,YAAY0uD,UAAYruD,KAAKguD,OAAOruD,YAAY0uD,UAErDvuD,MAAM4qD,eAAe1nC,GAErBhjB,KAAKywD,UAAYztC,EAAWytC,WAAazwD,KAAK4V,OAAO+6C,UACxD,CAEA7qD,QACG,MAAMgS,EAAMhY,MAAMgG,QAIlB,OAFAgS,EAAI24C,UAAYzwD,KAAKywD,WAAazwD,KAAK4V,OAAO+6C,WAEvC74C,CACV,CAEA8yC,iBAAiBhqD,EAAIQ,GAQlB,IAAIwE,EAAQ,KAUZ,MAHgC,kBAA5B5F,KAAKguD,QAAQpoD,OAAOvB,MACrBuB,EAAQ5F,KAAKguD,OAAOpoD,OAEhB,CACJvB,IAAK,GAAGzD,KAAMZ,KAAKywD,WAAazwD,KAAK4V,OAAO+6C,aAC5CvvD,MAAO,GAAGA,MAAUpB,KAAKywD,WAAazwD,KAAK4V,OAAO+6C,aAClD/qD,MAAOA,EACPX,OAAQjF,KAAKiF,OACb4U,KAAK,EAEX,EAGH22C,EAAgBnsD,IAAM,WACtBmsD,EAAgBpvD,MAAQ,oBACxBovD,EAAgBnC,UAAY,GAG5B5uD,EAAOC,QAAU8wD,mBCrFjB,MAAMI,EAAe,EAAQ,OAEvBC,EAA4B,CAC/BxsD,IAAK,cACLkH,KAAM,WACNulD,SAAU,gBAGPC,EAA6C,CAChDC,WAAY,KACZpiC,MAAO,KACPqiC,YAAa,aACbjV,SAAU,YACVkV,WAAW,EACXlwD,MAAO,KAGVvB,EAAOC,QAAU,cAAoCkxD,EAClDjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB+uB,EAEvB,CAEA5mC,gBACG,OAAO4mC,CACV,CAEA5mC,uBACG,OAAO8mC,CACV,CAYA9qD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGuB,iBAA7BA,EAAOS,SAAS8qD,YACxBlxD,KAAKoG,SAAS8qD,UAAYr9C,KAAK0D,MAAM5R,EAAOS,SAAS8qD,YAEzB,MAA3BlxD,KAAKoG,SAAS8qD,YACflxD,KAAKoG,SAAS8qD,UACXH,EAA2CG,WAGjDlxD,KAAKoG,SAASpF,MAAQ6jB,SACnBlf,EAAOS,SAASpF,OACb+vD,EAA2C/vD,MAEpD,oBC7DH,MAAM4vD,EAAe,EAAQ,OAEvBO,EAAe,EAAQ,OAEvBC,EAA4B,CAC/B/sD,IAAK,cAILkH,KAAM,SAINulD,SAAU,gBAMPO,EAA6C,CAChDL,WAAY,KAKZM,kBAAmB,GAInBL,YAAa,aAIbjwD,MAAO,EAIPuwD,YAAa,IAuBhB9xD,EAAOC,QAAU,cAAoCkxD,EAClDjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBsvB,EAEvB,CAOAnnC,gBACG,OAAOmnC,CACV,CAQAnnC,uBACG,OAAOonC,CACV,CAYAprD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQ6jB,SACnB7kB,KAAKoG,SAASpF,OAASqwD,EAA2CrwD,MAExE,CAEIwwD,iBACD,IAAIvsD,EAASjF,KAAKkrB,gBAAgBD,WAClC,GAAKhmB,EAUL,OARwB,MAApBjF,KAAKyxD,cACNzxD,KAAKyxD,YAAc,IAAIN,GAG1BnxD,KAAKyxD,YAAYC,SAAS1xD,MAC1BA,KAAKyxD,YAAYE,aAAa3xD,KAAKoG,SAASmrD,aAC5CvxD,KAAKyxD,YAAYzsD,WAAWC,GAErBjF,KAAKyxD,WACf,CAEAG,iBAAiBC,GACVA,IAAa1kD,MAAMC,QAAQykD,KAC5BA,EAAW,CAACA,IAGfA,EAAS5tD,SAASib,IACflf,KAAKwxD,YAAYM,WAAW,CAAEjoD,KAAMqV,EAAIrV,MAAQqV,EAAKhV,KAAMlK,MAAO,GAExE,CAEA+xD,cAAcF,GAKX,GAJIA,IAAa1kD,MAAMC,QAAQykD,KAC5BA,EAAW,CAACA,KAGV7xD,KAAKwxD,WAAY,OAAO/hD,QAAQC,UAErC,IAAI02C,EAAQ,GAQZ,OANAyL,EAAS5tD,SAASib,IACfknC,EAAM9hD,KACHtE,KAAKwxD,WAAWhrC,QAAQ,CAAE3c,KAAMqV,EAAIrV,MAAQqV,EAAKhV,KAAMlK,OACzD,IAGGyP,QAAQ4R,IAAI+kC,EACtB,oBCrJH,MAAMwK,EAAe,EAAQ,OAEvBoB,EAA0C,CAC7ChB,WAAY,KACZprD,MAAO,KAEP5E,MAAO,IACPD,OAAQ,IACRkxD,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,eAAgB,SAChBC,gBAAgB,EAEhBC,YAAa,KACbC,WAAY,KACZC,SAAU,KACVC,QAAS,MAGNC,EAAiB,CACpBruD,IAAK,WACLkH,KAAM,QACNulD,SAAU,YAGbrxD,EAAOC,QAAU,cAAiCkxD,EAC/CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO+nC,CACV,CAYA/rD,WAAWN,GACR7F,MAAMmG,WAAWN,QAGiB,IAAvB3F,KAAKoG,SAASpF,MACtBhB,KAAKoG,SAASpF,MAAQ6jB,SAAS7kB,KAAKoG,SAASpF,OAE7ChB,KAAKoG,SAASpF,MAAQgxD,EAAwChxD,WAE9B,IAAxBhB,KAAKoG,SAASrF,OACtBf,KAAKoG,SAASrF,OAAS8jB,SAAS7kB,KAAKoG,SAASrF,QAE9Cf,KAAKoG,SAASrF,OAASixD,EAAwCjxD,OAElE,IACGf,KAAKoG,SAAS6rD,UAAYp+C,KAAK0D,MAAMvX,KAAKoG,SAAS6rD,UAItD,CAHE,MAAO5nD,GACNrK,KAAKoG,SAAS6rD,UACXD,EAAwCC,SAC9C,CACA,IACGjyD,KAAKoG,SAAS8rD,SAAWr+C,KAAK0D,MAAMvX,KAAKoG,SAAS8rD,SAIrD,CAHE,MAAO7nD,GACNrK,KAAKoG,SAAS8rD,SACXF,EAAwCE,QAC9C,CACA,IACGlyD,KAAKoG,SAAS+rD,WAAat+C,KAAK0D,MAAMvX,KAAKoG,SAAS+rD,WAIvD,CAHE,MAAO9nD,GACNrK,KAAKoG,SAAS+rD,WACXH,EAAwCG,UAC9C,CACAnyD,KAAKoG,SAASgsD,eACXpyD,KAAKoG,SAASgsD,gBACdJ,EAAwCI,eAC3C,IACGpyD,KAAKoG,SAASisD,eAAiBx+C,KAAK0D,MACjCvX,KAAKoG,SAASisD,eAKpB,CAHE,MAAOhoD,GACNrK,KAAKoG,SAASisD,eACXL,EAAwCK,cAC9C,CACH,CAMAM,gBACG,MAAO,EACV,CAEIC,iBACD,IAAI1mC,EAAKlsB,KAAKkrB,eACd,IAAKgB,EAAI,OAAO,KAEhB,IAAIpU,EAAMoU,EAAGjB,WACb,OAAKnT,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASR,QAAO,GAFrC,IAGpB,oBC9GH,MAAMitD,EAAuB,EAAQ,OAE/BC,EAA2C,CAC9CC,SAAU,OACVC,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPV,EAAiB,CACpBruD,IAAK,OACLkH,KAAM,aACNulD,SAAU,QAGbrxD,EAAOC,QAAU,cAAkCmzD,EAChDlzD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO6oC,CACV,CAYA7sD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS2sD,SACX/yD,KAAKoG,SAAS2sD,UACdD,EAAyCC,SAE5C/yD,KAAKoG,SAAS4sD,SAAWnuC,SACtB7kB,KAAKoG,SAAS4sD,UACXF,EAAyCE,UAI/ChzD,KAAKoG,SAAS6sD,YAAcpuC,SACzB7kB,KAAKoG,SAAS6sD,aACXH,EAAyCG,aAG/CjzD,KAAKoG,SAAS8sD,cAAgBruC,SAC3B7kB,KAAKoG,SAAS8sD,eACXJ,EAAyCI,eAE/ClzD,KAAKoG,SAAS+sD,UAAYtuC,SACvB7kB,KAAKoG,SAAS+sD,WACXL,EAAyCK,WAE/CnzD,KAAKoG,SAASgtD,SAAWvuC,SACtB7kB,KAAKoG,SAASgtD,UACXN,EAAyCM,UAG/CpzD,KAAK07B,UAAU17B,KAAMA,KAAM,CAAC,aAC/B,CAMA2yD,gBACG,MAAO,EACV,oBCjFH,MAAME,EAAuB,EAAQ,OAE/BQ,EAA0C,CAC7CC,QAAS,MACTC,UAAW,SACXP,SAAU,EAEVjyD,OAAQ,IACRmyD,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPV,EAAiB,CACpBruD,IAAK,MACLkH,KAAM,YACNulD,SAAU,OAGbrxD,EAAOC,QAAU,cAAiCmzD,EAC/ClzD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOopC,CACV,CAYAptD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASktD,QACXtzD,KAAKoG,SAASktD,SACdD,EAAwCC,QAE3CtzD,KAAKoG,SAASmtD,UACXvzD,KAAKoG,SAASmtD,WACdF,EAAwCE,UAE3CvzD,KAAKoG,SAAS4sD,SAAWnuC,SACtB7kB,KAAKoG,SAAS4sD,UACXK,EAAwCL,UAI9ChzD,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QAAUsyD,EAAwCtyD,QAGnEf,KAAKoG,SAAS8sD,cAAgBruC,SAC3B7kB,KAAKoG,SAAS8sD,eACXG,EAAwCH,eAE9ClzD,KAAKoG,SAAS+sD,UAAYtuC,SACvB7kB,KAAKoG,SAAS+sD,WACXE,EAAwCF,WAE9CnzD,KAAKoG,SAASgtD,SAAWvuC,SACtB7kB,KAAKoG,SAASgtD,UACXC,EAAwCD,UAG9CpzD,KAAK07B,UAAU17B,KAAMA,KAAM,CAAC,YAC/B,CAMA2yD,gBACG,MAAO,EACV,oBCrFH,MAAMa,EAAkB,EAAQ,OAE1BC,EAAuC,CAC1CzC,WAAY,GACZ0C,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,aAAc,EACd5B,UAAW,EACX6B,cAAe,OACfhyD,WAAY,IACZf,OAAQ,IACRgzD,eAAgB,GAGbC,EAAsB,CACzB3vD,IAAK,QACLkH,KAAM,YACNulD,SAAU,SAGbrxD,EAAOC,QAAU,cAA8B8zD,EAC5C7zD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiBkyB,EACvD,CAEA/pC,gBACG,OAAO+pC,CACV,CAEA/pC,uBACG,OAAOwpC,CACV,CAYAxtD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS4qD,WACXhxD,KAAKoG,SAAS4qD,YACdyC,EAAqCzC,WAExChxD,KAAKoG,SAASstD,YACX1zD,KAAKoG,SAASstD,aACdD,EAAqCC,YAExC1zD,KAAKoG,SAASutD,YACX3zD,KAAKoG,SAASutD,aACdF,EAAqCE,YAExC3zD,KAAKoG,SAASwtD,aACX5zD,KAAKoG,SAASwtD,cACdH,EAAqCG,aAExC5zD,KAAKoG,SAASytD,aAAehvC,SAC1B7kB,KAAKoG,SAASytD,cACXJ,EAAqCI,cAG3C7zD,KAAKoG,SAAS6rD,UAAYptC,SACvB7kB,KAAKoG,SAAS6rD,WACXwB,EAAqCxB,WAG3CjyD,KAAKoG,SAAS0tD,cACX9zD,KAAKoG,SAAS0tD,eACdL,EAAqCK,cAExC9zD,KAAKoG,SAAStE,WAAa+iB,SACxB7kB,KAAKoG,SAAStE,YACX2xD,EAAqC3xD,YAG3C9B,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QAAU0yD,EAAqC1yD,QAGhEf,KAAKoG,SAAS2tD,eAAiBlvC,SAC5B7kB,KAAKoG,SAAS2tD,gBACXN,EAAqCM,gBAG3C/zD,KAAK07B,UAAU17B,KAAMA,KAAM,CAAC,eAC5BA,KAAKi0D,aACR,CAMAtB,gBACG,MAAMuB,EAAe,CAAC,QAAS,MAAO,MAAO,OAAQ,QAMrD,OALmBl0D,KAAK+E,YAAYgiB,UAEVje,QAAQvF,GACxB2wD,EAAa7mD,QAAQ9J,EAAEwlC,SAAS1kC,MAAQ,GAGrD,CAEA8vD,aACG,MAAMjoC,EAAKlsB,KAAKkrB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMpU,EAAMoU,EAAGjB,WACf,OAAKnT,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASutD,cAAa,GAF3C,IAGpB,CAEAS,aACG,MAAMloC,EAAKlsB,KAAKkrB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMpU,EAAMoU,EAAGjB,WACf,OAAKnT,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASstD,cAAa,GAF3C,IAGpB,CAEAW,cACG,MAAMnoC,EAAKlsB,KAAKkrB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMpU,EAAMoU,EAAGjB,WACf,OAAKnT,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASwtD,eAAc,GAF5C,IAGpB,oBCzIH,MAAMf,EAAuB,EAAQ,OAE/ByB,EAA2C,CAC9CC,SAAU,OACVC,WAAY,OACZxB,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPV,EAAiB,CACpBruD,IAAK,OACLkH,KAAM,aACNulD,SAAU,QAGbrxD,EAAOC,QAAU,cAAkCmzD,EAChDlzD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOqqC,CACV,CAYAruD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASmuD,SACXv0D,KAAKoG,SAASmuD,UACdD,EAAyCC,SAE5Cv0D,KAAKoG,SAASouD,WACXx0D,KAAKoG,SAASouD,YACdF,EAAyCE,WAE5Cx0D,KAAKoG,SAAS4sD,SAAWnuC,SACtB7kB,KAAKoG,SAAS4sD,UACXsB,EAAyCtB,UAI/ChzD,KAAKoG,SAAS6sD,YAAcpuC,SACzB7kB,KAAKoG,SAAS6sD,aACXqB,EAAyCrB,aAG/CjzD,KAAKoG,SAAS8sD,cAAgBruC,SAC3B7kB,KAAKoG,SAAS8sD,eACXoB,EAAyCpB,eAE/ClzD,KAAKoG,SAAS+sD,UAAYtuC,SACvB7kB,KAAKoG,SAAS+sD,WACXmB,EAAyCnB,WAE/CnzD,KAAKoG,SAASgtD,SAAWvuC,SACtB7kB,KAAKoG,SAASgtD,UACXkB,EAAyClB,UAG/CpzD,KAAK07B,UAAU17B,KAAMA,KAAM,CAAC,aAC/B,CAMA2yD,gBACG,MAAO,EACV,oBCtFH,MAAME,EAAuB,EAAQ,OAE/B4B,EAA0C,CAC7CC,QAAS,MACT1B,SAAU,EAEVjyD,OAAQ,IACR4zD,cAAe,GACfzB,cAAe,IAGZR,EAAiB,CACpBruD,IAAK,MACLkH,KAAM,YACNulD,SAAU,OAGbrxD,EAAOC,QAAU,cAAiCmzD,EAC/ClzD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOwqC,CACV,CAYAxuD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASsuD,QACX10D,KAAKoG,SAASsuD,SACdD,EAAwCC,QAE3C10D,KAAKoG,SAAS4sD,SAAWnuC,SACtB7kB,KAAKoG,SAAS4sD,UACXyB,EAAwCzB,UAI9ChzD,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QAAU0zD,EAAwC1zD,QAGnEf,KAAKoG,SAASuuD,cAAgB9vC,SAC3B7kB,KAAKoG,SAASuuD,eACXF,EAAwCE,eAE9C30D,KAAKoG,SAAS8sD,cAAgBruC,SAC3B7kB,KAAKoG,SAAS8sD,eACXuB,EAAwCvB,eAG9ClzD,KAAK07B,UAAU17B,KAAMA,KAAM,CAAC,YAC/B,CAMA2yD,gBACG,MAAO,EACV,oBC3EH,MAAM/B,EAAe,EAAQ,OAEvBgE,EAAyC,CAC5C5D,WAAY,KACZ6D,WAAY,KACZC,cAAe,KACfC,WAAY,KACZh0D,OAAQ,IACRK,MAAO,IAIJsxD,EAAiB,CACpBruD,IAAK,UACLkH,KAAM,WACNulD,SAAU,WAGbrxD,EAAOC,QAAU,cAAgCkxD,EAC9CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO2qC,CACV,CAYA3uD,WAAWN,GACR7F,MAAMmG,WAAWN,GAKjB3F,KAAKoG,SAASrF,OAAS8jB,SAAS7kB,KAAKoG,SAASrF,QAAU,EAC3D,CAMA4xD,gBACG,MAAO,EACV,CAEAqC,mBACG,MAAMC,EAAaj1D,KAAKk1D,WAClBC,EAAcn1D,KAAK+B,GAAG6Q,QAAQhC,WAGpC,GAAKqkD,EAEL,OAAOA,EAAWG,WAAW/qD,GAAMA,EAAE1H,QAAUwyD,IAAe,CACjE,CAEAD,WACG,OAAOl1D,KAAK+B,GAAG6Q,QAAQ/B,WAAW1C,KAAK9D,IAC7B,CACJzJ,GAAIyJ,EAAEuG,SACNjO,MAAO0H,EAAEuG,SACTykD,MAAOhrD,EAAE0G,YAGlB,CAEAukD,eACG,IAAIvjC,EAAK/xB,KAAKkrB,eACd,IAAK6G,EAAI,OAAO,KAEhB,IAAIja,EAAMia,EAAG9G,WACb,OAAKnT,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASyuD,aAAY,GAF1C,IAGpB,CAEAU,kBACG,IAAIxjC,EAAK/xB,KAAKkrB,eACd,IAAK6G,EAAI,OAAO,KAEhB,IAAIja,EAAMia,EAAG9G,WACb,OAAKnT,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAAS0uD,gBAAe,GAF7C,IAGpB,CAEAU,eACG,IAAIzjC,EAAK/xB,KAAKkrB,eACd,IAAK6G,EAAI,OAAO,KAEhB,IAAIja,EAAMia,EAAG9G,WACb,OAAKnT,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAAS2uD,aAAY,GAF1C,IAGpB,CAEAU,cACG,IAAIR,EAAaj1D,KAAKk1D,WAClBrkD,EAAW,GAEf,GAAKokD,EAUL,OARAA,EAAWhxD,SAAQ,CAACmK,EAAMrC,KACvB,IAAI2pD,EAAW,GACXtnD,EAAKinD,QACNK,EAAW,gCAAkCtnD,EAAKinD,OAErD,IAAI96B,EAAO,CAAE35B,GAAImL,EAAQ,EAAGpJ,MAAOyL,EAAKzL,MAAO0yD,MAAOK,GACtD7kD,EAASvM,KAAKi2B,EAAK,IAEf1pB,CACV,CAEA7I,QACG,IAAI+pB,EAAK/xB,KAAKkrB,eACd,OAAK6G,EAIM,MADDA,EAAG9G,WACW,KAGZ8G,EAAG/pB,OACI,KARH,IAWnB,oBC1IH,MAAMwrD,EAAkB,EAAQ,OAE1BmC,EAAyB,CAC5B3E,WAAY,KACZnoC,iBAAkB,CAAC,GAGhB6pC,EAAiB,CACpBruD,IAAK,uBACLkH,KAAM,SACNulD,SAAU,yBAGbrxD,EAAOC,QAAU,cAA6C8zD,EAC3D7zD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,GAEpD,MAAM3yD,EAAI,IAAI6V,IAAW5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,GAGvD,GAAI5V,KAAKymB,OAAOrT,GAAMA,aAAaogD,IAAiBrtD,OAAS,EAAG,CAC7DnG,KAAK0mB,OAAS,GAGd,MAAMkvC,EAAU7wD,EAAYujB,QACzB,CACGjkB,IAAKmvD,EAAgBzqB,SAAS1kC,IAC9BjD,MAAOrB,EAAE,MACToH,KAAM,KACNf,SAAU,CACPyvD,WAAW,IAGjB9wD,EACA/E,MAGHA,KAAK0mB,OAAOpiB,KAAKsxD,GAGjB,MAAME,EAAY/wD,EAAYujB,QAC3B,CACGjkB,IAAKmvD,EAAgBzqB,SAAS1kC,IAC9BjD,MAAOrB,EAAE,QACToH,KAAM,OACNf,SAAU,CACPyvD,WAAW,IAGjB9wD,EACA/E,MAGHA,KAAK0mB,OAAOpiB,KAAKwxD,EACpB,CACH,CAEA7rC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO0rC,CACV,mBC/DH,MAAM/E,EAAe,EAAQ,OAEvBmF,EAAmD,CACtD/E,WAAY,KACZprD,MAAO,MAGJ8sD,EAAiB,CACpBruD,IAAK,sBACLkH,KAAM,SACNulD,SAAU,yBAGbrxD,EAAOC,QAAU,cAA0CkxD,EACxDjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO8rC,CACV,CAYA9vD,WAAWN,GACR7F,MAAMmG,WAAWN,EACpB,CAMAgtD,gBACG,MAAO,EACV,oBCrCH,MAAMqD,EAAS,EAAQ,OAMjBtD,EAAiB,CACpBruD,IAAK,gBACLkH,KAAM,UACNulD,SAAU,aAGPmF,EAA8B,CACjCC,QAAS,EACTC,QAAS,GAGZ12D,EAAOC,QAAU,cAAkCs2D,EAOhDr2D,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOgsC,CACV,CAQAhwD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS8vD,QAAUrxC,SACrB7kB,KAAKoG,SAAS8vD,SAAWD,EAA4BC,cAGpB,IAAzBl2D,KAAKoG,SAAS+vD,SACtBn2D,KAAKoG,SAAS+vD,QAAQhoD,KAAI,SAAUgoD,GACjC,OAAOtxC,SAASsxC,EACnB,IAG4B,MAA3Bn2D,KAAKoG,SAASyvD,UACf71D,KAAKoG,SAASyvD,UAAYhiD,KAAK0D,MAAMvX,KAAKoG,SAASyvD,WAEnD71D,KAAKoG,SAASyvD,WAAY,EAGA,MAAzB71D,KAAKoG,SAASgwD,QACfp2D,KAAKoG,SAASgwD,QAAUviD,KAAK0D,MAAMvX,KAAKoG,SAASgwD,SAEjDp2D,KAAKoG,SAASgwD,SAAU,CAE9B,CAEAC,sBAEG,OAAOr2D,KAAKymB,QAAQ9Y,MAAK,CAACC,EAAGC,IACtBD,EAAEjN,SAAS21D,GAAKzoD,EAAElN,SAAS21D,EAAU1oD,EAAEjN,SAASuM,EAAIW,EAAElN,SAASuM,EACvDU,EAAEjN,SAAS21D,EAAIzoD,EAAElN,SAAS21D,GAE5C,oBC3EH,IAAIvzC,EAAY,EAAQ,OAExB,MAAM2vC,EAAiB,CACpBruD,IAAK,OACLkH,KAAM,kBACNulD,SAAU,qBACVyF,QAAS,IAGNC,EAAkC,CACrCp1D,MAAO,IAGV3B,EAAOC,QAAU,cAAyBqjB,EAMvCpjB,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM,CAAC,SAAUiF,EAAYhD,IAE7B/B,KAAK40B,SAAW,GAGhB50B,KAAKoE,SAAW09B,GAAiB4wB,EAEjC1yD,KAAK+E,YAAcA,EAEnB/E,KAAK+U,OAASA,GAAU,KAExB/U,KAAKy2D,gBAAiB,EAItBz2D,KAAKiG,WAAWN,EACnB,CAEAskB,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOusC,CACV,CASAvsC,mBAAmBllB,EAAagQ,GAG7B,OAFAvM,QAAQ+G,MAAM,qCAEPxK,EAAYujB,QAChB,CAAEjkB,IAAKrE,KAAK+oC,SAAS1kC,KACrBU,EACAgQ,EAEN,CAEAgmB,UACG,OAAO/6B,KAAKoE,SAASC,GACxB,CAEAqyD,WACG,OAAO12D,KAAKoE,SAASmH,IACxB,CAEAorD,UACG,OAAO32D,KAAKoE,SAASmyD,OACxB,CAUAzwD,QASG,IAAIgS,EAAMhY,MAAMgG,QAEZgI,EAAS,CACVlN,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,OACnByC,IAAKrE,KAAKqE,IACVkH,KAAMvL,KAAKuL,KACXgrD,QAASv2D,KAAKu2D,QACdpvD,KAAMnH,KAAKmH,KACXf,SAAUpG,KAAK+B,GAAG2D,UAAU1F,KAAKoG,UAAY,CAAC,GAC9CwwD,aAAc52D,KAAK42D,aACnBlyC,aAAc5M,EAAI4M,cAcrB,OAVA5W,EAAO+oD,SAAW72D,KAAK0mB,QAAU,IAAIvY,KAAKiF,GAAMA,EAAExS,KAAIkI,QAAQlI,GAAOA,IAEjEZ,KAAKW,WAAUmN,EAAOnN,SAAWX,KAAKW,UAM1CmN,EAAOgpD,OAAS92D,KAAK82D,SAEdhpD,CACV,CAQA7H,WAAWN,GAkDR,GAjDA3F,KAAKY,GAAK+E,EAAO/E,GAIjBZ,KAAK4B,KAAO+D,EAAO/D,MAAQ,OAI3B5B,KAAKqE,IAAMsB,EAAOtB,KAAOrE,KAAK+6B,UAK9B/6B,KAAKuL,KAAO5F,EAAO4F,MAAQvL,KAAK02D,WAKhC12D,KAAKu2D,QAAU5wD,EAAO4wD,SAAWv2D,KAAK22D,UAEtC32D,KAAKmH,KAAOxB,EAAOwB,KAOnBxB,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCpG,KAAKoB,MAAQuE,EAAOvE,OAASuE,EAAOS,SAAShF,OAAS,UAEtDpB,KAAKoG,SAAWT,EAAOS,UAAY,CAAC,EAKpCpG,KAAKoG,SAASrF,OAAS8jB,SAAS7kB,KAAKoG,SAASrF,QAAU,GAExDf,KAAK42D,aAAejxD,EAAOixD,cAAgB,CAAC,EAQ5C92D,MAAMmG,WAAWN,IAIZ3F,KAAKmH,MAAQgG,MAAMC,QAAQpN,KAAK0kB,cAClC,IAAK,IAAIrR,EAAI,EAAGA,EAAIrT,KAAK0kB,aAAave,OAAQkN,IAK3C,GAJS,GAALA,IAEDrT,KAAKmH,KAAOnH,KAAK0kB,aAAarR,GAAGjS,OAEM,MAAtCpB,KAAK0kB,aAAarR,GAAGuoB,cAAuB,CAE7C57B,KAAKmH,KAAOnH,KAAK0kB,aAAarR,GAAGjS,MACjC,KACH,CAKY,WAAdpB,KAAKoB,OACFpB,KAAK+U,SACN/U,KAAKoB,MAAQpB,KAAK+U,OAAO3T,MAAQ,IAAMpB,KAAKoE,SAASC,KAI3D,IAAIoiB,EAAQ,IACX9gB,EAAOkxD,SAAW,IAAI5yD,SAASrD,IAC7B,IAAI6gB,EAAMzhB,KAAK+B,GAAG6hB,eAAehjB,GAC7B6gB,EACDgF,EAAMniB,KAAKtE,KAAK+E,YAAYujB,QAAQ7G,EAAKzhB,KAAK+E,YAAa/E,OAE3DA,KAAK+B,GAAGqG,OAAO2sB,QACZ,IAAIzsB,MACD,eAAetI,KAAK+E,YAAYoC,SAASnH,KAAK+E,YAAYnE,YAAYZ,KAAKmH,SAASnH,KAAKY,+BAA+BA,MAE3H,CACG0O,QAAQ,kDACR1O,MAGT,IAEHZ,KAAK0mB,OAASD,EAGdzmB,KAAKW,SAAWgF,EAAOhF,UAAY,CAAC,EAEb,MAAnBX,KAAKW,SAASuM,IAAWlN,KAAKW,SAASuM,EAAI2X,SAAS7kB,KAAKW,SAASuM,IAC/C,MAAnBlN,KAAKW,SAAS21D,IAAWt2D,KAAKW,SAAS21D,EAAIzxC,SAAS7kB,KAAKW,SAAS21D,IAEtEt2D,KAAKW,SAASo2D,GAAKlyC,SAAS7kB,KAAKW,SAASo2D,IAAM,GAChD/2D,KAAKW,SAASq2D,GAAKnyC,SAAS7kB,KAAKW,SAASq2D,IAAM,EACnD,CAEAF,SACG,OAAsB,MAAf92D,KAAK+U,QAAkB/U,KAAK+U,QAAU/U,KAAK+E,WACrD,CASAkyD,aACG,IAAIC,EAAU,GACVC,EAAUn3D,KAKd,IAFAk3D,EAAQprB,QAAQqrB,IAERA,EAAQL,UAAYK,EAAQpiD,QACjCmiD,EAAQprB,QAAQqrB,EAAQpiD,QAExBoiD,EAAUA,EAAQpiD,OAGrB,OAAOmiD,CACV,CAUAvyC,qBAAqBzV,GAClB,IAAI0V,GAAY,EAEZwyC,EAAkBjjD,OAAOC,KAAKpU,KAAK42D,eAAiB,GAOxD,OANC1nD,GAAS,IAAIjL,SAAS2L,IAChBwnD,EAAgB/pD,QAAQuC,EAAEC,MAAQD,IAAM,IACzCgV,GAAY,EACf,IAGIA,CACV,CASAyyC,gBAEG,IAAIC,EAAc,EAElB,GAAIt3D,KAAK+E,YAAYoe,gBAAiB,CAEnC,IAAIo0C,GAAkB,EAEmC,GAArD1yC,SAAS7kB,KAAK+E,YAAYqe,eAAe0B,UAE1C9kB,KAAK+B,GAAG6Q,QAAQ1D,QAAQjL,SAAS8gB,IAE3B/kB,KAAK+E,YAAYqe,eAAe2B,KAAK1X,QAClC0X,EAAKnkB,IAAMmkB,EAAKlV,OACd,IAGL0nD,GAAkB,EAClBD,EAAc,EACjB,IAKFC,GACuD,GAAxD1yC,SAAS7kB,KAAK+E,YAAYqe,eAAemiC,aAItCvlD,KAAK+E,YAAYqe,eAAeoiC,QAAQn4C,QACrCrN,KAAK+B,GAAG6Q,QAAQ/C,OAAS,KACvB,IAGL0nD,GAAkB,EAClBD,EAAc,GAMjBt3D,KAAK42D,cACLziD,OAAOC,KAAKpU,KAAK42D,cAAczwD,OAAS,IACvCoxD,GAGDv3D,KAAK+B,GAAG6Q,QAAQ1D,QAAQjL,SAAS8gB,IAC9B,IAAIyyC,EAAcx3D,KAAK42D,aAAa7xC,EAAKnkB,IAAMmkB,EAAKlV,MAChD2nD,GAAe3yC,SAAS2yC,GAAeF,IAExCA,EAAczyC,SAAS2yC,GAAY,GAG/C,MACGF,EAAc,EAGjB,OAAOA,CACV,CAMAG,sBAIG,IAHA,IAAIvtD,EAAO,KAEPwtB,EAAO13B,KACQ,QAAZ03B,EAAKrzB,MAAkBqzB,EAAKo/B,UAAYp/B,EAAK3iB,QACjD2iB,EAAOA,EAAK3iB,OAOf,MAJgB,QAAZ2iB,EAAKrzB,MACN6F,EAAOwtB,GAGHxtB,CACV,CAOAwtD,wBAIG,IAHA,IAAIC,EAAS,KAETjgC,EAAO13B,KACQ,UAAZ03B,EAAKrzB,MAAoBqzB,EAAKo/B,UAAYp/B,EAAK3iB,QACnD2iB,EAAOA,EAAK3iB,OAOf,MAJgB,UAAZ2iB,EAAKrzB,MACNszD,EAASjgC,GAGLigC,CACV,CAEAC,WAAWC,GAIR,GAHgB,MAAZA,IAAkBA,EAAW,KAAM,GAGnC73D,KAAK82D,SACN,OAAO92D,KAIV,IADA,IAAI83D,EAAa93D,KAAK+U,OAEnB+iD,IACmB,QAAlBA,EAAWzzD,MAAkBwzD,EAASC,KAEvCA,EAAaA,EAAW/iD,OAG3B,OAAO+iD,CACV,CAEAC,WAGG,IAFA,IAAIC,EAAWh4D,KAAK43D,cAEZI,EAASlB,UACdkB,EAAWA,EAASJ,aAGvB,OAAOI,CACV,CASArwC,aACG,OAAI3nB,KAAK+U,OACC/U,KAAK+U,OAAOkjD,UAAYj4D,KAAKY,GAE7BZ,KAAK+E,YAAY+iB,UAAY9nB,KAAKY,EAE/C,CAOAq3D,UACG,OAAOj4D,KAAK2nB,aAAe,UAC9B,CAQIuD,qBACD,IAAI8lC,GAAchxD,KAAKoG,UAAY,CAAC,GAAG4qD,WACvC,IAAKA,EAAY,CACd,GACG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,QAAS,UAAU3jD,QACxDrN,KAAKqE,MACH,EACN,CAEC,GAAgB,QAAZrE,KAAKqE,KAAiBrE,KAAKkD,eAAgB,OAAO,KAEtD,GAAIlD,KAAKy2D,eAAgB,OAAO,KAEhC,IAAIyB,EAAY,IAAI5vD,MACjB,yCAAyCtI,KAAKqE,oCAEjDrE,KAAK+B,GAAGqG,OAAO2sB,QAAQmjC,EAAW,CAC/Bx3D,KAAMV,KACNoG,SAAUpG,KAAKoG,UAErB,MAEuD,GAAhD,CAAC,OAAQ,iBAAiBiH,QAAQrN,KAAKqE,MACxCmE,QAAQC,KACL,yDAAyDzI,KAAKqE,QAIvE,OAAO,IACV,CAEA,IAAI6nB,EAAKlsB,KAAK+B,GAAGspB,mBAAmB2lC,GACpC,IAAK9kC,EAAI,CACN,IAAIisC,EAAU,IAAI7vD,MACf,QAAQtI,KAAKoB,UAAUpB,KAAKY,mDAE/BZ,KAAK+B,GAAGqG,OAAO2sB,QAAQojC,EAAS,CAC7Bz3D,KAAMV,KACNgxD,cAEN,CACA,OAAO9kC,CACV,CAiBAksC,mBAAmBC,EAAQf,GAOxB,OAN6B,GAAzBzyC,SAASyyC,GACNt3D,KAAK42D,aAAayB,WAAgBr4D,KAAK42D,aAAayB,GAExDr4D,KAAK42D,aAAayB,GAAUf,EAGxBt3D,KAAK4H,MAAK,GAAO,EAC3B,CAiBA6e,MAAM3d,EAAS,MAAM,GAAMsd,GAAO,GAC/B,IAAItY,EAAS,GAEb,OAAK9N,KAAK0mB,QAAU1mB,KAAK0mB,OAAOvgB,OAAS,IAGrC2C,GAAUsd,GACXtY,EAASA,EAAOgZ,OAAO9mB,KAAK0mB,OAAO5d,OAAOA,IAE1C9I,KAAK0mB,OAAOziB,SAASmP,IAClB,IAAIuT,EAAWvT,EAAEqT,MAAM3d,EAAQsd,GAC3BO,GAAYA,EAASxgB,OAAS,IAC/B2H,EAASA,EAAOgZ,OAAOH,GAC1B,KAGH7Y,EAAS9N,KAAK0mB,OAAO5d,OAAOA,IAboBgF,CAiBtD,CAQAwa,QAAQ3iB,EAAQZ,EAAagQ,GAC1B,OAAO/U,KAAK+E,YAAYujB,QACrB3iB,EACAZ,GAAe/E,KAAK+E,YACpBgQ,GAAU/U,KAEhB,CAUAs4D,YAAY53D,GAET,OADA8H,QAAQ+G,MAAM,sCACPvP,KAAKu4D,WAAW73D,EAC1B,CAUA63D,WAAW73D,GACR,IAAIy/B,EAAUngC,KAAK0mB,OAAOvgB,OAK1B,OAJAnG,KAAK0mB,OAAS1mB,KAAKymB,OAAM,SAAUrT,GAChC,OAAOA,EAAExS,IAAMF,EAAKE,EACvB,IAEIZ,KAAK0mB,OAAOvgB,OAASg6B,EACfngC,KAAK4H,OAGR6H,QAAQC,SAClB,CAUA8oD,WAAW93D,GAKR,OAHGV,KAAKymB,OAAM,SAAUrT,GAClB,OAAOA,EAAExS,IAAMF,EAAKE,EACvB,IAAGuF,OAAS,EAMRsJ,QAAQC,WAJZ1P,KAAK0mB,OAAOpiB,KAAK5D,GACVV,KAAK4H,OAIlB,CAWA6wD,YAAYC,EAAQC,GACjB,IAAInyB,EAAOxmC,KAAK0mB,OAAO0uC,WAAWhiD,GAAMA,EAAExS,IAAM83D,IAChD,KAAIlyB,EAAO,GAMX,OAHAxmC,KAAK0mB,OAAOva,OAAOwsD,EAAY,EAAG34D,KAAK0mB,OAAOva,OAAOq6B,EAAM,GAAG,IAGvDxmC,KAAK4H,MAAK,EACpB,CAaAgN,UAIG,OAFA5U,KAAK60B,YAAW,GAETplB,QAAQC,UACX8E,MAAK,KAKH,IAAIokD,EAAiB,GACjB5xC,EAAWhnB,KAAKymB,QAQpB,OAPAzmB,KAAK0mB,OAAS,GAIdM,EAAS/iB,SAASmP,IACfwlD,EAAet0D,KAAK8O,EAAEwB,UAAU,IAE5BnF,QAAQ4R,IAAIu3C,EAAe,IAEpCpkD,MAAK,KAEH,GAAIxU,KAAK+U,SAAW/U,KAAKglB,MACtB,OAAOhlB,KAAK+U,OAAOwjD,WAAWv4D,KACjC,IAEFwU,MAAK,IACI1U,MAAM8U,YAEfJ,MAAK,KACHxU,KAAKwP,KAAK,YAAY,GAE/B,CAQA5H,OACG,OAAO6H,QAAQC,UACX8E,MAAK,IAEI1U,MAAM8H,SAEf4M,MAAK,KAEH,GAAIxU,KAAK+U,SAAW/U,KAAKglB,MAGtB,OAAOhlB,KAAK+U,OAAOyjD,WAAWx4D,KACjC,IAEFwU,MAAK,IACIxU,MAEhB,CAiBAmxB,SAASwD,GACN,GAAKA,GAAQA,EAAIvD,SAAYuD,EAAIrD,SAAjC,CAEA,IAAInF,EAASnsB,KAAK40B,SAASvI,MAAMhiB,GACvBA,EAAE+mB,SAAWuD,EAAIvD,SAAW/mB,EAAEgnB,WAAasD,EAAItD,cAIpDlF,GAAUA,EAAOhmB,OAAS,KAE5BnG,KAAK40B,SAAStwB,KAAK,CAChB8sB,QAASuD,EAAIvD,QACbC,UAAWsD,EAAItD,UACfC,SAAUqD,EAAIrD,WAIjBqD,EAAIvD,QAAQhvB,GAAGuyB,EAAItD,UAAWsD,EAAIrD,UAhBY,CAkBpD,CASAuD,WAAWzO,GACJA,GACDpmB,KAAKymB,QAAQxiB,SAASmP,IACnBA,EAAEyhB,WAAWzO,EAAK,IAIpBpmB,KAAK40B,UAAY50B,KAAK40B,SAASzuB,OAAS,GACzCnG,KAAK40B,SAAS3wB,SAASoG,IACpBA,EAAE+mB,QAAQ0D,eAAezqB,EAAEgnB,UAAWhnB,EAAEinB,SAAS,GAG1D,CAkBA+C,MAAMwkC,EAAW9jD,EAAQ5S,EAAU,CAAC,GACjC02D,EAAYA,GAAa,CAAC,EAG1B,IAAI52D,EAASjC,KAAK8F,QAGlB,CAAC,QAAS,SAAS7B,SAASk+B,WAClBlgC,EAAOkgC,EAAK,IAIlBniC,KAAK84D,wBACL94D,KAAK84D,yBAA2B,IAAI70D,SAASk+B,IACvClgC,GAAUA,EAAOmE,WAClBnE,EAAOmE,SAAS+7B,GAAQ02B,EAAU52D,EAAOmE,SAAS+7B,IAAM,IAKjE,IAAIr0B,EAAS9N,KAAKsoB,QAAQrmB,EAAQjC,KAAK+E,YAAagQ,GA+BpD,OA1BGjH,EAAOlN,GAFI,MAAVmU,EAEW,KAEA8jD,EAAU/qD,EAAOlN,KAAOZ,KAAK+B,GAAG8N,OAI3C7P,KAAKglB,QAAU7iB,EAAQ42D,iBACxBjrD,EAAOkW,OAAS,GAChBhkB,KAAKglB,QAAQ/gB,SAAS6d,IACnB,IAAIk3C,EAAgBl3C,EAAEuS,MAAMwkC,EAAW/qD,EAAQ3L,GAC/C62D,EAAcjkD,OAASjH,EAEvBA,EAAOkW,OAAO1f,KAAK00D,EAAc,KAKnCh5D,KAAKymB,QAAUtkB,EAAQ82D,iBACxBnrD,EAAO4Y,OAAS,GAChB1mB,KAAKymB,QAAQxiB,SAASmP,IACnB,IAAI8lD,EAAa9lD,EAAEihB,MAAMwkC,EAAW/qD,EAAQ3L,GAE5C2L,EAAO4Y,OAAOpiB,KAAK40D,EAAW,KAI7BprD,CACV,CAsBAqrD,KAAKN,EAAW9jD,EAAQ5S,EAAU,CAAC,GAChC02D,EAAYA,GAAa,CAAC,EAG1B,IAAI52D,EAASjC,KAAK8F,QAGlB,CAAC,UAAW,WAAW7B,SAASk+B,WACtBlgC,EAAOkgC,EAAK,IAIlBniC,KAAK84D,wBACL94D,KAAK84D,yBAA2B,IAAI70D,SAASk+B,IACvClgC,GAAUA,EAAOmE,WAClBnE,EAAOmE,SAAS+7B,GAAQ02B,EAAU52D,EAAOmE,SAAS+7B,IAAM,IAKjE,IAAIr0B,EAAS9N,KAAK+E,YAAYujB,QAAQrmB,EAAQjC,KAAK+E,YAAagQ,GAuBhE,OApBAjH,EAAOiH,OAASA,GAAU/U,KAAK+U,OAM5BjH,EAAOlN,GAHI,MAAVmU,EAGW,KAEA8jD,EAAU/qD,EAAOlN,KAAOZ,KAAK+B,GAAG8N,OAI/B,QAAZ7P,KAAKqE,MACNyJ,EAAO3G,KACJhF,GAASi3D,SACT,GAAGtrD,EAAO3G,eAAenH,KAAK+B,GAAG8N,OAAOqD,MAAM,EAAG,KAEpDpF,EAAO1M,MAAQe,GAASi3D,SAAW,GAAGtrD,EAAO1M,kBAGzCqO,QAAQC,UACX8E,MAAK,KAEH,IAAI6kD,EAAW,GA2Bf,OAzBIr5D,KAAKgkB,SAAW7hB,EAAQ42D,iBACzBjrD,EAAOkW,OAAS,GAChBhkB,KAAKglB,QAAQ/gB,SAAS6d,IAGfA,EAAEg1C,UACH92D,KAAK+E,YAAYif,OAAO1f,KAAK,CAAE1D,GAAIi4D,EAAU/2C,EAAElhB,MAElDy4D,EAAS/0D,KACNwd,EACIq3C,KAAKN,EAAW/qD,EAAQ3L,GACxBqS,MAAMwkD,IACJA,EAAcjkD,OAASjH,EAEvB9N,KAAK+E,YAAYif,OAAShkB,KAAK+E,YAAYif,OAAOlb,QAC9CwwD,GAAOA,EAAG14D,IAAMi4D,EAAU/2C,EAAElhB,MAIhCkN,EAAOkW,OAAO1f,KAAK00D,EAAc,IAEzC,KAIAvpD,QAAQ4R,IAAIg4C,EAAS,IAE9B7kD,MAAK,KAEH,IAAI6kD,EAAW,GAsBf,OApBIr5D,KAAK0mB,SAAWvkB,EAAQ82D,iBACzBnrD,EAAO4Y,OAAS,GAChB1mB,KAAKymB,QAAQxiB,SAASmP,IACnBimD,EAAS/0D,KAGN8O,EAAE+lD,KAAKN,EAAW/qD,EAAQ3L,GAASqS,MAAM0kD,IAInCprD,EAAO4Y,OAAO5d,QAAQywD,GAAOA,EAAG34D,IAAMs4D,EAAWt4D,KAC7CuF,OAAS,GAEb2H,EAAO4Y,OAAOpiB,KAAK40D,EACtB,IAEL,KAIAzpD,QAAQ4R,IAAIg4C,EAAS,IAE9B7kD,MAAK,IAEI1G,EAAOlG,SAEhB4M,MAAK,IACI1G,GAEhB,oBCz8BH,MAAM8iD,EAAe,EAAQ,OAEvB4I,EAA4C,CAC/CxI,WAAY,KACZprD,MAAO,KACP6zD,SAAU,WACVC,WAAY,EACZC,SAAU,GAGPjH,EAAiB,CACpBruD,IAAK,cACLkH,KAAM,SACNulD,SAAU,4BAGbrxD,EAAOC,QAAU,cAAmCkxD,EACjDjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOuvC,CACV,CAYAvzD,WAAWN,GACR7F,MAAMmG,WAAWN,EACpB,CAMAgtD,gBACG,MAAO,EACV,oBCjDH,MAAMiH,EAAe,EAAQ,OAEvBC,EAA0C,CAC7CC,OAAQ,EACRxH,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,QAAS,IAGNsH,EAAyB,CAC5B11D,IAAK,WACLkH,KAAM,KACNulD,SAAU,aAGbrxD,EAAOC,QAAU,cAAiCk6D,EAM/Cj6D,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBi4B,EAEvB,CAEA9vC,gBACG,OAAO8vC,CACV,CAEA9vC,uBACG,OAAO4vC,CACV,CAYA5zD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0zD,OAASj1C,SACpB7kB,KAAKoG,SAAS0zD,QAAUD,EAAwCC,QAEnE95D,KAAKoG,SAASksD,YACXtyD,KAAKoG,SAASksD,aACduH,EAAwCvH,YAC3CtyD,KAAKoG,SAASosD,SACXxyD,KAAKoG,SAASosD,UACdqH,EAAwCrH,SAC3CxyD,KAAKoG,SAASmsD,WACXvyD,KAAKoG,SAASmsD,YACdsH,EAAwCtH,WAC3CvyD,KAAKoG,SAASqsD,QACXzyD,KAAKoG,SAASqsD,SACdoH,EAAwCpH,OAC9C,CAEAiF,wBACG,IAAIsC,EAAW,KAEXtiC,EAAO13B,KACX,KAAmB,YAAZ03B,EAAKrzB,MAAsBqzB,EAAKo/B,UAAYp/B,EAAK3iB,QACrD2iB,EAAOA,EAAK3iB,OAOf,MAJgB,YAAZ2iB,EAAKrzB,MACN21D,EAAWtiC,GAGPsiC,CACV,oBClFH,MAAMpkC,EAAmB,EAAQ,OAE3BqkC,EAAgD,CAAC,EAEjDC,EAA+B,CAClC71D,IAAK,iBACLkH,KAAM,iBACNulD,SAAU,iCAGbrxD,EAAOC,QAAU,cAAuCk2B,EAMrDj2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBo4B,EAEvB,CAEAjwC,gBACG,OAAOiwC,CACV,CAEAjwC,uBACG,OAAOgwC,CACV,CAMAtH,gBACG,MAAO,EACV,oBCtCH,MAAM/8B,EAAmB,EAAQ,OAE3BukC,EAAwC,CAC3CC,SAAU,IAGP1H,EAAiB,CACpBruD,IAAK,gBACLkH,KAAM,UACNulD,SAAU,gCAGbrxD,EAAOC,QAAU,cAAsCk2B,EAMpDj2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOkwC,CACV,oBC7BH,MAAM3G,EAAkB,EAAQ,OAE1B6G,EAAuB,CAC1Bh2D,IAAK,SACLkH,KAAM,cACNulD,SAAU,UAGPqJ,EAAwC,CAC3CnJ,WAAY,KACZiB,WAAW,EACX6B,cAAe,OACfhyD,WAAY,IACZf,OAAQ,GAGXtB,EAAOC,QAAU,cAA+B8zD,EAM7C7zD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiBu4B,EACvD,CAEApwC,gBACG,OAAOowC,CACV,CAEApwC,uBACG,OAAOkwC,CACV,CAQAl0D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0tD,cACX9zD,KAAKoG,SAAS0tD,eACdqG,EAAsCrG,cAGzC9zD,KAAKoG,SAAS6rD,UAAYp+C,KAAK0D,MACD,MAA3BvX,KAAKoG,SAAS6rD,UACTjyD,KAAKoG,SAAS6rD,UACdkI,EAAsClI,WAI9CjyD,KAAKoG,SAAStE,WAAa+iB,SACxB7kB,KAAKoG,SAAStE,YACXq4D,EAAsCr4D,YAE5C9B,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QAAUo5D,EAAsCp5D,OAEpE,CAMA4xD,gBACG,IAAIuB,EAAe,CAAC,QAAS,QAG7B,OAFmBl0D,KAAK+E,YAAYgiB,UAEfje,QAAQvF,GACnB2wD,EAAa7mD,QAAQ9J,EAAEwlC,SAAS1kC,MAAQ,GAErD,CAEAi2D,iBAAiB10D,EAAO20D,GACrB,GAAa,MAAT30D,EAAe,OAEnB,IAAIwiB,EAAUxiB,EAAM40D,kBAAkBC,YAAYz6D,KAAK+E,YAAa/E,MACpE,OAAe,MAAXooB,GAGJA,EAAQhiB,SAAWgiB,EAAQhiB,UAAY,CAAC,EACxCgiB,EAAQhiB,SAASsE,QAAU9E,EAAMhF,GACjCwnB,EAAQhiB,SAAStE,WACd9B,KAAKoG,SAAStE,YACdq4D,EAAsCr4D,WAIzCsmB,EAAQhiB,SAAS0oB,MAAQlpB,EAAMkpB,MAI/B1G,EAAQznB,SAAS21D,EAAIiE,EAGrBv6D,KAAK0mB,OAAOpiB,KAAK8jB,GAEVA,QApBP,CAqBH,oBCtGH,MAAMwN,EAAmB,EAAQ,OAE3B8kC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCt2D,IAAK,eACLkH,KAAM,eACNulD,SAAU,+BAGbrxD,EAAOC,QAAU,cAAqCk2B,EAMnDj2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB64B,EAEvB,CAEA1wC,gBACG,OAAO0wC,CACV,CAEA1wC,uBACG,OAAOywC,CACV,CAMA/H,gBACG,MAAO,EACV,oBCvCH,MAAM/8B,EAAmB,EAAQ,OAE3BglC,EAA6C,CAChD75D,OAAQ,GACRC,MAAO,KAGJ65D,EAA4B,CAC/Bx2D,IAAK,cACLkH,KAAM,QACNulD,SAAU,8BAGbrxD,EAAOC,QAAU,cAAoCk2B,EAMlDj2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB+4B,EAEvB,CAEA5wC,gBACG,OAAO4wC,CACV,CAEA5wC,uBACG,OAAO2wC,CACV,CAYA30D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QACX65D,EAA2C75D,QAEjDf,KAAKoG,SAASpF,MAAQ6jB,SACnB7kB,KAAKoG,SAASpF,OAAS45D,EAA2C55D,MAExE,CAMA2xD,gBACG,MAAO,EACV,oBCjEH,MAAM/B,EAAe,EAAQ,OAE7BnxD,EAAOC,QAAU,cAAmCkxD,EAKjD4J,kBACG,IAAIM,EAAa,KAEbpjC,EAAO13B,KACX,MACI03B,EAAKo/B,UACNp/B,EAAK3iB,QACO,UAAZ2iB,EAAKrzB,KACO,YAAZqzB,EAAKrzB,KAELqzB,EAAOA,EAAK3iB,OAOf,MAJgB,UAAZ2iB,EAAKrzB,KAA+B,YAAZqzB,EAAKrzB,MAC9By2D,EAAapjC,GAGTojC,CACV,CAEAl1D,QACG,IAAI40D,EAAkBx6D,KAAKw6D,kBAC3B,GAAuB,MAAnBA,EAAyB,OAAO,KAEpC,IAAItvC,EAAiBsvC,EAAgBtvC,eACrC,GAAsB,MAAlBA,EAAwB,OAAO,KAEnC,IAAIjmB,EAASimB,EAAeD,WAC5B,GAAc,MAAVhmB,EAAgB,OAAO,KAE3B,IAAIW,EAAQX,EAAO8B,QAAQqM,GAAMA,EAAExS,IAAMZ,KAAKoG,SAASsE,UAAS,GAQhE,OAJI9E,GAAS5F,KAAKoG,SAAS0oB,QACxBlpB,EAAMkpB,MAAQ9uB,KAAKoG,SAAS0oB,OAGxBlpB,CACV,CAEAm1D,iBACG,IAAIC,EAAYh7D,KAAKw6D,kBACrB,IAAKQ,EAAW,OAAO,KAEvB,IAAIjpC,EAAKipC,EAAU9vC,eACnB,IAAK6G,EAAI,OAAO,KAEhB,IAAInsB,EAAQ5F,KAAK4F,QACjB,IAAKA,EAAO,OAAO,KAEnB,IAAIuoB,EAAW4D,EAAGjG,YAClB,OAAIqC,EAAiBA,EAASvoB,EAAMkB,YACxB,IACf,oBC7DH,MAAM8uB,EAAmB,EAAQ,OAE3BqlC,EAA4C,CAC/Cl6D,OAAQ,GAGLm6D,EAA2B,CAC9B72D,IAAK,aACLkH,KAAM,OACNulD,SAAU,6BAGbrxD,EAAOC,QAAU,cAAmCk2B,EAMjDj2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBo5B,EAEvB,CAEAjxC,gBACG,OAAOixC,CACV,CAEAjxC,uBACG,OAAOgxC,CACV,CAYAh1D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QACXk6D,EAA0Cl6D,OAEnD,CAMA4xD,gBACG,MAAO,EACV,mBC7DH,MAAM/8B,EAAmB,EAAQ,OAE3BukC,EAAwC,CAAC,EAEzCgB,EAA2B,CAC9B92D,IAAK,aACLkH,KAAM,UACNulD,SAAU,6BAGbrxD,EAAOC,QAAU,cAAmCk2B,EAMjDj2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBq5B,EAEvB,CAEAlxC,gBACG,OAAOkxC,CACV,CAEAlxC,uBACG,OAAOkwC,CACV,CAMAxH,gBACG,MAAO,EACV,oBCvCH,MAAM/B,EAAe,EAAQ,OAEvBwK,EAA6C,CAChDC,YAAa,gBACbrK,WAAY,KACZhwD,MAAO,EACPg7C,SAAU,GACVsf,UAAW,cACXprD,SAAU,KACVqrD,kBAAmB,wBACnBC,eAAgB,QAGb9I,EAAiB,CACpBruD,IAAK,cACLkH,KAAM,cACNulD,SAAU,gBAGbrxD,EAAOC,QAAU,cAAoCkxD,EAClDjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOmxC,CACV,CAcAt1D,QACG9F,KAAK87B,YAAY97B,KAAMA,KAAM,CAAC,YAAa,gBAE3C,IAAI8X,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI++C,QAAU,GACP/+C,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQ6jB,SACnB7kB,KAAKoG,SAASpF,OAASo6D,EAA2Cp6D,OAGrEhB,KAAK07B,UAAU17B,KAAMA,KAAM,CAAC,YAAa,eAC5C,CAEAy7D,YAGGjzD,QAAQC,KACL,IAAIH,MACD,4EAWN,MAAMrD,EAASjF,KAAKkrB,eAAeD,WAI7BrlB,EAAQX,EAASA,EAAO8B,SAAS,GAAK,KAE5C,MAAO,gBAAgB9B,GAAQrE,MAAMgF,GAAOhF,MAC/C,CAEA86D,cACG,MAAO,SAAS17D,KAAKoG,SAAS41C,UACjC,CAEI7rC,mBACD,OACGnQ,KAAKoG,SAAS8J,UACdkrD,EAA2ClrD,QAEjD,CAEIkV,sBACD,IAAI4rC,GAAchxD,KAAKoG,UAAY,CAAC,GAAG4qD,WACvC,IAAKA,EAAY,MAAO,GAExB,IAAI2K,EAAS3K,EAAWxpC,MAAM,MAAQ,GAEtC,OAAOxnB,KAAK+B,GAAGqjB,iBAAiB2M,GAAO4pC,EAAOtuD,QAAQ0kB,EAAGnxB,KAAO,KAAM,EACzE,oBChHH,MAAMo1D,EAAS,EAAQ,OAEjB4F,EAA4C,CAC/CC,aAAa,EACbC,UAAW,GACXC,eAAe,EACfC,YAAa,GACbC,cAAc,EACdC,WAAY,GACZC,YAAa,KACbC,UAAW,QACXC,WAAW,GAGRC,EAA2B,CAC9Bj4D,IAAK,SAGLkH,KAAM,SAGNulD,SAAU,wBAIbrxD,EAAOC,QAAU,cAAmCs2D,EACjDr2D,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBw6B,EAEvB,CAEAryC,gBACG,OAAOqyC,CACV,CAEAryC,uBACG,OAAO2xC,CACV,CAMA91D,QAEG,IAAI0M,EAAS,GAYb,OAVIxS,KAAKoG,SAAS01D,WAAWtpD,EAAOlO,KAAK,aAErCtE,KAAKoG,SAAS41D,aAAaxpD,EAAOlO,KAAK,eAEvCtE,KAAKoG,SAAS81D,YAAY1pD,EAAOlO,KAAK,cAE1CtE,KAAK87B,YAAY97B,KAAKoG,SAAUpG,KAAKoG,SAAUoM,GAElC1S,MAAMgG,OAGtB,CAEAG,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB,IAAI6M,EAAS,GAETxS,KAAKoG,SAAS01D,WAAWtpD,EAAOlO,KAAK,aAErCtE,KAAKoG,SAAS41D,aAAaxpD,EAAOlO,KAAK,eAEvCtE,KAAKoG,SAAS81D,YAAY1pD,EAAOlO,KAAK,cAE1CtE,KAAK87B,YAAY97B,KAAKoG,SAAUpG,KAAKoG,SAAUoM,GAE/CxS,KAAKoG,SAASy1D,YAAchoD,KAAK0D,MAC9BvX,KAAKoG,SAASy1D,aACXD,EAA0CC,aAEhD77D,KAAKoG,SAAS21D,cAAgBloD,KAAK0D,MAChCvX,KAAKoG,SAAS21D,eACXH,EAA0CG,eAEhD/7D,KAAKoG,SAAS61D,aAAepoD,KAAK0D,MAC/BvX,KAAKoG,SAAS61D,cACXL,EAA0CK,cAGhDj8D,KAAKoG,SAASi2D,UAAYxoD,KAAK0D,MAC5BvX,KAAKoG,SAASi2D,WACXT,EAA0CS,UAEnD,CAMA1J,gBACG,MAAO,EACV,oBCvGH,MAAM98B,EAAiB,EAAQ,OAEzB0mC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCn4D,IAAK,WACLkH,KAAM,iBACNulD,SAAU,0BAGbrxD,EAAOC,QAAU,cAAqCm2B,EACnDl2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB06B,EAEvB,CAEAvyC,gBACG,OAAOuyC,CACV,CAEAvyC,uBACG,OAAOsyC,CACV,CAMA5J,gBACG,MAAO,EACV,oBClCH,MAAM98B,EAAiB,EAAQ,OAEzB4mC,EAA6C,CAChDrC,SAAU,GACVvxC,iBAAkB,CAEfC,KAAM,MACN3H,MAAO,IAEV5U,WAAY,GAQZmwD,WAAY,IACZC,YAAa,KAGVC,EAA4B,CAC/Bv4D,IAAK,UACLkH,KAAM,UACNulD,SAAU,WAGbrxD,EAAOC,QAAU,cAAoCm2B,EAClDl2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB86B,EAEvB,CAEA3yC,gBACG,OAAO2yC,CACV,CAEA3yC,uBACG,OAAOwyC,CACV,CAYAx2D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASyiB,iBACX7oB,KAAKoG,SAASyiB,kBACd4zC,EAA2C5zC,gBACjD,CAMA8pC,gBACG,MAAO,EACV,oBCrEH,MAAMa,EAAkB,EAAQ,OAC1B39B,EAAiB,EAAQ,OAEzBs7B,EAAe,EAAQ,OACvB0L,EAAe,EAAQ,OAEvBC,EAAqB,CACxBz4D,IAAK,OACLkH,KAAM,WACNulD,SAAU,QAGPiM,EAAsC,CACzC/L,WAAY,KACZiB,WAAW,EACX6B,cAAe,OACfhyD,WAAY,IACZf,OAAQ,IACRi8D,aAAa,EACbC,aAAa,EACbC,aAAc,GACdC,SAAU,OAkBV5L,YAAa,GAab6L,YAAa,IAGhB39D,EAAOC,QAAU,cAA6B8zD,EAC3C7zD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiBg7B,EACvD,CAEA7yC,gBACG,OAAO6yC,CACV,CAEA7yC,uBACG,OAAO8yC,CACV,CAYA92D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0tD,cACX9zD,KAAKoG,SAAS0tD,eACdiJ,EAAoCjJ,cAGvC9zD,KAAKoG,SAAS6rD,UAAYp+C,KAAK0D,MACD,MAA3BvX,KAAKoG,SAAS6rD,UACTjyD,KAAKoG,SAAS6rD,UACd8K,EAAoC9K,WAE5CjyD,KAAKoG,SAAS42D,YAAcnpD,KAAK0D,MACD,MAA7BvX,KAAKoG,SAAS42D,YACTh9D,KAAKoG,SAAS42D,YACdD,EAAoCC,aAE5Ch9D,KAAKoG,SAAS62D,YAAcppD,KAAK0D,MACD,MAA7BvX,KAAKoG,SAAS62D,YACTj9D,KAAKoG,SAAS62D,YACdF,EAAoCE,aAI5Cj9D,KAAKoG,SAAStE,WAAa+iB,SACI,MAA5B7kB,KAAKoG,SAAStE,WACTi7D,EAAoCj7D,WACpC9B,KAAKoG,SAAStE,YAEtB9B,KAAKoG,SAASrF,OAAS8jB,SACI,MAAxB7kB,KAAKoG,SAASrF,OACTg8D,EAAoCh8D,OACpCf,KAAKoG,SAASrF,OAEzB,CAGAiE,WAAWC,GACRjF,KAAKkD,eAAiB+B,CACzB,CAMA0tD,gBACG,IAAIuB,EAAe,CAAC,QAAS,SAAU,SAAU,QAGjD,OAFmBl0D,KAAK+E,YAAYgiB,UAEfje,QAAQvF,GACnB2wD,EAAa7mD,QAAQ9J,EAAEwlC,SAAS1kC,MAAQ,GAErD,CAWAg5D,gBAAgBv0D,GACb,MAAMw0D,EAAqB72C,IACxB,IAAIslC,EAAa,GAYjB,OAVAtlC,EAAMxiB,SAASmP,IACH,MAALA,IAEJ24C,EAAWznD,KAAK8O,GAEZA,EAAEsT,QAAQvgB,SACX4lD,EAAaA,EAAWjlC,OAAOw2C,EAAkBlqD,EAAEsT,UACtD,IAGIqlC,CAAU,EAGpB,OAAI/rD,KAAK0mB,QAAQvgB,QAGA,MAAV2C,IACDA,EAAUqjD,GAASA,aAAgBt2B,GAHhBynC,EAAkBt9D,KAAK0mB,QAMxB5d,OAAOA,IAErB,EAEb,CAEAy0D,eAAe33D,EAAO20D,GACnB,GAAa,MAAT30D,EAAJ,CAEA,IAAI43D,EAAiB53D,EAAM63D,gBAC3B,GAAsB,MAAlBD,EAAJ,CAEA,IAAIp1C,EAAUo1C,EAAe/C,YAAYz6D,KAAK+E,YAAa/E,MAC3D,GAAe,MAAXooB,EAYJ,OATAA,EAAQhiB,SAAWgiB,EAAQhiB,UAAY,CAAC,EACxCgiB,EAAQhiB,SAASsE,QAAU9E,EAAMhF,GAGhB,MAAb25D,IAAmBnyC,EAAQznB,SAAS21D,EAAIiE,GAG5Cv6D,KAAK0mB,OAAOpiB,KAAK8jB,GAEVA,CAf2B,CAHT,CAmB5B,CAEIopC,iBACD,IAAIvsD,EAASjF,KAAKkrB,eAAeD,WAUjC,OARwB,MAApBjrB,KAAKyxD,cACNzxD,KAAKyxD,YAAc,IAAIN,GAG1BnxD,KAAKyxD,YAAYC,SAAS1xD,MAC1BA,KAAKyxD,YAAYE,aAAa3xD,KAAKoG,SAASmrD,aAC5CvxD,KAAKyxD,YAAYzsD,WAAWC,GAErBjF,KAAKyxD,WACf,CAEAG,iBAAiBtkC,GACd,OAAOttB,KAAKwxD,WAAWM,WAAW,CAAEjoD,KAAMyjB,EAASpjB,KAAMlK,MAC5D,CAEA+xD,cAAczkC,GAEX,OAAIA,IACYttB,KAAKkrB,eAAeD,WACNmE,YAAY9B,GACA9P,QAEpChV,QAAQ+G,MAAM,2BAA4B,CAAE+d,QAASA,IAC9C7d,QAAQkH,OAAO,IAAIrO,MAAM,8BAI/BtI,KAAKwxD,WAAWhrC,QAAQ,CAAE3c,KAAMyjB,EAASpjB,KAAMlK,MACzD,CAEA09D,cAAcpwC,GACX,IAAIroB,EAASjF,KAAKkrB,eAAeD,WAE7B0yC,EAAc,IAAId,EAKtB,OAJAc,EAAYjM,SAAS1xD,MACrB29D,EAAYhM,aAAa3xD,KAAKoG,SAASg3D,aACvCO,EAAY34D,WAAWC,GAEhB04D,EAAYn3C,QAAQ,CAAE3c,KAAMyjB,EAASpjB,KAAMlK,MACrD,oBC5OH,MAAM61B,EAAiB,EAAQ,OAEzB+nC,EAA4C,CAAC,EAE7CC,EAA2B,CAC9Bx5D,IAAK,cAELkH,KAAM,eAENulD,SAAU,wBAIbrxD,EAAOC,QAAU,cAA+Bm2B,EAC7Cl2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB+7B,EAEvB,CAEA5zC,gBACG,OAAO4zC,CACV,CAEA5zC,uBACG,OAAO2zC,CACV,CAMAjL,gBACG,MAAO,EACV,oBCrCH,MAAM98B,EAAiB,EAAQ,OAEzBioC,EAAgD,CACnDC,YAAY,GAGTC,EAA+B,CAClC35D,IAAK,aACLkH,KAAM,WACNulD,SAAU,4BAGbrxD,EAAOC,QAAU,cAAuCm2B,EACrDl2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBk8B,EAEvB,CAEA/zC,gBACG,OAAO+zC,CACV,CAEA/zC,uBACG,OAAO6zC,CACV,CAUAnL,gBACG,MAAO,EACV,oBCxCH,MAAMqD,EAAS,EAAQ,OAEjBiI,EAA2C,CAC9C3lB,SAAU,EACVlzC,QAAS,GAGZ3F,EAAOC,QAAU,cAAsCs2D,EAKpD/rC,uBACG,OAAOg0C,CACV,CAEAr4D,QACG,GAAI5F,KAAKoG,SAAS4R,SAAU,CACzB,IAAI/S,EAASjF,KAAK+B,GAAGgW,WAAW/X,KAAKoG,SAAS4R,UAC9C,OAAK/S,EAEEA,EAAO8I,UAAU/N,KAAKoG,SAASsE,SAFlB,IAGvB,CAAO,CACJ,IAGIzF,EAHAiF,EAAOlK,KAAKy3D,sBAChB,GAAY,MAARvtD,EAAc,OAAO,KAGzB,GAAIA,EAAKhH,eACN+B,EAASiF,EAAKhH,mBACV,CACJ,IAAIgoB,EAAiBhhB,EAAKghB,eAC1B,GAAsB,MAAlBA,EAAwB,OAAO,KAEnCjmB,EAASimB,EAAeD,UAC3B,CAEA,OAAc,MAAVhmB,EAAuB,KAEfA,EAAO8I,UAAU/N,KAAKoG,SAASsE,QAE9C,CACH,oBCzCH,MAAMmrB,EAAiB,EAAQ,OAEzBqoC,EAA4C,CAC/CC,UAAW,GAGRC,EAA2B,CAC9B/5D,IAAK,YACLkH,KAAM,UACNulD,SAAU,wBAGbrxD,EAAOC,QAAU,cAAmCm2B,EACjDl2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBs8B,EAEvB,CAEAn0C,gBACG,OAAOm0C,CACV,CAEAn0C,uBACG,OAAOi0C,CACV,CAcAp4D,QACG9F,KAAK87B,YAAY97B,KAAMA,KAAM,CAAC,QAAS,cAEvC,IAAI8X,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI2O,MAAQ,GACL3O,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS+3D,UACXn+D,KAAKoG,SAAS+3D,WACdD,EAA0CC,UAG7Cn+D,KAAKoG,SAAS+3D,UAAYt5C,SAAS7kB,KAAKoG,SAAS+3D,UACpD,CAMAxL,gBACG,MAAO,EACV,oBC1EH,MAAM0L,EAAmB,EAAQ,OAE3BC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCl6D,IAAK,gBACLkH,KAAM,aACNulD,SAAU,0BAGbrxD,EAAOC,QAAU,cAAiC2+D,EAC/C1+D,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiBy8B,EAEvB,CAEAt0C,gBACG,OAAOs0C,CACV,CAEAt0C,uBACG,OAAOq0C,CACV,CAMA3L,gBACG,MAAO,EACV,oBClCH,MAAM98B,EAAiB,EAAQ,OAEzB2oC,EAAoD,CACvD58D,KAAM,cAGH68D,EAA2B,CAC9Bp6D,IAAK,iBACLkH,KAAM,UACNulD,SAAU,gCAGbrxD,EAAOC,QAAU,cAA2Cm2B,EACzDl2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB28B,EAEvB,CAEAx0C,gBACG,OAAOw0C,CACV,CAEAx0C,uBACG,OAAOu0C,CACV,CAMA7L,gBACG,MAAO,EACV,oBCpCH,MAAM98B,EAAiB,EAAQ,OAEzB6oC,EAAkD,CACrD98D,KAAM,cAGH+8D,EAAyB,CAC5Bt6D,IAAK,eACLkH,KAAM,UACNulD,SAAU,8BAGbrxD,EAAOC,QAAU,cAAyCm2B,EACvDl2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB68B,EAEvB,CAEA10C,gBACG,OAAO00C,CACV,CAEA10C,uBACG,OAAOy0C,CACV,CAMA/L,gBACG,MAAO,EACV,oBCpCH,MAAM98B,EAAiB,EAAQ,OAEzB+oC,EAA6C,CAChDh9D,KAAM,UAGHi9D,EAA4B,CAC/Bx6D,IAAK,UACLkH,KAAM,WACNulD,SAAU,yBAGbrxD,EAAOC,QAAU,cAAoCm2B,EAClDl2B,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MACG6F,EACAZ,EACAgQ,EACA+sB,GAAiB+8B,EAEvB,CAEA50C,gBACG,OAAO40C,CACV,CAEA50C,uBACG,OAAO20C,CACV,CAMAjM,gBACG,MAAO,EACV,oBCpCH,MAAM0L,EAAmB,EAAQ,OAE3BS,EAA0C,CAAC,EAE3CC,EAAiB,CACpB16D,IAAK,WACLkH,KAAM,UACNulD,SAAU,sBAGbrxD,EAAOC,QAAU,cAAiC2+D,EAC/C1+D,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiBi9B,EACvD,CAEA90C,gBACG,OAAO80C,CACV,CAEA90C,uBACG,OAAO60C,CACV,CAMAnM,gBACG,MAAO,EACV,oBC7BH,MAAM/B,EAAe,EAAQ,OAEvBoO,EAAuC,CAC1ChO,WAAY,GAKZiO,aAAc,GAKdC,iBAAkB,GAIlBC,eAAgB,GAIhBC,gBAAiB,GAIjBC,gBAAiB,GAIjBC,aAAc,IAMX5M,EAAiB,CACpBruD,IAAK,QACLkH,KAAM,QACNulD,SAAU,SAGbrxD,EAAOC,QAAU,cAA8BkxD,EAM5CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO+0C,CACV,CAQA/4D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjBwO,OAAOC,KAAK4qD,GAAsC/6D,SAASoQ,IACxDrU,KAAKoG,SAASiO,GACXrU,KAAKoG,SAASiO,IAAM2qD,EAAqC3qD,EAAE,GAEpE,CAMAs+C,gBACG,MAAO,EACV,oBChFH,MAAM/B,EAAe,EAAQ,OAEvB2O,EAAsC,CACzCn+D,MAAO,GAKP4vD,WAAY,GAIZxuD,QAAS,GAITg9D,YAAa,EAIbC,WAAY,EAIZC,WAAY,EAKZC,YAAa,EAMbnsB,WAAY,EAIZosB,aAAc,EAWdtN,YAAa,GAIbC,WAAY,GAMZC,SAAU,GAIVC,QAAS,GAMToN,UAAW,EAIXtgC,eAAgB,GAIhBC,aAAc,GAIdsgC,eAAgB,GAIhBC,aAAc,GAKdn3C,gBAAiB,CAGd2W,eAAgB,GAChBC,aAAc,GACdsgC,eAAgB,GAChBC,aAAc,IAEjBC,WAAY,CACTC,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAKpBp/D,OAAQ,EAKRq/D,WAAY,EACZC,aAAc,EACdC,YAAa,EACbC,QAAS,GAGT9zD,aAAc,GAiBd+zD,UAAW,GAMR9N,EAAiB,CACpBruD,IAAK,OACLkH,KAAM,QACNulD,SAAU,QAcb,SAAS2P,EAAgBC,EAAM96D,QACF,IAAf86D,EAAK96D,GAIhB86D,EAAK96D,GAAS86D,EAAK96D,IAAU25D,EAAoC35D,GAH9D86D,EAAK96D,GAAS25D,EAAoC35D,EAIxD,CAYA,SAAS+6D,EAAoBD,EAAM96D,GAChC,IACG86D,EAAK96D,GAASiO,KAAK0D,MAAMmpD,EAAK96D,GAGjC,CAFE,MAAOyE,GACNq2D,EAAK96D,GAAS25D,EAAoC35D,EACrD,CACH,CAEAnG,EAAOC,QAAU,cAA6BkxD,EAM3CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOs1C,CACV,CAYAt5D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB86D,EAAgBzgE,KAAKoG,SAAU,cAM/Bu6D,EAAoB3gE,KAAKoG,SAAU,WACnCu6D,EAAoB3gE,KAAKoG,SAAU,eACnCu6D,EAAoB3gE,KAAKoG,SAAU,cACnCu6D,EAAoB3gE,KAAKoG,SAAU,cACnCu6D,EAAoB3gE,KAAKoG,SAAU,eAEnCu6D,EAAoB3gE,KAAKoG,SAAU,cACnCu6D,EAAoB3gE,KAAKoG,SAAU,gBACnCu6D,EAAoB3gE,KAAKoG,SAAU,cACnCu6D,EAAoB3gE,KAAKoG,SAAU,gBACnCu6D,EAAoB3gE,KAAKoG,SAAU,eACnCu6D,EAAoB3gE,KAAKoG,SAAU,gBACnCu6D,EAAoB3gE,KAAKoG,SAAU,aAEnCpG,KAAKoG,SAAS45D,WACXhgE,KAAKoG,SAAS45D,YACdT,EAAoCS,WAEvC,IACGhgE,KAAKoG,SAAS45D,WAAWC,aAAepsD,KAAK0D,MAC1CvX,KAAKoG,SAAS45D,WAAWC,aAK/B,CAHE,MAAO51D,GACNrK,KAAKoG,SAAS45D,WAAWC,aACtBV,EAAoCS,WAAWC,YACrD,CAEA,IACGjgE,KAAKoG,SAAS45D,WAAWG,gBAAkBtsD,KAAK0D,MAC7CvX,KAAKoG,SAAS45D,WAAWG,gBAK/B,CAHE,MAAO91D,GACNrK,KAAKoG,SAAS45D,WAAWG,gBACtBZ,EAAoCS,WAAWG,eACrD,CASAM,EAAgBzgE,KAAKoG,SAAU,eAC/Bq6D,EAAgBzgE,KAAKoG,SAAU,YAC/Bq6D,EAAgBzgE,KAAKoG,SAAU,cAC/Bq6D,EAAgBzgE,KAAKoG,SAAU,WAC/Bu6D,EAAoB3gE,KAAKoG,SAAU,aAwBnC,IAAIw6D,EAAW,CACZ,aACA,mBACA,iBACA,eACA,iBACA,gBAGC5gE,KAAKoG,SAASwiB,iBACfg4C,EAAS38D,SAAS+C,IACVhH,KAAKoG,SAASY,KAChBhH,KAAKoG,SAASY,GAAKhH,KAAKoG,SAASwiB,gBAAgB5hB,GAAE,IAK5D45D,EAAS38D,SAAS+C,IACfy5D,EAAgBzgE,KAAKoG,SAAUY,EAAE,IAIpChH,KAAK0mB,OAAS,EACjB,CAMAisC,gBACG,MAAO,EACV,CAEAkO,YAAYj7D,EAAOqU,GAChB,IAAI6mD,GAAa,EAYjB,GARI9gE,KAAKoG,UAAUm5B,gBAAkB35B,EAAMkB,aAExC9G,KAAKoG,SAASm5B,eAAiB,GAE/BuhC,GAAa,GAIZ9gE,KAAKoG,SAASo5B,cAAcr5B,OAAQ,CAErC,IAAI4F,EAAQ/L,KAAKoG,SAASo5B,aAAanyB,QAAQzH,EAAMkB,YAEjDiF,GAAS,IACV/L,KAAKoG,SAASo5B,aAAarzB,OAAOJ,EAAO,GAEzC+0D,GAAa,EAEnB,CAGA,GAAI9gE,KAAKoG,SAAS05D,gBAAgB35D,OAAQ,CAEvC,IAAI4F,EAAQ/L,KAAKoG,SAAS05D,eAAezyD,QAAQzH,EAAMhF,IAEnDmL,GAAS,IACV/L,KAAKoG,SAAS05D,eAAe3zD,OAAOJ,EAAO,GAE3C+0D,GAAa,EAEnB,CAGA,GAAI9gE,KAAKoG,SAAS25D,cAAc55D,OAAQ,CAErC,IAAI4F,EAAQ/L,KAAKoG,SAAS25D,aAAa1yD,QAAQzH,EAAMhF,IAEjDmL,GAAS,IACV/L,KAAKoG,SAAS25D,aAAa5zD,OAAOJ,EAAO,GAEzC+0D,GAAa,EAEnB,CAGA7mD,EAAG,KAAM6mD,EACZ,CAEAhI,wBACG,MAAO,CAAC,cAAe,aAAc,WAAY,UACpD,oBC5XH,MAAMlI,EAAe,EAAQ,OAEvBmQ,EAAuC,CAC1C/kB,SAAU,GACVh7C,MAAO,IACPD,OAAQ,KAGL2xD,EAAiB,CACpBruD,IAAK,QACLkH,KAAM,YACNulD,SAAU,SAGbrxD,EAAOC,QAAU,cAA8BkxD,EAC5CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO82C,CACV,CAYA96D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQ6jB,SACnB7kB,KAAKoG,SAASpF,OAAS+/D,EAAqC//D,OAE/DhB,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QAAUggE,EAAqChgE,OAEnE,oBC/CH,MAAM6vD,EAAe,EAAQ,OAEvBoQ,EAAwC,CAC3ChQ,WAAY,KAKZiQ,WAAY,GAKZC,sBAAuB,GAKvBC,wBAAyB,GAKzBC,WAAY,GAKZC,SAAU,IAWP3O,EAAiB,CACpBruD,IAAK,SAILkH,KAAM,UAINulD,SAAU,UAMbrxD,EAAOC,QAAU,cAA+BkxD,EAC7CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzsD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGZ3F,KAAKoG,SAASi7D,WAChBrhE,KAAKoG,SAASi7D,SAAW,CAAEzgE,GAAI,GAAGZ,KAAKY,cAAeyD,IAAK,QAC3DrE,KAAKoG,SAASi7D,SAAShzD,KAAOrO,KAAKoG,SAASk7D,cAG/CthE,KAAKuhE,aAAevhE,KAAK+B,GAAGy3B,iBAAiBx5B,KAAKoG,SAASi7D,SAC9D,CAEAv7D,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI1R,SAASi7D,SAAWrhE,KAAKuhE,aAAaz7D,QACnCgS,CACV,CAEAmS,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO+2C,CACV,oBCnFH,MAAMpQ,EAAe,EAAQ,OAEvB4Q,EAAuC,CAC1CnzD,KAAM,GACNiS,OAAQ,EACR87C,UAAW,QAGR1J,EAAiB,CACpBruD,IAAK,QACLkH,KAAM,OACNulD,SAAU,SAGbrxD,EAAOC,QAAU,cAA8BkxD,EAM5CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOu3C,CACV,CAcA17D,QACG9F,KAAK87B,YAAY97B,KAAMA,KAAM,CAAC,QAAS,SAEvC,IAAI8X,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI++C,QAAU,GACP/+C,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAIjB3F,KAAKqO,KAAO1I,EAAO0I,MAAQ1I,EAAOS,SAASiI,MAAQ,QAEnDrO,KAAKoG,SAASka,OACXtgB,KAAKoG,SAASka,QAAUkhD,EAAqClhD,OAChEtgB,KAAKoG,SAASg2D,UACXp8D,KAAKoG,SAASg2D,WACdoF,EAAqCpF,UAGxCp8D,KAAK0mB,OAAS,GAGd1mB,KAAKoG,SAASka,OAASuE,SAAS7kB,KAAKoG,SAASka,QAE9CtgB,KAAK07B,UAAU17B,KAAMA,KAAM,CAAC,QAAS,QACxC,CAMA2yD,gBACG,MAAO,EACV,CAQA8O,eACGzhE,KAAKoG,SAASka,OAAS,CAC1B,CAMAohD,cACG1hE,KAAKoG,SAASka,OAAS,CAC1B,CAMAqhD,oBACG3hE,KAAKoG,SAASka,OAAS,CAC1B,oBChHH,MAAMkzC,EAAkB,EAAQ,OAC1B5C,EAAe,EAAQ,OAEvBgR,EAA4B,CAC/BxgE,MAAO,GACPygE,WAAY,GAGTnP,EAAiB,CACpBruD,IAAK,SACLkH,KAAM,UACNulD,SAAU,UAGbrxD,EAAOC,QAAU,cAA+BkxD,EAM7CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO23C,CACV,CAOAE,YACG9hE,KAAK0mB,OAAOpiB,KACTtE,KAAK+E,YAAYujB,QACd,CACGjkB,IAAKmvD,EAAgBzqB,SAAS1kC,KAEjCrE,KAAK+E,YACL/E,MAGT,CAQA2yD,cAAcoP,GACX,OAAIA,EAGM,GAKH/hE,KAAK+U,OACC/U,KAAK+U,OAAO49C,eAAc,GAE1B,EAGhB,oBCtEH,MAAM/B,EAAe,EAAQ,OAEvBoR,EAAsC,CACzChR,WAAY,KACZprD,MAAO,KACP7E,OAAQ,GAGL2xD,EAAiB,CACpBruD,IAAK,OACLkH,KAAM,UACNulD,SAAU,QAGbrxD,EAAOC,QAAU,cAA8BkxD,EAC5CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO+3C,CACV,CAEAp8D,QACG,IAAImsB,EAAK/xB,KAAKkrB,eACd,IAAK6G,EAAI,OAAO,KAEhB,IAAI9sB,EAAS8sB,EAAG9G,WAChB,OAAKhmB,EAEEA,EAAO8B,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASR,QAAO,GAFrC,IAGvB,oBCnCH,MAAMgrD,EAAe,EAAQ,OAEvBqR,EAAsC,CACzCC,YAAa,IACbC,YAAa,kBACbC,cAAe,eACfC,cAAe,EACfC,YAAa,GACbC,UAAW,UACXC,aAAc,OACdC,aAAc,GACdC,cAAe,GACfC,eAAgB,GAWhB39C,MAAO,GACP49C,MAAO,IAGJC,EAAiB,CACpBx+D,IAAK,OACLkH,KAAM,WACNulD,SAAU,QAGbrxD,EAAOC,QAAU,cAA6BkxD,EAM3CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB+gC,EACvD,CAEA54C,gBACG,OAAO44C,CACV,CAEA54C,uBACG,OAAOg4C,CACV,CAcAn8D,QACG9F,KAAK87B,YAAY97B,KAAMA,KAAM,CAC1B,eACA,iBACA,kBAECA,KAAKoG,SAAS4e,OACfhlB,KAAKoG,SAAS4e,MAAM/gB,SAAS6+D,IAC1B9iE,KAAK87B,YAAYgnC,EAAMA,EAAM,CAAC,aAAa,IAIjD,IAAIhrD,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI++C,QAAU,GACP/+C,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAK07B,UAAU17B,KAAMA,KAAM,CACxB,eACA,iBACA,kBAGHA,KAAKoG,SAAS4e,MACXhlB,KAAKoG,SAAS4e,OAASi9C,EAAoCj9C,MAE9D,IAAK,IAAI3R,EAAI,EAAGA,EAAIrT,KAAKoG,SAAS4e,MAAM7e,OAAQkN,IAAK,CAClD,IAAIyvD,EAAO9iE,KAAKoG,SAAS4e,MAAM3R,GAC3ByvD,aAAgB3uD,QACjB2uD,EAAKC,UAAYlvD,KAAK0D,MAAMurD,EAAKC,YAAa,GAE9C/iE,KAAK07B,UAAUonC,EAAMA,EAAM,CAAC,eAGP,iBAARA,IACb9iE,KAAKoG,SAAS4e,MAAM3R,GAAK,CACtB2vD,OAAQF,EACRC,WAAW,GAGpB,CACH,CAMApQ,gBACG,MAAO,EACV,CAEAsQ,iBAAiBviE,GAEVA,GAAQA,EAAK+vB,QAAU,GACxB/vB,EAAK2rB,KAAK,CAAC,GAAGpoB,SAASmK,IACpB1N,EAAKma,OAAOzM,EAAKxN,GAAG,GAG7B,CAEAsiE,eAAexiE,EAAMskB,GACbtkB,GAASskB,IAEbA,GAAS,IAAI/gB,SAASk/D,IACpB,GAAIA,EAAYJ,UAAW,CACxB,IAAIK,EAAapjE,KAAK+E,YAAYigB,OAC9BlD,GAAMA,EAAElhB,IAAMuiE,EAAYH,SAC3B,GACD,GACF,IAAKI,EAAY,OAGjB,GAAuB,GADDA,EAAW/L,gBACP,OAE1B,GAAI8L,EAAYE,MAAO,CACpB,IAAIC,EAAYtjE,KAAK+E,YAAY0hB,OAC7BrT,GAAMA,EAAExS,IAAMuiE,EAAYE,QAC3B,GACD,GACF,IAAKC,EAAW,OAGhB,GAAsB,GADDA,EAAUjM,gBACN,MAC5B,CAEA,IAAIj2D,EAAQpB,KAAKujE,aAAaJ,GAE9B,IAAIK,EAoBJ,GAVgB,OANbA,EAFCL,EAAYpuD,QAAgC,KAAtBouD,EAAYpuD,OAExBrU,EAAKqJ,WAAWo5D,EAAYpuD,QAG5BrU,KAKGA,EAAK+iE,YAAYN,EAAYpuD,QAEnCjL,QAAU,GAElBpJ,EAAKgE,QAAQy+D,EAAYpuD,QAEzByuD,EAAW9iE,EAAKqJ,WAAWo5D,EAAYpuD,SAEtCyuD,EAASr3C,OAAOg3C,EAAYE,OAASF,EAAYH,QAClD,OAEHQ,EAAStiD,IACN,CACGtgB,GAAIuiE,EAAYE,OAASF,EAAYH,OACrCrgE,MAAOvB,EACPQ,KAAMuhE,EAAYvhE,KAClBohE,OAAQG,EAAYH,OACpBz3D,KAAM43D,EAAY53D,KACb,eAAiB43D,EAAY53D,KAC7B,IAER43D,EAAYxiE,SAAWkkB,SAASs+C,EAAYxiE,UAAY,EAE9D,IAEN,CAgBA4iE,aAAaG,GACV,IAAIC,EAAO3jE,KAAK+B,GAAGsP,aAAasB,kBAC5BixD,EAAcF,EAASh/C,aAAa5b,QAAQmzB,GACtCA,EAAEL,eAAiB+nC,IAGzBviE,EAAQ,GAgBZ,GAdIwiE,EAAYz9D,SACTy9D,EAAY,GAAGC,UAChBziE,EAAQwiE,EAAY,GAAGC,UACfD,EAAY,GAAGxiE,QACvBA,EAAQwiE,EAAY,GAAGxiE,SAKxBA,GAASsiE,EAASG,YACpBziE,EAAQsiE,EAASG,YAKhBziE,IAEAA,EAAM4R,QAAQ,aAAc,IAC9B,CAGC,IAAIgwD,EAEDA,EADCU,EAASV,OACDU,EAASV,OAEThjE,KAAK8jE,gBAAgBJ,GAGjC,IAAIZ,EAAO9iE,KAAK+E,YAAYigB,OAAOlD,GAAMA,EAAElhB,IAAMoiE,IAAQ,GAAM,GAC/D,GAAIF,EAED,GAAqB,OAAjBY,EAAS9hE,MAAiC,iBAAhB8hE,EAASr/D,IAAwB,CAC5D,IAAI0/D,EAAUjB,EAAKr8C,OACfrT,GAAMA,EAAExS,IAAM8iE,EAASL,OAASjwD,EAAExS,IAAM8iE,EAAS9iE,KAClD,GACD,GACEmjE,IACD3iE,EAAQ2iE,EAAQ3iE,MAEtB,MACGA,EAAQ0hE,EAAK1hE,KAGtB,CAEA,OAAOA,CACV,CAEA0iE,gBAAgBE,GACb,MAAuB,QAAnBA,EAAY3/D,IACNrE,KAAK8jE,gBAAgBE,EAAYjvD,QAEjCivD,EAAYpjE,EAEzB,CAEAu4D,KAAKN,EAAW9jD,GACb,OAAOjV,MAAMq5D,KAAKN,EAAW9jD,GAAQP,MAAM1G,KAEvCA,EAAO1H,SAAS4e,OAAS,IAAI/gB,SAAQ,CAAC6d,EAAGzO,KACvC,IAAIyvD,EAAOh1D,EAAO1H,SAAS4e,MAAM3R,GAGd,iBAARyvD,EACRh1D,EAAO1H,SAAS4e,MAAM3R,GAAKwlD,EAAUiK,IAErCA,EAAKE,OAASnK,EAAUiK,EAAKE,QAC7BF,EAAKO,MAAQxK,EAAUiK,EAAKO,OAC/B,IAGIv1D,EAAOlG,OAAO4M,MAAK,IAChB1G,MAGhB,oBC3RH,MAAM0lD,EAAkB,EAAQ,OAO1Bd,EAAiB,CACpBruD,IAAK,OACLkH,KAAM,QAGH0qD,EAA8B,CACjCr0D,KAAM,OACN86D,WAAY,IACZC,YAAa,IACbsH,UAAW,KACXC,eAAgB,EAChBC,eAAgB,yBAGnB1kE,EAAOC,QAAU,cAA6B8zD,EAC3C7zD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,GAiBpD1yD,KAAK+U,OAAS,IAMjB,CAEAkV,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOgsC,CACV,CAEAhsC,wBAAwBvpB,GACrB,MAAO,CACJ,WACA,MAAQwa,OAAOxa,EAAKqE,YAAYoC,MAAM6L,QAAQ,cAAe,IAC7DkI,OAAOxa,EAAKyG,MACR6L,QAAQ,cAAe,IACvBmF,cACJ,QACD7J,KAAK,IACV,CAUAxI,QACG,IAAIgS,EAAMhY,MAAMgG,QAehB,OAbAgS,EAAI3Q,KAAOnH,KAAKmH,KAEhB2Q,EAAIssD,QAAUpkE,KAAKokE,QAGO,SAAtBpkE,KAAKoG,SAASxE,OAAiBkW,EAAIvM,KAAO,SAGzCvL,KAAKoB,OAAuB,WAAdpB,KAAKoB,QAAoB0W,EAAI1W,MAAQ0W,EAAI3Q,MAG5D2Q,EAAI6L,SAAW3jB,KAAKgkB,QAAU,IAAI7V,KAAK2T,GAAMA,EAAElhB,KAExCkX,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGW,SAAxBA,EAAOS,SAASxE,OAAiB5B,KAAKuL,KAAO,SAG5CvL,KAAKoB,OAAuB,WAAdpB,KAAKoB,QAAoBpB,KAAKoB,MAAQpB,KAAKmH,MAG9DnH,KAAKokE,QAAUz+D,EAAOy+D,SACjBpkE,KAAKokE,SAAWpkE,KAAK+E,cACvB/E,KAAKokE,QAAUpkE,KAAK+E,YAAYnE,IAInC,IAAIokB,EAAQ,IACXrf,EAAOge,SAAW,IAAI1f,SAASrD,IAC7B,IAAI6gB,EAAMzhB,KAAK+B,GAAG6hB,eAAehjB,GAC7B6gB,EACDuD,EAAM1gB,KAAKtE,KAAK6jB,QAAQpC,IAExBzhB,KAAK+B,GAAGwN,MACL,OAAOvP,KAAK+E,YAAYoC,SAASnH,KAAK+E,YAAYnE,aAAaZ,KAAKmH,SAASnH,KAAKY,kCAAkCA,KAE1H,IAEHZ,KAAKgkB,OAASgB,EAGdhlB,KAAKoG,SAAS8vD,QAAUl2D,KAAKoG,SAAS8vD,SAAW,EACjDl2D,KAAKoG,SAAS+vD,QAAUn2D,KAAKoG,SAAS+vD,SAAW,CAAC,EAGrD,CAWAvhD,UACG,OAAOnF,QAAQC,UACX8E,MAAK,KAMH,IAAI6vD,EAAiB,GACjBC,EAAWtkE,KAAKglB,QAQpB,OAPAhlB,KAAKgkB,OAAS,GAIdsgD,EAASrgE,SAAS6d,IACfuiD,EAAe//D,KAAKwd,EAAElN,UAAU,IAE5BnF,QAAQ4R,IAAIgjD,EAAe,IAEpC7vD,MAAK,KACUxU,KAAK+U,QAAU/U,KAAK+E,aAEnBw/D,WAAWvkE,QAE3BwU,MAAK,IACI1U,MAAM8U,WAuBtB,CAQAhN,OACG,OAAO6H,QAAQC,UACX8E,MAAK,IAEI1U,MAAM8H,SAEf4M,MAAK,KAEUxU,KAAK+U,QAAU/U,KAAK+E,aAEnBy/D,WAAWxkE,QAE3BwU,MAAK,IACIxU,MAEhB,CAiBAglB,MAAMlc,EAAS,MAAM,GAAMsd,GAAO,GAC/B,IAAItY,EAAS,GAsBb,OAnBIhF,GAAUsd,EACPpmB,KAAKgkB,QAAUhkB,KAAKgkB,OAAO7d,OAAS,IACrC2H,EAAS9N,KAAKgkB,OAAOlb,OAAOA,IAEjB3C,OAAS,GACjBnG,KAAKgkB,OAAO/f,SAAS6d,IAClB,IAAIuE,EAAWvE,EAAEkD,MAAMlc,EAAQsd,GAC3BC,GAAYA,EAASlgB,OAAS,IAC/B2H,EAASuY,EACZ,IAOTvY,EAAS9N,KAAKgkB,OAAOlb,OAAOA,GAGxBgF,CACV,CAWA02D,WAAW1B,GAER,OADiB9iE,KAAKglB,OAAOK,GAAMA,EAAEzkB,KAAOkiE,EAAKliE,KAAIuF,OAAS,EAQvDsJ,QAAQC,WALZ1P,KAAKgkB,OAAO1f,KAAKw+D,GACV9iE,KAAK4H,OAKlB,CAaAic,QAAQle,GAELA,EAAOtB,IAAMquD,EAAeruD,IAK5B,IAAIy+D,EAAO9iE,KAAK+E,YAAYujB,QAAQ3iB,EAAQ3F,KAAK+E,YAAa,MAE9D,OADA+9D,EAAK/tD,OAAS/U,KACP8iE,CACV,CAWAyB,WAAWzB,GACR,IAAI3iC,EAAUngC,KAAKgkB,OAAO7d,OAK1B,OAJAnG,KAAKgkB,OAAShkB,KAAKglB,OAAM,SAAUlD,GAChC,OAAOA,EAAElhB,IAAMkiE,EAAKliE,EACvB,IAEIZ,KAAKgkB,OAAO7d,OAASg6B,EACfngC,KAAK4H,OAIR6H,QAAQC,SAClB,CAOAoY,UACG,OAAO9nB,KAAK2nB,aAAe,UAC9B,CASAA,aACG,OAAI3nB,KAAK+U,OACC/U,KAAK+U,OAAO+S,UAAY9nB,KAAKY,GAE7BZ,KAAK+E,YAAY+iB,UAAY9nB,KAAKY,EAE/C,CAEA6jE,WAAW3sD,GAOR,MALyB,SAArBA,EAAI1R,SAASxE,KACdkW,EAAIvM,KAAO,QAEXuM,EAAIvM,KAAOmnD,EAAennD,KAEtBuM,CACV,CAcAuc,MAAMwkC,EAAW9jD,GAEd,GAAiB,MAAb8jD,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAI6L,EAAcljC,IACVq3B,EAAUr3B,EAAS5gC,MACrBi4D,EAAUr3B,EAAS5gC,IAAMZ,KAAK+B,GAAG8N,QAEhC2xB,EAASxc,OACVwc,EAASxc,QAAQ/gB,SAAS6d,GAAM4iD,EAAW5iD,KAG1C0f,EAAS/a,OACV+a,EAAS/a,QAAQxiB,SAASmP,GAAMsxD,EAAWtxD,IAC9C,EAIHsxD,EAAW1kE,KACd,CAGA,IAAI8N,EAAShO,MAAMu0B,MAAMwkC,EAAW9jD,GAKpC,OAFAjH,EAAO3G,KAAO,KAEP2G,CACV,CAgBAqrD,KAAKN,EAAW9jD,EAAQ5S,GAErB,GAAiB,MAAb02D,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAI6L,EAAcljC,IACVq3B,EAAUr3B,EAAS5gC,MACrBi4D,EAAUr3B,EAAS5gC,IAAMZ,KAAK+B,GAAG8N,QAEhC2xB,EAASxc,OACVwc,EAASxc,QAAQ/gB,SAAS6d,GAAM4iD,EAAW5iD,KAG1C0f,EAAS/a,OACV+a,EAAS/a,QAAQxiB,SAASmP,GAAMsxD,EAAWtxD,IAC9C,EAIHsxD,EAAW1kE,KACd,CAGA,OAAOF,MAAMq5D,KAAKN,EAAW9jD,EAAQ5S,EACxC,oBCvcH,MAAMyuD,EAAe,EAAQ,OAEvB+T,EAAuC,CAC1C3T,WAAY,KACZ4T,aAAc,EACdC,YAAa,EACbC,cAAe,EACf3nB,IAAK,EACLD,IAAK,EACLn8C,OAAQ,GAGL2xD,EAAiB,CACpBruD,IAAK,QACLkH,KAAM,OACNulD,SAAU,SAGbrxD,EAAOC,QAAU,cAA8BkxD,EAC5CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO06C,CACV,CAYA1+D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASw+D,aAAe/wD,KAAK0D,MAC/BvX,KAAKoG,SAASw+D,cACXD,EAAqCC,cAE3C5kE,KAAKoG,SAASy+D,YAAchxD,KAAK0D,MAC9BvX,KAAKoG,SAASy+D,aACXF,EAAqCE,aAE3C7kE,KAAKoG,SAAS0+D,cAAgBjxD,KAAK0D,MAChCvX,KAAKoG,SAAS0+D,eACXH,EAAqCG,eAE3C9kE,KAAKoG,SAAS+2C,IAAMtpC,KAAK0D,MACtBvX,KAAKoG,SAASu5D,aAAegF,EAAqCxnB,KAErEn9C,KAAKoG,SAAS82C,IAAMrpC,KAAK0D,MACtBvX,KAAKoG,SAAS82C,KAAOynB,EAAqCznB,KAGzDl9C,KAAKoG,SAAS2+D,WAA+C,iBAA3B/kE,KAAKoG,SAAS2+D,YACjD/kE,KAAKoG,SAAS2+D,UAAYlxD,KAAK0D,MAAMvX,KAAKoG,SAAS2+D,YAGtD/kE,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QAAU4jE,EAAqC5jE,OAEnE,CAUA+E,QACG,IAAIgS,EAAMhY,MAAMgG,QAQhB,OANAgS,EAAI2O,MAAQ,GACZ3O,EAAI1R,SAAW0R,EAAI1R,UAAY,CAAC,EAE5BpG,KAAKoG,SAAS2+D,YACfjtD,EAAI1R,SAAS2+D,UAAYlxD,KAAKC,UAAU9T,KAAKoG,SAAS2+D,YAElDjtD,CACV,CAMA66C,gBACG,MAAO,EACV,oBCnGH,MAAM/B,EAAe,EAAQ,OAEvBoU,EAA+C,CAClDC,WAAY,GACZC,UAAW,IAGRxS,EAAiB,CACpBruD,IAAK,iBACLkH,KAAM,UACNulD,SAAU,mBAGbrxD,EAAOC,QAAU,cAAuCkxD,EACrDjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO+6C,CACV,CAYA/+D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS6+D,WACXjlE,KAAKoG,SAAS6+D,YACdD,EAA6CC,WAEhDjlE,KAAKoG,SAAS8+D,UACXllE,KAAKoG,SAAS8+D,WACdF,EAA6CE,SACnD,CAUAp/D,QACG,IAAIgS,EAAMhY,MAAMgG,QAIhB,OAFAgS,EAAI1R,SAAW0R,EAAI1R,UAAY,CAAC,EAEzB0R,CACV,CAMA66C,gBACG,MAAO,EACV,oBCtEH,MAAM/B,EAAe,EAAQ,OACvB4C,EAAkB,EAAQ,OAE1B2R,EAAqC,CACxCpkE,OAAQ,EACRqkE,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,aAAc,IACdC,WAAY,OACZC,UAAW,GAGRC,EAAoB,CACvBrhE,IAAK,MACLkH,KAAM,kBACNulD,SAAU,OAGbrxD,EAAOC,QAAU,cAA4BkxD,EAM1CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4jC,EACvD,CAEAz7C,gBACG,OAAOy7C,CACV,CAEAz7C,uBACG,OAAOk7C,CACV,CAYAl/D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAAS8jB,SAAS7kB,KAAKoG,SAASrF,QAC9Cf,KAAKoG,SAASg/D,SAAWvgD,SAAS7kB,KAAKoG,SAASg/D,UAAY,GAC5DplE,KAAKoG,SAASi/D,UAAYxgD,SAAS7kB,KAAKoG,SAASi/D,WACjDrlE,KAAKoG,SAASk/D,UAAYzgD,SAAS7kB,KAAKoG,SAASk/D,WACjDtlE,KAAKoG,SAASm/D,aAAe1gD,SAAS7kB,KAAKoG,SAASm/D,cACpDvlE,KAAKoG,SAASo/D,WAAaxlE,KAAKoG,SAASo/D,WACzCxlE,KAAKoG,SAASq/D,UAAY5gD,SAAS7kB,KAAKoG,SAASq/D,UACpD,CAEAE,OAAOC,EAASjP,GACb,OAAO32D,KAAK+E,YACRujB,QACE,CACGjkB,IAAKmvD,EAAgBzqB,SAAS1kC,IAC9BjD,MAAOwkE,EACPrP,QAASI,GAEZ32D,KAAK+E,YACL/E,MAEF4H,MACP,CAMA+qD,gBACG,MAAO,EACV,oBChFH,MAAM/B,EAAe,EAAQ,OAEvBiV,EAAsC,CACzCx3D,KAAM,GAKNtN,OAAQ,EAIRiwD,WAAY,MAST0B,EAAiB,CACpBruD,IAAK,OAILkH,KAAM,OAINulD,SAAU,QAKbrxD,EAAOC,QAAU,cAA6BkxD,EAC3CjxD,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,GAEpD1yD,KAAK8lE,QAAU,IAClB,CAEA77C,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAO47C,CACV,CAcA//D,QAGG9F,KAAK87B,YAAY97B,KAAMA,KAAM,CAAC,SAE9B,IAAI8X,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI2O,MAAQ,GACL3O,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAGlCpG,KAAKoG,SAASrF,OAAS8jB,SACpB7kB,KAAKoG,SAASrF,QAAU8kE,EAAoC9kE,QAI/Df,KAAKqO,KAAO1I,EAAO0I,MAAQw3D,EAAoCx3D,KAI/DrO,KAAK07B,UAAU17B,KAAMA,KAAM,CAAC,QAC/B,CAMA2yD,gBACG,MAAO,EACV,CAQIznC,qBACD,MAAwB,YAApBlrB,KAAK+U,QAAQ1Q,IACPrE,KAAK+B,GAAGspB,mBAAmBrrB,KAAK+U,OAAO3O,SAAS4qD,YAEhDhxD,KAAK+B,GAAGspB,mBAAmBrrB,KAAKoG,SAAS4qD,WAEtD,CAEAtnD,SAAS9D,GACN,IAAIxE,EAAQwE,EAAMxE,OAAS,GAG3B,OAFAA,EAAQA,EAAM4R,QAAQ,MAAO,OAC7B5R,EAAQA,EAAM4R,QAAQ,MAAO,OACtB5R,CACV,CAEA2kE,YAAY/vD,EAAKgwD,GACd,IAAIl4D,EAAS9N,KAAKqO,KAMd0jB,EAAK/xB,KAAKkrB,eAGVjmB,EAAS8sB,GAAI9G,YAAcjrB,KAAK8lE,QACpC,IAAK7gE,EAAQ,MARY,CAAC6I,GAChBA,EAAOkF,QAAQ,WAAY,IAOjBizD,CAAmBn4D,GAEvC,MAAMwf,EAAUtX,GAAO+b,EAAGjG,aAAe,CAAC,EAqE1C,OAnEA7mB,EAAO8B,SAAS9C,SAAS+C,IAKtB,IAAI5F,EAAQpB,KAAK0J,SAAS1C,GAE1B,IAAIq6D,EAAW,IAAIj/C,OAAO,IAAMhhB,EAAQ,IAAK,KAMzCyI,EAAO7C,EAAEsZ,OAAOgN,GACpB,GAAa,SAATtmB,EAAE3C,IAAgB,CACnB,IAAI6hE,EAAQr8D,EACZA,EAAO7C,EAAEm/D,SAASD,IAMdA,GACDl/D,EAAEZ,SAASu3C,iBACX32C,EAAEZ,SAASs3C,gBAEX7zC,EAAO7C,EAAEm/D,SAASn/D,EAAEZ,SAASu3C,iBA4B7B7vC,EAASA,EAAOkF,QACb,MACA,oDAGT,CAEAlF,EAASA,EAAOkF,QAAQquD,EAAUx3D,EAAK,IAI1CiE,EAASA,EAAOkF,QAAQ,QAASsa,EAAQroB,EAAOqpB,MAGnD,CAEAtpB,WAAWC,GACRjF,KAAK8lE,QAAU7gE,CAClB,oBCpNH,MAAM+wD,EAAS,EAAQ,OAEjBtD,EAAiB,CACpBruD,IAAK,aACLkH,KAAM,kBACNulD,SAAU,wBAGPmF,EAA8B,CACjCmQ,WAAY,EACZC,QAAS,GAGZ5mE,EAAOC,QAAU,cAA+Bs2D,EAO7Cr2D,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAAiB4wB,EACvD,CAEAzoC,gBACG,OAAOyoC,CACV,CAEAzoC,uBACG,OAAOgsC,CACV,CAQAhwD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASggE,WAAavhD,SACxB7kB,KAAKoG,SAASggE,YAAcnQ,EAA4BmQ,YAE3DpmE,KAAKoG,SAASigE,QAAUxhD,SACrB7kB,KAAKoG,SAASigE,SAAWpQ,EAA4BoQ,QAE3D,oBChDO,EAAQ,OAAlB,MAGMC,EAAoB,EAAQ,OAE5BC,EAAa,EAAQ,OACL,EAAQ,OAE9B9mE,EAAOC,QAAU,cAAiC4mE,EAC/C3mE,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAGlB/B,KAAKwmE,sBAAyBC,IAC3B,IAAIC,EAAW1mE,KAAKgkB,OAAOqI,MAAMvK,GAAMA,EAAElhB,KAAO6lE,EAAW7lE,KACvD8lE,IACD1mE,KAAKgkB,OAAShkB,KAAKgkB,OAAOlb,QAAQgZ,GAAMA,EAAElhB,IAAM8lE,EAAS9lE,KACzDZ,KAAKgkB,OAAO1f,KAAKoiE,EAASC,mBAC7B,EAEH3mE,KAAKgkB,OAAO/f,SAAS6d,IAClBA,EAAE1f,GAAG,qBAAsBpC,KAAKwmE,sBAAsB,GAE5D,CAEAv8C,sBAIG,OAHAzhB,QAAQ+G,MACL,qEAEI,IACV,CACA0a,0BACG,IAAI28C,EAAiB,IAAIt+D,MACtB,qEAGH,OADAE,QAAQ+G,MAAMq3D,GACP,IACV,CAEA38C,yBACG,IAAI28C,EAAiB,IAAIt+D,MACtB,oEAGH,OADAE,QAAQ+G,MAAMq3D,GACP,IACV,CAEAC,UACG,OAAO7mE,KAAK+B,GAAG0gB,UAAU,MAAMziB,KAAKmH,OACvC,CASAw/D,kBACG,IAAIG,EAAS9mE,KAAK+B,GAAG41B,gBAAgB33B,KAAKY,IAO1C,OAJAZ,KAAKgkB,OAAO/f,SAAS6d,IAClBA,EAAEgT,eAAe,qBAAsB90B,KAAKwmE,sBAAsB,IAG9DM,CACV,CAcA3hE,kBAAkB4hE,EAAQ1iE,IAC2B,GAAjCrE,KAAKqE,GAAKgJ,QAAQ05D,EAAOnmE,MAEvCZ,KAAKqE,GAAKC,KAAKyiE,EAAOnmE,UAChBZ,KAAK4H,OAEjB,CAEAzC,kBAAkB4hE,EAAQ1iE,GACvB,IAAI2iE,EAAShnE,KAAKqE,GAAK8B,OACvBnG,KAAKqE,GAAOrE,KAAKqE,GAAKyE,QAAQlI,GACpBA,GAAMmmE,EAAOnmE,KAGnBomE,GAAUhnE,KAAKqE,GAAK8B,cACfnG,KAAK4H,MAEjB,CAQAq/D,qBAAqB/6C,GAClB,OAAOlsB,KAAKknE,YAAYh7C,EAAI,oBAC/B,CAQAnB,qBAAqBmB,GAClB,OAAOlsB,KAAKmnE,YAAYj7C,EAAI,oBAC/B,CAQAk7C,aAAaniE,GACV,OAAOjF,KAAKknE,YAAYjiE,EAAQ,YACnC,CASAoiE,aAAapiE,GACV,OAAOjF,KAAKmnE,YAAYliE,EAAQ,YACnC,CAQAqiE,cAAc9gD,GACX,OAAOxmB,KAAKknE,YAAY1gD,EAAS,aACpC,CASA+gD,cAAc/gD,GACX,OAAOxmB,KAAKmnE,YAAY3gD,EAAS,aACpC,CAQAghD,YAAYh/C,GACT,OAAOxoB,KAAKknE,YAAY1+C,EAAO,WAClC,CASAi/C,YAAYj/C,GACT,OAAOxoB,KAAKmnE,YAAY3+C,EAAO,WAClC,CAQAk/C,UAAUxnE,GAEP,KAAIA,EAAImN,QAAQrN,KAAKY,KAAO,GAA5B,CAEAV,EAAIoE,KAAKtE,KAAKY,IAGdZ,KAAK2lB,kBAAkB1hB,SAASohB,IAC7BA,EAAEqiD,UAAUxnE,EAAI,IAInBF,KAAKonB,kBAAkBnjB,SAASkjB,IAC7BA,EAAEugD,UAAUxnE,EAAI,IAMnBF,KAAKyjB,kBAAkBxf,SAASmiC,IAC7B,KAAIlmC,EAAImN,QAAQ+4B,IAAQ,GAAxB,CAEA,IAAI3kB,EAAMzhB,KAAK+B,GAAG6hB,eAAewiB,GACjC,GAAI3kB,IACDvhB,EAAIoE,KAAK8hC,GACL3kB,EAAIrb,SAASqiB,cAAc,CAC5B,IAAIxjB,EAASjF,KAAK+B,GAAGgW,WAAW0J,EAAIrb,SAASqiB,cACzCxjB,GACDA,EAAOyiE,UAAUxnE,EAEvB,CAV8B,CAWjC,IAIHF,KAAKsmB,YAAYriB,SAAS6d,IACvBA,EAAE4lD,UAAUxnE,EAAI,IAMnB,IAAIynE,EAAajnE,IACVR,EAAImN,QAAQ3M,EAAKE,KAAO,IAC5BV,EAAIoE,KAAK5D,EAAKE,KACbF,EAAKijB,SAAW,IAAI1f,SAAS2jE,IAC3B,IAAIC,EAAO7nE,KAAK+B,GAAG6hB,eAAegkD,GAC9BC,GACDF,EAAUE,EACb,KAGFnnE,EAAKm2D,SAAW,IAAI5yD,SAAS6jE,IAC3B,IAAIC,EAAO/nE,KAAK+B,GAAG6hB,eAAekkD,GAC9BC,GACDJ,EAAUI,EACb,IACD,GAGS/nE,KAAKgkB,OAAO7V,KAAK2T,GAAMA,EAAElhB,MAC3B,IAAIqD,SAAS2jE,IACtB,IAAIC,EAAO7nE,KAAK+B,GAAG6hB,eAAegkD,GAC9BC,GACDF,EAAUE,EACb,IAIH3nE,EAAMF,KAAK+B,GAAGygB,KAAKtiB,EAnEkB,CAoExC,CASA2jB,QAAQle,GACL,OAAO,IAAI4gE,EAAW5gE,EAAQ3F,KACjC,CASAmF,iBAAiB29D,GAGd,IADiB9iE,KAAKgkB,OAAOlb,QAAQgZ,GAAMA,EAAElhB,IAAMkiE,EAAKliE,KAAI,GAIzD,OAFAZ,KAAKgkB,OAAO1f,KAAKw+D,GAEV9iE,KAAK4H,MAElB,CAQAzC,iBAAiB29D,GACd,IAAI3iC,EAAUngC,KAAKgkB,OAAO7d,OAK1B,GAJAnG,KAAKgkB,OAAShkB,KAAKglB,OAAM,SAAUlD,GAChC,OAAOA,EAAElhB,IAAMkiE,EAAKliE,EACvB,IAEIZ,KAAKgkB,OAAO7d,OAASg6B,EACtB,OAAOngC,KAAK4H,MAIlB,CAEAA,OAMG,OAHI5H,KAAKmH,MAAQnH,KAAKoB,QACnBpB,KAAKmH,KAAOnH,KAAKoB,OAEbtB,MAAM8H,MAChB,CAEAogE,eACGhoE,KAAK82C,UAAY,GAKjB,IAAImxB,EAAS,CACV1kD,UAAW,SACXC,SAAU,QACVC,kBAAmB,kBAGtBtP,OAAOC,KAAK6zD,GAAQhkE,SAASoQ,IAC1BrU,KAAKqU,GAAGpQ,SAASrD,IACJZ,KAAK+B,GAAG6hB,eAAehjB,IAE9BZ,KAAKwP,KACF,UACA,wCAAwCy4D,EAAO5zD,KAC/C,CACGyP,MAAO9jB,KAAKY,GACZA,MAGT,GACD,IAMyB,GAA1BZ,KAAKkjB,WAAW/c,QAAgBnG,KAAKmjB,iBACtCnjB,KAAKwP,KACF,UACA,0DAKN,IAAI04D,EAAWloE,KAAK+B,GAAG6Q,QAAQjC,WAAWxC,KAAKyB,GAAMA,EAAEhP,KACvDZ,KAAKkjB,WAAWjf,SAAS2L,KACM,GAAxBs4D,EAAS76D,QAAQuC,IAClB5P,KAAKwP,KACF,UACA,0BAA0BI,mCAC1B,CAAEmV,KAAMnV,GAEd,GAEN,CAEAu4D,cACG,IAAItxB,EAAW,GAAG/vB,OAAO9mB,KAAK82C,WAc9B,MAbA,CACG,kBACA,kBACA,0BACA,YACA,QACA,SACD7yC,SAASoQ,IACRrU,KAAKqU,KAAKpQ,SAASohB,IAChBwxB,EAAWA,EAAS/vB,OAAOzB,EAAE8iD,cAAc,GAC5C,IAGEtxB,CACV,mBChYH,MAAMtb,EAAY,EAAQ,OAEpB6sC,EAAyB,EAAQ,OAEvC,IAAIroE,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA0B67B,EAOxC57B,YAAYC,EAAKC,EAAQkC,GACtBjC,QAIIF,GAAOA,EAAImC,KACZ/B,KAAK+B,GAAKnC,EAAImC,IAIbA,IACD/B,KAAK+B,GAAKA,GAIRnC,IACEmC,EAAGw3B,KACJ35B,EAAMmC,EAAGw3B,MAET35B,EAAM,CACHiQ,KAAM9N,EAAG0Y,MAAMvP,MAMfnJ,GAAIA,EAQJiI,QAAS,CAAC,EAMV/H,OAAQF,EAAGC,WAAWC,SAMtBomE,OAAQ,KAMRjrD,MAAOrb,EAAGC,WAAWob,MAErBnd,MAAOF,EAMPyS,OAAQ,CACL0O,IAAKnhB,EAAE,OACPuoE,OAAQvoE,EAAE,UACVqW,OAAQrW,EAAE,UACVwoE,KAAMxoE,EAAE,QACRyoE,OAAQzoE,EAAE,UACV0oE,SAAU1oE,EAAE,QACZ2oE,OAAQ3oE,EAAE,UACV4oE,OAAQ5oE,EAAE,UACVwR,GAAIxR,EAAE,MAEN4R,OAAQ5R,EAAE,UACV6H,KAAM7H,EAAE,QAER6oE,IAAK7oE,EAAE,OACP8oE,GAAI9oE,EAAE,MAEN+oE,KAAM/oE,EAAE,QACRgpE,MAAOhpE,EAAE,SAET+oC,QAAS/oC,EAAE,WACXipE,mBAAoBjpE,EAAE,uBAEtBqF,QAASrF,EAAE,WAEXu4C,SAAUv4C,EAAE,YACZK,OAAQL,EAAE,UAEVkpE,eAAgB,CACb3wB,SAAUv4C,EAAE,2BAGfmpE,mBAAoBnpE,EAAE,uCACtBopE,qBAAsBppE,EAAE,0BAExBqpE,mBAAoBrpE,EAAE,uCACtBspE,oBAAqBtpE,EAAE,0BAEvBupE,mBAAoBvpE,EAAE,uCACtBwpE,qBAAsBxpE,EAAE,0BAExBypE,mBAAoBzpE,EAAE,uCACtB0pE,qBAAsB1pE,EAAE,0BAGxB2pE,qBAAsB3pE,EAAE,iBACxB4pE,gCAAiC5pE,EAAE,gBAEnC6pE,eAAgB7pE,EAAE,SAClB8pE,0BAA2B9pE,EAAE,SAE7B+pE,oBAAqB/pE,EAAE,cACvBgqE,+BAAgChqE,EAAE,uBAElCiqE,kBAAmBjqE,EAAE,cAErBkqE,kBAAmBlqE,EAAE,qBASxBK,OAAQ,SAAUiE,GACf,MAAO,GAAGA,IAAMrE,KAAK6P,MACxB,GAEH9N,EAAGw3B,KAAO35B,IAIXA,EAAIyoE,SACDtmE,EAAGsmE,OAILzoE,EAAIyoE,OAAStmE,EAAGsmE,QAHO,IAAID,GACV8B,eAAetqE,IAMtCI,KAAKJ,IAAMA,EAEXI,KAAKH,OAASA,GAAU,UAC3B,CAEAmK,QAAQmgE,GAEL,GADA3hE,QAAQ+G,MAAM,+BACV46D,EACD,IAAK,IAAIv8D,KAAKu8D,EACXnqE,KAAKJ,IAAIoK,QAAQ4D,GAAKu8D,EAASv8D,EAGxC,CAEA3N,QACG,MAAO,IAAI2V,IAED5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,EAE3C,CAEAxV,OAAOiE,GACJ,OAAOrE,KAAKJ,IAAIQ,OAAO,GAAGJ,KAAKH,UAAUwE,IAC5C,oBClLH,MAAMqqB,EAAgB,EAAQ,OACxB07C,EAAuB,EAAQ,MAErC3qE,EAAOC,QAAU,cAA+B0qE,EAC7CzqE,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAClB/B,KAAKyY,gBAAgB,EACxB,CAWAtT,aAQG,OAPKnF,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,YAE7BrH,MAAM8H,OACZ5H,KAAK+B,GAAGyN,KAAK,2BAA4B,CACtC66D,iBAAkBrqE,KAAKY,KAEnBZ,IACV,CAEAuF,UACG,IAAIgC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAC/BxH,EAAIC,KAAK+B,GAAG9B,QAiBhB,OARgB,GALbD,KAAK+B,GAAGqjB,iBAAiBC,GAEnBA,EAAEzkB,IAAMZ,KAAKY,IACbykB,EAAEle,KAAKgR,eAAiBnY,KAAKmH,KAAKgR,gBAErChS,QAEHoB,EAAUgW,SACP,OACAxd,EAAE,6CAA8C,CAACC,KAAKmH,QAIrDI,CACV,CAaAkmB,sBACG,OAAOztB,KAAK+B,GAAG6Q,QAAQhC,UAC1B,CAMAtN,OAEOtD,KAAKwrB,cAGT1rB,MAAMwD,OAKNtD,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAG9C7J,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAO9C7J,KAAK+B,GAAGK,GAAG,2BAA4ByH,IAEpC7J,KAAKwP,KAAK,0BAA2B3F,EAAK,IAG7C7J,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAG9C7J,KAAKsqE,eACR,CAEAA,eAIG,IAAIC,EAAqBvqE,KAAKorB,mBAC1BE,EAAYtrB,KAAKsrB,UACrB,IAAKtrB,KAAKoG,SAAS2iB,SAAWwhD,GAAsBj/C,EAAW,CAC5D,IAAIY,EAAKlsB,KAAKwpB,iBAEd0C,EAAG4G,KAAKy3C,EAAmB/gD,iBAAkB8B,EAAU1qB,IAEvDsrB,EAAGznB,OAAO,YAAY,CAAC9B,EAAOiT,KAE3B,IAAI+b,EAAS3xB,KAAK+B,GAAG2D,UAClB1F,KAAKoG,SAASwiB,gBAAgBC,kBAG7BlmB,IAGIgvB,EAAOxQ,QACTwQ,EAAS,OAGZA,EAAS,CACN7I,KAAM,MACN3H,MAAO,CACJwQ,EACA,CACG7C,MAAOxD,EAAUwD,MACjBzqB,IAAK8P,OAAOC,KAAKwB,GAAQ,GACzBoZ,KAAM1D,EAAUwD,MAAQ,WAAa,SACrCnsB,MAAO2oB,EAAUksB,iBACd+yB,EAAmB/gD,iBAAiBwC,QAAQrpB,QAOjDwe,MAAQwQ,EAAOxQ,MAAMrY,QAAQ8G,GAAMA,KAK1CiE,KAAKC,UAAU9T,KAAKqvB,iBAAmBxb,KAAKC,UAAU6d,IACrDA,EAAOxQ,OAAgC,GAAvBwQ,EAAOxQ,MAAMhb,SAM9BnG,KAAK0yB,aAAaf,GAElB3xB,KAAK0vB,WAAW,EAAG,IACtB,GAEN,CACH,CAEA8B,SAASC,EAAOC,EAAQ,IACrB,OAAO5xB,MAAM0xB,SAASC,EAAOC,GAAOjd,OAAOtM,IAKxC,GAHAnI,KAAKwqE,2BAGDriE,EACD,MAAMA,CACT,GAEN,CAcA+pB,oBAAoBroB,GAkDjB,OA9CIA,EAAKA,OAASsD,MAAMC,QAAQvD,EAAKA,QAClCA,EAAKA,KAAO,CAACA,EAAKA,OA6Cd/J,MAAMoyB,oBAAoBroB,GAAM2K,MAAK,KAGzCxU,KAAKwqE,0BAA0B,GAErC,CAYAC,iBAAiBtqE,GACLH,KAAKwpB,iBAGVxpB,KAAK4pB,mBAAmBvc,QAAQlN,EAAU8B,OAAOrB,KAAO,GAIzDZ,KAAK4pB,mBAAmBtlB,KAAKnE,EAAU8B,OAAOrB,GAEpD,CAQAkyB,KAAK3yB,GACF,IAAI+rB,EAAKlsB,KAAKwpB,iBAIXxpB,KAAK2pB,mBAAmBtc,QAAQlN,EAAU8B,OAAOrB,KAAO,GACxD+C,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,MACxBlG,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,KAAKwiB,MAC7B1oB,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,KAAKwiB,KAAK,CAAC,GAAGlmB,OAAS,IAI7CnG,KAAK2pB,mBAAmBrlB,KAAKnE,EAAU8B,OAAOrB,IAGvB,aAAzBT,EAAU8B,OAAOvB,MACQ,YAAzBP,EAAU8B,OAAOvB,MACQ,aAAzBP,EAAU8B,OAAOvB,MACQ,UAAzBP,EAAU8B,OAAOvB,KAEbwrB,GAGW,GAFAA,EAAGuE,SAGXzwB,KAAK6pB,aAAe7pB,KAAK8pB,eAAeC,YACtC/pB,KAAK6pB,aAAe7pB,KAAK8pB,eAAeyB,eAC3CprB,EAAUkF,cAEVlF,EAAUkF,aAAa,CAAEzD,KAAM,SAGlCzB,EAAUsE,OAAO,YAAa,IAC9BtE,EAAUsE,OAAO,eAAgB,KAGJ,aAAzBtE,EAAU8B,OAAOvB,KAEfV,KAAKirB,YACLjrB,KAAKirB,WAAWxG,SAChBzkB,KAAKsqB,kBAELnqB,EAAUsE,OAAO,OAAQzE,KAAKsqB,kBAC9BnqB,EAAUuE,YAIVvE,EAAUsE,OAAO,OAAQ,IACzBtE,EAAUoX,MAAM2U,EAAGG,KAAK,CAAC,KAG5BlsB,EAAU0J,KAAK6gE,KAAKx+C,GAIlBlsB,KAAKoG,SAAS2iB,UAChB5oB,EAAU6tB,MAAQ7tB,EAAU6tB,OAAS,CAAC,EAEjC7tB,EAAU6tB,MAAM28C,qBAClBxqE,EAAU6tB,MAAM28C,mBAAqBxqE,EAAU+tB,YAC5C,iBACA,CAACuD,EAAOhB,KACDtwB,EAAUkF,cACXlF,EAAUkF,aAAa,CAAEzD,KAAM,SAGlCsqB,EAAG0+C,SAASn6C,EAAOgB,IAEZ,QAsBnBtxB,EAAU0J,KAAKghE,SAEV1qE,EAAU2yB,OACd5G,EAED/rB,EAAU2yB,KAAK5G,GAEf/rB,EAAU4yB,SAGT5yB,EAAUuE,SAASvE,EAAUuE,WAEvC,CAEAquB,OAAO5yB,GACCA,IAELA,EAAU2qE,YAAY,iBAClB3qE,EAAU6tB,QACP7tB,EAAU6tB,MAAM28C,2BACVxqE,EAAU6tB,MAAM28C,mBAEtBxqE,EAAU6tB,MAAM+8C,eACb/qE,KAAKgrE,KAAKhrE,KAAKgrE,IAAI,WAAY7qE,EAAU6tB,MAAM+8C,qBAC5C5qE,EAAU6tB,MAAM+8C,eAIzB5qE,EAAU0J,MAAQ1J,EAAU0J,KAAKghE,SAClC1qE,EAAU0J,KAAKghE,SACf1qE,EAAUsE,OAAO,OAAQ,KAGxBtE,EAAU4yB,QAAQ5yB,EAAU4yB,SAE5B5yB,EAAUuE,SAASvE,EAAUuE,UAGjC1E,KAAK2pB,oBAAsB3pB,KAAK2pB,oBAAsB,IAAI7gB,QACtDlI,GAAOA,GAAMT,EAAU8B,OAAOrB,KAErC,CAEA4pE,2BACGxqE,KAAK2pB,mBAAmB1lB,SAASgvB,IAC1BtvB,GAAGsvB,IAAUtvB,GAAGsvB,GAAOtrB,cAAchE,GAAGsvB,GAAOtrB,cAAc,GAEvE,CAYA8hB,mBAAmB5f,GAEhB,IAAIqiB,EAAK,IAAIzoB,MAAMwnE,eAAe,CAC/BphE,KAAMA,GAAQ,KAKjB,OAFA7J,KAAKkrE,kBAAkBh/C,GAEhBA,CACV,CASA3B,qBAEG,IAAI4gD,EAAY,IAAI1nE,MAAM2nE,eAI1B,OAFAprE,KAAKkrE,kBAAkBC,GAEhBA,CACV,CAEAD,kBAAkBG,GAGf5nE,MAAMC,OAAO2nE,EAAW5nE,MAAM6nE,gBAE9BD,EAAUr9C,MAAQq9C,EAAUr9C,OAAS,CAAC,EAGjChuB,KAAKoG,SAAS2iB,UACXsiD,EAAUr9C,MAAM28C,qBAClBU,EAAUr9C,MAAM28C,mBAAqBU,EAAUn9C,YAC5C,iBACA,CAACuD,EAAOhB,KACDgB,EAAQ,IAAGA,EAAQ,GAGvBzxB,KAAKwxB,SAASC,EAAOhB,IAEd,MAKX46C,EAAUr9C,MAAMu9C,mBAClBF,EAAUr9C,MAAMu9C,iBAAmBF,EAAUn9C,YAC1C,eACA,KACGluB,KAAKwP,KAAK,WAAY,CAAC,EAAE,MAOrC67D,EAAUG,OAAS,WAAa,EAChCH,EAAUI,UAAY,WAAa,EACnCJ,EAAUK,OAAS,WAAa,EAE3BL,EAAUr9C,MAAM29C,cAClBN,EAAUr9C,MAAM29C,YAAcN,EAAUn9C,YACrC,eACA,KACGluB,KAAKwqE,0BAA0B,IAI3C,CAEA76C,oBAAoB9lB,EAAO,CAAC,GACzB,KACK7J,KAAKoqB,wBAAwBsE,GAC9B1uB,KAAKoqB,aAAa3F,SAClBzkB,KAAKsqB,kBAEN,OAEH,IAAIshD,EAAe,CAACt9D,EAAO,CAAC,EAAGu9D,EAAc,QAC1C,IAAI/8C,EAAQxgB,EAAKwgB,OAEhBjlB,EAAKA,MAAQ,IAAI5F,SAASib,IACxB,IAAI4sD,EAAS5sD,EAAI,GAAG4P,WAAiB5P,EAAI,GAAG4P,QAC5C,IAAKg9C,EAAQ,OAGb,IAAIC,EAAgB,GAChBC,EACD9sD,EAAI,GAAG2sD,WAAuB3sD,EAAI,GAAG2sD,QAmBxC,GAlBIG,IACDD,EAAgB/rE,KAAKsqB,iBACjB+B,MACGje,GACEA,EAAK69D,QAAUJ,GAAez9D,EAAK89D,SAAWF,IAEnD79D,KAAKC,GAASA,EAAKxN,MAIbZ,KAAKsqB,iBAAiB+B,MAAMje,GAEnCA,EAAK69D,QAAUn9C,GACf1gB,EAAK89D,SAAWJ,IACS,GAAxBC,EAAc5lE,QACZ4lE,EAAc1+D,QAAQe,EAAKme,UAAY,KAE7C,GACS,OAEZ,IAAI4/C,EAAW,CAAC,EAChBA,EAASF,OAASn9C,EAClBq9C,EAASD,QAAUJ,EACnBK,EAASlgD,QAAU/M,EAAIte,GAEvBuT,OAAOC,KAAK8K,GAAKjb,SAASszC,IAEc,GAAjCA,EAASlqC,QAAQ,GAAGyhB,QACrBq9C,EAAS50B,GAAYr4B,EAAIq4B,GAC5B,IAGCr4B,EAAIwF,eAAcynD,EAASznD,aAAexF,EAAIwF,cAG9CqnD,EAAc5lE,OAAS,EACxB4lE,EAAc9nE,SAASmoE,IACpBpsE,KAAKsqB,iBAAiBpJ,IAAIirD,EAAU,KAAMC,EAAa,IAGxDpsE,KAAKsqB,iBAAiBpJ,IAAIirD,EAAU,KAAK,KAIhD79D,EAAK+1B,OAAS,IAAIpgC,SAAS0gC,IACzBinC,EAAajnC,EAAM7V,EAAM,GAC1B,GAIJ9uB,KAAK2pB,oBAAsB,IAAI1lB,SAASgvB,IAEtC,IAAIo5C,EAAY1oE,GAAGsvB,GACfo5C,GAAaA,EAAUhnE,cACxBgnE,EAAUhnE,aAAa,CAAEzD,KAAM,SAE9ByqE,EAAUxiE,MAAQwiE,EAAUxiE,KAAKghE,QAAQwB,EAAUxiE,KAAKghE,QAAQ,IAGvEe,EAAa5rE,KAAKoqB,aAAa6Y,UAG9BjjC,KAAK2pB,oBAAsB,IAAI1lB,SAASgvB,IACtC,IAAIo5C,EAAY1oE,GAAGsvB,GACfo5C,GAAaA,EAAU1kE,cAAc0kE,EAAU1kE,eACnD0kE,EAAU5nE,OAAO,OAAQzE,KAAKsqB,iBAAiB,GAErD,CAEA69C,cAEG,MAAMmE,EAAc,GAAGxlD,OAAO9mB,KAAK82C,WAiBnC,OAfK92C,KAAKirB,WAKCjrB,KAAK0oB,sBACE1oB,KAAK+B,GAAGwqE,mBAAmBvsE,KAAK0oB,uBAG5C4jD,EAAYhoE,KAAK,CACdgN,QAAS,kBAAkBtR,KAAKoB,UAAUpB,KAAKY,0CAA0CZ,KAAK0oB,wBAC9F7e,KAAM,CAAC,IAVbyiE,EAAYhoE,KAAK,CACdgN,QAAS,kBAAkBtR,KAAKoB,UAAUpB,KAAKY,iCAC/CiJ,KAAM,CAAC,IAYNyiE,CACV,CAEAtE,eAGA,CAEIx0C,iBACD,OAAOxzB,KAAK+B,GAAG6Q,QAAQzD,QAC1B,oBCxmBH,IAAIq9D,EAAmB,EAAQ,OAE/B/sE,EAAOC,QAAU,cAA2B8sE,qBCK5C,IAAIj+D,EAAe,sBAEnB9O,EAAOC,QAAU,cAAwB6O,EACtC5O,cACGG,OACH,mBCZH,MAAM2sE,EAAc,EAAQ,OAE5BhtE,EAAOC,QAAU,cAAsB+sE,EAUpC7kE,OACG,OAAO9H,MACH8H,OACA4M,MAAK,IAAMxU,KAAKiF,OAAOi8B,UAAUlhC,QACjCwU,MAAK,IAAMxU,KAAKkI,iBACvB,CAQA0M,UACG,OAAO,IAAInF,SAAQ,CAACC,EAASiH,KACtB3W,KAAKY,GACNZ,KAAK0sE,cACDl4D,MAAK,IACI1U,MAAM8U,YAEfJ,MAAK,IAAMxU,KAAKiF,OAAO+7B,YAAYhhC,QACnCwU,KAAK9E,GACL+E,MAAMkC,GAEVjH,GACH,GAEN,CAMAxH,gBACG,OAAOlI,KAAK+B,GAAGsN,QAAQgB,KAAK,CACzBC,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAGtE,CAEA8rE,cACG,OAAO1sE,KAAK+B,GAAGsN,QAAgB,OAAE,CAC9BiB,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,oBC9CH,IAAI+rE,EAAgB,EAAQ,OAE5BltE,EAAOC,QAAU,cAAwBitE,EACtChtE,YAAY67B,EAAWz5B,GACpBjC,MAAM07B,EAAWz5B,GAEjB/B,KAAK82C,UAAY,GAIjB92C,KAAKoC,GAAG,WAAW,CAACkP,EAASzH,KAC1B7J,KAAK82C,UAAUxyC,KAAK,CAAEgN,UAASzH,QAAO,GAE5C,CAMAgtC,WACG,OAAO72C,KAAK82C,SACf,CAEAkxB,eACGhoE,KAAK82C,UAAY,GAYjB92C,KAAKiG,WAAWjG,KAAK8F,QACxB,CAEAqiE,cAIG,OAAOnoE,KAAK62C,UACf,CAOAhb,kBACG,OAAO77B,KAAK+B,GAAG6Q,QAAQ1C,YAAc,IACxC,CAOA/K,gBACG,IAAIsc,EAAMzhB,KAAK6U,eACf,OAAI4M,EAAI7gB,GACE6gB,EAAI7M,UAAUH,OAAOtM,IACzB,GAAIA,EAAIuM,WAAWrH,QAAQ,oBAAsB,EAM9C,OAJA7E,QAAQ2O,IACL,qDAAqDsK,EAAI7gB,YAE5D4H,QAAQ2O,IAAIsK,GAGf,MAAMtZ,CAAG,IAGRsH,QAAQC,SAClB,CAOAvK,aACG,IAAIsc,EAAMzhB,KAAK6U,eAEf4M,EAAIta,KAAOsa,EAAIta,MAAQnH,KAAKmH,MAAQnH,KAAKoB,OAAS,OAClD,IAAIyI,QAAa4X,EAAI7Z,OAChB5H,KAAKY,KACPZ,KAAKY,GAAKiJ,EAAKjJ,GAErB,oBCrGH,MAAMgsE,EAAc,EAAQ,OAuB5B,SAASC,EAAWt9D,GAEbA,GAASA,EAAM1F,MAA4B,YAApB0F,EAAM1F,KAAK0F,OACnC9L,MAAM0N,MAAM,CACTC,MAAO,yBACPG,GAAI,KACJlD,KAAMkB,EAAM1F,KAAKyH,SAAW,GAC5B1P,KAAM,iBAGf,CA0BAnC,EAAOC,QAAU,cAAsBktE,EACpCjtE,YAAYsF,GACTnF,MAAMmF,GAENjF,KAAK8sE,eAAiB,IAAIl3D,KACvB5V,KAAK+sE,eAAe,8BAA+Bn3D,EAAO,EAG7D5V,KAAKgtE,eAAiB,IAAIp3D,KACvB5V,KAAK+sE,eAAe,8BAA+Bn3D,EAAO,EAG7D5V,KAAKitE,gBAAkB,IAAIr3D,KACxB5V,KAAK+sE,eAAe,QAASn3D,EAAO,EAGvC5V,KAAKktE,aAAe,CAAC59D,EAASnH,EAAK0B,KAC5B1B,EACDmH,EAAQqH,SAASxO,GAGpBmH,EAAQI,UAAU7F,EAAK,EAG1B7J,KAAKmtE,eAAiB,IAAIv3D,KACvB5V,KAAK+sE,eAAe,8BAA+Bn3D,EAAO,EAG7D5V,KAAK+sE,eAAiB,CAAC1oE,EAAKiL,EAASnH,EAAK0B,KAQnC1B,EACDmH,EAAQqH,SAASxO,IAGhB9D,GAE6B,GAA1BA,EAAIgJ,QAAQ,WACbrN,KAAKiY,cAAcpO,GAItB7J,KAAKiY,cAAcpO,EAAKA,MAG3ByF,EAAQI,UAAU7F,GAEdxF,GA/Db,SAA2B2D,EAAO3D,EAAKwF,GAGL,UAA3B7B,EAAMjG,GAAGsN,QAAQzN,QAClBoG,EAAMjG,GAAGyN,KAAKnL,EAAK,CAChB2T,SAAUhQ,EAAM/C,OAAOrE,GACvBiJ,QAGT,CAuDYujE,CAAkBptE,KAAMqE,EAAKwF,GAChC,CAEN,CAeAkzB,wBAAwBp3B,GAErB,IAAI81B,EAAWz7B,KAAKiF,OAAO+3B,qBAEvBC,GAAkB,EAClBxB,EAASt1B,QACVs1B,EAASx3B,SAAQ,SAAU2B,GACH,MAAjBD,EAAOC,KACRq3B,GAAkB,EAExB,IAECA,IAEyB,MAAvBt3B,EAAO+e,mBACuB,IAAvB/e,EAAO+e,cACS,IAAvB/e,EAAO+e,eAEP/e,EAAO+e,aAAe,IAEzB1kB,KAAKiF,OAAO62B,YAAYn2B,EAAQA,EAAQ81B,GAE9C,CAEArjB,QAAQpB,EAAQpB,GACb,OAAO5V,KAAK+B,GAAGsN,QAAQ2H,GAAQpB,EAClC,CAMAy3D,YAAY1nE,GAKT,OAJAA,EAAO6oC,MAAMrgC,KAAK1I,GACRzF,KAAK+8B,wBAAwBt3B,EAAKoE,QAGrC,IAAI4F,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQi+D,KAAKrrD,GAAO,CAAC3S,EAASnH,EAAK0B,KACpC1B,EACDwO,EAAOxO,IAGVnI,KAAKiY,cAAcpO,GACnB6F,EAAQ7F,GAAK,IAMhB7J,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAKtQ,KAAKiF,OAAOk8B,eACjBvrB,OAAQjQ,GAEX,CACGtB,IAAK4d,EACL3S,QAAS,CAAC,IAYZmF,MAAMkC,EAAO,GAEvB,CAMA2xD,OAAO3iE,GAUJ,OATA3F,KAAK+8B,wBAAwBp3B,GAG7B3F,KAAKiF,OAAO8B,SAAS9C,SAAS+C,SACEkjB,IAAzBvkB,EAAOqB,EAAEF,aACVE,EAAE+6B,aAAap8B,EAClB,IAGI,IAAI8J,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQi+D,KAAKrrD,EAAOjiB,KAAK8sE,gBACjC9sE,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAKtQ,KAAKiF,OAAOk4B,UACjBvnB,OAAQjQ,GAEX,CACGtB,IAAK4d,EACL3S,QAAS,CAAEI,UAASiH,YAExBlC,OAAOtM,IACN0kE,EAAW1kE,GACXwO,EAAOxO,EAAI,GACZ,GAER,CAQAiO,OAAOxV,GACJ,OAAO,IAAI6O,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQi+D,KAAKrrD,EAAOjiB,KAAKgtE,gBACjChtE,KAAK+B,GAAGsN,QAAgB,OACrB,CACGiB,IAAKtQ,KAAKiF,OAAOo4B,YAAYz8B,IAEhC,CACGyD,IAAK4d,EACL3S,QAAS,CAAEI,UAASiH,YAExBlC,OAAOtM,IACN0kE,EAAW1kE,GACXwO,EAAOxO,EAAI,GACZ,GAER,CAMAhD,cAAc4oB,GAqBX,OApBAA,EAAOA,GAAQ,CAAC,EAoBT,IAAIte,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQi+D,KAAKrrD,EAAOjiB,KAAKitE,iBACjCjtE,KAAK+B,GAAGsN,QAAQsG,IACb,CACGrF,IAAKtQ,KAAKiF,OAAOk4B,UACjBvnB,OAAQmY,GAGX,CACG1pB,IAAK4d,EACL3S,QAAS,CAAEI,UAASiH,YAQtBlC,OAAOtM,IACDA,GAAOA,EAAIsO,OAEJ,mBADAtO,EAAIsO,KAENzW,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,oEACH43B,UAAWnb,IAKd/tB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,sEACH43B,UAAWnb,KAKvBpX,EAAOxO,EAAI,GACZ,GAEX,CAOAolE,SAASC,GAEFxtE,KAAKu8B,SACNixC,EAAG/oE,OAAO,YAAazE,KAAKu8B,QAC5BixC,EAAG/oE,OAAO,eAAgB,KAQ1B+oE,EAAGx/C,MAAQw/C,EAAGx/C,OAAS,CAAC,EACpBw/C,EAAGx/C,MAAM28C,oBACV6C,EAAG1C,YAAY0C,EAAGx/C,MAAM28C,oBAE3B6C,EAAGx/C,MAAM28C,mBAAqB6C,EAAGt/C,YAC9B,iBACA,CAACuD,EAAOhB,KACL,IAAI1C,EAAO,CACRa,MAAO5uB,KAAKo8B,OACZzuB,KAAM3N,KAAKq8B,MACX3K,MAAOjB,EACPmB,KAAMH,GA2BT,OAxBI+7C,EAAGnoE,cAAcmoE,EAAGnoE,aAAa,CAAEzD,KAAM,SAE7C5B,KAAKivB,QAAQlB,GAAMvZ,MAAM3K,IAiBtB2jE,EAAGj2D,MAAM1N,GAEL2jE,EAAG7lE,cAAc6lE,EAAG7lE,cAAc,KAGlC,CAAK,IAIlB6lE,EAAG9oE,WAIN,IAAIqpB,EAAO,CAAC,EACR/tB,KAAKo8B,SAAQrO,EAAKa,MAAQ5uB,KAAKo8B,QAC/Bp8B,KAAKq8B,QAAOtO,EAAKpgB,KAAO3N,KAAKq8B,OACd,MAAfr8B,KAAKu8B,SAAgBxO,EAAK2D,MAAQ1xB,KAAKu8B,QACzB,MAAdv8B,KAAKs8B,QAAevO,EAAK6D,KAAO5xB,KAAKs8B,OAErCkxC,EAAGnoE,cAAcmoE,EAAGnoE,aAAa,CAAEzD,KAAM,SAE7C5B,KAAKivB,QAAQlB,GACTvZ,MAAM3K,IAgBJ2jE,EAAGj2D,MAAM1N,GAEL2jE,EAAG7lE,cAAc6lE,EAAG7lE,cAAc,IAExC8M,OAAOtM,IACLK,QAAQ+G,MAAM,QAASpH,EAAI,GAEpC,CAgBAslE,KAAKtrE,GACF,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQi+D,KAAKrrD,EAAOjiB,KAAKktE,cACjCltE,KAAK+B,GAAGsN,QAAQsG,IACb,CACGrF,IAAKtQ,KAAKiF,OAAOm8B,aACjBxrB,OAAQzT,GAGX,CACGkC,IAAK4d,EACL3S,QAAS,CAAEI,UAASiH,YAExBlC,OAAOtM,IACFA,GAAOA,EAAIsO,MACZzW,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,mCACTnN,YAGNwU,EAAOxO,EAAI,GACZ,GAER,CAQAupB,MAAMA,GAEH,OADA1xB,KAAKu8B,OAAS7K,EACP1xB,IACV,CAQA4xB,KAAKA,GAEF,OADA5xB,KAAKs8B,MAAQ1K,EACN5xB,IACV,CAMA0tE,OAAO9sE,EAAI+E,GAIR,IAAK,IAAItB,KAHTrE,KAAK+8B,wBAAwBp3B,GAGbA,EACM,MAAfA,EAAOtB,WAAqBsB,EAAOtB,GAG1C,OAAO,IAAIoL,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQi+D,KAAKrrD,EAAOjiB,KAAKmtE,gBACjCntE,KAAK+B,GAAGsN,QAAQ8G,IACb,CACG7F,IAAKtQ,KAAKiF,OAAOo4B,YAAYz8B,GAC7BgV,OAAQjQ,GAEX,CAAEtB,IAAK4d,EAAO3S,QAAS,CAAEI,UAASiH,YAgBjClC,OAAOtM,IACL0kE,EAAW1kE,GACXwO,EAAOxO,EAAI,GACZ,GAEX,CAMAwlE,aAAY,OAAEC,EAAM,OAAEjoE,IACnB,OAAO,IAAI8J,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQi+D,KAAKrrD,GAAO,CAAC3S,EAASnH,KAC/BA,EACDwO,EAAOxO,GAIVuH,GAAQ,EAAK,IAGhB1P,KAAK+B,GAAGsN,QAAQ8G,IACb,CACG7F,IAAKtQ,KAAKiF,OAAOk8B,eACjBvrB,OAAQ,CACLg4D,SACAjoE,WAGN,CAAEtB,IAAK4d,EAAO3S,QAAS,CAAC,IAKvBmF,MAAMkC,EAAO,GAEvB,oBC/iBH,MAAMioB,EAAU,EAAQ,OAExBn/B,EAAOC,QAAU,cAA2Bk/B,EASzCyuC,YAAY1nE,GACT,IAAI4J,EAAQ,IAAIjH,MACb,kEAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,CAMA+4D,OAAO3iE,GACJ,IAAI4J,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,CAQA6G,OAAOxV,GACJ,IAAI2O,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,CAMAm+D,OAAO9sE,EAAI+E,GACR,IAAI4J,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,CAMAo+D,aAAY,OAAEC,EAAM,OAAEjoE,IACnB,IAAI4J,EAAQ,IAAIjH,MACb,kEAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,oBCnEH,MAAMsvB,EAAe,EAAQ,OACvBgvC,EAAkC,EAAQ,OAEhD,IAAI9tE,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAmBhDnW,EAAOC,QAAU,cAAuBm/B,EACrCl/B,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAElB/B,KAAKuhC,eAAiB,IAAIssC,EACvB7qD,EACAhjB,KACA+B,GAIH/B,KAAK+G,SAAS9C,SAAS+C,IACpBA,EAAE5E,GAAG,sBAAuBwD,IAEzB,IAAI6b,EAAMzhB,KAAK+B,GAAG6hB,eAAehe,EAAMhF,IACvC,GAAK6gB,EAAL,CAEA,IAAIsW,EAAW/3B,KAAK+B,GAAGmE,SAASub,EAAKzhB,MAGjC0jC,EAAY,GAChB1jC,KAAK+G,SAAS9C,SAAS+C,IAChBA,EAAEpG,KAAOgF,EAAMhF,GAInB8iC,EAAUp/B,KAAK0C,GAHZ08B,EAAUp/B,KAAKyzB,EAGD,IAGpB/3B,KAAK0/B,QAAUgE,CAdC,CAcQ,GACzB,IAQL1jC,KAAKyf,wBAA0B,CAAC,EAMhCzf,KAAK8tE,wBAA0B,CAACx+D,EAASnH,EAAKqP,KAE3C,IAAImI,EAAU3f,KAAKyf,0BAA0BnQ,EAAQO,MACjD1H,EACDwX,GAAShJ,OAAOxO,GAGnBwX,GAASjQ,QAAQ8H,EAAS,EAE7BxX,KAAK+B,GAAGsN,QAAQjN,GAAG,iBAAkBpC,KAAK8tE,wBAC7C,CASAnH,kBACG,IAAIG,EAAS9mE,KAAK+B,GAAGgW,WAAW/X,KAAKY,IAerC,OAZIZ,KAAKyf,0BAENzf,KAAK+B,GAAGsN,QAAQylB,eACb,iBACA90B,KAAK8tE,yBAIRhH,EAAOrnD,wBAA0Bzf,KAAKyf,wBACtCzf,KAAKyf,wBAA0B,MAG3BqnD,CACV,CASA7gE,WAAW+c,GAoBRljB,MAAMmG,WAAW+c,GAEbhjB,KAAKuhC,gBAAgBvhC,KAAKuhC,eAAewsC,QAAQ/qD,EACxD,CAIAzd,UACG,IAAIgC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAwBnC,OAfgB,GALbvH,KAAK+B,GAAG2jB,SAASL,GAEXA,EAAEzkB,IAAMZ,KAAKY,IACbykB,EAAEle,KAAKgR,eAAiBnY,KAAKmH,KAAKgR,gBAErChS,QAEHoB,EAAUgW,SACP,OACAxd,EAAE,oDAAqD,CAACC,KAAKmH,QAW5DI,CACV,CASA6nB,YAAYvlB,GACT,IAAItC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAMnC,OALAvH,KAAK+G,SAAS9C,SAAS+C,IAEhB6C,EAAKmkE,eAAehnE,EAAEF,aAAaE,EAAEooB,YAAYvlB,EAAMtC,EAAU,IAGjEA,CACV,CAmCApC,gBAuFG,IASG,QA/B0B,MAC1B,IAAI0lB,EAAa,GAIjB,OAHA7qB,KAAK+B,GAAG4oB,eAAe1mB,SAAS6mB,IAC7BD,EAAWvmB,KAAKwmB,EAAIu8C,aAAarnE,MAAM,IAEnCyP,QAAQ4R,IAAIwJ,EAAW,EAmBxBJ,QAhBmB,KAClB,IAAIhb,SAASib,IACjB1qB,KAAK+B,GAAGmlB,SACJC,GAAMA,EAAEzB,SAASL,GAAMA,EAAEzkB,IAAMZ,KAAKY,KAAIuF,OAAS,IACnDlC,SAASkjB,IAGRA,EAAEge,UAAW,CAAI,IAGpBza,GAAM,IASHujD,GAIFjuE,KAAK4I,WACN,OAAO6G,QAAQC,gBAOZ1P,KAAK0sE,cAKX,IAAIwB,EAAa,GAIjB,GAAiB,UAAbluE,KAAK4B,KAAkB,CACxB,IAAIkC,EAAY9D,KAAK+G,SACrB/G,KAAK0/B,QAAU,GAGf57B,EAAUG,SAAS+C,IAChBknE,EAAW5pE,KAAK0C,EAAE4N,UAAU,GAElC,OACMnF,QAAQ4R,IAAI6sD,SAEZpuE,MAAM8U,UACZ5U,KAAKwP,KAAK,YAKb,CAJE,MAAOrH,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,gDAEf,CAmDH,CAWAnK,aACG,IAAIgpE,GAAQ,EAGPnuE,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,KAChCgnE,GAAQ,GAGX,IAKG,aAJMruE,MAAM8H,OACRumE,SACKnuE,KAAKkI,gBAEPlI,IAOV,CANE,MAAOmI,GAKN,MAJAnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kBACTwI,IAAK9X,KAAK8F,UAEPqC,CACT,CACH,CAaArC,QACG,IAAIgI,EAAShO,MAAMgG,QAInB,OAFAgI,EAAOs1B,qBAAuBpjC,KAAKuhC,eAAez7B,QAE3CgI,CACV,CAMA5F,gBACG,OAAO,IAAIuH,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK+B,GAAG8N,OACnB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,iBACLiL,QAAS,CAAEO,OAAMjP,GAAIZ,KAAKY,KAE7BZ,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAK,8BAA8BtQ,KAAKY,MAE3CiV,EACF,GAEP,CAEA62D,cACG,OAAO,IAAIj9D,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK+B,GAAG8N,OACnB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,iBACLiL,QAAS,CAAEO,OAAMjP,GAAIZ,KAAKY,KAE7BZ,KAAK+B,GAAGsN,QAAgB,OACrB,CACGiB,IAAK,8BAA8BtQ,KAAKY,MAE3CiV,EACF,GAEP,CAgBAu4D,aAAatnE,EAAYunE,GAEtB,IADA,IAAIx0C,EAAU,KACLxmB,EAAI,EAAGA,EAAIrT,KAAK0/B,QAAQv5B,OAAQkN,IACtC,GAAIrT,KAAK0/B,QAAQrsB,GAAGvM,YAAcA,EAAY,CAC3C+yB,EAAU75B,KAAK0/B,QAAQrsB,GAAGzS,GAC1B,KAEH,CASH,IAAI6iC,EAAgBzjC,KAAK+B,GAAGmgB,cAAc2X,GAI1C,OAHA4J,EAAgBA,GAAiB,CAAC,GACpBziC,MAAQqtE,EAEfruE,KAAK+B,GAAGmgB,cAAc2X,EAAS4J,EAEzC,CAIA6qC,cACGC,EACA9O,EACAK,EACAC,EACAyO,GAEA1O,EAAiBA,GAAkB,GACnCC,EAAeA,GAAgB,GAE/B,IAAInpD,EAAU,GA6Ed,OAzEA5W,KAAK+G,SAAS9C,SAAS+C,IACpB,IAAIynE,EAASznE,EAAE0nE,aAAa,CACzBH,kBAAmBA,EACnB1pB,SAAU4a,IAGTA,IACDgP,EAAOE,gBAAkB3nE,EAAEZ,SAASuoE,iBAGvCF,EAAO3/C,MAAQ9nB,EAAE8nB,YAAS5E,EAC1BukD,EAAO50C,QAAU7yB,EAAEpG,GAIK,GAApBoG,EAAEZ,SAASpF,QACZytE,EAAOztE,MAAQgG,EAAEZ,SAASpF,OAI7B,IAAIyiC,EAAgBzjC,KAAK+B,GAAGmgB,cAAclb,EAAEpG,IACxC6iC,GAAiBA,EAAcziC,SAC3BytE,EAAOztE,OAASyiC,EAAcziC,MAAQytE,EAAOztE,SAE/CytE,EAAOztE,MAAQyiC,EAAcziC,OAI9BytE,EAAOztE,QAETytE,EAAOG,QAAS,GAIf9O,EAAezyD,QAAQrG,EAAEpG,KAAO,EACpB,aAAToG,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAC3BoqE,EAAOI,OAAS,CAAEC,QAAS,cAAelpE,MAAOoB,GAEjDynE,EAAOI,OAAS,CAAEC,QAAS,cAIxB/O,EAAa1yD,QAAQrG,EAAEpG,KAAO,IACpC6tE,EAAOI,OAAS,CAAEC,QAAS,gBAE9Bl4D,EAAQtS,KAAKmqE,EAAO,IA4BhB73D,CACV,CAMAm4D,eAAellE,EAAMjK,EAAKovE,EAAWpB,EAAQnO,GAC1C,IAAK51D,IAASA,EAAKkjB,WAAY,OAG/B,IAAIhmB,EAAS,GAMb,GALAioE,EAAUC,YAAYnoE,IACnB,IAAIlB,EAAQ5F,KAAK+G,QAAQC,GAAMA,EAAEF,YAAcA,IAAY,GACvDlB,GAAOmB,EAAOzC,KAAKsB,EAAM,IAGlB,MAAVgoE,EACDA,EAAO3pE,SAASrD,IACb,IAAIse,EAAMrV,EAAKmiB,QAAQprB,GACnBse,GACDnY,EAAO9C,SAAS+C,IACb,IAAIzE,EAAOysE,EAAUE,YAAY,CAC9BhwD,IAAKA,EAAIte,GACTuuE,OAAQnoE,EAAEF,aAEbE,EAAEooE,cAAclwD,EAAKtf,EAAK2C,EAAM,CAC7BsiD,SAAU4a,GACX,GAER,QAEC,CACJ,IAAI7+D,EAAKiJ,EAAKkjB,aACd,KAAOnsB,GAAI,CACR,IAAIse,EAAMrV,EAAKmiB,QAAQprB,GACnBse,GACDnY,EAAO9C,SAAS+C,IACb,IAAIzE,EAAOysE,EAAUE,YAAY,CAC9BhwD,IAAKA,EAAIte,GACTuuE,OAAQnoE,EAAEF,aAEbE,EAAEooE,cAAclwD,EAAKtf,EAAK2C,EAAM,CAC7BsiD,SAAU4a,GACX,IAGR7+D,EAAKiJ,EAAKqjB,UAAUtsB,EACvB,CACH,CACH,CAGAwhC,YAAY9U,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAImO,EAAWz7B,KAAKg9B,qBACpBh9B,KAAK07B,UAAUpO,EAASA,EAASmO,GAEjC,IAAI4G,EAAYriC,KAAK++B,aAAe,GAGpC,IAAKsD,GAAariC,KAAK+G,SAASZ,OAAS,EAAG,CACzC,IAAIm8B,EAAetiC,KAAK+G,QAAQC,GAAMA,EAAEu7B,oBAAmB,GACzCF,EAAdC,EAA0B,IAAIA,EAAa1hC,MAEhC,GAAGZ,KAAK+B,GAAGogB,OAAOmL,EAAQ1sB,IAAM,OAAS,KAClD0sB,EAAQ1sB,IAEjB,CAIA,IAAI8hC,EAASL,EAAUM,MAAM,cAc7B,GAZID,GAAUA,EAAOz+B,SAClBy+B,EAAOz+B,SAAS2+B,IACb,IAAIC,EAAiBD,EAAM5vB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDpN,EAAQ5F,KAAK+N,UAAU80B,GACd,MAATj9B,IAEJy8B,EAAYA,EAAUrvB,QAAQ4vB,EAAOh9B,EAAM0a,OAAOgN,IAAY,IAAG,KAKlE+U,EAAUG,OAAQ,CACpB,IAAIxD,EAAgBh/B,KAAKg/B,eAAiB,CAAC,EAExCqD,EADCrD,GAAiBA,EAAcC,iBACpBl/B,EAAEi/B,EAAcyD,aAAe,cAG/B,GAAGziC,KAAK+B,GAAGogB,OAAOmL,EAAQ1sB,IAAM,OAAS,KAClD0sB,EAAQ1sB,IAGjB,CAEA,OAAOyhC,CACV,CAEA2hC,cACG,OAAOhkE,KAAKuhC,eAAeE,gBAC9B,CAEA0mC,cAEG,IAAImE,EAAc,GAAGxlD,OAAO9mB,KAAK82C,WAajC,OAZA92C,KAAK+G,SAAS9C,SAAS+C,IACpBslE,EAAcA,EAAYxlD,OAAO9f,EAAE6vC,WAAW,IAGrB,GAAxB72C,KAAK+G,SAASZ,QACfmmE,EAAYhoE,KAAK,CAAEgN,QAAS,mBAAoBzH,KAAM,CAAC,IAG1D7J,KAAK6/B,UAAU57B,SAASoP,IACrBi5D,EAAcA,EAAYxlD,OAAOzT,EAAEwjC,WAAW,IAG1Cy1B,CACV,CAOA+C,OAAOhhE,GAIJ,OAHA7F,QAAQ+G,MACL,qFAEIvP,KAAK+B,GAAGogB,OAAO9T,EACzB,oBChvBH,MAAMmiB,EAAW,EAAQ,OAOzB/wB,EAAOC,QAAU,cAA+B8wB,qBCPhD,MAAMA,EAAW,EAAQ,OASzB/wB,EAAOC,QAAU,cAA6B8wB,qBCM9C,MAAM8+C,EAAoB,EAAQ,OAElC,IAAInxD,EAAY,KACC,oBAANvG,GACRA,GAAGC,OAAOzV,GAAG,mBAAmB,SAAU2c,GACnCZ,EACDA,EAAU3O,KAAK,kBAAmB,CAC/Bs7B,QAAS/rB,EAAI+rB,QACbjhC,KAAMkV,EAAIlV,QAGbrB,QAAQ+G,MACL,sEAEH/G,QAAQ+G,MAAM,iCAEpB,IAEA/G,QAAQ+G,MAAM,qDAMjB9P,EAAOC,QAAU,cAA4B4vE,EAC1C3vE,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAEboc,IACFA,EAAYpc,GAGf/B,KAAK+B,GAAGK,GAAG,mBAAoByH,IACxB7J,KAAKY,IAAMiJ,EAAKihC,SAAS9qC,KAAKiG,WAAW4D,EAAKA,KAAK,IAW1D7J,KAAKuvE,cAAcvvE,KAAK4uB,MAC3B,CAmEAsU,aAAaO,GACV3jC,MAAMojC,aAAaO,GAEnBzjC,KAAK0/B,QAAQz7B,SAASurE,IAGnBA,EAAW5pE,MAAMkB,WAAa,GAAG0oE,EAAW1gD,SAAS0gD,EAAW5pE,MAAMkB,YAAY,GAExF,CAYAsnE,aAAatnE,EAAYunE,EAAUoB,GAChC,IAAI7pE,EAAQ5F,KAAK+G,QAAQC,GAAMA,EAAEF,YAAcA,IAAY,GAC3D,OAAIlB,GACDA,EAAMQ,SAASpF,MAAQqtE,EAEhBruE,KAAK4H,QAEL6H,QAAQC,SAErB,CAQA4+D,cACGC,EACA9O,EACAK,EACAC,EACAyO,GAEA,IAAI53D,EAAU9W,MAAMwuE,cACjBC,EACA9O,EACAK,EACAC,EACAyO,GAyDH,OAtDA53D,EAAQ3S,SAASyrE,IAEd,IAAIzqE,EAASjF,KAAK4jC,cAAc8rC,EAAE5gD,OAClC,IAAK7pB,EAAQ,OAEb,IAAIW,EAAQX,EAAO8I,UAAU2hE,EAAE71C,SAC/B,IAAKj0B,EAAO,OAGZ,IAAIkpB,EAAQ,GA0BZ,GAxBGA,EADC3hB,MAAMC,QAAQpN,KAAKijC,SACZr9B,EAAMX,OAAOkC,KAEbuoE,EAAE5gD,MAKb4gD,EAAE9uE,GAAK,GAAGkuB,KAASlpB,EAAMkB,aAGrB9G,KAAKoG,UAAYpG,KAAKoG,SAASk9B,WAChCosC,EAAEjB,OAAS,GAAG7oE,EAAMxE,OAAS,KAE7BsuE,EAAEjB,OAAS,GAAG7oE,EAAMX,OAAO7D,OAAS,MAAMwE,EAAMxE,OAAS,KAIxDwE,EAAMQ,UAAYR,EAAMQ,SAASC,WAClCqpE,EAAEjB,OAAS,iCAAiC7oE,EAAMiyC,uBAC/C63B,EAAEjB,UAKJzuE,KAAKykB,QAAS,CACf,IAAIkrD,EAAiBD,EAAErO,SAEvBqO,EAAErO,SAAW,CAACjzD,EAAM26B,IACb36B,EAAKshE,EAAE9uE,IAELmoC,EAAOx9B,KAAK6C,EAAM26B,IACjB4mC,EACIA,EAAevhE,EAAM26B,EAAQ36B,EAAKshE,EAAE9uE,KACpCwN,EAAKshE,EAAE9uE,KAEN,EAElB,CAEA8uE,EAAEd,QAAS,EACXc,EAAEtK,SAAW,GAAG,IAGZxuD,CACV,CAWA24D,cAAcvgD,GACNA,IAIDA,EAAKlG,MACLkG,EAAK7N,OAAS,IAAIld,SAAS2L,IACzB5P,KAAKuvE,cAAc3/D,EAAE,KAMf5P,KAAK+N,UAAUihB,EAAK3qB,MACN,eAAZ2qB,EAAK3qB,KAChBrE,KAAKwP,KACF,UACA,iDACA,CACGwf,SAMJhvB,KAAK4vE,kBACP5vE,KAAK4vE,gBAAkB5vE,KAAK+B,GAAGoxB,iBAC5B,GAAGnzB,KAAKY,sBAKTZ,KAAK4vE,gBAAgBC,oBAAoB7gD,IAC3ChvB,KAAKwP,KAAK,UAAW,kCAAmC,CACrDwf,UAGT,oBC1RH,MAAM8gD,EAAgB,EAAQ,OAI9BrwE,EAAOC,QAAU,cAAwBowE,EACtCnwE,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAElB/B,KAAK+vE,eAAiB,GAMtB/vE,KAAK+B,GAAGK,GAAG,uBAAwByH,IAC5B7J,KAAKY,IAAMiJ,EAAKmO,UAAUhY,KAAKiG,WAAW4D,EAAKA,KAAK,GAE9D,CAWA+K,UAEG,IAAIo7D,EAAchwE,KAAKkJ,WACnB+mE,EAAa,GAKjB,OAJAD,EAAY/rE,SAASoG,IAClB4lE,EAAW3rE,KAAK+F,EAAEuK,UAAU,IAGxBnF,QAAQ4R,IAAI4uD,GAAYz7D,MAAK,IAE1B,IAAI/E,SAAQ,CAACC,EAASiH,KAC1B3W,KAAK6U,eACDD,UACAJ,MAAK,KAEH9E,GAAS,IAEX8E,MAAK,KAIHhM,QAAQ+G,MACL,kGAEH,IAAI2gE,EAAkBlwE,KAAK+B,GAAG4oB,eAAe0B,MAAMze,GACzCA,EAAE2Y,WAAWvmB,QAEnBkwE,EAAgB/pE,OAAS,GAC1B+pE,EAAgBjsE,SAAS2J,IACtBA,EAAE25D,cAAcvnE,KAAK,GAE3B,IAEFyU,OAAOtM,IACLwO,EAAOxO,EAAI,GACZ,KAGd,CAWAP,OAUG,IAAIyxD,EAAW,GAKf,OAJer5D,KAAKkJ,WACXjF,SAASg4B,IACfo9B,EAAS/0D,KAAK23B,EAAEr0B,OAAO,IAEnB6H,QAAQ4R,IAAIg4C,GAAU7kD,MAAK,IAExBxU,KAAK6U,eACRjN,OACA4M,MAAM3K,IAIC7J,KAAKY,KACPZ,KAAKY,GAAKiJ,EAAKjJ,IAMlB,IAAIuvE,EAAO,CAAC,EACZ,IAAIC,EAAOpwE,KAAKwlC,UAChBrxB,OAAOC,KAAKpU,KAAKwlC,WAAWvhC,SAASoQ,IAClC87D,EAAKnwE,KAAKwlC,UAAUnxB,GAAGzT,IAAMZ,KAAKwlC,UAAUnxB,EAAE,IAEjDrU,KAAKwlC,UAAY2qC,EAIjB,IAAIE,GAAW,EAOf,GANAl8D,OAAOC,KAAK+7D,GAAMlsE,SAASoQ,IACnB+7D,EAAK/7D,KACPg8D,GAAW,EACd,IAGCA,EACD,OAAOrwE,KAAK4H,MACf,KAGZ,CAEArC,UACG,IAAIgC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAcnC,OARgB,GAFbvH,KAAK+B,GAAGukB,WAAWjB,GACTA,EAAEle,KAAKgR,eAAiBnY,KAAKmH,KAAKgR,gBACzChS,QAEHoB,EAAUgW,SACP,OA1IJ,KAAI3H,IAAW7T,GAAGsP,aAAajQ,SAASwU,GA2IpC7V,CAAE,qDAAsD,CAACC,KAAKmH,QAI7DI,CACV,CAaA+oE,6BAA6Bt3C,GAC1B,IAAIoP,EAAOpoC,KAAK+B,GAAGg3B,oCAAoCC,EAASh5B,MAIhE,OAHIooC,GACDpoC,KAAKinC,WAAWmB,GAEZA,CACV,CAQAmoC,aAAaC,GACVxwE,KAAKywE,mBAAmBD,GACxBxwE,KAAK+vE,eAAezrE,KAAKksE,EAC5B,CAOAC,mBAAmBD,GAChBxwE,KAAK+vE,eAAiB/vE,KAAK+vE,eAAejnE,QAAQ8D,GAAMA,EAAEhM,IAAM4vE,EAAM5vE,IACzE,CAQAunE,cAEG,IAAImE,EAAc,GAAGxlD,OAAO9mB,KAAK82C,WAYjC,GAXA92C,KAAKkJ,WAAWjF,SAASoG,IACtBA,EAAE29D,eACFsE,EAAcA,EAAYxlD,OAAOzc,EAAEwsC,WAAW,IAGnB,GAA1B72C,KAAKkJ,WAAW/C,QACjBmmE,EAAYhoE,KAAK,CAAEgN,QAAS,4BAA6BzH,KAAM,CAAC,KAK9D7J,KAAK0wE,WACP,GAAI13D,OAAO23D,UAER3wE,KAAK0wE,WAAa,SAAUE,GACzB,OAAO,IAAI53D,OAAO23D,WAAYE,gBAC3BD,EACA,WAEN,MACI,SAC2B,IAAxB53D,OAAO83D,gBACd,IAAI93D,OAAO83D,cAAc,oBASzB,MAAM,IAAIxoE,MAAM,uBAPhBtI,KAAK0wE,WAAa,SAAUE,GACzB,IAAIG,EAAS,IAAI/3D,OAAO83D,cAAc,oBAGtC,OAFAC,EAAO5rE,MAAQ,QACf4rE,EAAOC,QAAQJ,GACRG,CACV,CAGH,CAIH,IAAI7qC,EAAMlmC,KAAK0wE,WAAW1wE,KAAKslC,eA0B/B,MAzBsB,CACnB,mBACA,aACA,kBAEWrhC,SAAS2I,IACpB,IAAIojE,EAAc9pC,EAAI+qC,qBAAqBrkE,GAC3C,IAAK,IAAIM,EAAI,EAAGA,EAAI8iE,EAAY7pE,OAAQ+G,IAE3B8iE,EAAY9iE,GACVlN,KAAKmnC,oBAAoB6oC,EAAY9iE,GAAGtM,KAEjDZ,KAAKuwE,aAAaP,EAAY9iE,GAEpC,IAIClN,KAAK+vE,eAAe5pE,QACrBmmE,EAAYhoE,KAAK,CACdgN,QAAS,iCACTzH,KAAM,CAAC,IAINyiE,CACV,oBCnQH,MAAM4E,EAAoB,EAAQ,OAElCzxE,EAAOC,QAAU,cAA4BwxE,eCF7C,IAAInxE,EAAI,KAGRN,EAAOC,QAAU,MACdC,YAAYM,GAGJF,IACFA,EAAIE,EAGAA,EAAMA,QACPF,EAAIE,EAAMA,OAGnB,CAOAkxE,mBACG,MAAO,CACJ,CAAEvwE,GAAI,IAAK+B,MAAO5C,EAAE,cACpB,CAAEa,GAAI,KAAM+B,MAAO5C,EAAE,+CACrB,CAAEa,GAAI,IAAK+B,MAAO5C,EAAE,kBACpB,CAAEa,GAAI,IAAK+B,MAAO5C,EAAE,cAE1B,CASAqxE,aAAaC,GACV,IAAKA,IAAaA,EAASC,OAASD,EAASC,KAAK1vE,KAAM,OAAO,EAG/D,IAAI2vE,EAAgBF,EAASC,KAAK1vE,KAAKuW,cACvC,MACoB,YAAjBo5D,GACiB,4BAAjBA,CAMN,CAcAC,YAAYH,EAAUI,GACnB,OAAKzxE,KAAKoxE,aAAaC,GAEhB,IAAI5hE,SAAQ,CAACC,EAASiH,KAE1B,IAAI+6D,EAAS,IAAI14D,OAAO24D,WACxBD,EAAOE,OAAUvnE,IACd,IAAIyD,EAAS,IAGE4jE,EAAO5jE,OAClB0Z,MAAM,cACN1e,QAAQoW,GAAQA,GAAOA,EAAI/Y,OAAS,KAG3B,IAAIlC,SAASib,IACvB,IAAI2yD,EAAW,GAMZA,EALgB,KAAfJ,GAEDvyD,EAAMA,EAAIlM,QAAQ,MAAO,QAGV2vB,MAAM,gCAEVzjB,EAAIsI,MAAMiqD,GAGxB3jE,EAAOxJ,KAAKutE,EAAS1jE,KAAK2jE,GAAS9xE,KAAKu8C,SAASu1B,KAAO,IAG3DpiE,EAAQ5B,EAAO,EAElB4jE,EAAOK,WAAWV,EAASC,KAAK,IA/BM7hE,QAAQkH,QAiCpD,CAcAq7D,iBAAiBC,EAAUC,GAOxB,IANA,IAAIroE,EAMKwJ,EAAI,EAAGA,GAJD,GAIiBA,IAAK,CAClC,IAAI8+D,EAAOF,EAAS5+D,GACpB,IAAK8+D,EAAM,MAIX,GAAY,OAFZtoE,EAAOsoE,EAAKD,KAEQroE,EAAK1D,OAAS,EAAG,KACxC,CAEA,OAAY,MAAR0D,GAAwB,IAARA,EACV,SAEC,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,WAARA,GACQ,aAARA,EAEO,UACEw1C,MAAMx1C,GAEP0W,KAAKhJ,MAAM1N,GACZ,OAGHA,EAAK1D,OAAS,IAAY,WAClB,SANL,QAQb,CAMAo2C,SAAS61B,GACN,OAAKA,EAEEA,EAAI5vC,OAAOxvB,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAFjC,EAGpB,oBC/JH,MAAMq/D,EAAoB,EAAQ,OAElC,IAAItyE,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAkBhD,SAAS08D,EAAYvkD,EAAMhnB,EAAS,IACjC,GAAKgnB,EAAL,CACA,GAAIA,EAAK1pB,IAAK,CAWX,MAAMuB,EAAQmB,EAAO+B,QACjB9B,GAAMA,EAAEpG,IAAMmtB,EAAK1pB,KAAO2C,EAAEF,YAAcinB,EAAK1pB,MACjD,GACF0pB,EAAKnoB,MAAQA,GAAOkB,YAAclB,GAAOhF,GAEzCmtB,EAAKmb,UAAY,CACdtnC,KAAMmsB,EAAKiB,KACXlmB,OAAQilB,EAAKprB,OAGZwK,MAAMC,QAAQ2gB,EAAKprB,OAAQorB,EAAK+e,SAAW/e,EAAKprB,MAC/CorB,EAAK+e,UAAY/e,EAAKprB,OAAS,IAAI6kB,MAAM,KAE5B,QAAd5hB,GAAOvB,KAA+B,YAAduB,GAAOvB,MAChC0pB,EAAKmb,UAAUpgC,OAASilB,EAAKmb,UAAUpgC,OAClC/G,GAAGof,MAAMhB,OAAO4N,EAAKmb,UAAUpgC,QAC/B,KAELilB,EAAK+e,SAAW/e,EAAK+e,SAAS3+B,KAAKiF,GAAMrR,GAAGof,MAAMhB,OAAO/M,aAGrD2a,EAAK1pB,WACL0pB,EAAKiB,YACLjB,EAAKprB,KACf,CAEIorB,EAAK5M,OAAS4M,EAAK5M,MAAMhb,SACzB4nB,EAAK5M,OAAS,IAAIld,SAAS2L,IACzB0iE,EAAY1iE,EAAG7I,EAAO,GAxCX,CA2CpB,CAiBA,SAASwrE,EAAYxkD,EAAMhnB,EAAS,IACjC,GAAKgnB,EAAL,CACA,GAAIA,EAAKnoB,MAAO,CACb,IAAIA,EAAQmB,EAAO+B,QAAQ9B,GAAMA,EAAEF,YAAcinB,EAAKnoB,QAAO,GAE7DmoB,EAAK1pB,IAAMuB,GAAOhF,IAAMmtB,EAAKnoB,MAC7BmoB,EAAKmb,UAAYnb,EAAKmb,WAAa,CAAC,EACpCnb,EAAKiB,KAAOjB,EAAKmb,UAAUtnC,KAG3B,IAAI+D,EAASooB,EAAK+e,UAAY,GAC1B/e,EAAKmb,UAAUpgC,QAAUnD,EAAO0H,QAAQ0gB,EAAKmb,UAAUpgC,QAAU,GAClEnD,EAAOrB,KAAKypB,EAAKmb,UAAUpgC,QAE9BilB,EAAKprB,MAAQgD,EACTwI,KAAKiF,IAECxN,GAAuB,QAAbA,EAAMvB,KAA8B,YAAbuB,EAAMvB,IAEhC+O,aAAamN,KACdnN,EAAE+nC,cAEF/nC,EAJAxN,EAAMi0C,YAAYzmC,KAO9B9E,KAAK,YAEFyf,EAAKnoB,aACLmoB,EAAKnsB,YACLmsB,EAAK+e,gBACL/e,EAAKmb,SACf,CAEInb,EAAK5M,OAAS4M,EAAK5M,MAAMhb,SACzB4nB,EAAK5M,OAAS,IAAIld,SAAS2L,IACzB2iE,EAAY3iE,EAAG7I,EAAO,GAlCX,CAqCpB,CAEAtH,EAAOC,QAAU,cAA4B2yE,EAC1C1yE,YAAYE,EAAQkC,EAAII,EAAU,CAAC,GAGhCrC,MAFAD,EAASA,GAAU,mBAELkC,GAEd/B,KAAKwyE,SAAWrwE,GAAW,CAAC,EAE5BnC,KAAKyyE,eAAgB,EAKrBzyE,KAAK0yE,WAAY,EAKH1yE,KAAKwS,OAAS,CACzBu2B,QAAShnC,EAAGw3B,MAAQ,CAAC,GAAG/mB,OACxBrS,UAAW,CACRwyE,IAAK5yE,EAAE,OACP6yE,GAAI7yE,EAAE,MAEN8yE,WAAY9yE,EAAE,eACd8wC,QAAS9wC,EAAE,YACXgxC,WAAYhxC,EAAE,gBACd2xC,aAAc3xC,EAAE,kBAChB6xC,gBAAiB7xC,EAAE,sBAEnB+yE,6BAA8B/yE,EAAE,kBAChCgzE,6BAA8BhzE,EAAE,kBAEhCkxC,WAAYlxC,EAAE,gBACdoxC,cAAepxC,EAAE,oBAEjBiyC,YAAajyC,EAAE,iBACfmyC,eAAgBnyC,EAAE,aAElBsxC,iBAAkBtxC,EAAE,sBACpBwxC,oBAAqBxxC,EAAE,0BAEvB6uC,kBAAmB7uC,EAAE,YACrB+uC,qBAAsB/uC,EAAE,mBACxBivC,YAAajvC,EAAE,MACfmvC,eAAgBnvC,EAAE,UAClBqvC,QAASrvC,EAAE,YACXuvC,WAAYvvC,EAAE,gBAEdqtC,gBAAiBrtC,EAAE,aACnButC,eAAgBvtC,EAAE,YAClBytC,oBAAqBztC,EAAE,mBACvB2tC,mBAAoB3tC,EAAE,kBACtB6tC,uBAAwB7tC,EAAE,0BAC1B+tC,sBAAuB/tC,EAAE,yBACzBiuC,2BAA4BjuC,EAAE,gCAC9BmuC,0BAA2BnuC,EAAE,+BAC7BquC,oBAAqBruC,EAAE,iBACvBuuC,oBAAqBvuC,EAAE,iBAEvByvC,eAAgBzvC,EAAE,KAClB0vC,kBAAmB1vC,EAAE,KACrB2vC,kBAAmB3vC,EAAE,KACrB4vC,kBAAmB5vC,EAAE,KACrB6vC,yBAA0B7vC,EAAE,KAC5B8vC,yBAA0B9vC,EAAE,KAE5BgwC,mBAAoBhwC,EAAE,UACtBiwC,sBAAuBjwC,EAAE,kBAEzBizE,iBAAkBjzE,EAAE,cACpBkzE,oBAAqBlzE,EAAE,kBAEvBqwC,uBAAwBrwC,EAAE,mBAC1BuwC,0BAA2BvwC,EAAE,uBAC7BywC,6BAA8BzwC,EAAE,yBAChC2wC,gCAAiC3wC,EAAE,iCAEnCmzE,qBAAsBnzE,EAAE,iBACxBsyC,mBAAoBtyC,EAAE,wBACtBwyC,+BAAgCxyC,EAAE,4BAClC0yC,wBAAyB1yC,EAAE,oBAC3B4yC,2BAA4B5yC,EAAE,0BAhEpC,IAqEIG,EAAOF,KAAKE,IAAM,CACnBizE,MAAOnzE,KAAKI,OAAO,GAAGP,WACtBuzE,aAAcpzE,KAAKI,OAAO,GAAGP,kBAC7B+H,KAAM5H,KAAKI,OAAO,GAAGP,WAIxBG,KAAK4S,QAAQhC,SAAW5Q,KAAK+B,GAAG6Q,QAAQhC,WAExC5Q,KAAKqzE,wBAA0B,GAG/BrzE,KAAKS,GAAK,CACPoB,KAAM,CACH,CACGnB,KAAM,SACNkB,KAAM,QACND,YAAY,EACZE,KAAM,CACH,CACGjB,GAAIV,EAAIkzE,aACR1yE,KAAM,QACNmJ,KAAM,IAAM,GAEZ9C,OAAQ,GACRhG,OAAQf,KAAKwyE,SAASzxE,UAI/B,CACGH,GAAIV,EAAI0H,KACRlH,KAAM,SACNQ,IAAK,gBACLyB,MAAO5C,EAAE,QACTuzE,OAAQtzE,KAAKwyE,SAASe,eAAgB,EACtChyE,MAAO,KACAvB,KAAKwzE,SAASxzE,KAAKwzE,QAAQ7uE,OAC/B3E,KAAKwP,KAAK,OAAQxP,KAAKiM,WAAW,IAKjD,CAGA3I,KAAKnB,GACF,GAAInC,KAAKyyE,cAAe,OAExB3yE,MAAMwD,KAAKnB,GAEXnC,KAAK2sC,cAAgBxqC,GAASsxE,eAAgB,EAC9CzzE,KAAKqzE,wBAA0BlxE,GAASuxE,cAAgB,GAExD,MAAMlnE,EAAK7I,GAAG3D,KAAKE,IAAIkzE,cACvB,GAAI5mE,EAAI,CACL,IAAKxM,KAAK0yE,UAAW,CAClB1yE,KAAK2zE,iBAAkB,EACvBnnE,EAAGonE,WAAWC,SAAS,SAAUzgE,IAC9B,GAAIpT,KAAK2zE,gBAAiB,OAAO,EAEjC3zE,KAAKwP,KAAK,UAAWxP,KAAKiM,WAAW,IAExCjM,KAAK2zE,iBAAkB,EAMvB,IAAIG,EAAQ9zE,KAAKkpC,UACjBlpC,KAAKkpC,UAAY4qC,EACjB9zE,KAAK0yE,WAAY,CACpB,CACA1yE,KAAKyyE,eAAgB,CACxB,CACH,CAQAltE,QAAQ+nB,GACL,IAAIymD,EAAS,KAAM,EAEfC,EAASrwE,GAAG3D,KAAKE,IAAIkzE,cACzB,OAAIY,GACDD,EAASC,EAAOC,oBACTF,EAAOzmD,IAEPxtB,MAAMyF,QAAQ+nB,EAE3B,CAeAuiD,oBAAoB9hD,GACjB,IAAKA,EAAM,OAAO,EAElB,IAAI+kB,GAAa,EAGjB,GAAI/kB,EAAKjF,MACLiF,EAAK5M,OAAS,IAAIld,SAAS2L,IACzBkjC,EAAaA,GAAc9yC,KAAK6vE,oBAAoBjgE,EAAE,SAYzD,GARKme,EAAK1pB,KAAmB,IAAZ0pB,EAAK1pB,MACnByuC,GAAa,GAGX/kB,EAAKiB,MAAqB,IAAbjB,EAAKiB,OACpB8jB,GAAa,GAGZA,EACD,OAAQ/kB,EAAKiB,MACV,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eAGF,MAEH,QAEQjB,EAAKprB,OAAuB,IAAdorB,EAAKprB,QACrBmwC,GAAa,GAO5B,OAAOA,CACV,CAEAjuC,SAASuB,GACNtG,MAAM+E,SAASuB,GACfpG,KAAKkpC,UAAY9iC,EAEjB,MAAMoG,EAAK7I,GAAG3D,KAAKE,IAAIkzE,cACvB,GAAI5mE,EAAI,CACL,IAAKpG,EAMF,YAJAoG,EAAG/H,OAAO,QAAS,CAChBqkB,KAAM,MACN3H,MAAO,KAKb,IAAI+yD,EAAal0E,KAAK+B,GAAG2D,UAAUU,GAmBnCksE,EAAY4B,EAAYl0E,KAAKopC,SAE7BppC,KAAK2zE,iBAAkB,EACvBnnE,EAAG/H,OAAO,QAASyvE,GACnBl0E,KAAK2zE,iBAAkB,CAC1B,CACH,CAEA1nE,WACG,GAAItI,GAAG3D,KAAKE,IAAIkzE,cAAe,CAC5B,IAAIhtE,EAAWpG,KAAK+B,GAAG2D,UACpB/B,GAAG3D,KAAKE,IAAIkzE,cAAcQ,WAAWjxE,OAAS,CAAC,GAOlD4vE,EAAYnsE,EAAUpG,KAAKopC,SAC3BppC,KAAKkpC,UAAY9iC,CACpB,CAEA,OAAOtG,MAAMmM,UAChB,CAEAmnB,WAAWrsB,EAAS,GAAI9B,EAAS,MAC9BnF,MAAMszB,WAAWrsB,EAAQ9B,GACzBjF,KAAK2rC,QACR,CAEAwoC,cACG,MAAO,aACV,CAEAxoC,SACG3rC,KAAKo0E,qBAEL,IAAI5nE,EAAK7I,GAAG3D,KAAKE,IAAIkzE,cACrB,GAAI5mE,EAAI,CAEL,KAAOA,EAAGvK,OAAO8E,OAAOZ,OAAS,GAC9BqG,EAAGvK,OAAO8E,OAAOimC,OAGnBhtC,KAAK+rC,cAAgB,IAAI9nC,SAAS+C,IAChCwF,EAAGvK,OAAO8E,OAAOzC,KAAK0C,EAAE,GAE9B,CACH,CAIAotE,qBACG,MAAMC,EAAM1wE,GAAG3D,KAAKE,IAAIkzE,cACnBiB,IAGLA,EAAIC,KAAKC,QAAQ,YAAa,UAAUp7B,UAAUq7B,aAAe,CAC9D5uE,EACAhE,EACA0e,EACA0rB,EACAmK,KAEA,IAAIs+B,EAASz0E,KAAK00E,QAAQ9uE,GAEtBnF,EAAK,CACNG,GAAIu1C,EAAMl0C,OAAOrB,GACjBF,KAAM,SACNi0E,QAAS,SACT3oC,WAAYA,EACZpmC,MAAOA,EACPgvE,KAAMhzE,EACNy/D,SAAU,SAAUh8C,GACjB,IAAI+sD,EAAM/sD,EAAEzf,GACRivE,EACDv0D,IAAmB,QAAR1e,EAAiB6B,MAAMqxE,KAAKC,cAAgB,MAE1D,OADIF,IAAQzC,EAAMyC,EAAOzC,IAClBA,CACV,EACAqC,OAAQA,EACRO,OAAQ,GAYX,OATavxE,MAAMhD,GAAGA,EAAI01C,EASb,EAEnB,CAEAu+B,QAAQO,GACL,IAAInnE,EAGJ,GAAuB,eAAnBmnE,EACD,MAAO,GACHnuD,OAAO9mB,KAAKk1E,aAAa,gBACzBpuD,OAAO9mB,KAAKm1E,sBAAsB,gBAClCruD,OAAO9mB,KAAKo1E,cAAc,gBAC1BtuD,OAAO9mB,KAAKq1E,eAAe,cAAe,SAGjD,IAAIzvE,GAAS5F,KAAKopC,SAAW,IAAItgC,QAC7B9B,GAAMA,EAAEF,YAAcmuE,IACxB,GAEF,OAAQrvE,GAAOvB,KACZ,IAAK,UACFyJ,EAAS9N,KAAKs1E,eAAe1vE,GAC7B,MACH,IAAK,gBACFkI,EAAS,GACLgZ,OAAO9mB,KAAKk1E,aAAatvE,IACzBkhB,OAAO9mB,KAAKu1E,YAAY3vE,IACxBkhB,OAAO9mB,KAAKm1E,sBAAsBvvE,IAClCkhB,OAAO9mB,KAAKq1E,eAAezvE,IAC3BkhB,OAAO9mB,KAAKw1E,eAChB,MACH,IAAK,OACL,IAAK,WACF1nE,EAAS,CAAC,aAAc,mBACxB,MACH,IAAK,OACFA,EAAS9N,KAAKy1E,YAAY7vE,GAC1B,MACH,IAAK,OACFkI,EAAS,GACLgZ,OAAO9mB,KAAKw1E,eACZ1uD,OAAO9mB,KAAKu1E,YAAY3vE,IAC5B,MAIH,IAAK,SACL,IAAK,WACL,IAAK,QACFkI,EAAS9N,KAAKw1E,cAKpB,MAAME,EAAW,GAAG9vE,GAAOQ,UAAUa,YAAYrB,GAAOQ,UAAUc,cA2BlE,OAzBGtB,GAAOQ,UAAUgB,aAEJ,YAAZsuE,GAEe,WAAZA,GAAyB9vE,GAAOQ,UAAUM,UAE9CoH,GAAUA,GAAU,IAAIgZ,OAAO9mB,KAAK21E,YAAY/vE,IAC1B,iBAAdA,GAAOvB,IACfyJ,GAAUA,GAAU,IAChBgZ,OAAO9mB,KAAK21E,YAAY/vE,IACxBkhB,OAAO9mB,KAAK41E,kBAAkBhwE,IAC9BkhB,OAAO9mB,KAAKq1E,eAAezvE,IAIzBqvE,EAAgB5nE,QAAQ,SAAW,IACzCS,EAAS9N,KAAKq1E,eAAe,KAAMJ,IAGlCj1E,KAAK2sC,gBACN7+B,GAAUA,GAAU,IAAIgZ,OAAO9mB,KAAK61E,kBAAkBjwE,KAGzDkI,GAAUA,GAAU,IAAIgZ,OAAO9mB,KAAKo1E,cAAcxvE,IAE3CkI,CACV,CAEA0nE,cACG,MAAO,CACJ,CACGhnC,MAAO,OACP7sC,YAAY,EACZjB,KAAM,WACN2gE,SAAU,IAGnB,CAEAiU,eAAe1vE,GACZ,MAAO,CACJ,CACG4oC,MAAO,UACP9tC,KAAM,YAGf,CAEAi1E,YAAY/vE,GACT,MAAO,CACJ,CACG4oC,MAAO,OACP9tC,KAAM,OACN0B,GAAI,CACD0zE,cAAe,YAKT91E,KAAK+1E,WAAU,SAAUnoE,GACtB,OAAQA,EAAEnC,eACb,GAAG,WAAazL,MACX0N,MAAMsoE,MAAMC,OAAS,GAChC,IAIZ,CAEAf,aAAatvE,GACV,IAAIzD,EAAU,GAEV+zE,EACDl2E,KAAKmpC,cAAcrgC,QAAQ9B,GAAMA,EAAEpG,IAAMgF,EAAMhF,KAAIuF,OAAS,EAsB/D,MAnBa,eAATP,GAA0B5F,KAAKurC,QAChCppC,EAAUnC,KAAKknB,SAASC,GAAMA,EAAE6d,gBAAgBhlC,KAAKurC,WAG/C2qC,IACN/zE,EAAUnC,KAAKknB,SACXC,IACGnnB,KAAKurC,QAAUvrC,KAAKurC,QAAQ3qC,GAAK,KAAOumB,EAAEvmB,IAC3CumB,EAAE6d,gBAAgBp/B,EAAMgB,mBAIjCzE,GAAS8B,SAASkjB,IACfhlB,EAAQmC,KAAK,CACV1D,GAAIumB,EAAEvmB,GACN+B,MAAOwkB,EAAE/lB,OACV,IAGE,CACJ,CACGotC,MAAO,QACP9tC,KAAM,QACNyB,QAASA,GAAW,IAG7B,CAEAszE,YAAY7vE,GACT,MAAO,CACJ,CACG4oC,MAAO,OACP9tC,KAAM,QACNyB,QAASyD,GAAOQ,UAAUjE,SAASgM,KAAI,SAAUjB,GAC9C,MAAO,CACJtM,GAAIsM,EAAEtM,GACN+B,MAAOuK,EAAEmB,KAEf,KAGT,CAEAknE,YAAY3vE,GACT,MAAO,CACJ,CACG4oC,MAAO,OACP9tC,KAAM,QACNyB,QAASnC,KAAK+B,GAAG6Q,QAAQ/B,WAAW1C,KAAKgoE,IAC/B,CACJv1E,GAAIu1E,EAAEvlE,SACNjO,MAAOwzE,EAAEvlE,cAKxB,CAEAukE,sBAAsBvvE,GACnB,IAAIwwE,EAOJ,OALGA,EADU,eAATxwE,GAA0B5F,KAAKurC,QACjBvrC,KAAKurC,QAAQ3qC,GAEbgF,GAAOQ,UAAUO,WAG5B,CACJ,CACG6nC,MAAO,iBACP9tC,KAAM,QACNyB,QAASi0E,EACJp2E,KAAK+B,GAAGqjB,iBACJ8G,GAAOA,GAAIjB,YAAYrqB,IAAMw1E,IAC/BjoE,KAAK+d,IACG,CACJtrB,GAAIsrB,EAAGtrB,GACP+B,MAAOupB,EAAG9qB,UAGhB,IAGd,CAEAw0E,kBAAkBhwE,GACf,MAAO,CACJ,CACG4oC,MAAO,aACP9tC,KAAM,QACN21E,YAAar2E,KAAKwS,OAAOrS,UAAU2yE,6BACnC3wE,QAASnC,KAAKknB,SACVC,GAAsB,MAAhBnnB,KAAKurC,SAAmBpkB,EAAEvmB,IAAMZ,KAAKurC,QAAQ3qC,KACrDuN,KAAKgZ,IACG,CACJvmB,GAAIumB,EAAEvmB,GACN+B,MAAOwkB,EAAE/lB,WAKxB,CAEAy0E,kBAAkBjwE,GACf,MAAO,CACJ,CACG4oC,MAAO,aACP9tC,KAAM,SACNyB,QAASnC,KAAKqzE,yBAA2B,IAGlD,CAEAgC,eAAezvE,EAAO0wE,EAAkB,MACrC,MAAM7qC,GAAiBzrC,KAAK0rC,gBAAkB,IAC1C5iC,QAAQytE,IACN,IAAKA,EAAQ,OAAO,EAEpB,IAAIzoE,GAAS,EACb,GACQ,gBADAlI,EAEFkI,EACG9N,KAAKurC,QAAQ3qC,KAAO21E,EAAOtxE,QAAQrE,KAAO21E,EAAO3wE,WAKpD,OAAQA,EAAMvB,KACX,IAAK,UACFyJ,EAAS,CAAC,WAAWg/B,SAASypC,EAAO3wE,OAAOvB,KAE5C,MAEH,IAAK,gBAKF,GAJAyJ,EACGlI,EAAMQ,SAASO,cACd4vE,EAAO3wE,OAAOX,OAAOrE,IAAM21E,EAAOtxE,OAAOrE,KAExCgF,EAAMQ,SAASgB,WAAY,CAC7B0G,EAASA,IAAWyoE,EAAO3wE,MAE3B,KACH,CAEAkI,EACGA,IACClI,EAAMQ,SAASiB,YACbzB,EAAMQ,SAASkB,eAAiBivE,EAAO3wE,OAAOhF,GAEpD,MAEH,IAAK,OACL,IAAK,WACFkN,EAAS,CAAC,OAAQ,YAAYg/B,SAC3BypC,EAAO3wE,OAAOvB,KAGjB,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACFyJ,EAAS,CAAC,YAAa,UAAW,UAAUg/B,SACzCypC,EAAO3wE,OAAOvB,KAGjB,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACL,IAAK,OACFyJ,EAAS,CACN,SACA,WACA,QACA,YACA,QACDg/B,SAASypC,EAAO3wE,OAAOvB,KAEzB,MAEH,IAAK,OACFyJ,EAAS,CAAC,QAAQg/B,SAASypC,EAAO3wE,OAAOvB,KAEzC,MAEH,QACG,GAAIkyE,EAAOlyE,IAAK,CAEb,MAAM0oC,EAAiBwpC,EAAOlyE,IAAImjB,MAAM,KAAKwlB,MAE7Cl/B,EACGi/B,IAAmBnnC,EAAMhF,IACzBmsC,IAAmBnnC,EAAMvB,KACzB0oC,IAAmBupC,GACnBC,EAAOlyE,MAAQiyE,CACrB,EAQZ,OAAOxoE,CAAM,IAEfK,KAAK9D,IACI,CACJzJ,GAAIyJ,EAAEhG,IACN1B,MAAO5C,EAAE,eAAgB,CAACsK,EAAEjJ,YAIrC,OAAKqqC,EAEE,CACJ,CACG+C,MAAO,UACP9tC,KAAM,SACNyB,QAAS,CACN,CACGvB,GAAI,QACJ+B,MAAO3C,KAAKwS,OAAOrS,UAAU+yE,yBAE7BznC,KAXe,EAe9B,CAEA2pC,cAAcxvE,GACX,OAAKA,IAEiB5F,KAAKw2E,gBAAkB,CAAC,GAChB5wE,EAAMhF,IAAMgF,IAAU,CAAC,GACtCD,QAAU,GAJN,EAKtB,CAEA8wE,SAASt0E,GACN,MAAM+mC,EAAY/0B,OAAOsmC,OAAO,CAAC,EAAGz6C,KAAKkpC,WAEzC,GAAKlpC,KAAKwzE,QA6BPxzE,KAAKwzE,QAAQ5uE,QAAQzC,OA7BL,CAChB,IAAI1B,EAAK,CACNG,GAAIZ,KAAKE,IAAIizE,MACbzyE,KAAM,QACNK,OAAQ,IACRC,MAAO,IACPS,KAAMzB,KAAKS,IAGTkD,GAAG3D,KAAKE,IAAIizE,OAiBdxvE,GAAG3D,KAAKE,IAAIizE,OAAOvuE,QAAQzC,IAhB3BnC,KAAKwzE,QAAU/vE,MAAMhD,GAAGA,GACxBT,KAAKsD,OACDtD,KAAKopC,SACNppC,KAAKozB,WAAWpzB,KAAKopC,QAASppC,KAAKurC,SAOlCrC,GACDlpC,KAAK6E,SAASqkC,GAGjBlpC,KAAKwzE,QAAQ5uE,QAAQzC,GAI3B,CAGH,CAWAu0E,gBAAgBhsE,EAASvI,EAAU,CAAC,GACjCnC,KAAKw2E,eAAiBx2E,KAAKw2E,gBAAkB,CAAC,EAC9Cx2E,KAAKw2E,eAAe9rE,GAAWvI,CAClC,oBCj5BH,MAAMw0E,EAAgB,EAAQ,OAE9B,IAAI52E,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAwBi3E,EACtCh3E,YAAYC,EAAKC,EAAQkC,GACtBjC,MAAMF,EAAKC,EAAQkC,GAEnByG,QAAQ+G,MAAM,2CAGd,IAAIrP,EAAOF,KAAKE,IAAM,CACnBC,UAAWH,KAAKI,OAAO,GAAGP,eAC1B+2E,WAAY52E,KAAKI,OAAO,GAAGP,oBAC3Bg3E,aAAc72E,KAAKI,OAAO,GAAGP,4BAE7BipB,KAAM9oB,KAAKI,OAAO,GAAGP,oBACrB+F,MAAO5F,KAAKI,OAAO,GAAGP,qBACtBmvB,KAAMhvB,KAAKI,OAAO,GAAGP,oBACrBi3E,WAAY92E,KAAKI,OAAO,GAAGP,0BAE3Bk3E,WAAY/2E,KAAKI,OAAO,GAAGP,0BAC3Bm3E,gBAAiBh3E,KAAKI,OAAO,GAAGP,+BAChCo3E,qBAAsBj3E,KAAKI,OACxB,GAAGP,oCAENq3E,qBAAsBl3E,KAAKI,OACxB,GAAGP,oCAENs3E,WAAYn3E,KAAKI,OAAO,GAAGP,+BAE3Bu3E,eAAgBp3E,KAAKI,OAAO,GAAGP,8BAE/Bw3E,YAAar3E,KAAKI,OAAO,GAAGP,2BAE5By3E,WAAYt3E,KAAKI,OAAO,GAAGP,2BAM9B,IAAI03E,EAGJv3E,KAAKw3E,kBAAoB,CACtB,CACG70E,MAAO5C,EAAE,kBACTa,GAAI,kBAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,uBAIVZ,KAAKy3E,kBAAoB,GACzBz3E,KAAK03E,uBAAyB,GAE9B,IAAIl2E,EAASxB,KAAKwB,QAAU,CAAC,EAM7BA,EAAOwJ,aAAe,KACXhL,KAAKopC,SAAW,IAAIj7B,KAAKnH,IAC9B,IAAI5F,EAAQ4F,EAAE5F,MAOd,OAJIpB,KAAKqM,UAAUu9B,gBAAkB5iC,EAAE/B,SACpC7D,EAAQ4F,EAAE/B,OAAO7D,MAAQ,IAAM4F,EAAE5F,OAG7B,CACJR,GAAIoG,EAAEpG,GACN+B,MAAOvB,EACP0tB,MAAO9nB,EAAE8nB,YAAS5E,EACpB,IAIP1oB,EAAOm2E,YAAc,KAClB,IAAI7wB,EAAW9mD,KACXkzC,EAAkBlzC,KAAKkzC,iBAAmB,CAAC,EAE/C,MAAO,CACJtyC,GAAI,IAAM6C,MAAMyH,MAChB0sE,SAAS,EACTz2E,KAAM,CACH,CAEGT,KAAM,QACNE,GAAIV,EAAI4oB,KACR9nB,MAAO,GACP2B,MAAOuwC,EAAgBpqB,MAAQ,MAC/B3mB,QAAS,CACN,CACGQ,MAAO5C,EAAE,OACTa,GAAI,OAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,OAGVwB,GAAI,CACDC,SAAU,SAAUw1E,EAAQC,GACzBt2E,EAAOu2E,uBAAuBF,EACjC,IAGN,CAEGn3E,KAAM,QACNE,GAAIV,EAAI0F,MACRoyE,QAAS,CACN51E,GAAI,CACD61E,aAAc,WACXj4E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAOwJ,gBAEhB5I,GAAI,CACDC,SAAU,SAAU8I,GACjB,IAAI+sE,EAAYl4E,KAAKyL,gBACrBjK,EAAO22E,YAAYhtE,EAAU+sE,EAChC,IAIN,CACGt3E,GAAIV,EAAI8uB,KACRhuB,MAAO,IACPyB,MAAO,CACJ,CAAC,EAED,CACG+rC,MAAO,QACP9tC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,oBACTa,GAAI,oBAEP,CACG+B,MAAO5C,EAAE,sBACTa,GAAI,sBAEP,CACG+B,MAAO5C,EAAE,0BACTa,GAAI,2BAERkmB,OAAOggC,EAAS2wB,mBAClBr1E,GAAI,CACDC,SAAU,SAAU6mC,EAAWkvC,GAC5B,IACIF,EADgBl4E,KAAKyL,gBACKA,gBAC9BjK,EAAO62E,aAAanvC,EAAWgvC,GAC/B12E,EAAOa,UACV,IAKN,CACGmsC,MAAO,OACP9tC,KAAM,QACNiC,MAAO,OACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,aACTa,GAAI,QAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,WAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,oBAEP,CACG+B,MAAO5C,EAAE,0BACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,yBACTa,GAAI,mBAEP,CACG+B,MAAO5C,EAAE,gCACTa,GAAI,yBAEP,CACG+B,MAAO5C,EAAE,+BACTa,GAAI,4BAEP,CACG+B,MAAO5C,EAAE,iBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,iBACTa,GAAI,cAGNkmB,OAAOggC,EAAS0wB,mBAChB1wD,OAAOggC,EAAS2wB,mBACpBr1E,GAAI,CACDC,SAAU,SAAU6mC,GACjB,IACIgvC,EADgBl4E,KAAKyL,gBACKA,gBAC9BjK,EAAO62E,aAAanvC,EAAWgvC,GAC/B12E,EAAOa,UACV,IAIN,CACGmsC,MAAO,SACP9tC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,KACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,QAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,WAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,qBAGNkmB,OAAOggC,EAAS0wB,mBAChB1wD,OAAOggC,EAAS2wB,mBACpBr1E,GAAI,CACDC,SAAU,SAAU6mC,GACjB,IACIgvC,EADgBl4E,KAAKyL,gBACKA,gBAC9BjK,EAAO62E,aAAanvC,EAAWgvC,GAC/B12E,EAAOa,UACV,IAIN,CACGmsC,MAAO,OACP9tC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,oBACTa,GAAI,qBAGNkmB,OAAOggC,EAAS0wB,mBAChB1wD,OAAOggC,EAAS2wB,mBACpBr1E,GAAI,CACDC,SAAU,SAAU6mC,EAAWkvC,GAC5B,IACIF,EADgBl4E,KAAKyL,gBACKA,gBAC9BjK,EAAO62E,aAAanvC,EAAWgvC,GAC/B12E,EAAOa,UACV,IAIN,CACGmsC,MAAO,UACP9tC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,cAGNkmB,OAAOggC,EAAS0wB,mBAChB1wD,OAAOggC,EAAS2wB,mBACpBr1E,GAAI,CACDC,SAAU,SAAU6mC,GACjB,IACIgvC,EADgBl4E,KAAKyL,gBACKA,gBAC9BjK,EAAO62E,aAAanvC,EAAWgvC,GAC/B12E,EAAOa,UACV,IAIN,CACGmsC,MAAO,OACP9tC,KAAM,QACNiC,MAAO,kBACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,mBACTa,GAAI,mBAEP,CACG+B,MAAO5C,EAAE,uBACTa,GAAI,uBAEP,CACG+B,MAAO5C,EAAE,yBACTa,GAAI,wBAEP,CACG+B,MAAO5C,EAAE,iCACTa,GAAI,4BAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,cAGNkmB,OAAOggC,EAAS0wB,mBAChB1wD,OAAOggC,EAAS2wB,mBACpBr1E,GAAI,CACDC,SAAU,SAAU6mC,GACjB,IACIgvC,EADgBl4E,KAAKyL,gBACKA,gBAC9BjK,EAAO62E,aAAanvC,EAAWgvC,GAC/B12E,EAAOa,UACV,IAIN,CACGmsC,MAAO,SACP9tC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,cAGNkmB,OAAOggC,EAAS0wB,mBAChB1wD,OAAOggC,EAAS2wB,mBACpBr1E,GAAI,CACDC,SAAU,SAAU6mC,GACjB,IACIgvC,EADgBl4E,KAAKyL,gBACKA,gBAC9BjK,EAAO62E,aAAanvC,EAAWgvC,GAC/B12E,EAAOa,UACV,IAIN,CACGmsC,MAAO,QACP9tC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,cAGNkmB,OAAOggC,EAAS0wB,mBAChB1wD,OAAOggC,EAAS2wB,mBACpBr1E,GAAI,CACDC,SAAU,SAAU6mC,GACjB,IACIgvC,EADgBl4E,KAAKyL,gBACKA,gBAC9BjK,EAAO62E,aAAanvC,EAAWgvC,GAC/B12E,EAAOa,UACV,MAMZ,CACGzB,GAAIV,EAAI42E,WACRc,SAAS,EACTn1E,MAAO,CACJ,CACG+rC,MAAO,SAIV,CACG5tC,GAAIV,EAAI62E,WAERvoC,MAAO,QACP9tC,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CACGzB,GAAIV,EAAI82E,gBACRxoC,MAAO,aACP3sC,KAAM,CACH,CACGjB,GAAIV,EAAI+2E,qBACRv2E,KAAM,QACNyB,QAAS,GACTk0E,YAAat2E,EAAE,kBACfqC,GAAI,CACDC,SAAU,SAAUM,GACjB,IACIu1E,EADgBl4E,KAAKyL,gBAErBA,gBACAA,gBACJjK,EAAO82E,wBACJ31E,EACAu1E,GAGH12E,EAAOa,UACV,IAGN,CACGzB,GAAIV,EAAIg3E,qBACRx2E,KAAM,QACNyB,QAAS,GACTk0E,YAAat2E,EAAE,kBACfqC,GAAI,CACDC,SAAUb,EAAOa,aAO7B,CACGzB,GAAIV,EAAIi3E,WACR3oC,MAAO,aACP9tC,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CACGzB,GAAIV,EAAIk3E,eACR5oC,MAAO,iBACP9tC,KAAM,aACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CAEGmsC,MAAO,OACP5tC,GAAIV,EAAIo3E,WACR52E,KAAM,aACN0B,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGmsC,MAAO,SACP9tC,KAAM,OACN63E,SAAU90E,MAAM0d,MAAMq3D,SACtBp2E,GAAI,CACDq2E,gBAAiB,WACVz4E,KAAKu4E,YAAY/2E,EAAOa,UAC/B,IAIN,CACGmsC,MAAO,OACP5tC,GAAIV,EAAIm3E,YACR32E,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGmsC,MAAO,UACP9tC,KAAM,WACN0B,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGmsC,MAAO,OACP9tC,KAAM,QACNyB,QAASnC,KAAK+B,GAAG6Q,QAAQ/B,WAAW1C,KAAKgoE,IAC/B,CACJv1E,GAAIu1E,EAAEvlE,SACNjO,MAAOwzE,EAAEvlE,aAGfxO,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGmsC,MAAO,SACP9tC,KAAM,OACN0B,GAAI,CACDq2E,gBAAiB,WACdj3E,EAAOa,UACV,IAIN,CACGmsC,MAAO,QACP9tC,KAAM,OACN0B,GAAI,CACDq2E,gBAAiB,WACdj3E,EAAOa,UACV,MAKZ,CACG3B,KAAM,SACNQ,IAAK,gBACLqK,KAAM,aACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,IAEIm3E,EAFY14E,KAAK24E,cAEK5sE,MAAM/L,KAAKyL,iBAErCjK,EAAOq1E,aAAa6B,EAAY,EACnC,GAEH,CACGh4E,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,IAAI22E,EAAYl4E,KAAKyL,gBAErBjK,EAAOo3E,gBAAgBV,EAC1B,IAGR,EAGJ12E,EAAOq3E,eAAiB,KACd,CACJn4E,KAAM,SACNE,GAAIV,EAAI22E,aACR31E,IAAK,gBACLU,KAAM,OACNR,MAAOrB,EAAE,gBACTwB,MAAO,KACJC,EAAOq1E,cAAc,IAK9Br1E,EAAOq1E,aAAe,CAAC9qE,EAAOrB,KAC3B,IAAIguD,EACAj4D,EAAKe,EAAOm2E,cAEZmB,EAAYn1E,GAAGzD,EAAI02E,YAUvB,OATIkC,IACDpgB,EAASogB,EAAU7tE,QAAQxK,EAAIsL,GAE/BvK,EAAOu3E,qBAGHruE,GAASlJ,EAAO22E,YAAYztE,EAAS/G,GAAG+0D,IAAS,IAGjDA,CAAM,EAGhBl3D,EAAOo3E,gBAAkB,SAAUV,GAChBv0E,GAAGzD,EAAI02E,YAEbprE,WAAW0sE,GAErB12E,EAAOu3E,qBAEPv3E,EAAOa,UACV,EAEAb,EAAOu3E,mBAAqB,WACpBp1E,GAAGzD,EAAI02E,cAGRjzE,GAAGzD,EAAI02E,YAAY9rE,gBAAgB3E,OAAS,GAC7CxC,GAAGzD,EAAI02E,YAAYjyE,OACnBhB,GAAGzD,EAAI22E,cAAcjyE,SAIrBjB,GAAGzD,EAAI02E,YAAYhyE,OACnBjB,GAAGzD,EAAI22E,cAAclyE,QAE3B,EAEAnD,EAAOu2E,uBAAyB,CAAC/hE,EAAKgjE,KAEnCh5E,KAAKkzC,gBAAgBpqB,KAAO9S,EAGXrS,GAAGzD,EAAI02E,YAAY9rE,gBACzB7G,SAASmP,IACbA,EAAEzP,IAAMyP,EAAEzP,GAAGzD,EAAI4oB,OAAO1V,EAAEzP,GAAGzD,EAAI4oB,MAAMjkB,SAASmR,EAAI,IAGtDgjE,GAAcx3E,EAAOa,UAAU,EAGvCb,EAAO22E,YAAc,CAAChtE,EAAU+sE,EAAWc,KACxC,IAAKh5E,KAAKopC,QAAS,OAEnB,IAAIxjC,EAAQ5F,KAAKopC,QAAQtgC,QAAQ9B,GAAMA,EAAEpG,IAAMuK,IAAU,GACzD,IAAKvF,EAAO,OAGZ2xE,EAAY3xE,EAAMvB,IACF,eAAZuB,EAAMhF,GAAqB22E,EAAY,QAErB,YAAbA,GAAwC,YAAbA,EACjCA,EAAY,SACO,WAAb3xE,EAAMvB,MAAkBkzE,EAAY,UAC7C,IAAIrB,EACDl2E,KAAKmpC,aAAargC,QAAQ9B,GAChBA,EAAEpG,IAAMgF,EAAMhF,KACrBuF,OAAS,EACX+vE,IAEDqB,EAAY,SAEfW,EAAUv0E,GAAGzD,EAAI8uB,MAAMiqD,UAAU1B,GACjCW,EAAUv0E,GAAGzD,EAAI42E,YAAYmC,UAAU1B,GAEvC,IAAIp1E,EAAU,GACV+2E,EAAU,GA6Bd,GA1BgB,eAAZtzE,EAAMhF,IAAuBZ,KAAKurC,QACnC2tC,EAAUl5E,KAAKknB,SAASC,GAAMA,EAAE6d,gBAAgBhlC,KAAKurC,WAG/C2qC,IACNgD,EAAUl5E,KAAKknB,SAASC,IAEjBnnB,KAAKurC,QAAUvrC,KAAKurC,QAAQ3qC,GAAK,KAAOumB,EAAEvmB,IAC3CumB,EAAE6d,gBAAgBp/B,EAAMgB,mBAKjCsyE,EAAQj1E,SAASkjB,IACdhlB,EAAQmC,KAAK,CACV1D,GAAIumB,EAAEvmB,GACN+B,MAAOwkB,EAAE/lB,OACV,IAEL82E,EACIv0E,GAAGzD,EAAI42E,YACPnzE,GAAGzD,EAAI62E,YACPtyE,OAAO,UAAWtC,GACtB+1E,EAAUv0E,GAAGzD,EAAI42E,YAAYnzE,GAAGzD,EAAI62E,YAAYryE,UAG/B,QAAbkB,EAAMvB,IAAe,CACtB,IAAIgzE,EAAczxE,EAAMQ,SAASjE,QAAQgM,KAAI,SAAUjB,GACpD,MAAO,CACJtM,GAAIsM,EAAEtM,GACN+B,MAAOuK,EAAEmB,KAEf,IAEA6pE,EACIv0E,GAAGzD,EAAI42E,YACPnzE,GAAGzD,EAAIm3E,aACP5yE,OAAO,UAAW4yE,GACtBa,EAAUv0E,GAAGzD,EAAI42E,YAAYnzE,GAAGzD,EAAIm3E,aAAa3yE,SACpD,KAEsB,QAAbkB,EAAMvB,MACZ6zE,EACIv0E,GAAGzD,EAAI42E,YACPnzE,GAAGzD,EAAIo3E,YACP7yE,OAAO,SAAUmB,EAAMm0C,aAC3Bm+B,EAAUv0E,GAAGzD,EAAI42E,YAAYnzE,GAAGzD,EAAIo3E,YAAY5yE,WAGnD,IACGy0E,EAAajB,EAAUv0E,GAAGzD,EAAI8uB,MAAMoqD,cACpCC,EAAgBnB,EACZv0E,GAAGzD,EAAI8uB,MACP+mD,UAAU,CAAEn1E,GAAIu4E,IACvB,GAAIE,GAAiBA,EAAcC,QAAS,CACzC,IAAIC,GAAcF,EAAcC,UAAUr3E,OAAO4H,MAAQ,IAAI,GACzD0vE,GACDF,EAAcx0E,SAAS00E,EAAW34E,GAWxC,CAEKo4E,GAAcx3E,EAAOa,UAAU,EAGvCb,EAAO62E,aAAe,CAACrpD,EAAMkpD,EAAW9vE,GAAS,KAC9C,OAAQ4mB,GACL,IAAK,WACL,IAAK,eACL,IAAK,SACL,IAAK,YAEe,SAAbuoD,GACDW,EAAUv0E,GAAGzD,EAAI42E,YAAYmC,UAAU,UAI1C,MAEH,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eAEFf,EAAUv0E,GAAGzD,EAAI42E,YAAYmC,UAAU,SACvCz3E,EAAOa,WACP,MAEH,IAAK,YACL,IAAK,YAEF61E,EAAUv0E,GAAGzD,EAAI42E,YAAYmC,UAAU,UACvC,MAEH,IAAK,iBACL,IAAK,qBAEF,IAAI92E,EAAU,GAGdnC,KAAKknB,SACDC,GAAsB,MAAhBnnB,KAAKurC,SAAmBpkB,EAAEvmB,IAAMZ,KAAKurC,QAAQ3qC,KACrDqD,SAASkjB,IACRhlB,EAAQmC,KAAK,CACV1D,GAAIumB,EAAEvmB,GACN+B,MAAOwkB,EAAE/lB,OACV,IAGL82E,EACIv0E,GAAGzD,EAAI42E,YACPnzE,GAAGzD,EAAI+2E,sBACPxyE,OAAO,UAAWtC,GACtB+1E,EACIv0E,GAAGzD,EAAI42E,YACPnzE,GAAGzD,EAAI+2E,sBACPvyE,UAGJwzE,EAAUv0E,GAAGzD,EAAI42E,YAAYmC,UAAU,cACvC,MAEH,IAAK,gBACL,IAAK,oBACFf,EACIv0E,GAAGzD,EAAI42E,YACPnzE,GAAGzD,EAAIi3E,YACP1yE,OAAO,UAAWzE,KAAK03E,wBAC3BQ,EAAUv0E,GAAGzD,EAAI42E,YAAYnzE,GAAGzD,EAAIi3E,YAAYzyE,UAGhDwzE,EAAUv0E,GAAGzD,EAAI42E,YAAYmC,UAAU,cACvC,MAEH,IAAK,qBACL,IAAK,yBAA0B,CAC5B,IAKI7C,EALAoD,EAAY,GAMbruE,EAAW+sE,EAAUv0E,GAAGzD,EAAI0F,OAAOqG,WACtC,GAAgB,eAAZd,GAA6BnL,KAAKurC,QACnC6qC,EAAep2E,KAAKurC,QAAQ3qC,OACxB,CACJ,IAAIgF,EAAQ5F,KAAKopC,QAAQtgC,QAAQ9B,GAAMA,EAAEpG,IAAMuK,IAAU,GACrDvF,IAAOwwE,EAAexwE,EAAMQ,SAASO,WAC5C,CAEI3G,KAAKy5E,cAAgBrD,GACtBp2E,KAAKy5E,aACDr0D,iBACG8G,GACEA,EAAGjB,YAAciB,EAAGjB,WAAWrqB,IAAMw1E,IAE1CnyE,SAASioB,IACPstD,EAAUl1E,KAAK,CACZ1D,GAAIsrB,EAAGtrB,GACP+B,MAAOupB,EAAG9qB,OACX,IAIX82E,EACIv0E,GAAGzD,EAAI42E,YACPnzE,GAAGzD,EAAIk3E,gBACP3yE,OAAO,UAAW+0E,GACtBtB,EAAUv0E,GAAGzD,EAAI42E,YAAYnzE,GAAGzD,EAAIk3E,gBAAgB1yE,UAGpDwzE,EAAUv0E,GAAGzD,EAAI42E,YAAYmC,UAAU,kBACvC,KACH,CAEA,QAEGf,EAAUv0E,GAAGzD,EAAI42E,YAAYmC,UAAU1B,GAEnCnvE,GAAQ5G,EAAOa,WAGzB,EAGHb,EAAO82E,wBAA0B,CAAC31E,EAAOu1E,KAEtC,IAAI/1E,EAAU,GAEVu3E,EAAQ15E,KAAKknB,SAASC,GAChBA,EAAEvmB,IAAM+B,IACf,GACC+2E,IACDA,EAAM3yE,QAAQC,IACHA,EAAEg5B,eACV/7B,SAASkjB,IACThlB,EAAQmC,KAAK,CACV1D,GAAIumB,EAAEvmB,GACN+B,MAAOwkB,EAAEliB,OAAO7D,MAAQ,IAAM+lB,EAAE/lB,OACjC,IAGL82E,EACIv0E,GAAGzD,EAAI42E,YACPnzE,GAAGzD,EAAIg3E,sBACPzyE,OAAO,UAAWtC,GACtB+1E,EAAUv0E,GAAGzD,EAAI42E,YAAYnzE,GAAGzD,EAAIg3E,sBAAsBxyE,UAC7D,EAKHlD,EAAOa,SAAW,KACVrC,KAAK2zE,kBAEPnyE,EAAOyK,WAEPzD,QAAQC,KAAK,oDACbjH,EAAOgC,UAAUnB,WACjBrC,KAAKwP,KAAK,YAGN,GAGVhO,EAAOgM,cAAgB,KACpBxN,KAAK2zE,iBAAkB,CAAI,EAG9BnyE,EAAOiM,gBAAkB,KACtBzN,KAAK2zE,iBAAkB,CAAK,EAkB/BnyE,EAAOyK,SAAW,KACf,IAAIinC,EAAkB,CACnBpqB,KAAM,MACN3H,MAAO,IAGV,IAAI23D,EAAYn1E,GAAGzD,EAAI02E,YAyEvB,OAxEIkC,GACDA,EAAUhuE,gBAAgB7G,SAAQ,CAACi0E,EAAWnsE,KAC9B,GAATA,IACDmnC,EAAgBpqB,KAAOovD,EAAUv0E,GAAGzD,EAAI4oB,MAAM7c,YAGjD,IAAI0tE,EAAazB,EAAUv0E,GAAGzD,EAAI0F,OAClC,GAAK+zE,EAAL,CAGA,IAAIjvE,EAAUivE,EAAW1tE,WACzB,GAAKvB,EAAL,CAGA,IAAIokB,EACA8qD,EAAc1B,EACdv0E,GAAGzD,EAAI0F,OACPi0E,WACA53E,OAAOR,KAAKoI,KAAKf,QAAQo1C,GAAQA,EAAIt9C,IAAM8J,IAAS,GACpDkvE,IAAa9qD,EAAQ8qD,EAAY9qD,YAAS5E,GAG9C,IAAI8E,EAAO,KACRmqD,EAAajB,EAAUv0E,GAAGzD,EAAI8uB,MAAMoqD,cACpCC,EAAgBnB,EACZv0E,GAAGzD,EAAI8uB,MACP+mD,UAAU,CAAEn1E,GAAIu4E,IACnBE,GAAiBA,EAAcptE,WAChC+iB,EAAOqqD,EAAcptE,YAGxB,IAAItJ,EAAQ,KACTm3E,EAAc5B,EAAUv0E,GAAGzD,EAAI42E,YAAYsC,cAC3CW,EAAsB7B,EAClBv0E,GAAGzD,EAAI42E,YACPf,UAAU,CAAEn1E,GAAIk5E,IACvB,GAAIC,GAAuBA,EAAoB9tE,SAC5CtJ,EAAQo3E,EAAoB9tE,gBACxB,GACJ8tE,GACAA,EAAoBjvE,gBACrB,CACC,IAAIrF,EAAO,GACXs0E,EAAoBjvE,gBAAgB7G,SAAS+0B,IAC1CvzB,EAAKnB,KAAKX,GAAGq1B,GAAS/sB,WAAW,IAEpCtJ,EAAQ8C,EAAK6I,KAAK,IACrB,CAGA,GAAI3L,aAAiB4d,KAAM,CACxB,IAAIy5D,EAAYh6E,KAAKopC,QAAQtgC,QACzB9B,GAAMA,EAAEpG,IAAM8J,IAChB,GAEC/H,EADCq3E,EACOA,EAAUngC,YAAYl3C,GAEtBA,EAAMw4C,aAEpB,CAEAjI,EAAgB/xB,MAAM7c,KAAK,CACxBwqB,MAAOA,QAAS5E,EAChB7lB,IAAKqG,EACLskB,KAAMA,EACNrsB,MAAOA,GAtDU,CAJG,CA2DrB,IAIR3C,KAAKkzC,gBAAkBA,EAEhBlzC,KAAKkzC,eAAe,EAI9BlzC,KAAKS,GAAK,CACPG,GAAIV,EAAIC,UACR0B,KAAM,CACH,CACGnB,KAAM,OACNE,GAAIV,EAAI02E,WACRtD,QAAQ,EACRpqE,SAAU,IAEb1H,EAAOq3E,kBAGhB,CAGAv1E,KAAKnB,EAAU,CAAC,GAIb,IAAK,IAAIoB,KAHTzD,MAAMwD,KAAKnB,GAGGnC,KAAKwB,OAAOgC,UACvBxD,KAAKwB,OAAOgC,UAAUD,GAAKpB,EAAQoB,IAAMvD,KAAKwB,OAAOgC,UAAUD,GAG9DpB,EAAQynC,iBACT5pC,KAAKqM,UAAUu9B,eAAiBznC,EAAQynC,gBAEvCznC,EAAQsxE,eACTzzE,KAAKy3E,kBAAoB,CACtB,CACG90E,MAAO5C,EAAE,iBACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,aACTa,GAAI,sBAGVZ,KAAK03E,uBAAyBv1E,EAAQuxE,aAE5C,CAEA7uE,SAASuB,GACNA,EAAWA,GAAY,CAAC,EAExBtG,MAAM+E,SAASuB,GAEf,IAAIlG,EAAMF,KAAKE,IACX+5E,EAAQj6E,KAAKwB,OAGjBy4E,EAAMzsE,gBAEN,IAAI0lC,EAAkBlzC,KAAK+B,GAAG2D,UAAUU,GACxC8sC,EAAgB/xB,MAAQ+xB,EAAgB/xB,OAAS,GAGjD,IAAI23D,EAAYn1E,GAAGzD,EAAI02E,YACnBkC,GAAWr1E,MAAMhD,GAAG,GAAIq4E,GAGQ,GAAhC5lC,EAAgB/xB,MAAMhb,QACvB8zE,EAAMlB,qBAGT7lC,EAAgB/xB,MAAMld,SAAS+C,IAC5B,IAAI0xD,EAASuhB,EAAMpD,eAChBqB,EAAYv0E,GAAG+0D,GAElB,GAAiB,MAAbwf,EAAJ,CAEA,IAAItyE,EAAQ5F,KAAKopC,QAAQtgC,QAAQoxE,GAAQA,EAAIt5E,IAAMoG,EAAE3C,MAAK,GAG1D6zE,EAAUv0E,GAAGzD,EAAI4oB,MAAMrkB,OAAO,QAASyuC,EAAgBpqB,MACvDovD,EAAUv0E,GAAGzD,EAAI4oB,MAAMpkB,UAGvBwzE,EAAUv0E,GAAGzD,EAAI0F,OAAOnB,OAAO,QAASuC,EAAE3C,KAC1C6zE,EAAUv0E,GAAGzD,EAAI0F,OAAOlB,UACxBu1E,EAAM9B,YAAYnxE,EAAE3C,IAAK6zE,GAAW,GAGpC,IAAIiB,EAAajB,EAAUv0E,GAAGzD,EAAI8uB,MAAMoqD,cACrCC,EAAgBnB,EACZv0E,GAAGzD,EAAI8uB,MACP+mD,UAAU,CAAEn1E,GAAIu4E,IACnBE,GAAiBA,EAAcx0E,WAChCw0E,EAAc50E,OAAO,QAASuC,EAAEgoB,MAChCqqD,EAAc30E,WAIjBwzE,EAAUiC,aACVF,EAAM5B,aAAarxE,EAAEgoB,KAAMkpD,GAC3BA,EAAUkC,eAIV,IAAIN,EAAc5B,EAAUv0E,GAAGzD,EAAI42E,YAAYsC,cAC5CW,EAAsB7B,EAClBv0E,GAAGzD,EAAI42E,YACPf,UAAU,CAAEn1E,GAAIk5E,IACvB,GAAIC,GAAuBA,EAAoBl1E,SAGzCe,GACa,QAAbA,EAAMvB,KACN2C,EAAErE,QACS,QAAVqE,EAAEgoB,MACU,WAAVhoB,EAAEgoB,MACQ,iBAAVhoB,EAAEgoB,MACQ,oBAAVhoB,EAAEgoB,MAEL+qD,EAAoBt1E,OAAO,QAAS,IAAI8b,KAAKvZ,EAAErE,QAE/Co3E,EAAoBt1E,OAAO,QAASuC,EAAErE,OAGzCo3E,EAAoBr1E,eAChB,GACJq1E,GACAA,EAAoBjvE,gBACrB,CACC,IAAIrF,GAAQuB,EAAErE,OAAS,IAAI6kB,MAAM,KAC7Bzb,EAAQ,EACZguE,EAAoBjvE,gBAAgB7G,SAAS+0B,IAC1Cr1B,GAAGq1B,GAASmhD,aACZx2E,GAAGq1B,GAASn0B,SAASY,EAAKsG,IACb,GAATA,GACDkuE,EAAM3B,wBAAwB7yE,EAAKsG,GAAQmsE,GAE9Cv0E,GAAGq1B,GAASohD,eAEZruE,GAAO,GAEb,CAEInG,GAAsB,QAAbA,EAAMvB,MAChB6zE,EAAUiC,aACVF,EAAM5B,aAAarxE,EAAEgoB,KAAMkpD,GAC3BA,EAAUiC,aAxEgB,CAyE7B,IAIHF,EAAMxsE,iBACT,CASAqlC,aAOG,OANK9yC,KAAKq6E,sBACPr6E,KAAKq6E,oBAAsBr6E,KAAK+B,GAAGoxB,iBAChC,GAAGnzB,KAAKE,IAAIC,yBAIXH,KAAKq6E,oBAAoBxK,oBAAoB7vE,KAAKiM,WAC5D,iEC/vCH,MAAMquE,EAAa,EAAQ,OAE3B,IAAIv6E,EAAI,KAER,MAAMw6E,UAAmB,IACtB56E,YAAYE,EAAQkC,GACjBjC,MAAMD,EAAQ,CACXqK,KAAM,GAAGrK,mBACT26E,OAAQ,GAAG36E,qBACX+F,MAAO,GAAG/F,sBAGbG,KAAKH,OAASA,EAEdG,KAAKurC,QAAU,KAIfvrC,KAAKy6E,gBAAkB,KAKvBz6E,KAAK+B,GAAKA,EAELhC,IACFA,EAAI,IAAI6V,IACE5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,GAG9C,CAOA8kE,SACG,MAAMC,EAAO36E,KAEb,MAAO,CACJ6B,KAAM,CACH,CACGnB,KAAM,SACNk3E,SAAS,EACTz2E,KAAM,CACH,CAEGT,KAAM,QACNM,MAAO,GACPI,MAAOrB,EAAE,QAEZ,CAEGW,KAAM,QACNE,GAAIZ,KAAKE,IAAI0F,MACbzD,QAASnC,KAAKgL,cAAa,GAC3B5I,GAAI,CACDC,SAAU8C,eAAgBgG,GACvB,MAAMyvE,EAAY56E,KAAKyL,sBAEjBkvE,EAAKxC,YAAYhtE,EAAUyvE,EACpC,IAGN,CAEGl6E,KAAM,QACNM,MAAO,GACPI,MAAOrB,EAAE,OAEZ,CACGW,KAAM,YACNiC,MAAO,SACP5B,OAAQ,GACR85E,SAAU,IACV14E,QAAS,CACN,CAAEvB,GAAI,SAAU+B,MAAO5C,EAAE,WACzB,CAAEa,GAAI,UAAW+B,MAAO5C,EAAE,aAE7BuzE,OAC4B,MAAzBtzE,KAAK86E,mBACJ96E,KAAK86E,iBAAiB30E,OAC1B/D,GAAI,CACDC,SAAU,SAAU2T,GACjB,MAAM4kE,EAAY56E,KAAKyL,gBAEvBkvE,EAAKI,0BACFH,EACO,WAAP5kE,EAEN,IAIN,CAAC,EAED,CACGs9D,QAAQ,GAEX,CAEG5yE,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EAEXC,MAAO,WACJ,MAAM22E,EAAYl4E,KAAKyL,gBAAgBA,gBAEvCkvE,EAAKK,WAAW9C,EACnB,MAMlB,CAOAz3E,KAEG,MAAO,CACJoB,KAAM,CACH,CACGnB,KAAM,OACNE,GAAIZ,KAAKE,IAAIgK,KACbopE,QAAQ,EACR3xE,YAAY,EACZuH,SAAU,IAEb,CACGxI,KAAM,SACNE,GAAIZ,KAAKE,IAAIs6E,OACbjvE,KAAM,aACN3J,KAAM,aACNR,MAAOrB,EAAE,qBACTwB,MAAO,KACJvB,KAAKi7E,SAAS,IAK7B,CAEA33E,KAAKvB,GACF,MAAMm5E,EAAQv3E,GAAG3D,KAAKE,IAAIgK,MAG1B,OAFIgxE,GAAOn5E,EAAG0Y,MAAM/W,OAAOw3E,EAAOn5E,EAAG0Y,MAAM7W,aAEpC6L,QAAQC,SAClB,CAUAurE,QAAQlvE,GACL,MAAMmvE,EAAQv3E,GAAG3D,KAAKE,IAAIgK,MAG1B,GAFqBlK,KAAKgL,cAAa,GAEtB7E,OAAS,EAAG,OAE7B,MAAM1F,EAAKT,KAAK06E,SACVhiB,EAASwiB,EAAMjwE,QAAQxK,EAAIsL,GAIjC,OAFA/L,KAAKm7E,aAEEziB,CACV,CAaA1tD,aAAaW,GACV,IAAIxJ,GAAWnC,KAAKurC,QAAQxkC,UAAY,IAAIoH,KAAKnH,IACvC,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UAsBf,OAlBIuK,GACahI,GAAG3D,KAAKE,IAAIgK,MAEpBY,gBAAgB7G,SAASi0E,IAE5B,IAAKA,IAAcA,EAAUv0E,GAAI,OAEjC,MAAMg2E,EAAazB,EAAUv0E,GAAG3D,KAAKE,IAAI0F,OAEzC,IAAK+zE,EAAY,OAEjB,MAAMjvE,EAAUivE,EAAW1tE,WAEtBvB,IAELvI,EAAUA,EAAQ2G,QAAQo1C,GAAQA,EAAIt9C,IAAM8J,IAAQ,IAGnDvI,CACV,CAgBA8J,WACG,MAAM6B,EAAS,GACTotE,EAAQv3E,GAAG3D,KAAKE,IAAIgK,MA8D1B,OA5DIgxE,GACDA,EAAMpwE,gBAAgB7G,SAASm3E,IAC5B,MAAMR,EAAYQ,EAAetwE,gBAAgB,GAGjD,IAAK8vE,IAAcA,EAAUj3E,GAAI,OAEjC,MAAMg2E,EAAaiB,EAAUj3E,GAAG3D,KAAKE,IAAI0F,OAEzC,IAAK+zE,EAAY,OAEjB,MAAMjvE,EAAUivE,EAAW1tE,WAE3B,IAAKvB,EAAS,OAEd,MAAM2wE,EAAmBT,EAAU9vE,gBAAgB,GAC7CwwE,EAAoBV,EAAU9vE,gBAAgB,GAEpD,IAAKuwE,IAAqBC,EAAmB,OAE7C,MAAM33C,EAAY3jC,KAAKurC,QAAQx9B,UAAUrD,GACnCsL,EAAM,CACTtL,QAASA,GAIZ,GAAI2wE,GAAoBA,EAAiBE,YACtC,GACqB,kBAAlB53C,EAAUt/B,KACQ,SAAlBs/B,EAAUt/B,IAEV2R,EAAIrT,MAAQghC,EAAU13B,SAASovE,QAC7B,GACgB,SAAlB13C,EAAUt/B,KACQ,aAAlBs/B,EAAUt/B,IAIV,GAAmC,GAFVg3E,EAAiBvwE,gBAAgB,GAErCmB,WAClB+J,EAAIrT,MAAQ,sBACV,CACF,MAAM20E,EAAa+D,EAAiBvwE,gBAAgB,GAEpDkL,EAAIrT,MAAQghC,EAAU13B,SAASqrE,EAClC,MAGEthE,EAAIrT,MAAQghC,EAAU13B,SAASovE,QAG9BC,GAAqBA,EAAkBC,cAC7CvlE,EAAIwlE,gBAAiB,EACrBxlE,EAAIrT,MAAQ24E,EAAkBrvE,YAIjC6B,EAAOxJ,KAAK0R,EAAI,IAIflI,CACV,CAOA9I,WAAWC,GACRjF,KAAKurC,QAAUtmC,EAEfjF,KAAKy5B,SAAWz5B,KAAK+B,GAAG81B,eAAe,CAAC,GACxC73B,KAAKy6E,gBAAkB,IAAIH,EACxB,CACGl0E,SAAU,CACP6rD,WAAW,EACXnwD,WAAY,IAGlB9B,KAAKy5B,UAERz5B,KAAKy6E,gBAAgBz1E,WAAWC,GAEhCjF,KAAK6E,SAAS,KACjB,CASAm2E,WAAW9C,GACMv0E,GAAG3D,KAAKE,IAAIgK,MAEpBsB,WAAW0sE,GACjBl4E,KAAKm7E,YACR,CAYAh2E,kBAAkBgG,EAAUyvE,GACzB,MAAMh1E,EAAQ5F,KAAKurC,QAAQx9B,UAAU5C,GAErC,IAAKvF,EASF,YARA5F,KAAK+B,GAAGqG,OAAO2sB,QACZ,IAAIzsB,MAAM,+BAA+B6C,MACzC,CACGmE,QAAS,kDACTuqB,QAAS1uB,IAOlB,MAKGswE,EALoB71E,EAAM63D,gBACOhD,YAC9Bz6D,KAAKy5B,SACLz5B,KAAKy6E,iBAE6Bt6E,UAClCH,KAAK+B,GAAGw3B,KACRv5B,KAAKH,QAELgM,EAAa+uE,EAAU9vE,gBAE7B,IAAI4wE,EAAYD,EAAmBh7E,GAyBnC,OAtBAm6E,EAAUpvE,WAAWK,EAAW,IAE5B7L,KAAK86E,kBAAkB30E,OACxBy0E,EAAU3vE,QACP,CACGvK,KAAM,aACNyB,QAASnC,KAAK86E,iBACdxH,QAAQ,GAEX,GAGHsH,EAAU3vE,QACP,CACGqoE,QAAQ,GAEX,SAGAtzE,KAAK27E,OAGH/1E,EAAMvB,KACX,IAAK,gBACL,IAAK,OACFq3E,EAAYA,EAAU75E,KAAK,GAC3B65E,EAAU1D,QAAQv2E,KAAKoI,YACbjE,EAAMg2E,cAAcztE,KAAK9D,IACtB,CAAEzJ,GAAIyJ,EAAEgE,KAAM1L,MAAO0H,EAAEgE,UAC3B,GAES,SAAdzI,EAAMvB,KACPq3E,EAAU1D,QAAQv2E,KAAKoI,KAAKiiC,QAAQ,CACjClrC,GAAI,kBACJ+B,MAAO,oBAKb,MAEH,IAAK,OACL,IAAK,WACF+4E,EAAY,CACTh7E,KAAM,SACNmB,KAAM,CACH,CACGnB,KAAM,WACNoB,WAAY,EACZ+5E,WAAY97E,EAAE,qBACdqC,GAAI,CACDC,SAAU,SAAUw1E,GACjB,MAAMiE,EAAS97E,KAAKyL,gBAEpB,IAAKqwE,EAAQ,OAEb,MAAMxE,EAAawE,EAAOhxE,gBAAgB,GAErCwsE,IAELO,EAASP,EAAW3yE,OAAS2yE,EAAW1yE,OAC3C,IAGN82E,IAQZd,EAAUpvE,WAAWK,EAAW,IAChC+uE,EAAU3vE,QAAQywE,EAAW,GAE7BD,EAAmBn4E,OAGfsC,EAAMwpE,eACPxpE,EAAMwpE,cAAc,CAAC,EAAGpvE,KAAK+B,GAAGw3B,KAAM1tB,EAAW,GAAG6B,OAEvD1N,KAAK+6E,0BACFH,EAC6B,YAA7B/uE,EAAW,GAAGI,YAEjBtI,GAAGi3E,GAAWhM,SACdgM,EAAUjC,cAAc/J,SAExB5uE,KAAK+7E,OACR,CAcAl3E,SAASuB,GACN,MAAM80E,EAAQv3E,GAAG3D,KAAKE,IAAIgK,MAErBgxE,IAGLz3E,MAAMhD,GAAG,GAAIy6E,IAEb90E,EAAWA,GAAY,IACVD,OAAS,IAEtBC,EAASnC,SAAQkB,MAAOiJ,IACrB,MACMwsE,EADiBj3E,GAAG3D,KAAKi7E,WACEnwE,gBAAgB,GACxB8vE,EAAU7E,UAChC,CAAEr1E,KAAM,aACR,QAGcmE,SAASuJ,EAAKotE,eAAiB,UAAY,UAE5D,MAAMQ,EAASpB,EAAUj3E,GAAG3D,KAAKE,IAAI0F,OAErCo2E,EAAOv3E,OAAO,QAAS2J,EAAK1D,SAC5BsxE,EAAOt3E,gBAED1E,KAAKm4E,YAAY/pE,EAAK1D,QAASkwE,GAErC,MAAMj3C,EAAY3jC,KAAKurC,QAAQx9B,UAAUK,EAAK1D,SAE9C,IAAKi5B,EAAW,OAGhB,GAAIv1B,EAAKotE,eAKN,YAJ0BZ,EAAU9vE,gBAAgB,GAElCjG,WAAWuJ,EAAKzL,OAMrC,MAAM04E,EAAmBT,EAAU9vE,gBAAgB,GAC7CwiB,EAAU,CAAC,EAEjBA,EAAQqW,EAAU78B,YAAcsH,EAAKzL,OAAOA,OAASyL,EAAKzL,MAC1DghC,EAAU9+B,SAASw2E,EAAkB/tD,EAAQ,IAGhDttB,KAAKm7E,cACR,CAMAA,aACG,MAAMD,EAAQv3E,GAAG3D,KAAKE,IAAIgK,MAE1B,GAAIgxE,EAAO,CACR,MAAMrvE,EAAaqvE,EAAMpwE,gBAErBe,GAAcA,EAAW1F,OAAQ+0E,EAAMt2E,OACtCs2E,EAAMv2E,OACXu2E,EAAMtM,QACT,CACH,CAEAqN,mBAAmB95E,GAChBnC,KAAK86E,iBAAmB34E,CAC3B,CAEA44E,0BAA0BH,EAAWsB,GAClC,MAAMC,EAAgBvB,EAAU9vE,gBAAgB,GAC1CsxE,EAAiBxB,EAAU9vE,gBAAgB,GAE7CoxE,GACDC,EAAcx3E,OACdy3E,EAAex3E,SAEfu3E,EAAcv3E,OACdw3E,EAAez3E,OAErB,CAEAQ,aACGxB,GAAG3D,KAAKE,IAAIs6E,QAAQp1E,UAEpB,MAAM81E,EAAQv3E,GAAG3D,KAAKE,IAAIgK,MAErBgxE,IAEAA,EAAM71E,oBAAoBrF,KAAKsD,KAAKtD,KAAK+B,IAE9Cm5E,EAAM71E,aAAa,CAAEzD,KAAM,SAC9B,CAEAm6E,QACGp4E,GAAG3D,KAAKE,IAAIs6E,QAAQ9yE,SACpB/D,GAAG3D,KAAKE,IAAIgK,MAAMvC,cACrB,EAGH,2BCjkBA,MAAM00E,EAAc,EAAQ,OAEtBt8E,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,cAAsB28E,EACpC18E,YAAYgG,EAAQV,EAAQ+xC,GACzBl3C,MAAM6F,EAAQV,EAAQ+xC,GAEtBh3C,KAAK+B,GAAGK,GAAG,0BAA2Bqf,IAC/BA,EAAI7gB,IAAMZ,KAAKY,IAChBZ,KAAKwP,KAAK,qBAAsBxP,KACnC,GA0BN,CASAiqB,mBAAmB/pB,GAChBF,KAAKs8E,cAAgB,KAErB,MAAMx6C,EAAgB,CACnB1gC,MAAO,GACP0F,WAAY,GACZT,SAAU,EACViyC,SAAU,EACVl4C,OAAQ,EACRuuE,gBAAiB,IAGpB,IAAK,MAAM3nE,KAAK86B,EAAe,CAC5B,MAAM3hC,EAAYwD,GAAGzD,EAAI8G,IACrB7G,GAAWA,EAAU0E,SAASi9B,EAAc96B,GACnD,CAGA,MAAMu1E,EAAc54E,GAAGzD,EAAIs8E,eAAezG,UACvC,CACGr1E,KAAM,OACNQ,IAAK,oBAER,OAECq7E,EAAYp2E,QACbo2E,EAAYt4E,SAASmP,IAClBzP,GAAGzD,EAAIs8E,eAAehxE,WAAW4H,EAAE,IAIzCzP,GAAGzD,EAAIu8E,eAAe93E,OAGtBhB,GAAGzD,EAAIw8E,cAAc/3E,MACxB,CAUAslB,sBAAsB/pB,EAAK0F,GAaxB,GAZA5F,KAAKs8E,cAAgB12E,EAErBjC,GAAGzD,EAAIkB,OAAOyD,SAASe,EAAMxE,OAC7BuC,GAAGzD,EAAI4G,YAAYjC,SAASe,EAAMkB,YAClCnD,GAAGzD,EAAImG,UAAUxB,SAASe,EAAMQ,SAASC,UACzC1C,GAAGzD,EAAIo4C,UAAUzzC,SAASe,EAAMQ,SAASkyC,UACzC30C,GAAGzD,EAAIE,QAAQyE,SAASe,EAAMQ,SAAShG,QAEnCJ,KAAKs8E,eACN34E,GAAGzD,EAAIu8E,eAAe73E,OAGrBgB,EAAMQ,UAAYR,EAAMQ,SAASuoE,gBAAiB,CACnD,IAAIxtD,EAAQvb,EAAMQ,SAASuoE,gBAC3B,GAAoB,iBAATxtD,EACR,IACGA,EAAQtN,KAAK0D,MAAM4J,EAGtB,CAFE,MAAO9W,GAET,EAEF8W,GAAS,IAAIld,SAASmC,IACpBR,EAAM62E,cAAcv8E,EAAKkG,EAAS,GAExC,CACH,CAsBA6jB,wBAAwBrqB,EAAKM,EAAKsB,EAAQm7E,GAKvC,IAAIC,EAAgB,SAAU/E,EAAQC,GAIhCD,IAHHC,EAASA,GAAU,KAIhBA,GAAUn0E,GAAGzD,EAAI4G,YAAYmF,YAC7BtI,GAAGzD,EAAI4G,YAAYsmD,aAEnBzpD,GAAGzD,EAAI4G,YAAYjC,SAASgzE,EAElC,EAGIr2E,EAAOo7E,gBACRA,EAAgBp7E,EAAOo7E,eAG1B,IAAIC,EAAmB,SAAUhF,EAAQC,EAAQ53E,GAC9CsI,QAAQC,KACL,8DAEN,EAEA,MAAMg0E,EAAiBv8E,GACbF,KAAKs8E,cAAcG,cAAcv8E,GAIvCsB,EAAOq7E,mBACRA,EAAmBr7E,EAAOq7E,kBAG7B,MAAMC,EAAuB33E,MAAO43E,IACjC,GACGA,GACA/8E,KAAKs8E,eACLt8E,KAAKs8E,cAAc17E,IACnBZ,KAAKs8E,cAAcl2E,SAASkyC,UAAYykC,EACzC,CAIC,MAAMlzE,QAAa7J,KAAKs8E,cAAcr3E,OAAO+C,QAAQyoB,MAAM,CACxD7B,MAAO,CACJ9F,KAAM,MACN3H,MAAO,CACJ,CACG9c,IAAKrE,KAAKs8E,cAAc17E,GACxBouB,KAAM,eAMlB,GAAInlB,EAAK4mB,MAAQ,EAAG,CACjB,MAAMusD,EAAkBj9E,EACrB,8DACA,CAAC8J,EAAK4mB,QAGT9sB,GAAGzD,EAAIw8E,cAAc73E,SAASm4E,GAC9Br5E,GAAGzD,EAAIw8E,cAAc93E,MACxB,MACGjB,GAAGzD,EAAIw8E,cAAc/3E,MAI3B,MACGhB,GAAGzD,EAAIw8E,cAAc/3E,MACxB,EA0GH,MAvGY,CAET9C,KAAM,CAKH,CACGnB,KAAM,OACNE,GAAIV,EAAIkB,MACR+F,KAAM,QACN/F,MAAOrB,EAAE,SACTs2E,YAAat2E,EAAE,SACf+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxChB,IAAK,oBACLkB,GAAI,CACDC,SAAU,SAAUw1E,EAAQC,GACzB8E,EAAc/E,EAAQC,EACzB,IAGN,CACGp3E,KAAM,OACNE,GAAIV,EAAI4G,WACRK,KAAM,aACNkC,cAAc,EACdjI,MAAOrB,EAAE,cACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCm0E,YAAat2E,EAAE,wBAElB,CACGW,KAAM,QACNE,GAAIV,EAAI63C,iBACR32C,MAAOrB,EAAE,eACTsB,MAAO,SAEV,CACGX,KAAM,WACNE,GAAIV,EAAImG,SACRc,KAAM,WACN00E,WAAYj8E,EAAI4S,OAAOw3D,kBACvBloE,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,mBACxCta,OAAO,GAEV,CACGjC,KAAM,WACNE,GAAIV,EAAIo4C,SACRnxC,KAAM,WACNmsE,QAASqJ,EAAMlpC,eACfooC,WAAYj8E,EAAI4S,OAAO8lC,SAEvBx2C,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,mBACxC7a,GAAI,CACDC,SAAU8C,MAAO0yE,EAAQC,KACtB+E,EAAiBhF,EAAQC,EAAQ53E,SAG3B48E,EAAqBjF,EAAO,IAK3C,CACGn3E,KAAM,QACNE,GAAIV,EAAIw8E,aACRx7E,IAAK,CAAE+7E,MAAO,QACd77E,MAAO,GACPkyE,QAAQ,GAGX,CACG5yE,KAAM,WACNE,GAAIV,EAAIE,OACR+G,KAAM,SACNmsE,QAASqJ,EAAMjpC,cACfmoC,WAAYj8E,EAAI4S,OAAOpS,OACvBiJ,cAAc,EACdvH,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGrc,GAAIV,EAAIs8E,cACR36E,KAAM,IAET,CACGjB,GAAIV,EAAIu8E,cACR/7E,KAAM,SACNU,MAAOrB,EAAE,wBACTmB,IAAK,gBACLK,MAAO,KACJk7E,EAAcv8E,EAAI,GAKxB,CACGU,GAAIV,EAAIyuE,gBACRjuE,KAAM,OACN4yE,QAAQ,EACRnsE,KAAM,oBAMlB,CAEA8iB,oBAAoB7jB,GACjB,MAAM0R,EAAM,CACT1W,MAAOgF,EAAShF,MAChB0F,WAAYV,EAASU,WACrBV,SAAUA,GAMb,cAHOA,EAAShF,aACTgF,EAASU,WAETgR,CACV,CAEA2kE,cAAcv8E,EAAKkG,GACJpG,KAAKiF,OAAOF,YAAYnF,IAApC,MACMs9E,EAASl9E,KAAK+B,GAAGoxB,iBACpB,GAAGnzB,KAAKY,6BAEX+C,GAAGzD,EAAIs8E,eAAevxE,QAAQ,CAC3BvK,KAAM,OACNQ,IAAK,mBACLC,KAAM,CACH,CACGU,KAAM,CACH,CACGnB,KAAM,OACNyG,KAAM,iBACNrF,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCS,MACGyD,GAAYA,EAAS6iE,eAChB7iE,EAAS6iE,eACT,GACR7nE,MAAOrB,EAAE,oBAEZm9E,EAAOz8E,KAGb,CACGC,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,MAAM22E,EAAYl4E,KAAKyL,gBACvB9H,GAAGzD,EAAIs8E,eAAehxE,WAAW0sE,EACpC,MAITv0E,GAAGu5E,EAAOh9E,IAAI0H,MAAMjD,OAEpBu4E,EAAO9pD,WAAWpzB,KAAKiF,OAAO8B,UAC1BX,GAAYA,EAAS+a,OAAO+7D,EAAOr4E,SAASuB,EAAS+a,MAC5D,CASA5b,UACG,MAAMgC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAoBrC,OAXgB,GALbvH,KAAKiF,OAAO8B,QAAQC,GAEdA,EAAEpG,IAAMZ,KAAKY,IACboG,EAAEF,WAAWqR,eAAiBnY,KAAK8G,WAAWqR,gBAEjDhS,QAEHoB,EAAUgW,SACP,aACAxd,EACG,yEACA,CAACC,KAAK8G,cAKRS,CACV,CAiBApC,gBAEQnF,KAAKY,WAKJZ,KAAK0sE,oBAKL5sE,MAAM8U,gBAEN5U,KAAKiF,OAAOi7B,YAAYlgC,MACjC,CAWAmF,aACG,IAAIgpE,GAAQ,EASZ,GAPKnuE,KAAKY,KACPutE,GAAQ,IAMNA,GAASnuE,KAAKoG,SAASkyC,UAAYt4C,KAAKoG,SAAS0iC,QAAS,CAC5D,MAAM9gC,EAAQhI,KAAKiF,OAAO+C,QAGpB8F,QAAe9F,EAAMinB,QAAQ,CAChCL,MAAO,CACJ9F,KAAM,MACN3H,MAAO,CACJ,CACG9c,IAAKrE,KAAKY,GACVouB,KAAM,eAMZo3B,EAAQ,GAGdt4C,EAAOjE,KAAK5F,SAAS2rB,IACbA,EAAE5vB,KAAK8G,cAAa8oB,EAAE5vB,KAAK8G,YAAc9G,KAAKoG,SAAS0iC,SAE5Dsd,EAAM9hD,KAAK0D,EAAM0lE,OAAO99C,EAAEhvB,GAAIgvB,GAAG,UAG9BngB,QAAQ4R,IAAI+kC,EACrB,CAgBA,SAZMtmD,MAAM8H,aAKN5H,KAAKiF,OAAO27B,SAAS5gC,OAOtBA,KAAKggC,aAAc,CACrB,MAAMm9C,EAAYhP,EAAQnuE,KAAKkI,gBAAkBlI,KAAKo9E,sBAChDD,CACT,CAEA,OAAOn9E,IACV,CAMAkI,gBACG,OAAOlI,KAAK+B,GAAGsN,QAAQgB,KAAK,CACzBC,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAEAw8E,gBACG,OAAOp9E,KAAK+B,GAAGsN,QAAQ8G,IAAI,CACxB7F,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAEA8rE,cACG,OAAO1sE,KAAK+B,GAAGsN,QAAgB,OAAE,CAC9BiB,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAmBA8tE,aAAavsE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAAS,CACZrB,GAAIZ,KAAK8G,WACT2nE,OAAQzuE,KAAKoB,OAShB,OANIe,EAAQosE,mBAAqBvuE,KAAKoG,SAASC,WAC5CpE,EAAOwsE,OAAS,iCAAiCzuE,KAAK63C,uBACnD51C,EAAOwsE,UAINxsE,CACV,CAiBAmtE,cAAclwD,EAAKtf,EAAK2C,EAAMJ,GAAU,CAYxCk7E,WAAWn+D,EAAKtf,EAAK2C,GAClB,OAAO,CACV,CAYA0J,SAASmC,EAAMkf,GACZ,OAAOlf,EAAKnC,UACf,CAWApH,SAASuJ,EAAMkf,EAASyU,GACrB,IAAK3zB,EAAM,OAEX,IAAI4H,EAQDA,EALY,MAAXsX,GAA+C,MAA5BA,EAAQttB,KAAK8G,aACjB,MAAhBi7B,EAGQzU,GAAuC,MAA5BA,EAAQttB,KAAK8G,YAC1BwmB,EAAQttB,KAAK8G,YAEbwmB,EAJAyU,EAOT3zB,EAAKvJ,SAASmR,EACjB,CAWAynD,cAAc6f,GAIX,MAAO,CAEJv0C,OAAQ,KACE,CACJ1kC,IAAKi5E,IAWX7iB,YAAa,CAAC11D,EAAagQ,KACxBhQ,EAAcA,GAAe/E,KAAK+B,GAAG03B,SAQrC,MAAM9zB,EAAS3F,KAAKy9D,gBAAgB10B,SAapC,OAZApjC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCT,EAAOS,SAAS4R,SAAWhY,KAAKiF,OAAOrE,GACvC+E,EAAOS,SAASsE,QAAU1K,KAAKY,GAEJmE,EAAYujB,QACpC3iB,EACAZ,EACAgQ,EAKsB,EAGlC,CAKAylD,kBACG,MAAO,CACJzxB,OAAQ,KACE,CACJx9B,KAAM,WAMZkvD,YAAa,CAAC11D,EAAagQ,KACxBhQ,EAAcA,GAAe/E,KAAK+B,GAAG03B,SAGrC,MAAM9zB,EAAS3F,KAAKw6D,kBAAkBzxB,SAWtC,OAVApjC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCT,EAAOS,SAAS4R,SAAWhY,KAAKiF,OAAOrE,GACvC+E,EAAOS,SAASsE,QAAU1K,KAAKY,GAEJmE,EAAYujB,QACpC3iB,EACAZ,EACAgQ,EAGsB,EAGlC,CAOAzI,cACG,OAAO6H,OAAOsmC,OAAO,CAAC,EAAGz6C,KAAKoG,SACjC,oBCruBH,MAAMm3E,EAAuB,EAAQ,OAErC99E,EAAOC,QAAU,cAA+B69E,EAS7Ch4E,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAmpE,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOo/D,SAAY/zC,GAEXA,EAAQkwD,OAGH,GAFAx9E,KAAKsgB,OAAOgN,GAMlBrrB,CACV,CAWAw7D,gBACG,OAAO39D,MAAM29D,cAAc,gBAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,oBChEH,MAAMC,EAAqB,EAAQ,OAEnCj+E,EAAOC,QAAU,cAA6Bg+E,EAC3C/9E,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAmpE,aAAavsE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAyBlC,OAvBAF,EAAOqD,OAAS,WAChBrD,EAAOf,IAAM,SACbe,EAAOo/D,SAAW,CAACniD,EAAK6pB,EAAQpmC,EAAOV,IAEhCid,EAAIs+D,OAAet+D,EAAIlf,KAAK8G,YAG5B3E,EAAQ0iD,SAEN,mCACA9b,EAAO40C,SAASz+D,EAAK6pB,EAAQpmC,EAAOV,GACpC,SAMCU,EACM,sDACE,gDAIXV,CACV,CAWAw7D,gBACG,OAAO39D,MAAM29D,cAAc,WAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,mBAIJo5E,CACV,oBC9EH,MAAMvnC,EAAuB,EAAQ,OAErCz2C,EAAOC,QAAU,cAA+Bw2C,EAC7Cv2C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAmpE,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAUlC,OARAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOo/D,SAAY/zC,GACZA,EAAQkwD,OAAelwD,EAAQttB,KAAK8G,YAEjC9G,KAAKsgB,OAAOgN,GAGfrrB,CACV,CAWAw7D,gBACG,OAAO39D,MAAM29D,cAAc,gBAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,oBC7DH,MAAMG,EAAqB,EAAQ,OAEnCn+E,EAAOC,QAAU,cAA6Bk+E,EAC3Cj+E,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAmpE,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOo/D,SAAY/zC,GAEXA,EAAQkwD,OAGH,GAFAx9E,KAAKsgB,OAAOgN,GAMlBrrB,CACV,CAWAw7D,gBACG,OAAO39D,MAAM29D,cAAc,gBAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,oBChEH,MAAMI,EAAqB,EAAQ,OAInCp+E,EAAOC,QAAU,cAA6Bm+E,EAC3Cl+E,YAAYgG,EAAQV,EAAQ+xC,GACzBl3C,MAAM6F,EAAQV,EAAQ+xC,EACzB,CAWA7xC,gBAEG,IAAKnF,KAAKY,GAAI,OAAO6O,QAAQC,UAsB7B,SALM5P,MAAM8U,WAIO5U,KAAK4G,eACP,OAAO6I,QAAQC,UAEhC,MAAMo1B,EAAY9kC,KAAKsrB,UACvB,OAAKwZ,EAGEA,EAAUlwB,UAHMnF,QAAQC,SAIlC,CAeA0nC,mBAAmBl4B,GAChB,IAAIm4B,EAAe,GAEnB,MAAMxtC,EAAO/J,MAAMs3C,mBAAmBl4B,GAChC+lB,EAAejlC,KAAK4G,eAwB1B,OAtBIiD,GAAQo7B,IAEL93B,MAAMC,QAAQvD,GACfwtC,EAAextC,EAAKsE,KAAI,SAAUyhB,GAO/B,OALIA,IACDA,EAAEvhB,KAAOuhB,EAAEvhB,MAAQ42B,EAAa7C,YAAYxS,GAC5CA,EAAEjtB,MAAQitB,EAAEvhB,MAGRuhB,CACV,IACQ/lB,EAAKjJ,IAAMiJ,EAAKgG,MACxBwnC,EAAextC,EACfwtC,EAAahpC,KACVgpC,EAAahpC,MAAQ42B,EAAa7C,YAAYiV,GACjDA,EAAa10C,MAAQ00C,EAAahpC,MACX,iBAARxE,IACfwtC,EAAe,CAAEhpC,KAAMxE,KAItBwtC,CACV,CAEAq3B,aAAavsE,GACVA,EAAUA,GAAW,CAAC,EACtB,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAC5ByD,EAAQ5F,KACF4F,EAAM7D,GAAGw3B,KAEE,MAAnBp3B,EAAQuyB,UACTvyB,EAAQuyB,QAAU,CAAC,GAGtB,IAAIopD,EAAwC,QAA1B99E,KAAKoG,SAASa,SA4DhC,OA1DAhF,EAAOqD,OAASw4E,EAAc,cAAgB,QAC9C77E,EAAO87E,WAAcp7E,GACX3C,KAAK+9E,WAAWp7E,GAE1BV,EAAO+7E,UAAar7E,GACV3C,KAAKg+E,UAAUr7E,GAEzBV,EAAOo/D,SAAYniD,IAChB,IAAIm4B,EAAezxC,EAAMwxC,mBAAmBl4B,GACxCvZ,EAAS,GAEb,GADAA,EAAOrB,KAAK,gCAET+yC,GACAlqC,MAAMC,QAAQiqC,IACdA,EAAalxC,OAEbkxC,EAAapzC,SAAS+R,IACnBrQ,EAAOrB,KACJ,6CAA6C0R,EAAIrT,uCAAoCqT,EAAIpV,iGAC3F,IAEAy2C,EAAalxC,OAAS,GACvBR,EAAOrB,KACJ,8CAA8C+yC,EAAalxC,qBAG7D,KAAIkxC,EAAa10C,MASrB,MAAO,GATqB,CAC5B,IAAIuC,EAAQ,GACR/C,EAAQ0iD,WACT3/C,EAAQ,0GAEXS,EAAOrB,KACJ,uCAAuCY,wBAA4BmyC,EAAa10C,qBAEtF,CAEA,CAEA,OADAgD,EAAOrB,KAAK,UACLqB,EAAO2I,KAAK,GAAG,EAGzBrM,EAAO+1E,QAAU,CACd51E,GAAI,CACD61E,aAAc,WACXryE,EAAMq4E,YAAYj+E,KACrB,GAIH8I,OAAQ,EAAGnG,SAASoT,KAChBpT,GAAS,IAAIwV,cAAc20B,UAAU/2B,GAAU,IAAIoC,gBAGtD2lE,IACD77E,EAAO+1E,QAAQt3E,KAAO,eACtBuB,EAAO+1E,QAAQkG,QAAS,GAGpBj8E,CACV,CAEAg8E,YAAYE,GAGT,MAAMC,EAAQD,EAAS7E,UACU,OAA7Bt5E,KAAKoG,SAASc,cACVk3E,GAAO/xD,KAAK,CAAC,IAAM,IAAIlmB,SAI/B,CAAC,SAAU,UAAUlC,SAASI,IACvBrE,KAAK,OAAOqE,aAEhBrE,KAAK,OAAOqE,WAAerE,KAAK+B,GAAGK,GAChC,qBAAqBiC,KACpB+V,IACMpa,KAAK4G,eAAehG,IAAMwZ,EAAIpC,UAAUomE,EAAMtjE,UAAU,IAEjE,IAGJ9a,KAAKq+E,sBAAsBF,EAAU,KAAMn+E,MAC9C,CAcAq9E,WAAWn+D,EAAc3c,GAGzB,CAWAk7D,gBACG,OAAO39D,MAAM29D,cAAc,UAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,kBAIJo5E,CACV,CAQA7B,WAAW0C,EAAaC,EAAM5wE,EAAMrI,GACjC,MAAMk5E,EAAYl5E,EAClB,OAAO,IAAImK,SAAQ,CAACC,EAASiH,KAC1B,IAAI8nE,GAAe,EAInB,MAAMC,EAAWv8E,IAEdA,EAAUA,EAAQ2G,QAAQsF,IACvB,GAAIA,EAAKC,KAAK8J,cAAc20B,SAASyxC,EAAKpmE,eACvC,OAAO,CACV,IAGEsmE,EAMFz+E,KAAKwP,KAAK,cAAerN,IALzBs8E,GAAe,EACf/uE,EAAQvN,GAKX,EAKGysB,EAAQ5uB,KAAK+B,GAAG2D,UAAU44E,GAAe,CAAC,GAUhD,GATA3wE,EAAOA,GAAQ,GAEVihB,EAAM9F,OAAM8F,EAAM9F,KAAO,OAEzB8F,EAAMzN,QAAOyN,EAAMzN,MAAQ,IAEhCo9D,EAAOA,GAAQ,IAGVv+E,KAAKoG,SAASO,WAAY,MAAO,GAKtC,MAAMg4E,EAAY3+E,KAAK4G,eAGvB,GAAiB,MAAb+3E,EAAmB,MAAM,IAAIr2E,MAAM,oBAEvC,MAAMs2E,EAAY5+E,KAAKsrB,UAGvB,GAAiB,MAAbszD,EAAmB,MAAM,IAAIt2E,MAAM,oBAGvC,MAAMu2E,EAAcF,EAAU32E,QAID,QAA1BhI,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,aACoB,GAAlC5B,GAAQrD,QAAQ68E,eAEhBlwD,EAAMzN,MAAM7c,KAAK,CACdD,IAAKu6E,EAAUh+E,GACfouB,KAAM,YAMiB,OAA1BhvB,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,aACoB,GAAlC5B,GAAQrD,QAAQ68E,iBAGc,GAA1B9+E,KAAKoG,SAASM,SAIfkoB,EAAMzN,MAAM7c,KAAK,CACdD,IAAKu6E,EAAUh+E,GACfouB,KAAM,qBAKTJ,EAAMzN,MAAM7c,KAAK,CACdD,IAAKu6E,EAAUh+E,GACfouB,KAAM,aAOf,MAAM+vD,EAAY/+E,KAAKg/E,aAAapwD,GAEpCnf,QAAQC,UACJ8E,MAAKrP,UAEH,GAAmC,OAA/BnF,MAAMoG,UAAUc,YAGjB,aAAalH,KAAK+B,GAAG6X,QAAQjE,IAAIopE,EACpC,IAEFvqE,MAAKrP,MAAO85E,IACV,GAAIA,EAGD,OADAj/E,KAAKwyE,SAAWyM,EACTP,EAAQ1+E,KAAKwyE,UAGvB,IASI0M,EAAW,WACZ,OAAO,IAAIzvE,SAAQ,CAACC,EAASiH,KAE1BjH,EAAQ,CAAE7F,KAAM,IAAK,GAE3B,EAKA,GACkC,OAA/B7J,MAAMoG,UAAUc,cACflH,MAAMm/E,kBAAoBX,GAAWv8E,QAAQU,OAC/C,CACC,IAAIgD,EAAS,GAGkB,cAA3B64E,GAAWv8E,QAAQvB,MACU,SAA3B89E,GAAWv8E,QAAQvB,OACtBV,MAAMm/E,iBAGEX,GAAWv8E,QAAQU,QAExBgD,EADCwH,MAAMC,QAAQoxE,EAAUv8E,OAAOU,OACvB67E,GAAWv8E,QAAQU,MAAM2L,OAEzBkwE,GAAWv8E,QAAQU,OAL/BgD,EAAS3F,MAAMm/E,iBAQlB,IAAIC,EAAY,CAAC,EACbC,EAAW,GAEfD,EAAUt2D,KAAO,KACjBs2D,EAAUj+D,MAAQ,GAElBxb,EAAO6hB,MAAM,KAAKvjB,SAASmP,IACxBgsE,EAAUj+D,MAAM7c,KAAK,CAClBD,IAAK,OACL2qB,KAAM,SACNrsB,MAAOyQ,GACR,IAEL8rE,EAAW,WACR,OAAOL,EAAY5vD,QAAQ,CACxBL,MAAOwwD,EACPzxE,KAAM0xE,EACNp2E,UAAU,GAEhB,CACH,CACA,IACG,MAAMi1B,QAAgBzuB,QAAQ4R,IAAI,CA3D3Bw9D,EAAY5vD,QAAQ,CACxBL,MAAOA,EACPjhB,KAAMA,EACN1E,UAAU,IAwDiCi2E,MAIxCpxE,EAASowB,EAAQ,GAAGr0B,KAAKid,OAAOoX,EAAQ,GAAGr0B,MAejD,OAZA7J,KAAKwyE,SAAW1kE,EAAOjE,MAAQiE,GAAU,IAGxC9N,KAAKwyE,UAAY,IAAIvuE,SAASi6C,IAC5BA,EAAI7vC,KAAOswE,EAAUv8C,YAAY8b,GACjCA,EAAIv7C,MAAQu7C,EAAI7vC,IAAI,IAIY,OAA/BrO,MAAMoG,UAAUc,aACjBlH,KAAK+B,GAAG6X,QAAQC,IAAIklE,EAAW/+E,KAAKwyE,UAEhCkM,EAAQ1+E,KAAKwyE,SAWvB,CAVE,MAAOrqE,GASN,MARAnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,sEACH1J,MAAO5F,KAAK8F,QACZ8oB,UAGH6vD,GAAe,EACTt2E,CACT,IACD,GAEX,CAEA62E,aAAapwD,GACV,MAAO,GAAG5uB,KAAKY,MAAMiT,KAAKC,UAAU8a,IACvC,CAEAzpB,mBAAmBypB,GAChB,MAAMmwD,EAAY/+E,KAAKg/E,aAAapwD,SAC9B5uB,KAAK+B,GAAG6X,QAAQC,IAAIklE,EAAW,KACxC,CAEAhB,WAAWp7E,GACR,IAAKA,EAAO,MAAO,GACnB,IAAI8C,EAAO,GACX,GAAI0H,MAAMC,QAAQzK,GACfA,EAAMsB,SAAS+R,IACZ,GAAkB,iBAAPA,EACRvQ,EAAKnB,KAAK0R,EAAIpV,QACV,CACJ,IAAI0+E,EAAUt/E,KAAKu/E,eAAevpE,GAClCvQ,EAAKnB,KAAKg7E,EAAQ1+E,GACrB,UAGH,GAAoB,iBAAT+B,EACR8C,EAAKnB,KAAK3B,EAAM/B,QACZ,CACJ,IAAI0+E,EAAUt/E,KAAKu/E,eAAe58E,GAC9B28E,GAAWA,EAAQ1+E,IACpB6E,EAAKnB,KAAKg7E,EAAQ1+E,GAExB,CAEH,OAAO6E,EAAK6I,MACf,CAEA0vE,UAAUr7E,GAEP,GAD4C,QAA1B3C,KAAKoG,SAASa,SACf,CACd,GAAKtE,EAEE,CACJ,IAAI68E,EAAa,GAKjB,OAJW78E,EAAM6kB,MAAM,KAClBvjB,SAAS+R,IACXwpE,EAAWl7E,KAAKtE,KAAKu/E,eAAevpE,GAAK,IAErCwpE,CACV,CARG,MAAO,EASb,CAEG,OADWx/E,KAAKu/E,eAAe58E,EAGrC,CAEA07E,sBAAsB/4E,EAAQnD,EAASyD,EAAOsE,GAC3C,MAAMs0E,EAAYl5E,EAGgB,OAA/BtF,MAAMoG,UAAUc,aAChBs3E,EAAUvyE,aACTrG,EAAMu5E,mBAEPv5E,EAAMu5E,iBAAmBX,EAAUvyE,YAMtC,MAAMwzE,EAAiBt9E,GAASuyB,QAC3BvgB,OAAOsmC,OAAO,CAAC,EAAGt4C,EAAQuyB,SAC1B,CAAE5L,KAAM,MAAO3H,MAAO,IAE3B,GAAIhf,GAASu9E,sBAAuB,CACjC,MAAMC,EAA6B,CAAC3zC,EAAYrmC,EAAQi6E,EAAQ,KAC7D,MAAMC,EAAgBl6E,EAAOmD,QAAQuB,GAAMA,EAAEu1E,QAAUA,IAEvD,MAAO,IACD5zC,EAAW7qB,MAAMhT,KAAK9D,IACtB,GAAIA,EAAEye,KACH,MAAO,CACJA,KAAMze,EAAEye,KACR3H,MAAOw+D,EAA2Bt1E,EAAG1E,EAAQi6E,EAAQ,IAG3D,MAAMj9E,EAAQk9E,EAAc/2E,QACxBg3E,GAAOA,EAAGz7E,MAAQgG,EAAEhG,KAAOy7E,EAAGn9E,QAAU0H,EAAE1H,QAC5C,GAEF,IAAKA,EAAO,OAAO0H,EAEnB,MAAM01E,EAAep9E,GAAOq9E,aAAa/9E,OAAOrB,GAC3C+C,GAAGhB,EAAMq9E,YAAY/9E,OAAOrB,IAC5B,KAEL,IAAKm/E,EACF,MAAMz3E,MACH,mDAGN,MAAM23E,EAAct9E,GAAOq9E,YACtBD,EAAa9zE,YAAc,GAC3B,GAEL,IAAI4rE,EAAS,GAoBb,OAlBIoI,IAOKpI,EANFl1E,EAAMu9E,cAEJt6E,EAAMX,OACF8I,UAAUpL,EAAMq9E,YAAY/9E,OAAOk+E,aACnCZ,eAAeU,GAEVr6E,EAAMX,OACX8I,UAAUpL,EAAMq9E,YAAY/9E,OAAOk+E,aACnCZ,eAAeU,GAAat9E,EAAMu9E,cAKhCD,GAIR,CACJ57E,IAAKgG,EAAEhG,IACP2qB,KAAM,SACNrsB,MAAOk1E,EACT,IAEN,EAGJ4H,EAAet+D,MAAQw+D,EACpBF,EACAt9E,EAAQu9E,sBAEd,CAEA,MAAMU,EAAqBv2E,IACpB20E,EAAU6B,YACXrgF,KAAK80B,eAAe,cAAesrD,GAGtCpgF,KAAKsgF,gBAAgB9B,EAAW30E,EAAMjE,EAAOsE,GAAM,EAAK,EAS3D,OALAlK,KAAK80B,eAAe,cAAesrD,GAAmB9S,KACnD,cACA8S,GAGI,IAAI3wE,SAAQ,CAACC,EAASiH,KAC1B3W,KAAK47E,WAAW6D,EAAgB,GAAI,GAAIjB,GAAWhqE,MAAM3K,IACtD7J,KAAKsgF,gBAAgB9B,EAAW30E,EAAMjE,EAAOsE,GAAM,GACnDwF,EAAQ7F,EAAK,GACd,GAER,CAEAy2E,gBAAgB9B,EAAW30E,EAAMjE,EAAOsE,EAAMq2E,GAC1B,MAAb/B,GAAqBA,EAAU6B,cAEnC7B,EAAUrE,aACVqE,EAAUlF,UAAUx+D,WACpB0jE,EAAUlF,UAAU70E,OAAO,OAAQoF,GAC/B02E,GACDvgF,KAAKwgF,sBAAsBhC,EAAW54E,EAAOsE,GAE5Cs0E,EAAUvyE,UAAYuyE,EAAUvyE,YACjCuyE,EAAU35E,SAAS25E,EAAUvyE,YAIhCuyE,EAAUpE,eACb,CAEAoG,sBAAsBhC,EAAW54E,EAAOsE,GACrC,IAAIs0E,GAAW6B,aAGX7B,GAAWlF,QAAS,CACrB,IAAKkF,EAAU3E,SAAU,OACzB,IAAI1G,EAAQqL,EAAU3E,WACtB,IAAK1G,EAAO,OACZqL,EAAUlF,UAAUzvE,KAAK42E,MAAMC,IAC5B,GAAKA,EAAL,CACA,IAAIn+E,EAAO4wE,EAAMzlE,MAAMizE,cACpB,gBAAkBD,EAAO9/E,GAAK,MAE5B2B,GACLA,EAAKq+E,aACF,UACA,GAAGh7E,EAAMvB,eAAeq8E,EAAO9/E,MAAMgF,EAAMhF,MAAMsJ,GAAMtJ,KAPvC,CAQlB,GAEP,CACH,CAEA2+E,eAAevpE,GACZ,IAAI5H,EACAjM,EAAUnC,KAAKwyE,UAAY,GAC/B,GAAIrwE,EAAQgE,OAAS,EAAG,CACrB,IAAK,IAAIkN,EAAI,EAAGA,EAAIlR,EAAQgE,OAAQkN,IAAK,CACtC,GACGrT,KAAKqH,YACLlF,EAAQkR,GAAGrT,KAAKqH,WAAWpC,OAAOqpB,OAAStY,EAC5C,CACC5H,EAAOjM,EAAQkR,GACf,KACH,CAAO,GACJrT,KAAKsH,aACLnF,EAAQkR,GAAGrT,KAAKsH,YAAYrC,OAAOqpB,OAAStY,EAC7C,CACC5H,EAAOjM,EAAQkR,GACf,KACH,CACG,GAAIlR,EAAQkR,GAAGzS,IAAMoV,GAAO7T,EAAQkR,GAAG1Q,OAASqT,EAAK,CAClD5H,EAAOjM,EAAQkR,GACf,KACH,CAEN,CACA,OAAOjF,CACV,CACG,MAAO,EAEb,CAEAnC,SAASmC,GAEN,GAD4C,QAA1BpO,KAAKoG,SAASa,SACf,CACd,IAAIxB,EAAO,GAOX,OANI2I,EAAKnC,YACImC,EAAKnC,WAAWub,MAAM,KAC5BvjB,SAASgpB,IACVxnB,EAAKnB,KAAK8J,EAAKkrE,UAAUttD,QAAQiB,GAAQ,IAGxCxnB,CACV,CACG,OAAI2I,EAAKnC,WACCmC,EAAKkrE,UAAUttD,QAAQ5d,EAAKnC,YAE5B,EAGhB,CAEApH,SAASuJ,EAAMkf,GACZ,IAAKlf,EAAM,OAGX,IAAI4H,EAAMhW,KAAKo3C,mBAAmB9pB,GAGlC,GAAIlf,EAAKkrE,SAAqC,GAA1BlrE,EAAKkrE,UAAU7oD,QAAc,CACf,QAA3BzwB,KAAKoG,SAASa,UAAuBkG,MAAMC,QAAQ4I,KACpDA,EAAM,CAACA,IAGV,MAAMooE,EAAQhwE,EAAKkrE,UAEnB8E,EAAM35E,OAAO,OAAQuR,GACrBooE,EAAM15E,SACT,CAEA0J,EAAKvJ,SACFsI,MAAMC,QAAQ4I,GACTA,EAAI7H,KAAK9D,GAAMA,EAAEzJ,IAAMyJ,EAAEwF,MAAQxF,IAAGiE,KAAK,KACzC0H,EAAIpV,IAAMoV,EAAInG,MAAQmG,EAEjC,CAWA6qE,yBAAyB5zD,GACtB,IAAIoqB,EAAe,GAEfxtC,EAAOojB,EACPgY,EAAejlC,KAAK4G,eAsBxB,OApBIiD,GAAQo7B,IAEL93B,MAAMC,QAAQvD,GACfwtC,EAAextC,EAAKsE,KAAI,SAAUyhB,GAO/B,OALIA,IACDA,EAAEvhB,KAAOuhB,EAAEvhB,MAAQ42B,EAAa7C,YAAYxS,GAC5CA,EAAEjtB,MAAQitB,EAAEvhB,MAGRuhB,CACV,KACQ/lB,EAAKjJ,IAAMiJ,EAAKgG,SACxBwnC,EAAextC,GACFwE,KACVgpC,EAAahpC,MAAQ42B,EAAa7C,YAAYiV,GACjDA,EAAa10C,MAAQ00C,EAAahpC,OAIjCgpC,CACV,oBCnvBH,MAAM+C,EAAkB,EAAQ,OAEhC36C,EAAOC,QAAU,cAA0B06C,EACxCz6C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAmpE,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAuClC,OAlCAF,EAAOqD,OAAS,OAGhBrD,EAAO4iD,UAAW,EAOlB5iD,EAAOo/D,SAAYniD,GACZA,EAAIs+D,OAAet+D,EAAIlf,KAAK8G,YAEzB9G,KAAKsgB,OAAOpB,GAGtBjd,EAAOqe,OAAUsP,IACd,MAAMtC,EAAU,CAAC,EAGjB,OAFAA,EAAQttB,KAAK8G,YAAc8oB,EAEpB5vB,KAAKsgB,OAAOgN,EAAQ,EAG9BrrB,EAAO87E,WAAcnuD,GAGT,IAALA,GAAgB,MAALA,EACL,GAIH5vB,KAAK+B,GAAGof,MAAMhB,OAAOyP,GAGxB3tB,CACV,CAWAw7D,gBAGG,MAAMqjB,EAAuBhhF,MAAM29D,cAAc,cASjD,OANAqjB,EAAqB/3C,OAAS,KACpB,CACJ1kC,IAAK,eAIJy8E,CACV,CAEAtmB,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,CAEAvjC,aAAazB,EAAYwB,GACtB,OAAOx2C,MAAM8c,KAAK+6B,UAAU7C,EAArBh1C,CAAiCw2C,EAC3C,CAGA35B,OAAOgN,GACJ,IAAKtU,OAAO+nE,YAAa,OAAOjhF,MAAMwgB,OAAOgN,GAC7C,MAAMsC,EAAI5vB,KAAKs3C,UAAUhqB,GAEzB,GAAS,IAALsC,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMkqB,EAAU95C,KAAK+B,GAAGof,MAAMhB,OAAOyP,GAOrC,OALmB5vB,KAAKoG,SAASqyC,YAKf,EACRh1C,MAAMqxE,KAAKkM,kBAAkBlnC,GAE7Br2C,MAAMqxE,KAAKC,cAAcj7B,EAEtC,oBC/HH,MAAMmnC,EAAsB,EAAQ,MAEpCxhF,EAAOC,QAAU,cAA8BuhF,EAC5CthF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAmBAypE,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAyClC,OAtCgC,GAA5BnC,KAAKoG,SAASqyC,WACfx2C,EAAOqD,OAAS,OAEhBrD,EAAOqD,OAAS,WAInBrD,EAAO4iD,UAAW,EAOlB5iD,EAAOo/D,SAAYniD,GACZA,EAAIs+D,OAAet+D,EAAIlf,KAAK8G,YAEzB9G,KAAKsgB,OAAOpB,GAGtBjd,EAAOqe,OAAUsP,IACd,MAAMtC,EAAU,CAAC,EAGjB,OAFAA,EAAQttB,KAAK8G,YAAc8oB,EAEpB5vB,KAAKsgB,OAAOgN,EAAQ,EAG9BrrB,EAAO87E,WAAcnuD,GAGT,IAALA,GAAgB,MAALA,EACL,GAIH5vB,KAAK+B,GAAGof,MAAMhB,OAAOyP,GAGxB3tB,CACV,CAWAw7D,gBAGG,MAAMqjB,EAAuBhhF,MAAM29D,cAAc,cASjD,OANAqjB,EAAqB/3C,OAAS,KACpB,CACJ1kC,IAAK,eAIJy8E,CACV,CAEAtmB,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,CAGAn9D,OAAOgN,GACJ,IAAKtU,OAAO+nE,YAAa,OAAOjhF,MAAMwgB,OAAOgN,GAC7C,MAAMsC,EAAI5vB,KAAKs3C,UAAUhqB,GAEzB,GAAS,IAALsC,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMkqB,EAAU95C,KAAK+B,GAAGof,MAAMhB,OAAOyP,GAE/B6oB,EAAaz4C,KAAKoG,SAASqyC,WAG3ByoC,EAAYz9E,MAAM8c,KAAK+6B,UAAUt7C,KAAKo7C,iBAE5C,OAAI3C,GAAc,EACR,GAAGh1C,MAAMqxE,KAAKkM,kBAAkBlnC,MAAYonC,EAChDpnC,KAGI,GAAGr2C,MAAMqxE,KAAKC,cAAcj7B,MAAYonC,EAAUpnC,IAE/D,oBC/HH,MAAMqnC,EAAmB,EAAQ,MAEjC1hF,EAAOC,QAAU,cAA2ByhF,EAsBzCzS,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAIlC,OAFAF,EAAOqD,OAAS,OAETrD,CACV,CAWAw7D,gBAGG,MAAMqjB,EAAuBhhF,MAAM29D,gBAYnC,OATAqjB,EAAqB/3C,OAAS,KACpB,CACJ1kC,IAAK,UACL+B,SAAU,CACPxE,KAAM,YAKRk/E,CACV,CAEAtmB,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,oBCrEH,MAAM2D,EAAkB,EAAQ,OAE1BrhF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,cAA0B0hF,EACxCzhF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAMAJ,gBACG,OAAO,IAAIsK,SAAQ,CAACC,EAASiH,KAErB3W,KAAKY,GAMV6C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,eACTuR,QAASvR,EAAE,mDAAoD,CAC5DC,KAAKoB,QAERyQ,SAAU1M,MAAO2I,IAGd9N,KAAKoG,SAASu1C,mBAAqB7tC,EAAS,EAAI,EAEhD,UACS9N,KAAK4H,OAGXnE,MAAM0N,MAAM,CACTC,MAAO,aACP/C,KAAM,8DAIHvO,MAAM8U,UAEZlF,GAGH,CAFE,MAAOvH,GACNwO,EAAOxO,EACV,KA9BHuH,GAgCD,GAER,CAOAg/D,aAAavsE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAElCF,EAAOqD,QAAS,EAEhB,MAAMu/C,EAAW1iD,EAAQ0iD,SAmBzB,OAhBA5iD,EAAOo/D,SAAYvpD,GACZA,EAAI0lE,OAAex9E,KAAKs3C,UAAUx/B,GAEtB,CACb,wDACA,0CACA,+BACA9X,KAAKqhF,aAAavpE,EAAK+sC,GACvB,SACA,SACA,UACDv2C,KAAK,IAKHrM,CACV,CAUAmtE,cAAclwD,EAAKtf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAEHJ,EAAUA,GAAW,CAAC,EAEtB,IAAIm/E,EAAY,GACZC,EAAc,EAEdvhF,KAAKoG,SAAS21C,eAAiB/7C,KAAKoG,SAASy1C,WAC9CylC,EAAYthF,KAAKoG,SAASy1C,SAASr0B,MAAM,MAGxCxnB,KAAKoG,SAAS01C,eAAiB97C,KAAKoG,SAASw1C,WAC9C2lC,EAAcvhF,KAAKoG,SAASw1C,UAM/B,MAAM4lC,EAAkBj/E,EAAKo+E,cAAc,mBAC3C,GAAIa,EAAiB,CAClBA,EAAgB/3C,UAAY,GAM5B,MAAMg4C,EAAiBh+E,MAAMhD,GAAG,CAC7BC,KAAM,WACNghF,UAAWF,EAEXngB,SAAUrhE,KAAKqhF,aAAaniE,EAAK/c,EAAQ0iD,UAEzCljD,YAAY,EACZX,MAAO,IACPD,OAAQ,KAQX,GANA0C,MAAMC,OAAO+9E,EAAgBh+E,MAAMG,cAM9BzB,EAAQ0iD,SAAU,CACpB,MAAM88B,EAAUH,EAAgBb,cAAc,iBAG9C,YAFIgB,IAASA,EAAQ3L,MAAM4L,QAAU,QAGxC,CAEA,MAAMtxE,EAAMtQ,KAAK6hF,WAAU,GAErBC,EAAWr+E,MAAMhD,GAAG,CACvBC,KAAM,WACNqhF,SAAS,EACTC,OAAQ1xE,EACR2xE,UAAW,OACXC,UAAU,EACV9/E,GAAI,CAED+/E,gBAAiB,SAAU/zE,GACxB7L,EAAK6/E,UAAUvnE,OAAO,iBACtBtY,EAAK6/E,UAAUvnE,OAAO,sBAGtB,MAAMwnE,EAAkBf,EACxB,GAAIe,GAAsC,IAAnBA,EAAuB,CAC3C,MAAMzgF,EAAOwM,EAAKxM,KAAKuW,cACvB,IAAsC,GAAlCkqE,EAAgBh1E,QAAQzL,GAMzB,OALA6B,MAAM6N,QACHvR,EAAE,iCAAkC,CACjCsiF,EAAgB/zE,KAAK,UAGpB,CAEb,CAIA,GAAIizE,EAAc,EAAG,CAClB,MAAMe,EAAgC,IAAdf,EACxB,GAAInzE,EAAKm0E,KAAOD,EAIb,OAHA7+E,MAAM6N,QACHvR,EAAE,6BAA8B,CAACwhF,MAE7B,CAEb,CAGAE,EAAep8E,aAAa,CACzBzD,KAAM,OACN4gF,MAAO,KAEb,EAGAC,aAAct9E,MAAOiJ,EAAMoJ,KACxBiqE,EAAe95E,eAGf,MAAMhC,EAAS,CAAC,EAMhB,GALAA,EAAO3F,KAAK8G,YAAc,CAAC,EAC3BnB,EAAO3F,KAAK8G,YAAY+I,KAAO2H,EAAS3N,KAAKgG,KAC7ClK,EAAO3F,KAAK8G,YAAYk1C,SAAW5tC,EAAKjH,KAGpC+X,EAAIte,GACL,UACSZ,KAAKiF,OAAO+C,QAAQ0lE,OAAOxuD,EAAIte,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM2tB,YACtBvsB,GAAGpB,GAAM2tB,WAAWhR,EAAIte,GAAI+E,EAWlC,CAVE,MAAOwC,GACN5F,EAAK6/E,UAAUlhE,IAAI,iBACnB3e,EAAK6/E,UAAUlhE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,wDACH4P,IAAKA,EACLvZ,OAAQA,GAEd,CAIH3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAAO,EAIlC+8E,kBAAmB,CAACt0E,EAAMoJ,KACvBxX,KAAK+B,GAAGqG,OAAOC,UAAU,IAAIC,MAAM,sBAAuB,CACvDgJ,QAAS,qBACTkG,aAEHiqE,EAAe95E,cAAc,KAItCm6E,EAASa,YAAYlB,EAAe/zE,OAGpCnL,EAAKqgF,QAAoB,WAAId,EAAS7/E,OAAOrB,GAG7C2B,EAAK0W,iBAAiB,SAAU5O,IACzBA,EAAE47C,OAAOiD,UAAU77C,QAAQ,iBAAmB,IAC/CrN,KAAK6iF,YAAa,EACrB,GAEN,CACH,CAUAxF,WAAWn+D,EAAKtf,EAAK2C,GAClB,GAAuB,GAAnBvC,KAAK6iF,kBAEC7iF,KAAK6iF,WAGZp/E,MAAMmO,QAAQ,CACXR,MAAO,GACPE,QAASvR,EAAE,8CACX8R,SAAU1M,MAAO2I,IAEd,KADsBA,EACH,CAEhB,MAAMnI,EAAS,CAAC,EAGhB,GAFAA,EAAO3F,KAAK8G,YAAc,GAEtBoY,EAAIte,GACL,UACSZ,KAAKiF,OAAO+C,QAAQ0lE,OAAOxuD,EAAIte,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM2tB,YACtBvsB,GAAGpB,GAAM2tB,WAAWhR,EAAIte,GAAI+E,EAUlC,CATE,MAAOwC,GACN5F,EAAK6/E,UAAUlhE,IAAI,iBACnB3e,EAAK6/E,UAAUlhE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT4N,IAAKA,EACLvZ,OAAQA,GAEd,MAIA3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAE9B,SAGF,CACJ,MAAM2nB,EAAUttB,KAAKs3C,UAAUp4B,GAC/B,IAAKoO,IAAYA,EAAQzd,KAAM,CAC5B,MAAMizE,EAAavgF,EAAKqgF,QAAoB,WACzCd,EAAWn+E,GAAGm/E,GAEbhB,GAAYA,EAASiB,YACtBjB,EAASiB,WAAW,CAAEC,MAAO9jE,EAAIte,IACvC,CACH,CAEA,OAAO,CACV,CAWA68D,gBACG,OAAO39D,MAAM29D,cAAc,cAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,iBAIJo5E,CACV,CAIA4D,aAAavpE,EAAK+sC,GACf,IAAIo+B,EAAc,GACdC,EAAc,gBACdC,EAAU,GAEVxgF,EAAQ,GACRwE,EAAO,GAEX,MAAMmmB,EAAUttB,KAAKs3C,UAAUx/B,GAyB/B,OAxBIwV,IACD3qB,EAAQ2qB,EAAQzd,KAChB1I,EAAOmmB,EAAQ0uB,UAGdr5C,GAASwE,IACV87E,EAAc,gBACdC,EAAc,GACdC,EAAU,SAAWxgF,GAGX,CACV,mPAAmPsgF,kHAChPp+B,EAAW,QAAQ9kD,EAAE,iCAAmC,WAE3D,oHAAoHojF,MACjHh8E,GAAQ,SAER09C,EACK,aAAaq+B,qGACb,YAET50E,KAAK,GAGV,CAEArC,SAASmC,EAAMkf,GACZ,MAAMgkD,EAAOljE,EAAKV,MAAMizE,cAAc,yBAChCyC,EAAW9R,EAAKqP,cAAc,KAEpC,MAAO,CACJ9wE,KAAMyhE,EAAK+R,aAAa,aACxBrnC,SAAUonC,EAAS35C,UAEzB,CAEA5kC,SAASuJ,EAAMkf,GACZ,IAAKlf,EAAM,OAEX,MAAMuzE,EAAUvzE,EAAKV,MACrB,IAAKi0E,EAAS,OAEd,IAAI3rE,EAAM,KACNsX,IACDtX,EAAMhW,KAAKs3C,UAAUhqB,IAQxB,MAAMg2D,EAAW3B,EAAQhB,cAAc,yBACnC2C,IAAUA,EAAStN,MAAM4L,QAAU5rE,GAAOA,EAAInG,KAAO,OAAS,SAElE,MAAMyhE,EAAOqQ,EAAQhB,cAAc,yBACnC,GAAIrP,EAAM,CACP,MAAMiS,EAAiBjS,EAAKqP,cAAc,oBACtC4C,IACDA,EAAevN,MAAM4L,QAAU5rE,GAAOA,EAAInG,KAAO,QAAU,QAE9DyhE,EAAK0E,MAAM4L,QAAU5rE,GAAOA,EAAInG,KAAO,QAAU,OAC7CmG,GAAOA,EAAInG,KAAMyhE,EAAKsP,aAAa,YAAa5qE,EAAInG,MACnDyhE,EAAKkS,gBAAgB,aAE1B,MAAMJ,EAAW9R,EAAKqP,cAAc,KAC9BwC,EAAU,UAAYntE,EAAMA,EAAInG,KAAO,IAC7CuzE,EAASK,KAAON,EAChBC,EAAS35C,UAAYzzB,EAAMA,EAAIgmC,SAAW,EAC7C,CACH,CAYA6lC,UAAU6B,GAAU,GACjB,MAAO,gBAAgB1jF,KAAKiF,OAAOrE,MAAMZ,KAAKY,MAAM8iF,EAAU,IAAM,KACvE,CAQAC,QAAQ/iF,GACL,MAAO,SAASA,GACnB,oBC3cH,MAAMgjF,EAAqB,EAAQ,OAEnCnkF,EAAOC,QAAU,cAA6BkkF,EAsB3ClV,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAUlC,OARAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOo/D,SAAY/zC,GACZA,EAAQkwD,OAAelwD,EAAQttB,KAAK8G,YAEjC9G,KAAKsgB,OAAOgN,GAGfrrB,CACV,CAWAw7D,gBAEG,OAAO39D,MAAM29D,cAAc,gBAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,oBC9DH,MAAMoG,EAAmB,EAAQ,OAE3B9jF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,cAA2BmkF,EACzClkF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAUAE,gBACG,OAAO,IAAIsK,SAAQ,CAACC,EAASiH,KAEtB3W,KAAKY,GAEN6C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,gBACTuR,QAASvR,EAAE,oDAAqD,CAC7DC,KAAKoB,QAERyQ,SAAU1M,MAAO2I,IAGd9N,KAAKoG,SAASu1C,mBAAqB7tC,EAAS,EAAI,EAEhD,UACS9N,KAAK4H,OAGXnE,MAAM0N,MAAM,CACTC,MAAO,aACP/C,KAAM,sFAGHvO,MAAM8U,UAEZlF,GAGH,CAFE,MAAOvH,GACNwO,EAAOxO,EACV,KAINuH,GACH,GAEN,CAMAo0E,kBAAkBhsE,EAAKisE,GAIpB,OAAIA,EACM,GAAG/jF,KAAK8G,WAAWkM,QAAQ,KAAM,QAAQ+wE,UAEzC,GAAG/jF,KAAK8G,WAAWkM,QAAQ,KAAM,QAAQ8E,EAAIlX,UAE1D,CAGA8tE,aAAavsE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAC5ByD,EAAQ5F,KAEdiC,EAAOqD,QAAS,EAGhB,IAAI0+E,EAAkB,OAClBvmC,EAAc,OACdz8C,EAAQ,OACRijF,EAAiB,OACrB,GAAIr+E,EAAMQ,SAASk3C,SAAU,CAC1Br7C,EAAOjB,MAAQ4E,EAAMQ,SAASm3C,YAAc,IAC5C,MAAM2mC,EACHt+E,EAAMQ,SAASo3C,WAAa53C,EAAMQ,SAASq3C,YACtC73C,EAAMQ,SAASq3C,YAAc,GAC7B,GACRumC,EAAkB,GAAGE,MACrBljF,EAAQ,GAAG4E,EAAMQ,SAASm3C,YAAc,QACxCE,EACG73C,EAAMQ,SAASo3C,WAAa53C,EAAMQ,SAASq3C,YACtC73C,EAAMQ,SAASq3C,YACf,GACRA,EAAc,GAAGA,MACjBwmC,EACGr+E,EAAMQ,SAASo3C,WAAa53C,EAAMQ,SAASq3C,YACtC73C,EAAMQ,SAASq3C,YACf,GACRwmC,EAAiB,GAAGA,KACvB,MAAW9hF,EAAQnB,QAChBiB,EAAOjB,MAAQmB,EAAQnB,OAAS,IAChCA,EAAQ,GAAGmB,EAAQnB,OAAS,QAC5By8C,EAAct7C,EAAQnB,MACtBy8C,EAAc,GAAGA,MACjBwmC,EAAiB9hF,EAAQnB,MACzBijF,EAAiB,GAAGA,OAGpBr+E,EAAMQ,SAASo3C,WACf53C,EAAMQ,SAASq3C,aACe,OAA9B73C,EAAMQ,SAASq3C,cAEfx7C,EAAOlB,OAAS6E,EAAMQ,SAASq3C,aAAe,EAC9CumC,EAAkBn/D,SAAS5iB,EAAOlB,QAAU,GAC5CijF,EAAkB,GAAGA,MACrBvmC,EAAc54B,SAAS5iB,EAAOlB,QAC9B08C,EAAc,GAAGA,MACjBwmC,EAAiBp/D,SAAS5iB,EAAOlB,QACjCkjF,EAAiB,GAAGA,OAGvB,MAAMp/B,EAAW1iD,EAAQ0iD,SA4BzB,OAxBA5iD,EAAOo/D,SAAYvpD,GACZA,EAAI0lE,OAAe1lE,EAAI9X,KAAK8G,YAMjB,CACZ,+DAL0B9F,cAAkBgjF,MAM5C,yDAJ0BhjF,cAAkBy8C,MAK5C,+BACAz9C,KAAKmkF,cAAcrsE,EAAK,CACrB+sC,SAAUA,EACV9jD,OAAQkjF,EACRjjF,MAAOA,IAEV,SACA,SACA,UACDsN,KAAK,IAKHrM,CACV,CAcAmtE,cAAclwD,EAAKtf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAEH,MAAMxC,EAAIH,EAAIK,MAEdkC,EAAUA,GAAW,CAAC,EAEPvC,EAAIQ,OAAOJ,KAAK8jF,kBAAkB5kE,EAAK/c,EAAQ4hF,SAA9D,MAKMvC,EAAkBj/E,EAAKo+E,cAAc,oBAC3C,GAAIa,EAAiB,CAClBA,EAAgB/3C,UAAY,GAG5B,IAAI26C,EAAY,EACZpkF,KAAKoG,SAASo3C,YACf4mC,EAAYv/D,SAAS7kB,KAAKoG,SAASq3C,cAAgB2mC,GAGtD,IAAIC,EAAW,EACXrkF,KAAKoG,SAASk3C,WACf+mC,EAAWx/D,SAAS7kB,KAAKoG,SAASm3C,aAAe8mC,GAGhDliF,EAAQpB,SAAQqjF,EAAYjiF,EAAQpB,QAEpCoB,EAAQnB,QAAOqjF,EAAWliF,EAAQnB,OAMtC,MAAMygF,EAAiBh+E,MAAMhD,GAAG,CAC7BC,KAAM,WACNQ,IAAK,kBAELwgF,UAAWF,EAEXngB,SAAUrhE,KAAKmkF,cAAcjlE,EAAK,CAC/B2lC,SAAU1iD,EAAQ0iD,SAClB9jD,OAAQqjF,EAAYA,EAAY,KAAO,EACvCpjF,MAAOqjF,EAAWA,EAAW,KAAO,IAGvC1iF,YAAY,EACZZ,OAAQqjF,EACRpjF,MAAOqjF,IAQV,GANA5gF,MAAMC,OAAO+9E,EAAgBh+E,MAAMG,cAM9BzB,EAAQ0iD,SAAU,CACpB,MAAM88B,EAAUH,EAAgBb,cAAc,iBAG9C,YAFIgB,IAASA,EAAQ3L,MAAM4L,QAAU,QAGxC,CAEA,MAAMtxE,EAAMtQ,KAAK6hF,YAEXC,EAAWr+E,MAAMhD,GAAG,CACvBC,KAAM,WAENqhF,SAAS,EACTC,OAAQ1xE,EACR2xE,UAAW,OACXC,UAAU,EAOV9/E,GAAI,CAED+/E,gBAAiB,SAAU/zE,GACxB7L,EAAK6/E,UAAUvnE,OAAO,iBACtBtY,EAAK6/E,UAAUvnE,OAAO,sBAGtB,MAAMwnE,EAAkB,CACrB,MACA,OACA,MACA,MACA,MACA,QAEGzgF,EAAOwM,EAAKxM,KAAKuW,cACvB,IAAsC,GAAlCkqE,EAAgBh1E,QAAQzL,GAMzB,OALA6B,MAAM6N,QACHvR,EAAE,kCAAmC,CAClCsiF,EAAgB/zE,KAAK,UAGpB,EAIVmzE,EAAep8E,aAAa,CACzBzD,KAAM,OACN4gF,MAAO,KAEb,EAGAC,aAAct9E,MAAOiJ,EAAMoJ,KACxBiqE,EAAe95E,eACf3H,KAAKskF,UAAU9sE,EAAS3N,KAAKgG,KAAMtN,GAInC,MAAMoD,EAAS,CAAC,EAIhB,GAHAA,EAAO3F,KAAK8G,YAAc0Q,EAAS3N,KAAKgG,KAGpCqP,EAAIte,GACL,IAIG,SAHMZ,KAAKiF,OAAO+C,QAAQ0lE,OAAOxuD,EAAIte,GAAI+E,GAItChC,GAAGpB,IACHoB,GAAGpB,GAAMypB,SACTroB,GAAGpB,GAAMypB,QAAQ9M,EAAIte,IAErB+C,GAAGpB,GAAM2tB,WAAWhR,EAAIte,GAAI+E,OACxB,CAEJ,MAAM4+E,EACHh7C,SAASo3C,cAAc,iBACtBh9E,GAAG4gF,IAAc5gF,GAAG4gF,GAAWv4D,QAAQ9M,EAAIte,KAC5C+C,GAAG4gF,GAAWr0D,WAAWhR,EAAIte,GAAI+E,EACvC,CAYH,CAXE,MAAOwC,GACN5F,EAAK6/E,UAAUlhE,IAAI,iBACnB3e,EAAK6/E,UAAUlhE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,wEACH1J,MAAO5F,KACPkf,MACAvZ,UAEN,CAIH3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAAO,EAIlC+8E,kBAAmB,CAACt0E,EAAMoJ,KACvBxX,KAAK+B,GAAGqG,OAAOC,UAAU,IAAIC,MAAM,yBAA0B,CAC1DgH,QAAS,+CACT1J,MAAO5F,KACPwX,aAEHiqE,EAAe95E,cAAc,KAItCm6E,EAASa,YAAYlB,EAAe/zE,OAGpCnL,EAAKqgF,QAAoB,WAAId,EAAS7/E,OAAOrB,GAIvB,cAAlB2B,EAAK2mD,WACN3mD,EAAK0W,iBAAiB,SAAU5O,IACzBA,EAAE47C,OAAOiD,UAAU77C,QAAQ,iBAAmB,IAC/CrN,KAAKwkF,aAAc,EACtB,GAGT,CACH,CAUAnH,WAAWn+D,EAAKtf,EAAK2C,EAAM3B,EAAI+zB,GAC5B,GACIA,GAAOA,EAAIsxB,OAAOiD,UAAU77C,QAAQ,iBAAmB,GACxDrN,KAAKwkF,mBAEExkF,KAAKwkF,YACPtlE,EAAIulE,qBACNvlE,EAAIulE,mBAAqB,IAE5BvlE,EAAIulE,mBAAmBzkF,KAAK8G,aAAc,EAG1CrD,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,+CACT8R,SAAU1M,MAAO2I,IAEd,KADsBA,EACH,CAEhB,MAAMnI,EAAS,CAAC,EAChBA,EAAO3F,KAAK8G,YAAc,GAE1B,UACS9G,KAAKiF,OAAO+C,QAAQ0lE,OAAOxuD,EAAIte,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM2tB,YACtBvsB,GAAGpB,GAAM2tB,WAAWhR,EAAIte,GAAI+E,GAG/B3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAY3B,CAXE,MAAOwC,GACN5F,EAAK6/E,UAAUlhE,IAAI,iBACnB3e,EAAK6/E,UAAUlhE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,uDACH1J,MAAO5F,KACPkf,IAAKA,EACLvZ,OAAQA,GAEd,CACH,SAGF,CACJ,MAAMm9E,EAAavgF,EAAKqgF,QAAoB,WACzCd,EAAWn+E,GAAGm/E,GAEbhB,GAAYA,EAASiB,YACtBjB,EAASiB,WAAW,CAAEC,MAAO9jE,EAAIte,IACvC,CAEA,OAAO,CACV,CAWA68D,gBACG,OAAO39D,MAAM29D,cAAc,cAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,gBAIJo5E,CACV,CAEA0G,cAAcrsE,EAAK3V,IAChBA,EAAUA,GAAW,CAAC,GACdpB,OAASoB,EAAQpB,QAAU,OACnCoB,EAAQnB,MAAQmB,EAAQnB,OAAS,OAGjC,IAAIiiF,EAAc,GACdyB,EAAe,gBACfhvB,EAAW,GAEX/yD,EAAQ,GACRgiF,GAAuB,EACvB7sE,EAAI9X,KAAK8G,cACVnE,EAAQmV,EAAI9X,KAAK8G,aAEhBgR,EAAI2sE,oBACD3sE,EAAI2sE,mBAAmBzkF,KAAK8G,cAC7B69E,EAAuB7sE,EAAI2sE,mBAAmBzkF,KAAK8G,aAIrDnE,GACDsgF,EAAc,gBACdyB,EAAe,GACfhvB,EAAW,yBAAyB11D,KAAKmmE,SAASxjE,SAE9C3C,KAAKoG,SAASs3C,kBAAoBinC,IACnC1B,EAAc,gBACdyB,EAAe,GACfhvB,EAAW,yBAAyB11D,KAAKmmE,SACtCnmE,KAAKoG,SAASu3C,uBAKvB,IAAIinC,EAAO,CACR,6CAA6C3B,6DACIyB,WAAsBviF,EAAQnB,iBAAiBmB,EAAQpB,WAAW20D,qBACpHpnD,KAAK,IAeP,OAbAs2E,EAAOA,EAAK5xE,QACT,SACA7Q,EAAQ0iD,SACH,QAAQ9kD,EAAE,uCACV,IAER6kF,EAAOA,EAAK5xE,QACT,WACA7Q,EAAQ0iD,SACH,aAAa6/B,qGACb,IAGDE,CACV,CAEAN,UAAUz0E,EAAMtN,GACb,MAAMi/E,EAAkBj/E,EAAKo+E,cAAc,oBAC3C,GAAIa,EAAiB,CAClBA,EAAgBb,cAAc,0BAA0B3K,MAAM4L,QAC3D,OACH,MAAMvsB,EAAQmsB,EAAgBb,cAAc,2BAC5CtrB,EAAM2gB,MAAM4L,QAAU,GACtBvsB,EAAM2gB,MAAM6O,gBAAkB,QAAQ7kF,KAAKmmE,SAASt2D,OACpDwlD,EAAMurB,aAAa,aAAc/wE,EACpC,CACH,CAEA5D,SAASmC,EAAMkf,GAEZ,OADclf,EAAKV,MAAMizE,cAAc,2BAC1B0C,aAAa,aAC7B,CAEAx+E,SAASuJ,EAAMkf,GACZ,IAAKlf,EAAM,OAEX,MAAMuzE,EAAUvzE,EAAKV,MACrB,IAAKi0E,EAAS,OAEd,IAAI3rE,EAAM,KACNsX,IACDtX,EAAMhW,KAAKs3C,UAAUhqB,IAQxB,MAAMw3D,EAAYnD,EAAQhB,cAAc,0BACpCmE,IAAWA,EAAU9O,MAAM4L,QAAU5rE,EAAM,OAAS,IAExD,MAAMq/C,EAAQssB,EAAQhB,cAAc,2BACpC,GAAItrB,EAAO,CACR,MAAM0vB,EAAkB1vB,EAAMsrB,cAAc,oBACxCoE,IACDA,EAAgB/O,MAAM4L,QAAU5rE,EAAM,QAAU,QAEnDq/C,EAAM2gB,MAAM4L,QAAU5rE,EAAM,QAAU,OAElCA,GACDq/C,EAAM2gB,MAAM6O,gBAAkB,QAAQ7kF,KAAKmmE,SAASnwD,OACpDq/C,EAAMurB,aAAa,aAAc5qE,IAEjCq/C,EAAMmuB,gBAAgB,aAE5B,CACH,CAaAwB,SAAS13D,GA0BN,OAzBgB,IAAI7d,SAAQ,CAACC,EAASiH,KACnC,IAAK2W,EAAQttB,KAAK8G,YAAa,OAAO4I,EAAQ,MAE9C,MAAMu1E,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIG,QAAU,SAAUj9E,GACrBwO,EAAOxO,EACV,EACA88E,EAAIrT,OAAS,WACV,MAAMyT,EAAS97C,SAASC,cAAc,UACtC67C,EAAOrkF,MAAQikF,EAAIjkF,MACnBqkF,EAAOtkF,OAASkkF,EAAIlkF,OACRskF,EAAOC,WAAW,MAC1BC,UAAUN,EAAK,EAAG,GACtB,MACMO,EAAY,CACf37E,KAFaw7E,EAAOI,YAGpBzkF,MAAOikF,EAAIjkF,MACXD,OAAQkkF,EAAIlkF,QAEf2O,EAAQ81E,EACX,EAEAP,EAAIS,IAAM1lF,KAAKmmE,SAAS74C,EAAQttB,KAAK8G,YAAY,GAGvD,CASAq/D,SAASvlE,GACN,MAAO,SAASA,GACnB,CAYAihF,UAAU6B,GAAU,GACjB,MAAO,gBAAgB1jF,KAAKiF,OAAOrE,MAAMZ,KAAKY,MAAM8iF,EAAU,IAAM,KACvE,oBCxmBH,MAAMiC,EAAkB,EAAQ,OAEhClmF,EAAOC,QAAU,cAA0BimF,EAUxCjX,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAUlC,OAPAF,EAAOqD,OAAS,OAChBrD,EAAOf,IAAM,WAIbe,EAAOo/D,SAAW,IAAM,GAEjBp/D,CACV,CAWAw7D,gBAEG,OAAO39D,MAAM29D,cAAc,gBAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,oBClDH,MAAMmI,EAAkB,EAAQ,OAIhCnmF,EAAOC,QAAU,cAA0BkmF,EACxCjmF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAGjB,CAMA2C,OACG,OAAO9H,MAAM8H,OAAO4M,MAAK,KAEtB,GAAIxU,KAAKi+C,iBAAiB93C,OAAQ,CAC/B,MAAM6B,EAAQhI,KAAKiF,OAAO+C,QAE1B,GAAgC,GAA5BhI,KAAKoG,SAAS03C,WAGf,OAAO,IAAIruC,SAAQ,CAACC,EAASiH,KAC1B,IAAIkvE,EAAU,EACVC,EAAU,EAEd99E,EACIinB,QAAQ,CAAC,GACTza,MAAMvK,KACJA,EAAOA,EAAKJ,MAAQI,GAGfhG,SAASmK,IACX,GAAIjB,MAAMC,QAAQgB,EAAKpO,KAAK8G,aAAc,CAEvC,IAAIi/E,EAAkB33E,EACnBpO,KAAK8G,YACNgC,QAAQuK,IAEoC,GAAxCrT,KAAKi+C,iBAAiB5wC,QAAQgG,EAAEzS,MAItC,GACGmlF,EAAgB5/E,QAChBiI,EAAKpO,KAAK8G,YAAYX,OACvB,CACC2/E,IAG8B,GAA1BC,EAAgB5/E,SACjB4/E,EAAkB,IAErB,MAAMpjF,EAAQ,CAAC,EACfA,EAAM3C,KAAK8G,YAAci/E,EACzB/9E,EAAM0lE,OAAOt/D,EAAKxN,GAAI+B,GAAO6R,MAAK,KAG/BqxE,IACIA,GAAWC,GACZp2E,GACH,GAEN,CACH,KAEY,GAAXo2E,GACDp2E,GACH,IAEF+E,MAAMkC,EAAO,IAEhB,CAEJ,MAAMiY,EAAQ,CAAC,EAEf,OADAA,EAAM5uB,KAAK8G,YAAc9G,KAAKi+C,iBACvB,IAAIxuC,SAAQ,CAACC,EAASiH,KAC1B,IAAIkvE,EAAU,EAEd79E,EACIinB,QAAQL,GACRpa,MAAMvK,IAEJA,EAAOA,EAAKJ,MAAQI,EAMpB,MAAMtH,EAAQ,CAAC,EACfA,EAAM3C,KAAK8G,YAAc,GAEzBmD,EAAKhG,SAASmK,IACXpG,EAAM0lE,OAAOt/D,EAAKxN,GAAI+B,GAAO6R,MAAK,KAC/BqxE,IACIA,GAAW57E,EAAK9D,QACjBuJ,GACH,GACD,IAEc,GAAfzF,EAAK9D,QACNuJ,GACH,IAEF+E,MAAMkC,EAAO,GAEvB,CACH,IAEN,CAEApR,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAmpE,aAAavsE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAM4uE,aAAavsE,GA4FlC,OA3FcnC,KACI+B,GAAGw3B,KAIjBp3B,EAAQ0iD,UArIR,KAAIjvC,KAAW7T,GAAGsP,aAAajQ,SAASwU,EAAO,EAuIY7V,CACzD,eAGYoC,EAAQ0iD,UAAa7kD,KAAKoG,SAASkyC,SAErDr2C,EAAO87E,WAAcp7E,GACX3C,KAAK+9E,WAAWp7E,GAE1BV,EAAO+7E,UAAar7E,GACV3C,KAAKg+E,UAAUr7E,GAGzBV,EAAOo/D,SAAY/zC,IAChB,IAAI+pB,EAAe/pB,EAAQttB,KAAK8G,YAChC,GAAoB,MAAhBuwC,EAAsB,MAAO,GAC7Br3C,KAAKoG,SAAS03C,aACfzG,EAiRZ,SAA6BzxC,EAAO0nB,EAAU,CAAC,GAC5C,IAAIxf,EAAS,GAiBb,OAhBiC,MAA7Bwf,EAAQ1nB,EAAMkB,cACfgH,EAASwf,EAAQ1nB,EAAMkB,YAEF,iBAAVgH,IAAoBA,EAAS+F,KAAK0D,MAAMzJ,IAG/ClI,EAAMQ,WACP0H,GAAUlI,EAAMQ,SAASjE,SAAW,IAAI2G,QAAQo1C,IAEzCpwC,GAAU,IAAIhF,QAAQsK,IAAO8qC,EAAIt9C,IAAMs9C,KAAS9qC,EAAExS,IAAMwS,KACrDjN,OAAS,MAMlB2H,CACV,CApS2Bk4E,CAAoBhmF,KAAMstB,IAE5C,IAAI3nB,EAAS,GACbA,EAAOrB,KAAK,gCACZ,IAAI2hF,EAAiB,GACjBC,EAAY,GAChB,GACG7uC,GACAlqC,MAAMC,QAAQiqC,IACdA,EAAalxC,OAEbkxC,EAAapzC,SAAS+R,IACfhW,KAAKoG,SAAS23C,WAAa/nC,EAAIooC,MAChC6nC,EAAiB,iBACjBC,EAAY,eAAelwE,EAAIooC,QAE9BpoC,EAAI3H,MACL1I,EAAOrB,KACJ,eAAe4hF,oCAA4CD,YAAyBjwE,EAAI3H,sCAAmC2H,EAAIpV,iGAErI,IAECy2C,EAAalxC,OAAS,GACvBR,EAAOrB,KACJ,8CAA8C+yC,EAAalxC,qBAG7D,KAAIkxC,EAoBR,MAAO,GApBe,CACtB,IAAI8uC,EAAc9uC,EAIlB,GAH2B,iBAAhBA,IACR8uC,EAAcnmF,KAAKu/E,eAAeloC,KAEhC8uC,EAAa,MAAO,GAKzB,GAJInmF,KAAKoG,SAAS23C,WAAaooC,EAAY/nC,MACxC6nC,EAAiB,iBACjBC,EAAY,eAAeC,EAAY/nC,QAEtC+nC,EAAY93E,KAAM,CACnB,IAAInJ,EAAQ,GACR/C,EAAQ0iD,WAAa7kD,KAAKoG,SAASkyC,WACpCpzC,EAAQ,0GAEXS,EAAOrB,KACJ,eAAe4hF,oCAA4CD,MAAmB/gF,wBAA4BihF,EAAY93E,oBAE5H,CACH,CAEA,CAEA,OADA1I,EAAOrB,KAAK,UACLqB,EAAO2I,KAAK,GAAG,EAEzBrM,EAAOqD,OAAStF,KAAKoG,SAAS03C,WAAa,cAAgB,QAC3D77C,EAAO+1E,QAAU,CACdkG,QAAQ,EACRr0E,KAAM7J,KAAKoG,SAASjE,QAAQgM,KAAI,SAAU+vC,GACvC,MAAO,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,KACX+vC,IAAKF,EAAIE,IAEf,KAECp+C,KAAKoG,SAAS03C,aACf77C,EAAO+1E,QAAQt3E,KAAO,gBAGlBuB,CACV,CAUAmtE,cAAclwD,EAAKtf,EAAK2C,EAAMJ,GAE3B,GAAKI,IAILJ,EAAUA,GAAW,CAAC,EAEjBI,EAAKo+E,eAAV,CAEA,IAAIyF,EAAc7jF,EAAKo+E,cACpB,4CAECyF,GACDA,EAAYntE,iBAAiB,SAAU5O,IACpCA,EAAEg8E,kBACF,IAAI1gF,EAAS,CAAC,EACdA,EAAO3F,KAAK8G,YAAc,GAC1B9G,KAAKiF,OACD+C,QACA0lE,OAAOxuD,EAAIte,GAAI+E,GACf6O,MAAK,KAEH7Q,GAAGpB,IAAO2tB,aAAahR,EAAIte,GAAI+E,EAAO,IAExC8O,OAAOtM,IACL5F,EAAK6/E,UAAUlhE,IAAI,iBACnB3e,EAAK6/E,UAAUlhE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT4N,IAAKA,EACLvZ,OAAQ,GACRC,MAAO5F,KAAK8F,SACb,GACH,GA3BoB,CA8BlC,CAuBA23D,gBAGG,MAAMqjB,EAAuBhhF,MAAM29D,gBAkBnC,OAfAqjB,EAAqB/3C,OAAS,KACpB,CACJ1kC,IAAKrE,KAAKoG,SAAS03C,WAAa,iBAAmB,eACnD13C,SAAU,CACPjE,QAASnC,KAAKoG,SAASjE,QAAQgM,KAAI,SAAU+vC,GAC1C,MAAO,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,KACX+vC,IAAKF,EAAIE,IAEf,OAKF0iC,CACV,CAEAtmB,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,KAAKrE,KAAKoG,SAAS03C,WAAa,gBAI/B2/B,CACV,CAEAM,WAAWp7E,GACR,IAAKA,EAAO,MAAO,GACnB,IAAI8C,EAAO,GACX,GAAI0H,MAAMC,QAAQzK,GACfA,EAAMsB,SAAS+R,IACZ,GAAkB,iBAAPA,EACRvQ,EAAKnB,KAAK0R,EAAIpV,QACV,CACJ,IAAI0+E,EAAUt/E,KAAKu/E,eAAevpE,GAClCvQ,EAAKnB,KAAKg7E,EAAQ1+E,GACrB,UAGH,GAAoB,iBAAT+B,EACR8C,EAAKnB,KAAK3B,EAAM/B,QACZ,CACJ,IAAI0+E,EAAUt/E,KAAKu/E,eAAe58E,GAC9B28E,GAAWA,EAAQ1+E,IACpB6E,EAAKnB,KAAKg7E,EAAQ1+E,GAExB,CAEH,OAAO6E,EAAK6I,MACf,CAEA0vE,UAAUr7E,GACP,GAAI3C,KAAKoG,SAAS03C,WAAY,CAC3B,IAAI0hC,EAAa,GAKjB,OAJW78E,EAAM6kB,MAAM,KAClBvjB,SAAS+R,IACXwpE,EAAWl7E,KAAKtE,KAAKu/E,eAAevpE,GAAK,IAErCwpE,CACV,CACG,OAAO78E,CAEb,CAEA48E,eAAevpE,GACZ,IAAI5H,EACAjM,EAAUnC,KAAKmC,UACnB,OAAIA,EAAQgE,OAAS,GAClBhE,EAAQ8B,SAASy8E,IACd,GAAIA,EAAO9/E,IAAMoV,EAEd,OADA5H,EAAOsyE,GACA,CACV,IAEItyE,GAEA,EAEb,CAEAnC,SAASmC,EAAMkf,GACZ,OAAOttB,KAAKg+E,UAAU5vE,EAAKnC,WAC9B,CAEAq6E,mBAAmB1gF,EAAO0nB,EAAU,CAAC,GAClC,IAAIxf,EAAS,GAwBb,OAvBgC,MAA5Bwf,EAAQttB,KAAK8G,YACdgH,EAASwf,EAAQttB,KAAK8G,YACdwmB,IACJngB,MAAMC,QAAQkgB,GACfxf,EAASwf,EAETxf,EAAOxJ,KAAKgpB,IAGdxf,EAAO3H,SACa,iBAAV2H,IAAoBA,EAAS+F,KAAK0D,MAAMzJ,IAG/C9N,KAAKoG,WACN0H,GAAU9N,KAAKoG,SAASjE,SAAW,IAAI2G,QAAQo1C,IAExCpwC,GAAU,IAAIhF,QAAQsK,IAAO8qC,EAAIt9C,IAAMs9C,KAAS9qC,EAAExS,IAAMwS,KACrDjN,OAAS,MAMlB2H,CACV,CAEAjJ,SAASuJ,EAAMkf,GACPlf,IAEDpO,KAAKoG,SAAS03C,YAGfh+C,MAAM+E,SAASuJ,EAAMkf,GAE3B,oBCvaH,MAAMi5D,EAAsB,EAAQ,OAEpC9mF,EAAOC,QAAU,cAA8B6mF,EAC5C5mF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAUjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAmpE,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAQlC,OANAF,EAAOqD,OAAS,OAEhBrD,EAAOo/D,SAAW,CAACvpD,EAAKixB,EAAQpmC,EAAOu3E,EAAKsM,KACjC7jF,GAAS,IAAI+R,WAAW1B,QAAQ,OAAQ,QAG5C/Q,CACV,CAWAw7D,gBAGG,MAAMqjB,EAAuBhhF,MAAM29D,gBAYnC,OATAqjB,EAAqB/3C,OAAS,KACpB,CACJ1kC,IAAK,UACL+B,SAAU,CACPxE,KAAM,cAKRk/E,CACV,CAEAtmB,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,CAYA54E,SAASuJ,EAAMkf,GACZxtB,MAAM+E,SAASuJ,EAAMkf,EAAS,GACjC,oBChGH,MAAMm5D,EAAoB,EAAQ,OAElC,IAAIC,GAAc,EAKlBjnF,EAAOC,QAAU,cAA4B+mF,EAC1C9mF,YAAYgG,EAAQV,GACZyhF,IAEFjjF,MAAMkjF,QAAQ7lE,OAASrd,MAAMC,OAC1B,CAEA,EACAD,MAAMkjF,QAAQt4E,MAEjBq4E,GAAc,GAEjB5mF,MAAM6F,EAAQV,EACjB,CAgBAypE,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAWlC,OATAF,EAAOqD,OAAS,SAEhBrD,EAAOqe,OAAUsP,IACd,MAAMtC,EAAU,CAAC,EAGjB,OAFAA,EAAQttB,KAAK8G,YAAc8oB,EAEpB5vB,KAAKsgB,OAAOgN,EAAQ,EAGvBrrB,CACV,CAWAw7D,gBACG,OAAO39D,MAAM29D,cAAc,YAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,oBCnEH,MAAMrqC,EAAU,EAAQ,OAElBwzC,EAAkB,CACrBC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,cAAc,EACd3Q,YAAa,GACb6L,UAAU,GAGP+E,EAA6B,CAChC5iF,IAAK,eAGR5E,EAAOC,QAAU,cAAiC0zC,EAC/CzzC,YAAYgG,EAAQV,EAAQ+xC,EAAgBiwC,GACzCnnF,MAAM6F,EAAQV,EAAQ+xC,EACzB,CAGA/sB,kBACG,MAAO,CACJ5lB,IAAK,cACLkH,KAAM,OACNpH,SAAU,GACVmvC,YAAa,GAEnB,CAEA4zC,kBAAkBvF,EAASv7E,EAAUxG,EAAKsf,GACvC,GAAe,MAAXyiE,EAAiB,OAErB,MAAMwF,EAAU/gF,EAASghF,QAAU,GACnCzF,EAAQf,aAAa,UAAWuG,GAGhC/gF,EAAWA,GAAY,CAAC,EACxB,IAAK,MAAM2rB,KAAM60D,EACO,OAAjBxgF,EAAS2rB,GACV3rB,EAAS2rB,GAAM,KAEf3rB,EAAS2rB,GAAM3rB,EAAS2rB,IAAO60D,EAAgB70D,GAgCrD,GA3BG3rB,EAAS87E,UACT97E,EAASihF,OACTjhF,EAASyD,MACTzD,EAASyD,KAAK1D,QAEdC,EAASyD,KAAK5F,SAAQ,SAAU2rB,GAC7BxpB,EAASihF,MAAMl5E,KAAI,SAAUkF,GACtBA,EAAEzS,IAAMgvB,EAAEhvB,KAAIgvB,EAAEwuB,IAAM/qC,EAAE+qC,IAC/B,GACH,IACAh4C,EAAe,KAAIpG,KAAKsnF,YACrBlhF,EAAe,KACfA,EAAS87E,WAEgB,MAApB97E,EAAe,MAAiC,IAApBA,EAAe,KACnDA,EAAe,KAAIpG,KAAKsnF,YAAY,GAAIlhF,EAAS87E,UAEjD97E,EAAe,KAAIpG,KAAKsnF,YACrBlhF,EAAe,KACfA,EAAS87E,UAKf97E,EAAgB,MAAIpG,KAAKY,GAGE,MAAvB+gF,EAAQ4F,YAIT,YAFA5F,EAAQ4F,YAAYC,WAAWphF,GAQlC,IAAIqhF,EAuFJ,GA1FArhF,EAAS4yB,QAAU2oD,EAIfv7E,EAAS87E,UACN97E,EAASshF,QACVthF,EAASuhF,UAAY,CAClBC,qBAAsB,SAAUzlF,GAC7B,MAAO,mDACJA,EAAQ0lF,YAAc,eAAiB,8JAGpC1lF,EAAQ0N,wBAAwBzJ,EAASR,oHAGtCQ,EAAS0hF,eACJ1hF,EAAS0hF,eAAe3lF,GACxB,uBAErBiE,EAAS2hF,cAA+B,GAAf5lF,EAAQkM,yBAEjBlM,EAAQ0zD,UACH,8GACA,2BAGjB,GAGHzvD,EAASuhF,UAAY,CAClBC,qBAAsB,SAAUzlF,GAC7B,MAAO,mDACJA,EAAQ0lF,YAAc,eAAiB,iDAEzB1lF,EAAQi8C,mDACnBj8C,EAAQ0N,wBAAwBzJ,EAASR,oCAEtCQ,EAASosD,SACJ,qFACA,+BAGLpsD,EAAS0hF,eACJ1hF,EAAS0hF,eAAe3lF,GACxB,+BAELiE,EAAS2hF,cAA+B,GAAf5lF,EAAQkM,iCAEjClM,EAAQ0zD,UACH,yFACA,2BAGjB,GAGN4xB,EAAmB,IAAIO,YAAYC,OAAOC,SAAS9hF,GAEnDu7E,EAAQ4F,YAAcE,EACtBznF,KAAKmoF,oBAAoBxG,EAAS/hF,EAAKsf,KAEvC9Y,EAASuhF,UAAY,CAClBS,mBAAoB,SAAUjmF,GAC3B,MAAO,gEACJA,EAAQ0N,wBACSzJ,EAASR,0BAEpBQ,EAASosD,SACJ,kFACA,4BAGLpsD,EAAS0hF,eACJ1hF,EAAS0hF,eAAe3lF,GACxB,4BAELiE,EAAS2hF,cAA+B,GAAf5lF,EAAQkM,8BAEjClM,EAAQ0zD,UACH,sFACA,yBAGjB,GAGH4xB,EAAmB,IAAIO,YAAYC,OAAOI,OAAOjiF,GACjDu7E,EAAQ4F,YAAcE,GAGrBrhF,EAASosD,SAAU,CACpB,MAAM81B,EAAsB,KACzB,MAAMxhC,EAAW9mD,KACXuoF,EAAYh/C,SAASi/C,iBACxB,oFAEH,IAAK,IAAIn1E,EAAI,EAAGA,EAAIk1E,EAAUpiF,OAAQkN,IAAK,CACxC,MAAMo1E,EAAQF,EAAUl1E,GACpBo1E,IAAUA,EAAMC,kBACjBD,EAAMxvE,iBACH,SACA,SAAU5O,GACPA,EAAEg8E,kBACFh8E,EAAEs+E,iBAEF,MAAMC,EAAY5oF,KAAK6oF,cACvB,IAAKD,EAAW,OAEhB,MAAM/6D,EAAQ+6D,EAAUvF,aAAa,gBACrC,IAAKx1D,EAAO,OAEZ,MAAMnjB,EAAUk+E,EAAUvF,aAAa,iBACvC,IAAK34E,EAAS,OAEd,MAAMo+E,EAAYhiC,EAAS7hD,OAAO8I,UAAUrD,GACvCo+E,GAELA,EAAUt5E,KAAK,WAAYqe,EAC9B,IACA,GAEH46D,EAAMC,iBAAkB,EAE9B,GAGH/zE,YAAW,KACR2zE,IAEA3G,EAAQ1oE,iBAAiB,UAAU,KAChCqvE,GAAqB,GACtB,GACF,IACN,CAGA,GAAIliF,EAAS2gF,SAAU,CACpB,MAAMgC,EAAapH,EAAQqH,uBAAuB,qBAClD,IAAK,IAAI31E,EAAI,EAAGA,EAAI01E,EAAW5iF,OAAQkN,IAAK,CACzC,MAAM41E,EAAWF,EAAW11E,GACxB41E,GACDA,EAASC,WAAWC,YAAYF,EAEtC,CACH,CAGAjpF,KAAKopF,oBAAsBhjF,CAC9B,CAEAijF,eAAe1H,GACZ,OAAIA,GAAWA,EAAQ4F,YAChBvnF,KAAKopF,qBAAuBppF,KAAKopF,oBAAoBlH,SAE/CP,EAAQ4F,YAAY50D,WAAa,GAGjCgvD,EAAQ4F,YAAY50D,WAAa,KAGvC3yB,KAAKopF,qBAAuBppF,KAAKopF,oBAAoBlH,SAC/C,GACE,IAElB,CAEAoH,eAAe3H,EAAS93E,GAChB83E,GAAYA,EAAQ4F,cAEzB19E,EAAO7J,KAAKsnF,YAAYz9E,EAAM83E,EAAQ4F,YAAYplF,QAAQ+/E,UAGtD/0E,MAAMC,QAAQvD,IAASA,EAAK,IAC5BA,GAAQA,EAAKjJ,GAGd+gF,EAAQ4F,YAAYgC,QAAQ1/E,GAC1B83E,EAAQ4F,YAAYriF,QAC5B,CAEAskF,mBAAmB7H,GACZA,GAAWA,EAAQ4F,cACpB5F,EAAQ4F,YAAY3yE,iBAEb+sE,EAAQ4F,YAErB,CAEAD,YAAYz9E,EAAMq4E,GAAW,GAC1B,IAAKr4E,GAAQq4E,EACV,MAAO,GACH,GAAIA,GAAYr4E,GAAQsD,MAAMC,QAAQvD,IAAwB,GAAfA,EAAK1D,OACxD,MAAO,GACH,IAAK+7E,GAAYr4E,GAAQsD,MAAMC,QAAQvD,IAAwB,GAAfA,EAAK1D,OACzD,OAAO,KACH,IAAK0D,IAASq4E,EAClB,OAAO,KAGV,GAAmB,iBAARr4E,GAAoBA,EAAK1D,OAAS,EAC1C,IACG0D,EAAOgK,KAAK0D,MAAM1N,EAIrB,CAHE,MAAOQ,GAENR,EAAO,CAAEjJ,GAAIiJ,EAAMwE,KAAMxE,EAC5B,CAyBH,OArBKq4E,GAAY/0E,MAAMC,QAAQvD,GAC5BA,EAAOA,EAAK,GACJq4E,IAAa/0E,MAAMC,QAAQvD,KACnCA,EAAO,CAACA,IAIPq4E,EACDr4E,EAAK5F,SAAS2rB,KACNA,EAAEhvB,IAAMgvB,EAAE/f,OACZ+f,EAAEhvB,GAAKgvB,EAAE/f,KACZ,KAGEhG,EAAKjJ,IAAMiJ,EAAKgG,OAAMhG,EAAKjJ,GAAKiJ,EAAKgG,MAGjC,MAARhG,GAAgBq4E,IACjBr4E,EAAO,IAGHA,CACV,CAEAs+E,oBAAoBxG,GACjB,GAAKA,EAAQ8H,cACO9H,EAAQ8H,aACR9H,EAAQkH,cAAcY,aACV,EAAG,CAChC,IAAIh5D,EAAQ,EACR9qB,EAAS,GAKb,GAJIg8E,GAAWA,EAAQ4F,cACpB5hF,EAASg8E,EAAQ4F,YAAYt7E,YAAc,IAE9CwkB,EAAQ9qB,EAAOQ,OACXsqB,EAAQ,EAAG,CACZ,MAAMi5D,EAAQ/H,EAAQhB,cACnB,iCAEH,GAAa,MAAT+I,EACDA,EAAMjgD,UAAYhZ,MACd,CACJ,MAAMk5D,EAASpgD,SAASC,cAAc,KACtCmgD,EAAOlG,KAAO,sBAMd,MAAMlhF,EAAOgnC,SAASC,cAAc,QAC9BogD,EAAWrgD,SAASsgD,eAAep5D,GACzCluB,EAAK6/E,UAAUlhE,IAAI,cAAe,oBAClC3e,EAAKunF,YAAYF,GACjBD,EAAOG,YAAYvnF,GACnBo/E,EAAQmI,YAAYH,EACvB,CACH,CACH,CACH,oBCnWH,MAAMI,EAAoB,EAAQ,OAElCtqF,EAAOC,QAAU,cAA4BqqF,EAkB1Crb,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAclC,OAZAF,EAAOqD,OAAS,OAChBrD,EAAOf,IAAM,WAEbe,EAAOo/D,SAAW,CAACvpD,EAAKixB,EAAQpmC,IAExBmV,EAAI0lE,OAGC,IAFC76E,GAAS,IAAI+R,WAAW1B,QAAQ,OAAQ,QAM/C/Q,CACV,CAQA8/B,aAAap8B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAAS0iC,UACX9oC,KAAKoG,SAAS0iC,QAAQz7B,QAAQ,WAAa,EAC5C1H,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG8N,OAElClK,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0iC,QAIpD,CAUA1Z,YAAYvlB,EAAMtC,GAGf,GAFAzH,MAAMsvB,YAAYvlB,EAAMtC,GAEpBsC,GAAQA,EAAK7J,KAAK8G,YAAa,CAChC,MAAMkjF,EAAahqF,KAAKL,YAAYyE,WAAWm6C,gBAE/C,GAAI10C,EAAK7J,KAAK8G,YAAYX,OAAS6jF,EAAY,CAC5C,MAAMjqF,EAAIC,KAAK+B,GAAG9B,QAClBsH,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,2CAA4C,CAACiqF,IAErD,CACH,CACH,CAOIlpD,qBACD,OAA4C,GAArC9gC,KAAKoG,SAASo4C,mBACxB,CAWAif,gBAGG,MAAMqjB,EAAuBhhF,MAAM29D,gBAYnC,OATAqjB,EAAqB/3C,OAAS,KACpB,CACJ1kC,IAAK,UACL+B,SAAU,CACPxE,KAAM,YAKRk/E,CACV,CAEAtmB,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,CAYA54E,SAASuJ,EAAMkf,GACZxtB,MAAM+E,SAASuJ,EAAMkf,EAAS,GACjC,oBC9IH,MAAM28D,EAAyB,EAAQ,OAEvCxqF,EAAOC,QAAU,cAAiCuqF,EAsB/Cvb,aAAavsE,GACV,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOo/D,SAAY/zC,GAEXA,EAAQkwD,OAGH,GAFAx9E,KAAKsgB,OAAOgN,GAMlBrrB,CACV,CAUAmtE,gBAA8C,CAW9C3R,gBAEG,OAAO,IACV,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,oBC3EH,MAAMyM,EAAkB,EAAQ,OAE1BnqF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,cAA0BwqF,EAqBxCpG,kBAAkBhsE,GACf,MAAO,yBACH9E,QAAQ,OAAQ8E,EAAIlX,IACpBoS,QAAQ,eAAgBhT,KAAK8G,WAAWkM,QAAQ,KAAM,KAC7D,CAGA07D,aAAavsE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAM4uE,aAAavsE,GAC5ByD,EAAQ5F,KAEd,IAAImqF,EAAY,GACZC,EAAc,GACdjoF,EAAQkoF,SACTF,EAAY,cACZC,EACG,8CACArqF,EAAE,gBACF,WAGN,MAAMiB,EAAQmB,EAAQnB,MA8EtB,OA5EAiB,EAAOo/D,SAAYvpD,IAChB,GAAIA,EAAI0lE,OAAQ,OAAO1lE,EAAIlS,EAAMkB,YAEjC,MAAMwjF,EAAW,GACjB,IAAIC,EAAgBvqF,KAAK+B,GAAG2D,UAAUE,EAAMQ,SAASjE,SACrDooF,EAAgB,IAAI9mF,MAAM2nE,eAAe,CACtCvhE,KAAM0gF,IAGT,IAAI5kF,EAASmS,EACgB,MAAzBA,EAAIlS,EAAMkB,cACXnB,EAASmS,EAAIlS,EAAMkB,aAGtByjF,EAAc1gF,KAAK42E,MAAK,SAAU3oE,GAC/B,QAC4B,IAAlBnS,EAAO0H,UACa,GAA3B1H,EAAO0H,QAAQyK,EAAIlX,IACpB,CACC,IAAIgkF,EAAO,GAEP4F,EAAS1yE,EAAIlX,GACjB,KAAOZ,KAAKyqF,YAAYD,IACrBD,EAAc1gF,KAAK42E,MAAK,SAAUiK,GAC3BH,EAAc1gF,KAAK4gF,YAAYD,IAAWE,EAAI9pF,KAC/CgkF,EAAO8F,EAAIr8E,KAAO,KAAOu2E,EAE/B,IACA4F,EAASxqF,KAAKyqF,YAAYD,GAG7B5F,GAAQ9sE,EAAIzJ,KACZi8E,EAAShmF,KAAKsgF,EACjB,CACH,IAGA,IAAI+F,EAAW,GAkBf,OAjBAA,GAAY,iCACW,GAAnBL,EAASnkF,OACVwkF,GAAYP,EAEZE,EAASrmF,SAAQ,SAAUmK,GACxBu8E,GACG,0GAGAv8E,EACA,SACN,IAEHu8E,GAAY,SAIR3pF,EAEE,4BACAA,EACA,+BACAmpF,EACA,KACAQ,EACA,SAIA,+BACAR,EACA,KACAQ,EACA,QAEN,EAGI1oF,CACV,CAUAmtE,cAAclwD,EAAKtf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAKH,MAAMqD,EAAQ5F,KAEd,IAJAmC,EAAUA,GAAW,CAAC,GAIVkoF,OAAQ,CACjB,IAAKnrE,GAAqB,GAAdA,EAAI/Y,OAKb,YAJA5D,EAAKknC,UACF,uFACA1pC,EAAE,gBACF,iBAIN,MAAMuqF,EAAW,GACjBnoF,EAAUnC,KAAK+B,GAAG2D,UAAUE,EAAMQ,SAASjE,SAC3CA,EAAU,IAAIsB,MAAM2nE,eAAe,CAChCvhE,KAAM1H,IAGT,IAAIwD,EAASuZ,EACgB,MAAzBA,EAAItZ,EAAMkB,cACXnB,EAASuZ,EAAItZ,EAAMkB,aAGtB3E,EAAQ0H,KAAK42E,MAAK,SAAU3oE,GACzB,QAC4B,IAAlBnS,EAAO0H,UACa,GAA3B1H,EAAO0H,QAAQyK,EAAIlX,IACpB,CACC,IAAIgkF,EAAO,GAEP4F,EAAS1yE,EAAIlX,GACjB,KAAOZ,KAAKyqF,YAAYD,IACrBroF,EAAQ0H,KAAK42E,MAAK,SAAUiK,GACrBvoF,EAAQ0H,KAAK4gF,YAAYD,IAAWE,EAAI9pF,KACzCgkF,EAAO8F,EAAIr8E,KAAO,KAAOu2E,EAE/B,IACA4F,EAASxqF,KAAKyqF,YAAYD,GAG7B5F,GAAQ9sE,EAAIzJ,KACZi8E,EAAShmF,KAAKsgF,EACjB,CACH,IAEA,MAAMgG,EAAQ,UACd,IAAID,EAAW,GACfA,GAAY,4CACZL,EAASrmF,SAAQ,SAAUmK,GACxBu8E,GACG,qFACAC,EACA,iBACAx8E,EACA,SACN,IACAu8E,GAAY,SAEZpoF,EAAKknC,UAAYkhD,CACpB,CAEA/kF,EAAMilF,SAAStoF,EAAM3C,EAAKsf,EAC7B,CAUAm+D,WAAWn+D,EAAKtf,EAAK2C,EAAMpC,GACxB,MAAMN,EAASD,EAAIQ,OAAOJ,KAAK8jF,kBAAkB5kE,IAC3C4rE,EAAU,GAAGjrF,UACbkrF,EAAS,GAAGlrF,SACZa,EAAOiD,GAAGpB,GACVqD,EAAQ5F,KACRgrF,EAAkB7qF,EACxB,IAAIwF,EAAS,CAAC,EACVslF,GAAc,EAclB,SAASC,EAAatlF,EAAOH,GAC1BE,EAbH,SAAmBC,EAAOsZ,GACvB,IAAIvZ,EAAS,CAAC,EAQd,YANmB,IAATC,QACoB,IAApBA,EAAMkB,iBACmB,IAAzBoY,EAAItZ,EAAMkB,cAEjBnB,EAASuZ,EAAItZ,EAAMkB,aAEfnB,CACV,CAGYwlF,CAAUvlF,EAAOH,GAE1B9B,GAAGonF,GAAQ5Q,aAEX,MAAMh4E,EAAUyD,EAAM7D,GAAG2D,UAAUE,EAAMQ,SAASjE,SAClDwB,GAAGonF,GAAQjwE,WACXnX,GAAGonF,GAAQxzE,MAAMpV,GACjBwB,GAAGonF,GAAQrmF,UACXf,GAAGonF,GAAQK,aACXznF,GAAGonF,GAAQM,UAEG,MAAV1lF,GAAkBA,EAAOQ,QAC1BR,EAAO1B,SAAQ,SAAUrD,GAClB+C,GAAGonF,GAAQ5+D,OAAOvrB,KACnB+C,GAAGonF,GAAQO,UAAU1qF,GACT+C,GAAGonF,GAAQ7b,YAAYtuE,GAC/BwhF,UAAUlhE,IAAI,YAExB,IAEHvd,GAAGonF,GAAQ3Q,cACd,CAuGA,OArGIz2E,GAAGmnF,IACJnnF,GAAGmnF,GAASlmF,OACZsmF,EAAalrF,KAAMkf,IAEnBzb,MACIhD,GAAG,CACDG,GAAIkqF,EACJpqF,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRqB,GAAI,CACDoI,OAAQ,KACc,GAAfygF,GAAqBC,EAAalrF,KAAMkf,GAE5C+rE,GAAc,CAAK,GAGzBxpF,KAAM,CACHb,GAAImqF,EACJrqF,KAAM,OACNQ,IAAK,eACLmgE,SAAU,SAAUvpD,EAAKixB,GACtB,MACG,UACAA,EAAO40C,SAAS7lE,EAAKixB,GACrB,SACAjxB,EAAIzJ,KACJ,UAEN,EACAjM,GAAI,CACDmpF,YAAapmF,eAAgBvE,EAAI+B,EAAO8sB,GACrC,MAAM+7D,EAAMxrF,KAAKkvE,YAAYtuE,GACvB6qF,EAAOzrF,KAQb,GAPa,GAAT2C,EACD6oF,EAAIpJ,UAAUlhE,IAAI,YAElBsqE,EAAIpJ,UAAUvnE,OAAO,YAIpB7a,KAAKyqF,YAAY7pF,GAAK,CACvB6qF,EAAKtR,aAEL,IAAIqQ,EAAS5pF,EACb,KAAOZ,KAAKyqF,YAAYD,IACrBA,EAASxqF,KAAKyqF,YAAYD,GACtBA,GAAU5pF,GAAI6qF,EAAKC,YAAYlB,GAGtCxqF,KAAK6J,KAAK8hF,YAAYnB,GAAQ,SAAUp8E,GACjCA,EAAKxN,IAAMA,GAAI6qF,EAAKC,YAAYt9E,EAAKxN,GAC5C,IAEA6qF,EAAKrR,cACR,MACGqR,EAAKtR,aACLn6E,KAAK6J,KAAK8hF,YAAY/qF,GAAI,SAAUkX,GAC7BA,EAAIlX,IAAMA,GAAI6qF,EAAKC,YAAY5zE,EAAIlX,GAC1C,IACA6qF,EAAKrR,eAER,MAAMz0E,EAAS,CAAC,EAGhB,GAFAA,EAAOC,EAAMkB,YAAcnD,GAAGonF,GAAQa,aAElC1sE,EAAIte,GAAI,CAE8B,GAAnC+E,EAAOC,EAAMkB,YAAYX,SAC1BR,EAAOC,EAAMkB,YAAc,IAE9B,UACSlB,EAAMX,OAAO+C,QAAQ0lE,OAAOxuD,EAAIte,GAAI+E,GAGtCjF,GAAQA,EAAKwvB,YACdxvB,EAAKwvB,WAAWhR,EAAIte,GAAI+E,EAW9B,CATE,MAAOwC,GACN5F,EAAK6/E,UAAUlhE,IAAI,iBACnB3e,EAAK6/E,UAAUlhE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT4N,IAAKA,EACLvZ,OAAQA,GAEd,CACH,KAAO,CACJ,MAAM2nB,EAAU,CAAC,EACjBA,EAAQ1nB,EAAMkB,YAAcnD,GAAGonF,GAAQa,aAEvChmF,EAAMf,SAASlB,GAAGqnF,EAAgBvqF,GAAGG,IAAK0sB,EAC7C,CACH,MAIR1oB,KAAKrC,EAAM,CACT2K,GAAI,KAGN,CACV,CAEA29E,SAASlJ,EAASziE,GACf,MAAMtZ,EAAQ5F,KAId,IAHA2hF,EAAUA,EAAQhB,cAAc,sBACJkL,aACRlK,EAAQkH,cAAcY,aACV,EAAG,CAChC,IAAIh5D,EAAQ,EAKZ,GAHGA,EADCvR,EAAItZ,EAAMkB,aAAeoY,EAAItZ,EAAMkB,YAAYX,OACxC+Y,EAAItZ,EAAMkB,YAAYX,OACpB,EAETsqB,EAAQ,EAAG,CACZ,MAAMi5D,EAAQ/H,EAAQhB,cACnB,iCAEH,GAAa,MAAT+I,EACDA,EAAMjgD,UAAYhZ,MACd,CACJ,MAAMk5D,EAASpgD,SAASC,cAAc,KACtCmgD,EAAOlG,KAAO,sBACdkG,EAAO1wE,iBAAiB,SAAS,SAAUwW,GAIxCA,EAAM42D,iBACT,IACA,MAAM9jF,EAAOgnC,SAASC,cAAc,QAC9BogD,EAAWrgD,SAASsgD,eAAep5D,GACzCluB,EAAK6/E,UAAUlhE,IAAI,cAAe,oBAClC3e,EAAKunF,YAAYF,GACjBD,EAAOG,YAAYvnF,GACnBo/E,EAAQmI,YAAYH,EACvB,CACH,CACH,CACH,CAWAlsB,gBACG,OAAO39D,MAAM29D,cAAc,WAC9B,CAEAjD,kBACG,MAAMijB,EAAyB39E,MAAM06D,kBAQrC,OANAijB,EAAuB10C,OAAS,KACtB,CACJ1kC,IAAK,eAIJo5E,CACV,CAEAxxE,SAASmC,EAAMkf,GACZ,IAAI3nB,EAAS,CAAC,EAEd,OADAA,EAASyI,EAAK+8E,YACPxlF,CACV,CAEAd,SAASuJ,EAAMkf,GACZ,IAAKlf,EAAM,OAAO,EAElB,MAAM4H,EAAMsX,EAAQttB,KAAK8G,aAAe,GAExCsH,EAAK09E,UAAU91E,GAEf,MAAMw1E,EAAMp9E,EAAKV,MAAMizE,cAAc,qBAErC,IAAK6K,EAAK,OAAO,EAGjBxrF,KAAKovE,cAAcp5D,EAAKhW,KAAKJ,IAAK4rF,EAAK,CACpC3mC,UAAU,EACVwlC,QAAQ,IAGX11E,YAAW,WACR,IAAI5T,EAAS,GACTyqF,EAAIK,aAAe,KACpB9qF,EAASyqF,EAAIK,cAEhBz9E,EAAKnM,OAAOlB,OAASA,EAAS,EAC9BqN,EAAKvN,QACR,GAAG,IACN,oBC3cH,MAAMg9E,EAAqB,EAAQ,OAC7BkO,EAAkB,EAAQ,OAEhCtsF,EAAOC,QAAU,cAA0BqsF,EACxCpsF,YAAYgG,EAAQV,EAAQ+xC,GACzBl3C,MAAM6F,EAAQV,EAAQ+xC,EACzB,CAMA7xC,aAEG,GAAe,MAAXnF,KAAKY,GAAY,CAClB,MAAMorF,EAAWhsF,KAAK+B,GAAG22B,aACnBuzD,EAAWF,EAAgB3nF,WAEjCpE,KAAKoG,SAASO,WAAaqlF,EAASprF,GACpCZ,KAAKoG,SAASgB,WAAa,EAEvBpH,KAAKoG,SAAS03C,YACf99C,KAAKoG,SAASkB,YAAc2kF,EAASrnC,kBACrC5kD,KAAKoG,SAASa,SAAW,OACzBjH,KAAKoG,SAASc,YAAc,OAC5BlH,KAAKoG,SAASM,SAAW,IAEzB1G,KAAKoG,SAASiB,WAAa4kF,EAASrnC,kBACpC5kD,KAAKoG,SAASa,SAAW,MACzBjH,KAAKoG,SAASc,YAAc,OAC5BlH,KAAKoG,SAASM,SAAW,GAQ5B,MAAMlB,EAAUwmF,EAAS9lF,SAAS,CAC/B7B,IAAKw5E,EAAmBz5E,WAAWC,IACnCyC,WAAY,GAAG9G,KAAKiF,OAAOkC,QAAQnH,KAAKoB,QACxCA,MAAOpB,KAAKiF,OAAO7D,MACnBgF,SAAU,CACPC,SAAUrG,KAAKoG,SAASC,SACxBM,WAAY3G,KAAKiF,OAAOrE,GACxBqG,SAAUjH,KAAKoG,SAASc,YACxBA,YAAalH,KAAKoG,SAASa,SAC3BG,WAAYpH,KAAKoG,SAASgB,WAC1BC,WAAYrH,KAAKoG,SAASiB,WAC1BC,YAAatH,KAAKoG,SAASkB,YAC3BZ,SAAU,KAgBhB,IAAImZ,QAAe7f,KAAK6U,eAAejN,OACvC5H,KAAKY,GAAKif,EAAOjf,GAEjB4E,EAAQY,SAAS6B,WAAajI,KAAKY,GACnC,IAAIsrF,QAAmB1mF,EAAQqP,eAAejN,OAgB9C,OAfApC,EAAQ5E,GAAKsrF,EAAWtrF,GAExBZ,KAAKoG,SAAS6B,WAAazC,EAAQ5E,SAC7BZ,KAAK6U,eAAejN,aAGpB5H,KAAKiF,OAAO27B,SAAS5gC,YAErBgsF,EAASprD,SAASp7B,SAGlBxF,KAAKkI,sBAEL1C,EAAQ0C,gBAEPlI,IACV,CACG,OAAOF,MAAM8H,MAEnB,CAIA8mE,aAAavsE,GAGV,OADAA,EAAUnC,KAAKmsF,kBAAkBhqF,GAC1BrC,MAAM4uE,aAAavsE,EAC7B,CAiBAgqF,kBAAkBhqF,GAkBf,OAjBAA,EAAUA,GAAW,CAAC,GACd0iD,SACqB,MAA1B7kD,KAAKoG,SAASy+C,UAAmB7kD,KAAKoG,SAASy+C,SAElD1iD,EAAQ4lF,cAC2B,MAAhC/nF,KAAKoG,SAAS4+C,iBACRhlD,KAAKoG,SAAS4+C,eAGvB7iD,EAAQ2lF,eAAkB5pC,GAClBl+C,KAAKoG,SAAS2+C,mBAEf7G,EAAIntC,SACE,0CAA0CmtC,EAAIntC,4GAC5C,oDAJkC,GAO1C5O,CACV,CAQA4/B,aAAap8B,GACN3F,KAAKoG,SAAS0+C,gBACX9kD,KAAKoG,SAAS03C,WACfn4C,EAAO3F,KAAK8G,YAAc,CACvB,CACGlG,GAAIZ,KAAK+B,GAAG6Q,QAAQhC,WACpBvC,KAAMrO,KAAK+B,GAAG6Q,QAAQhC,aAI5BjL,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG6Q,QAAQhC,WAGnD,CAEA3E,SAASmC,GACN,IAAI4H,EAAMlW,MAAMmM,SAASmC,GAczB,OAZI4H,IACiB,iBAAPA,EACRA,EAAMA,EAAIhD,QAAQ,mBAAoBhT,KAAK+B,GAAG6Q,QAAQhC,YAChDzD,MAAMC,QAAQ4I,KACpBA,EAAMA,EAAI7H,KAAKiF,IACXA,EAAExC,UAAYwC,EAAEvD,MAAQuD,EAAExS,IAAMwS,IAAIJ,QAClC,mBACAhT,KAAK+B,GAAG6Q,QAAQhC,gBAKrBoF,CACV,CAEAnR,SAASuJ,EAAMkf,GACZ,IAAItX,EAAMsX,EAAQttB,KAAK8G,YAEZ,mBAAPkP,IAA0BA,EAAMhW,KAAK+B,GAAG6Q,QAAQhC,YAEpD0c,EAAQttB,KAAK8G,YAAckP,EAE3BlW,MAAM+E,SAASuJ,EAAMkf,EACxB,CAEA4nC,WACG,OAAOl1D,KAAK+B,GAAG6Q,QAAQ/B,WAAW1C,KAAKgoE,IACpC,MAAMroE,EAAS,CACZlN,GAAIu1E,EAAEvlE,SACNykD,MAAO8gB,EAAEplE,UASZ,OANI/Q,KAAKoG,SAAS03C,WACfhwC,EAAOO,KAAO8nE,EAAEvlE,SAEhB9C,EAAOnL,MAAQwzE,EAAEvlE,SAGb9C,CAAM,GAEnB,oBClMH,IAAIs+E,EAAoB,EAAQ,OAEhC3sF,EAAOC,QAAU,cAA4B0sF,EAS1CC,6BAA6BzrF,GAC1B,IAAI0rF,EAAgBtsF,KAAKwmB,QAAQ2gB,oBAAoBvmC,GACjD0rF,IAGItsF,KAAKslD,SAAWgnC,EAAchnC,SACf,CACd,UACA,UACA,OACA,aACA,WAEQrhD,SAAS6d,IACjB,IAAIyqE,EAAOvsF,KAAK8hB,GAChB9hB,KAAK8hB,GAAKwqE,EAAcxqE,GACxBwqE,EAAcxqE,GAAKyqE,CAAI,GAInC,CAOAnzD,YAAYJ,GACTh5B,KAAK8lC,UAAY9M,EAAQp4B,IAAMZ,KAAK8lC,UAIhC9M,EAAQwzD,UAAYxzD,EAAQwzD,SAASrmF,OAAS,EAC3C6yB,EAAQjkB,QAAiC,oBAAvBikB,EAAQjkB,OAAOnT,MAClC5B,KAAKqsF,6BAA6BrzD,EAAQjkB,OAAOnU,IAKjDo4B,EAAQjkB,QACRikB,EAAQjkB,OAAOy3E,UACfxzD,EAAQjkB,OAAOy3E,SAASrmF,OAAS,GAEjC6yB,EAAQjkB,OAAOy3E,SAASvoF,SAASwoF,IAC9B,GAAkB,aAAdA,EAAM7qF,MAGJ6qF,EAAM7lD,eAAe8lD,OACrBD,EAAM7lD,eAAe8lD,MAAMvmF,OAAS,GAGvBsmF,EAAM7lD,eAAe8lD,MAAMrgE,MAAM/X,GACpCA,EAAE1T,IAAMZ,KAAK8lC,YAEX,CACT9lC,KAAKqsF,6BAA6BrzD,EAAQjkB,OAAOnU,IAGjD,IAAI+rF,EAAW3sF,KAAKwmB,QAAQ2gB,oBACzBslD,EAAM7rF,IAEL+rF,GACDA,EAASC,QAAQ5sF,KAEvB,CAEN,IAKTA,KAAKqC,SAAS22B,EACjB,CAQA32B,SAASwqF,GAuCHA,EAAWjmD,eAAez/B,MACQ,IAAlC0lF,EAAWjmD,eAAez/B,OAE1BnH,KAAKoB,MAAQyrF,EAAWjmD,eAAez/B,KAI7C,oBCxIH,IAAI2lF,EAA2B,EAAQ,OAIvCrtF,EAAOC,QAAU,cAAmCotF,EAcjD1zD,YAAYJ,GACTh5B,KAAK8lC,UAAY9M,EAAQp4B,IAAMZ,KAAK8lC,UACpC9lC,KAAKqC,SAAS22B,EACjB,CAQA32B,SAASwqF,GA6CN,GANGA,EAAWjmD,eAAez/B,MACQ,IAAlC0lF,EAAWjmD,eAAez/B,OAE1BnH,KAAKoB,MAAQyrF,EAAWjmD,eAAez/B,MAGtC0lF,EAAWL,SAAU,CACtB,IAAInnC,EAAU,GACdwnC,EAAWL,SAASvoF,SAASV,IACZ,aAAVA,EAAE3B,MACHyjD,EAAQ/gD,KAAKf,EAAE3C,GAClB,IAEHZ,KAAKqlD,QAAUA,CAClB,CACH,CAQA0nC,oBACG,MAAO,CACJ,CACGnsF,GAAIZ,KAAK8lC,UACTrkB,IAAK,CACFta,KAAMnH,KAAKmH,OAIvB,oBC3GH,MAAM6lF,EAAuB,EAAQ,OAErCvtF,EAAOC,QAAU,cAA+BstF,EAY7Cp4E,UASG,OAAO9U,MAAM8U,UAAUJ,MAAK,IAClBxU,KAAKwmB,QAAQ4gB,cAAcpnC,OAExC,CAEAuF,UA4BG,OAAO,CACV,CAMA0nF,SAASv1D,EAAMzd,GACPyd,EAMDA,EAAKg1D,OAASh1D,EAAKg1D,MAAMvmF,OAAS,EACnC8T,EAAG,KAAMyd,EAAKg1D,MAAM,IACE,oBAAdh1D,EAAKgvB,MAEbzsC,EAAG,KAAMyd,IAGTA,EAAOA,EAAKnL,QACZvsB,KAAKitF,SAASv1D,EAAMzd,IAbpBA,EAAG,KAAM,KAef,CAEA2yE,QAAQM,GACLltF,KAAK4mD,cAAgBsmC,EAAKpnD,SAC7B,CAOA1M,YAAYJ,GACTh5B,KAAK8lC,UAAY9M,EAAQp4B,IAAMZ,KAAK8lC,UACpC9lC,KAAKqC,SAAS22B,EACjB,CAQA32B,SAASwqF,GA8CHA,EAAWjmD,eAAez/B,MACQ,IAAlC0lF,EAAWjmD,eAAez/B,OAE1BnH,KAAKoB,MAAQyrF,EAAWjmD,eAAez/B,MAI1C,IAAIgmF,EAAUN,EAAWjmD,eACzB5mC,KAAKitF,SAASE,GAAS,CAAChlF,EAAK2P,KACtBA,EACD9X,KAAK4mD,cAAgB9uC,EAAIlX,GAItBisF,EAAW93E,QACe,oBAA1B83E,EAAW93E,OAAOnT,KAElB5B,KAAK4mD,cAAgBimC,EAAW93E,OAAOnU,GAEvCZ,KAAK4mD,cAAgB,IAE3B,GAEN,CAQAmmC,oBACG,MAAMl2C,EAAW72C,KAAK62C,WACtB,MAAO,CACJ,CACGj2C,GAAIZ,KAAK8lC,UACTrkB,IAAK,CACFta,KAAMnH,KAAKmH,MAEdsB,KAAMouC,EAAS1wC,OAAS0wC,EAAW,MAG5C,CAQAu2C,eAAexsF,GACZ,IAAIH,EAAK,CACNG,GAAIA,EACJF,KAAM,QACNU,MAAO,iDAGVqC,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAyoF,gBAAgBzsF,GAAK,CAOrB0sF,SAAS1sF,GACN,GAAI+C,GAAG/C,GACJ,OAAO+C,GAAG/C,GAAIqL,UAEpB,CAUAshF,SAASd,EAAOe,GAEbxtF,KAAKwmB,QAAQ4gB,cAAcpnC,MAG3BA,KAAKwmB,QAAQygB,WAAWwlD,GAGxBA,EAAMW,eAAeI,GAErBxtF,KAAKwP,KAAK,WAAYi9E,EACzB,CASAzkB,eACGloE,MAAMkoE,eACNhoE,KAAKqlC,iBAIArlC,KAAKknD,aACuBlnD,KAAKwmB,QAAQ+f,oBACxCvmC,KAAK8lC,WAEkB3/B,OAAS,GAChCnG,KAAKuvD,eAAe,0CAG7B,CAMAA,eAAej+C,EAASzH,EAAO,CAAC,GAC7B7J,KAAKwP,KACF,UACA,GAAGxP,KAAKoE,SAASC,OACdrE,KAAKoB,MAAQpB,KAAKoB,MAAQpB,KAAKmH,UAC5BmK,IACNzH,EAEN,oBC7RH,MAAM4jF,EAAmB,EAAQ,OAEjChuF,EAAOC,QAAU,cAA2B+tF,qBCF5C,MAAMC,EAAgC,EAAQ,OAI9CjuF,EAAOC,QAAU,cAAwC,EAatDqtF,oBAEG,IAAIY,EAAa7tF,MAAMitF,oBAuBvB,OAX4B/sF,KAAKwmB,QAAQ+f,oBACtCvmC,KAAK8lC,WAEc7hC,SAAS+jC,IAC5B2lD,EAAWrpF,KAAK,CACb1D,GAAIonC,EAAKpnC,GACT6gB,IAAK,CACFta,KAAMnH,KAAKgsC,WAAWhE,EAAKpnC,KAAKQ,OAAS,KAE7C,IAEEusF,CACV,CAEA3lB,eACGloE,MAAMkoE,eAGN,MAAM4lB,EAAwB5tF,KAAKwmB,QAAQ+f,oBACxCvmC,KAAK8lC,WAEJ8nD,EAAsBznF,OAAS,GAChCnG,KAAKuvD,eAAe,6CAKvB,IAAIs+B,EAAiB,EACrBD,EAAsB3pF,SAASV,IACmC,IAA1DvD,KAAKgsC,WAAWzoC,EAAE3C,KAAKo/E,YAAY7+D,OAAOhb,QAAU,IACtD0nF,GACH,IAGCA,EAAiB,GAClB7tF,KAAKuvD,eACF,qDAGT,oBCpEH,MAAMu+B,EAAyB,EAAQ,OAEvCruF,EAAOC,QAAU,cAAiCouF,EAK/C9lB,eACGloE,MAAMkoE,eAIDhoE,KAAKupD,SACPvpD,KAAKuvD,eAAe,wBAGlBvvD,KAAKsR,SACPtR,KAAKuvD,eAAe,wBAGvBvvD,KAAK+tF,cAAc,MACnB/tF,KAAK+tF,cAAc,QACnB/tF,KAAKguF,eAAe,MACH,KAAbhuF,KAAKwmC,OACSxmC,KAAKonD,UAEjBpnD,KAAKuvD,eACF,4DAITvvD,KAAKiuF,kBAAkB,KAAM,WAC7BjuF,KAAKiuF,kBAAkB,OAAQ,YAClC,CAQAF,cAAc1pF,GACM,IAAbrE,KAAKqE,IACNrE,KAAKuvD,eAAe,oBAAoBlrD,cAE9C,CAUA2pF,eAAe3pF,GACZ,GAAkB,MAAdrE,KAAKqE,GAAc,CAIpB,IAAIijD,EAAYtnD,KAAKwmB,QAAQ+gB,mBAAmBvnC,MAC5CkuF,GAAoB,EACxB5mC,EAAUrjD,SAASg4B,IACLA,EAAEmrB,WAEV8mC,GAAoB,EACvB,IAEEA,GAAyC,GAApB5mC,EAAUnhD,QACjCnG,KAAKuvD,eACF,8CAA8ClrD,YAGvD,CACH,CAWA4pF,kBAAkB5pF,EAAK8pF,GACH,KAAbnuF,KAAKqE,IACFrE,KAAKmuF,KACFnuF,KAAKmuF,GAAQrpE,SACkB,GAA5B9kB,KAAKmuF,GAAQppE,KAAK5e,QACnBnG,KAAKuvD,eAAe,oBAAoBlrD,oBAG1CrE,KAAKmuF,GAAQ5oC,YACqB,GAA/BvlD,KAAKmuF,GAAQ3oC,QAAQr/C,QACtBnG,KAAKuvD,eACF,oBAAoBlrD,uBAUtC,oBC5GH,MAAM+pF,EAA2B,EAAQ,OAEzC3uF,EAAOC,QAAU,cAAmC0uF,qBCFpD,MAAMC,EAAgC,EAAQ,MAE9C,IAAItuF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAwC,EAOtD4uF,YAAY1tF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACT2tF,kBAAmB,GAAG3tF,sBACtB4tF,YAAa,GAAG5tF,gBAChB6tF,kBAAmB,GAAG7tF,sBACtB8tF,0BAA2B,GAAG9tF,8BAC9B+tF,SAAU,GAAG/tF,aACbguF,eAAgB,GAAGhuF,mBACnBiuF,UAAW,GAAGjuF,cACdkuF,cAAe,GAAGluF,kBAClBmuF,sBAAuB,GAAGnuF,0BAC1BouF,SAAU,GAAGpuF,aACbquF,uBAAwB,GAAGruF,2BAC3BsuF,eAAgB,GAAGtuF,mBACnBuuF,UAAW,GAAGvuF,cACdwuF,eAAgB,GAAGxuF,mBAEzB,CAQAwsF,eAAexsF,GACZ,IAAIV,EAAMF,KAAKsuF,YAAY1tF,GAEvByuF,EAAgB,CAAC,CAAEzuF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAKwmB,QAAQshB,kBAAkB9nC,OACjC,IAAIiE,SAASib,IAChCmwE,EAAc/qF,KAAK,CAAE1D,GAAIse,EAAI7a,IAAK1B,MAAOuc,EAAI9d,OAAQ,IAGxD,IAAIkuF,EAAatvF,KAAK+B,GAAG2jB,UAAUvX,KAAKkX,IAC9B,CAAEzkB,GAAIykB,EAAEzkB,GAAI+B,MAAO0iB,EAAEjkB,OAASikB,EAAEle,KAAMlC,OAAQogB,MAExDiqE,EAAWxjD,QAAQ,CAChBlrC,GAAI,EACJ+B,MAAO5C,EAAE,sBAOZ,IAAIwvF,EAAa,CACd3uF,GAAI,EACJ+B,MAAO5C,EAAE,mBAIZ,SAASyvF,EAAcprD,GAGpB,IAAIr9B,EAAS,CAACwoF,GACd,GAAInrD,EAAO,CACR,IAAIlqB,EAAQo1E,EAAWjjE,MAAMhH,GAAMA,EAAEzkB,IAAMwjC,IACvClqB,GAASA,EAAMjV,QAChBiV,EAAMjV,OAAO8B,SAAS9C,SAAS+C,IAC5BD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG5D,CACA,OAAOD,CACV,CAEA,SAAS0oF,EAAaC,EAAcC,EAAa5tD,GAG9C2tD,EAAazrF,SAAS2rF,IACnB,IAAIC,EAASlsF,GAAGisF,GACZC,IACDA,EAAOprF,OAAO,UAAWkrF,GAMzBE,EAAOnrF,UACPmrF,EAAOjrF,OACV,GAEN,CAEA,IAAIkrF,EAAcN,EAAcxvF,KAAKwuF,aAGjCuB,EAAoB,CACrB7vF,EAAIuuF,kBACJvuF,EAAIwuF,2BAKHsB,EAAWR,EAAcxvF,KAAK2uF,UAG9BsB,EAAiB,CAClB/vF,EAAI0uF,eACJ1uF,EAAI2uF,UACJ3uF,EAAI4uF,eAKP,SAASoB,EAAoBC,GAC1B,IAAIxqF,EAAS,CAAC,CAAE/E,GAAI,EAAG+B,MAAO5C,EAAE,+BAMhC,OALIowF,GAAeA,EAAYhuF,SAC5BguF,EAAYhuF,UAAU8B,SAASohB,IAC5B1f,EAAOrB,KAAK,CAAE1D,GAAIykB,EAAEzkB,GAAI+B,MAAO0iB,EAAEhX,MAAO,IAGvC1I,CACV,CAaA,SAASyqF,EAAiBvY,GAEvB,IAbiClyE,EAC7B0qF,EAYAC,EAAY3sF,GAAGzD,EAAIyuF,UAAU1iF,WAC7BskF,EAAUjB,EAAWjjE,MAAMhH,GAAMA,EAAEzkB,IAAM0vF,IAC7C,GAAIC,GAAWA,EAAQtrF,OAAQ,CAC5B,IAAIkrF,EAAcI,EAAQtrF,OAAO8I,UAAU8pE,GACvCsY,GAAeA,EAAYhuF,UAjBDwD,EAmB3B6qF,EAAsBN,EAAoBC,IAlB5CE,EAAc1sF,GAAGzD,EAAI6uF,0BAGtBsB,EAAY5rF,OAAO,UAAWkB,GAC9B0qF,EAAY3rF,UAEZ2rF,EAAYzrF,QAgBf,CACH,CAEA,IAAI4rF,EAAsBN,IAItBO,EAAWjB,EAAcxvF,KAAKgvF,UAG9B0B,EAAiB,CAClBxwF,EAAI+uF,uBACJ/uF,EAAIgvF,eACJhvF,EAAIivF,UACJjvF,EAAIkvF,gBAKH3uF,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNwI,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAIquF,kBACR7tF,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAKuuF,kBACZpnF,KAAM,oBACNhF,QAASktF,GAEZ,CACGzuF,GAAIV,EAAIsuF,YACR9tF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKwuF,YACZrnF,KAAM,cACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAASw1E,EAAQC,GACVD,GAAUC,IAEXgY,EAAcN,EAAc3X,GAE5B4X,EAAaM,EAAmBD,GAEtC,IAGN,CACGlvF,GAAIV,EAAIuuF,kBACR/tF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKyuF,kBACZtnF,KAAM,oBACNhF,QAAS2tF,EACTxc,QAAQ,GAEX,CACG1yE,GAAIV,EAAIwuF,0BACRhuF,KAAM,SACNU,MAAOrB,EAAE,0BACT4C,MAAO3C,KAAK0uF,0BACZvnF,KAAM,4BACNhF,QAAS2tF,EACTxc,QAAQ,GAEX,CACG1yE,GAAIV,EAAIyuF,SACRjuF,KAAM,SACNU,MAAOrB,EAAE,wBACT4C,MAAO3C,KAAK2uF,SACZxnF,KAAM,WACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAASw1E,EAAQC,GACVD,GAAUC,IAEXkY,EAAWR,EAAc3X,GAEzB4X,EAAaQ,EAAgBD,GAEnC,IAGN,CACGpvF,GAAIV,EAAI0uF,eACRluF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAK4uF,eACZznF,KAAM,iBACNhF,QAAS6tF,EACT1c,QAAQ,GAEX,CACG1yE,GAAIV,EAAI2uF,UACRnuF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAK6uF,UACZ1nF,KAAM,YACNhF,QAAS6tF,EACT1c,QAAQ,GAEX,CACG1yE,GAAIV,EAAI4uF,cACRpuF,KAAM,SACNU,MAAOrB,EAAE,cACT4C,MAAO3C,KAAK8uF,cACZ3nF,KAAM,gBACNhF,QAAS6tF,EACT1c,QAAQ,EACRlxE,GAAI,CACDC,SAASw1E,EAAQC,GACVD,GAAUC,GACXsY,EAAiBvY,EAEvB,IAGN,CACGj3E,GAAIV,EAAI6uF,sBACRruF,KAAM,SACNU,MAAOrB,EAAE,wBACT4C,MAAO3C,KAAK+uF,sBACZ5nF,KAAM,wBACNhF,QAASquF,EACTld,QAAQ,GAEX,CACG1yE,GAAIV,EAAI8uF,SACRtuF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKgvF,SACZ7nF,KAAM,WACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAASw1E,EAAQC,GACVD,GAAUC,IAEX2Y,EAAWjB,EAAc3X,GAEzB4X,EAAaiB,EAAgBD,GAEnC,IAGN,CACG7vF,GAAIV,EAAI+uF,uBACRvuF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAKivF,uBACZ9nF,KAAM,yBACNhF,QAASsuF,EACTnd,QAAQ,GAEX,CACG1yE,GAAIV,EAAIgvF,eACRxuF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKkvF,eACZ/nF,KAAM,iBACNhF,QAASsuF,EACTnd,QAAQ,GAEX,CACG1yE,GAAIV,EAAIivF,UACRzuF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAKmvF,UACZhoF,KAAM,YACNhF,QAASsuF,EACTnd,QAAQ,GAEX,CACG1yE,GAAIV,EAAIkvF,eACR1uF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKovF,eACZjoF,KAAM,iBACNhF,QAASsuF,EACTnd,QAAQ,KAKjB7vE,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAIZZ,KAAKwuF,aAAmC,GAApBxuF,KAAKwuF,aAC1BiB,EAAaM,EAAmBD,GAG/B9vF,KAAK2uF,UAA6B,GAAjB3uF,KAAK2uF,UACvBc,EAAaQ,EAAgBD,GAG5BhwF,KAAK8uF,eACNsB,EAAiBpwF,KAAK8uF,eAGrB9uF,KAAKgvF,UAA6B,GAAjBhvF,KAAKgvF,UACvBS,EAAaiB,EAAgBD,GAGhC9sF,GAAG/C,GAAIgE,MACV,CAQAyoF,gBAAgBzsF,GACb,IAAIV,EAAMF,KAAKsuF,YAAY1tF,GAC3BZ,KAAKmH,KAAOnH,KAAKstF,SAASptF,EAAIiH,MAE9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKstF,SAASptF,EAAI0M,GAAG,GAErC,oBC3XH,MAAM+jF,EAAwB,EAAQ,OAEtC,IAAI5wF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAgCixF,EAK9CrC,YAAY1tF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACTgwF,eAAgB,GAAGhwF,mBACnBiwF,SAAU,GAAGjwF,aACbkwF,SAAU,GAAGlwF,aACbmwF,UAAW,GAAGnwF,cACdowF,aAAc,GAAGpwF,iBACjBqwF,YAAa,GAAGrwF,gBAChBswF,cAAe,GAAGtwF,kBAClBuwF,cAAe,GAAGvwF,kBAClBwwF,gBAAiB,GAAGxwF,oBACpBywF,eAAgB,GAAGzwF,mBACnB0wF,eAAgB,GAAG1wF,mBACnB2wF,UAAW,GAAG3wF,cACd4wF,aAAc,GAAG5wF,gBACjB6wF,cAAe,GAAG7wF,kBAClB8wF,aAAc,GAAG9wF,iBACjB+wF,cAAe,GAAG/wF,kBAClBgxF,gBAAiB,GAAGhxF,oBACpBixF,oBAAqB,GAAGjxF,wBACxBkxF,eAAgB,GAAGlxF,mBACnBmxF,eAAgB,GAAGnxF,mBAEzB,CAQAwsF,eAAexsF,GACZ,IAAIV,EAAMF,KAAKsuF,YAAY1tF,GAEvByuF,EAAgB,CAAC,CAAEzuF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAKwmB,QAAQshB,kBAAkB9nC,OACjC,IAAIiE,SAASib,IAChCmwE,EAAc/qF,KAAK,CAAE1D,GAAIse,EAAI7a,IAAK1B,MAAOuc,EAAI9d,OAAQ,IAGxD,IAAIkuF,EAAatvF,KAAK+B,GAAG2jB,UAAUvX,KAAKkX,IAC9B,CAAEzkB,GAAIykB,EAAEzkB,GAAI+B,MAAO0iB,EAAEjkB,OAASikB,EAAEle,KAAMlC,OAAQogB,MAExDiqE,EAAWxjD,QAAQ,CAChBlrC,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAIiyF,EAAmB5tD,IACpB,IAAIr9B,EAAS,CACV,CACGnG,GAAI,EACJ+B,MAAO5C,EAAE,oBAIf,GAAIqkC,EAAO,CACR,IAAIlqB,EAAQo1E,EAAWjjE,MAAMhH,GAAMA,EAAEzkB,IAAMwjC,IACvClqB,GAASA,EAAMjV,QAChBiV,EAAMjV,OAAO8B,SAAS9C,SAAS+C,IAC5BD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG5D,CACA,OAAOD,CAAM,EAGZkrF,EAAyBC,IAC1B,IAAIpkF,EAAS,GACTqkF,EAAWnyF,KAAK+B,GAAGgW,WAAW/X,KAAK6wF,UACvC,IAAKsB,EAAU,OAAOrkF,EAEtB,IAAIskF,EAAgBD,EAASpkF,UAAUmkF,GACvC,OACIE,GACAA,EAAchsF,UACdgsF,EAAchsF,SAASjE,SAI3B2L,GAAUskF,EAAchsF,SAASjE,SAAW,IAAIgM,KAAK+vC,IAC3C,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,SAIVP,GATGA,CASG,EAgDZukF,EAAiB,CAACr6E,EAAUtN,KAC7B,IAAIoD,EAAS,GACT7I,EAASjF,KAAK+B,GAAGgW,WAAWC,GAChC,IAAK/S,EAAQ,OAAO6I,EAEpB,IAAIskF,EAAgBntF,EAAO8I,UAAUrD,GACrC,OACI0nF,GACAA,EAAchsF,UACdgsF,EAAchsF,SAASjE,SAI3B2L,GAAUskF,EAAchsF,SAASjE,SAAW,IAAIgM,KAAK+vC,IAC3C,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,SAIVP,GATGA,CASG,EAGZwkF,EAAWN,EAAgBhyF,KAAK6wF,UAChC0B,EAAWP,EAAgBhyF,KAAK8wF,UAChC0B,EAAYR,EAAgBhyF,KAAK+wF,WACjC0B,EAAiBR,EAAsBjyF,KAAKkxF,eAC5CwB,EAAiBL,EAAeryF,KAAK+wF,UAAW/wF,KAAK0xF,cAEzD,IAAIjxF,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNiyF,eAAgB,CACb7wF,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAI0wF,eACRlwF,KAAM,SACNU,MAAOrB,EAAE,+BACT4C,MAAO3C,KAAK4wF,eACZzpF,KAAM,iBACNhF,QAASktF,GAEZ,CACGzuF,GAAIV,EAAI2wF,SACRnwF,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAK6wF,SACZ1pF,KAAM,WACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAASw1E,EAAQC,GACVD,GAAUC,IAEXwa,EAAWN,EAAgBna,GA3GxB,CAACya,IACnB,CAACpyF,EAAI8wF,aAAc9wF,EAAI+wF,YAAa/wF,EAAIgxF,eAAejtF,SACnD2uF,IACEjvF,GAAGivF,GAAanuF,OAAO,UAAW6tF,GAClC3uF,GAAGivF,GAAaluF,SAAS,GAE9B,EAuGcmuF,CAAeP,GAErB,IAGN,CACG1xF,GAAIV,EAAI4wF,SACRpwF,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAK8wF,SACZ3pF,KAAM,WACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAASw1E,EAAQC,GACVD,GAAUC,IAEXya,EAAWP,EAAgBna,GA/GxB,CAAC0a,IACnB,CACGryF,EAAImxF,eACJnxF,EAAIoxF,eACJpxF,EAAIqxF,UACJrxF,EAAIsxF,aACJtxF,EAAIuxF,eACLxtF,SAAS2uF,IACRjvF,GAAGivF,GAAanuF,OAAO,UAAW8tF,GAClC5uF,GAAGivF,GAAaluF,SAAS,GAC1B,EAuGaouF,CAAeP,GAErB,IAGN,CACG3xF,GAAIV,EAAI6wF,UACRrwF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK+wF,UACZ5pF,KAAM,YACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAASw1E,EAAQC,GACVD,GAAUC,IACX0a,EAAYR,EAAgBna,GAnHxB,CAAC2a,IACpB7uF,GAAGzD,EAAIwxF,cAAcjtF,OAAO,UAAW+tF,GACvC7uF,GAAGzD,EAAIwxF,cAAchtF,SAAS,EAkHfquF,CAAgBP,GAEtB,IAGN,CACG5xF,GAAIV,EAAI8wF,aACRtwF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKgxF,aACZ7pF,KAAM,eACNhF,QAASmwF,GAEZ,CACG1xF,GAAIV,EAAI+wF,YACRvwF,KAAM,SACNU,MAAOrB,EAAE,cACT4C,MAAO3C,KAAKixF,YACZ9pF,KAAM,cACNhF,QAASmwF,GAEZ,CACG1xF,GAAIV,EAAIgxF,cACRxwF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKkxF,cACZ/pF,KAAM,gBACNhF,QAASmwF,EACTlwF,GAAI,CACDC,SAASw1E,EAAQC,GAnKF,IAACkb,EAoKTnb,GAAUC,IACX2a,EAAiBR,EAAsBpa,GArK7Bmb,EAsKWP,EArKpC9uF,GAAGzD,EAAIixF,eAAe1sF,OAAO,UAAWuuF,GACxCrvF,GAAGzD,EAAIixF,eAAezsF,UAsKb,IAGN,CACG9D,GAAIV,EAAIixF,cACRzwF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKmxF,cACZhqF,KAAM,gBACNhF,QAASswF,GAEZ,CACG7xF,GAAIV,EAAIkxF,gBACR1wF,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAKoxF,gBACZjqF,KAAM,kBACNhF,QAASowF,GAEZ,CACG3xF,GAAIV,EAAImxF,eACR3wF,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAKqxF,eACZlqF,KAAM,iBACNhF,QAASowF,GAEZ,CACG3xF,GAAIV,EAAIoxF,eACR5wF,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKsxF,eACZnqF,KAAM,iBACNhF,QAASowF,GAEZ,CACG3xF,GAAIV,EAAIqxF,UACR7wF,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAKuxF,UACZpqF,KAAM,YACNhF,QAASowF,GAEZ,CACG3xF,GAAIV,EAAIsxF,aACR9wF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKwxF,aACZrqF,KAAM,eACNhF,QAASowF,GAEZ,CACG3xF,GAAIV,EAAIuxF,cACR/wF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKyxF,cACZtqF,KAAM,gBACNhF,QAASowF,GAEZ,CACG3xF,GAAIV,EAAIwxF,aACRhxF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAK0xF,aACZvqF,KAAM,eACNhF,QAASqwF,EACTpwF,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KACZD,GAAUC,IACX4a,EAAiBL,EACdryF,KAAK+wF,WAAaptF,GAAGzD,EAAI6wF,WAAW9kF,WACpC4rE,GAxNM,CAAC6a,IACzB,CACGxyF,EAAIyxF,cACJzxF,EAAI0xF,gBACJ1xF,EAAI2xF,oBACJ3xF,EAAI4xF,eACJ5xF,EAAI6xF,gBACL9tF,SAAS2uF,IACRjvF,GAAGivF,GAAanuF,OAAO,UAAWiuF,GAClC/uF,GAAGivF,GAAaluF,SAAS,GAC1B,EAgNauuF,CAAqBP,GACxB,IAIT,CACG9xF,GAAIV,EAAIyxF,cACRjxF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAK2xF,cACZxqF,KAAM,gBACNhF,QAASuwF,GAEZ,CACG9xF,GAAIV,EAAI0xF,gBACRlxF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK4xF,gBACZzqF,KAAM,kBACNhF,QAASuwF,GAEZ,CACG9xF,GAAIV,EAAI2xF,oBACRnxF,KAAM,SACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAK6xF,oBACZ1qF,KAAM,sBACNhF,QAASuwF,GAEZ,CACG9xF,GAAIV,EAAI4xF,eACRpxF,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAK8xF,eACZ3qF,KAAM,iBACNhF,QAASuwF,GAEZ,CACG9xF,GAAIV,EAAI6xF,eACRrxF,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAK+xF,eACZ5qF,KAAM,iBACNhF,QAASuwF,KAKlBjvF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAyoF,gBAAgBzsF,GACb,IAAIV,EAAMF,KAAKsuF,YAAY1tF,GAC3BZ,KAAKmH,KAAOnH,KAAKstF,SAASptF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKstF,SAASptF,EAAI0M,GAAG,GAErC,oBClaH,MAAMsmF,EAA4B,EAAQ,OAE1C,IAAInzF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAoCwzF,EAIlD5E,YAAY1tF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACTuyF,mBAAoB,GAAGvyF,uBACvBwyF,aAAc,GAAGxyF,iBACjByyF,cAAe,GAAGzyF,kBAClBkwF,SAAU,GAAGlwF,aACb0yF,cAAe,GAAG1yF,kBAClB2yF,kBAAmB,GAAG3yF,sBACtB4yF,eAAgB,GAAG5yF,mBACnB6yF,iBAAkB,GAAG7yF,qBACrB8yF,eAAgB,GAAG9yF,mBACnB+yF,kBAAmB,GAAG/yF,sBACtBgzF,kBAAmB,GAAGhzF,sBACtBizF,kBAAmB,GAAGjzF,sBACtBkzF,gBAAiB,GAAGlzF,oBACpBmzF,oBAAqB,GAAGnzF,wBACxBozF,sBAAuB,GAAGpzF,0BAC1BqzF,UAAW,GAAGrzF,cACdszF,eAAgB,GAAGtzF,mBACnB8wF,aAAc,GAAG9wF,iBACjBuzF,mBAAoB,GAAGvzF,uBACvBwzF,oBAAqB,GAAGxzF,wBACxByzF,mBAAoB,GAAGzzF,uBAE7B,CAQAwsF,eAAexsF,GACZ,IAAIV,EAAMF,KAAKsuF,YAAY1tF,GAEvByuF,EAAgB,CAAC,CAAEzuF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAKwmB,QAAQshB,kBAAkB9nC,OACjC,IAAIiE,SAASib,IAChCmwE,EAAc/qF,KAAK,CAAE1D,GAAIse,EAAI7a,IAAK1B,MAAOuc,EAAI9d,OAAQ,IAGxD,IAAIkuF,EAAatvF,KAAK+B,GAAG2jB,UAAUvX,KAAKkX,IAC9B,CAAEzkB,GAAIykB,EAAEzkB,GAAI+B,MAAO0iB,EAAEjkB,OAASikB,EAAEle,KAAMlC,OAAQogB,MAExDiqE,EAAWxjD,QAAQ,CAChBlrC,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAIiyF,EAAkB,CAAC5tD,EAAO16B,KAC3B,IAAI3C,EAAS,CACV,CACGnG,GAAI,EACJ+B,MAAO5C,EAAE,oBAIf,GAAIqkC,EAAO,CACR,IAAIlqB,EAAQo1E,EAAWjjE,MAAMhH,GAAMA,EAAEzkB,IAAMwjC,IACvClqB,GAASA,EAAMjV,QAChBiV,EAAMjV,OACF8B,QAAQC,GAAMA,EAAE3C,KAAOqF,IACvBzF,SAAS+C,IACPD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG/D,CACA,OAAOD,CAAM,EAGZsrF,EAAiB,CAACr6E,EAAUtN,KAC7B,IAAIoD,EAAS,GACT7I,EAASjF,KAAK+B,GAAGgW,WAAWC,GAChC,IAAK/S,EAAQ,OAAO6I,EAEpB,IAAIskF,EAAgBntF,EAAO8I,UAAUrD,GACrC,OACI0nF,GACAA,EAAchsF,UACdgsF,EAAchsF,SAASjE,SAI3B2L,GAAUskF,EAAchsF,SAASjE,SAAW,IAAIgM,KAAK+vC,IAC3C,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,SAIVP,GATGA,CASG,EA8DZwmF,EAAmBtC,EAAgBhyF,KAAKozF,aAAc,QACtDmB,EAAqBvC,EAAgBhyF,KAAKozF,aAAc,QACxDoB,EAAsBnC,EACvBryF,KAAKozF,aACLpzF,KAAK2zF,mBAEJc,EAAoBzC,EAAgBhyF,KAAKqzF,cAAe,QACxDqB,EAAiB1C,EAAgBhyF,KAAK8wF,SAAU,UAChD6D,EAAa3C,EAAgBhyF,KAAK8wF,SAAU,iBAC5C8D,EAAkB5C,EAAgBhyF,KAAKszF,cAAe,UACtDuB,EAAgB7C,EAAgBhyF,KAAKszF,cAAe,QACpDZ,EAAiBL,EAClBryF,KAAKszF,cACLtzF,KAAK0xF,cAGR,IAAIjxF,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNiyF,eAAgB,CACb7wF,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAIizF,mBACRzyF,KAAM,SACNU,MAAOrB,EAAE,oCACT4C,MAAO3C,KAAKmzF,mBACZhsF,KAAM,qBACNhF,QAASktF,GAEZ,CACGzuF,GAAIV,EAAIkzF,aACR1yF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKozF,aACZjsF,KAAM,eACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KApFD,IAACgd,EAqFZjd,GAAUC,IACXwc,EAAmBtC,EAAgBna,EAAQ,QAtF9Bid,EAuFWR,EAtFvC,CAACp0F,EAAIuzF,iBAAkBvzF,EAAIwzF,gBAAgBzvF,SAAS2uF,IACjDjvF,GAAGivF,GAAanuF,OAAO,UAAWqwF,GAClCnxF,GAAGivF,GAAaluF,SAAS,IAsFbmwF,EAAgB7C,EAAgBna,EAAQ,QAlF1B,CAAC0c,IAC9B5wF,GAAGzD,EAAIyzF,mBAAmBlvF,OAAO,UAAW8vF,GAC5C5wF,GAAGzD,EAAIyzF,mBAAmBjvF,SAAS,EAiFpBqwF,CAA0BF,GAC7B,IAIT,CACGj0F,GAAIV,EAAImzF,cACR3yF,KAAM,SACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAKqzF,cACZlsF,KAAM,gBACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KAtFD,IAACkd,EAuFZnd,GAAUC,IACX2c,EAAoBzC,EAAgBna,EAAQ,QAxF/Bmd,EAyFWP,EAxFvC,CAACv0F,EAAI2zF,kBAAmB3zF,EAAI4zF,iBAAiB7vF,SAAS2uF,IACnDjvF,GAAGivF,GAAanuF,OAAO,UAAWuwF,GAClCrxF,GAAGivF,GAAaluF,SAAS,IAuFhB,IAIT,CACG9D,GAAIV,EAAI4wF,SACRpwF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK8wF,SACZ3pF,KAAM,WACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KAtFH,IAACmd,EATDC,EAgGTrd,GAAUC,IACX4c,EAAiB1C,EAAgBna,EAAQ,UAjG/Bqd,EAkGWR,EAjGpC,CAACx0F,EAAI6zF,oBAAqB7zF,EAAI8zF,uBAAuB/vF,SACjD2uF,IACEjvF,GAAGivF,GAAanuF,OAAO,UAAWywF,GAClCvxF,GAAGivF,GAAaluF,SAAS,IAgGhBiwF,EAAa3C,EAAgBna,EAAQ,iBA3F1Bod,EA4FWN,EA3FrChxF,GAAGzD,EAAI+zF,WAAWxvF,OAAO,UAAWwwF,GACpCtxF,GAAGzD,EAAI+zF,WAAWvvF,UA2FN,IAIT,CACG9D,GAAIV,EAAIozF,cACR5yF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKszF,cACZnsF,KAAM,gBACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KA1JT,IAAC0a,EA2JJ3a,GAAUC,IACX+c,EAAgB7C,EAAgBna,EAAQ,QA5JnC2a,EA6JWqC,EA5J/BlxF,GAAGzD,EAAIwxF,cAAcjtF,OAAO,UAAW+tF,GACvC7uF,GAAGzD,EAAIwxF,cAAchtF,UA6JNkwF,EAAkB5C,EAAgBna,EAAQ,UApKhC,CAAC+c,IAC1BjxF,GAAGzD,EAAIg0F,gBAAgBzvF,OAAO,UAAWmwF,GACzCjxF,GAAGzD,EAAIg0F,gBAAgBxvF,SAAS,EAmKjBywF,CAAsBP,GACzB,IAIT,CACGh0F,GAAIV,EAAIqzF,kBACR7yF,KAAM,OACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAKuzF,kBACZpsF,KAAM,qBAET,CACGvG,GAAIV,EAAIszF,eACR9yF,KAAM,OACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAKwzF,eACZrsF,KAAM,kBAET,CACGvG,GAAIV,EAAIuzF,iBACR/yF,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAKyzF,iBACZtsF,KAAM,mBACNhF,QAASmyF,GAEZ,CACG1zF,GAAIV,EAAIwzF,eACRhzF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK0zF,eACZvsF,KAAM,iBACNhF,QAASmyF,GAEZ,CACG1zF,GAAIV,EAAIyzF,kBACRjzF,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAK2zF,kBACZxsF,KAAM,oBACNhF,QAASoyF,EACTnyF,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KACZD,GAAUC,IACX0c,EAAsBnC,EACnBryF,KAAKozF,cAAgBzvF,GAAGzD,EAAIkzF,cAAcnnF,WAC1C4rE,GAnLW,CAAC2c,IAC9B7wF,GAAGzD,EAAI0zF,mBAAmBnvF,OAAO,UAAW+vF,GAC5C7wF,GAAGzD,EAAI0zF,mBAAmBlvF,SAAS,EAmLpB0wF,CAA0BZ,GAC7B,IAIT,CACG5zF,GAAIV,EAAI0zF,kBACRlzF,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAK4zF,kBACZzsF,KAAM,oBACNhF,QAASqyF,GAEZ,CACG5zF,GAAIV,EAAI2zF,kBACRnzF,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAK6zF,kBACZ1sF,KAAM,oBACNhF,QAASsyF,GAEZ,CACG7zF,GAAIV,EAAI4zF,gBACRpzF,KAAM,SACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAK8zF,gBACZ3sF,KAAM,kBACNhF,QAASsyF,GAEZ,CACG7zF,GAAIV,EAAI6zF,oBACRrzF,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAK+zF,oBACZ5sF,KAAM,sBACNhF,QAASuyF,GAEZ,CACG9zF,GAAIV,EAAI8zF,sBACRtzF,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAKg0F,sBACZ7sF,KAAM,wBACNhF,QAASuyF,GAEZ,CACG9zF,GAAIV,EAAI+zF,UACRvzF,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAKi0F,UACZ9sF,KAAM,YACNhF,QAASwyF,GAEZ,CACG/zF,GAAIV,EAAIg0F,eACRxzF,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAKk0F,eACZ/sF,KAAM,iBACNhF,QAASyyF,GAEZ,CACGh0F,GAAIV,EAAIwxF,aACRhxF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAK0xF,aACZvqF,KAAM,eACNhF,QAAS0yF,EACTzyF,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KACZD,GAAUC,IACX4a,EAAiBL,EACdryF,KAAKszF,eACF3vF,GAAGzD,EAAIozF,eAAernF,WACzB4rE,GAtRM,CAAC6a,IACzB,CACGxyF,EAAIi0F,mBACJj0F,EAAIk0F,oBACJl0F,EAAIm0F,oBACLpwF,SAAS2uF,IACRjvF,GAAGivF,GAAanuF,OAAO,UAAWiuF,GAClC/uF,GAAGivF,GAAaluF,SAAS,GAC1B,EAgRauuF,CAAqBP,GACxB,IAIT,CACG9xF,GAAIV,EAAIi0F,mBACRzzF,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKm0F,mBACZhtF,KAAM,qBACNhF,QAASuwF,GAEZ,CACG9xF,GAAIV,EAAIk0F,oBACR1zF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKo0F,oBACZjtF,KAAM,sBACNhF,QAASuwF,GAEZ,CACG9xF,GAAIV,EAAIm0F,mBACR3zF,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKq0F,mBACZltF,KAAM,qBACNhF,QAASuwF,KAKlBjvF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAyoF,gBAAgBzsF,GACb,IAAIV,EAAMF,KAAKsuF,YAAY1tF,GAC3BZ,KAAKmH,KAAOnH,KAAKstF,SAASptF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKstF,SAASptF,EAAI0M,GAAG,GAErC,oBC5bH,MAAMyoF,EAA0B,EAAQ,OAExC,IAAIt1F,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAkC21F,EAKhD/G,YAAY1tF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACT2tF,kBAAmB,GAAG3tF,sBACtB4tF,YAAa,GAAG5tF,gBAChB00F,cAAe,GAAG10F,kBAClB+tF,SAAU,GAAG/tF,aACb20F,gBAAiB,GAAG30F,oBAEpB40F,sBAAuB,GAAG50F,0BAC1B60F,eAAgB,GAAG70F,mBACnB80F,UAAW,GAAG90F,cACd+0F,sBAAuB,GAAG/0F,0BAC1Bg1F,mBAAoB,GAAGh1F,uBACvBi1F,eAAgB,GAAGj1F,mBACnBk1F,UAAW,GAAGl1F,cAEdm1F,YAAa,GAAGn1F,gBAEtB,CAQAwsF,eAAexsF,GACZ,IAAIV,EAAMF,KAAKsuF,YAAY1tF,GAEvByuF,EAAgB,CAAC,CAAEzuF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAKwmB,QAAQshB,kBAAkB9nC,OACjC,IAAIiE,SAASib,IAChCmwE,EAAc/qF,KAAK,CAAE1D,GAAIse,EAAI7a,IAAK1B,MAAOuc,EAAI9d,OAAQ,IAGxD,IAAIkuF,EAAatvF,KAAK+B,GAAG2jB,UAAUvX,KAAKkX,IAC9B,CAAEzkB,GAAIykB,EAAEzkB,GAAI+B,MAAO0iB,EAAEjkB,OAASikB,EAAEle,KAAMlC,OAAQogB,MAGxDiqE,EAAWxjD,QAAQ,CAChBlrC,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAIi2F,EAA0Bh+E,IAC3B,IAAI/S,EAASjF,KAAK+B,GAAGgW,WAAWC,GAChC,IAAK/S,EAAQ,MAAO,GAEpB,IAAI9C,EAAU8C,EACV8B,QAAQC,GAAMA,EAAEg5B,eAChB7xB,KAAKnH,IACI,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UASlB,OALAe,EAAQ2pC,QAAQ,CACblrC,GAAI,EACJ+B,MAAO5C,EAAE,oBAGLoC,CAAO,EAGbstF,EAAe,CAACC,EAAcC,KAC/BD,EAAazrF,SAAS2rF,IACnB,IAAIC,EAASlsF,GAAGisF,GACZC,IACDA,EAAOprF,OAAO,UAAWkrF,GACzBE,EAAOnrF,UACPmrF,EAAOjrF,OACV,GACD,EA0BDqxF,EAAqB,KACtB,IAAIC,EAAevyF,GAAGzD,EAAI61F,aAC1B,IAAKG,EAAc,OAGnBzyF,MAAMhD,GAAG,GAAIy1F,GAEb,IAAIC,EAAQn2F,KAAK+B,GAAGgW,WAAW/X,KAAK2uF,UACpC,IAAKwH,EAAO,OAEZ,IAAIC,EAAep2F,KAAK+B,GAAGgW,WAAW/X,KAAKu1F,iBACtCa,IAGLA,EAAarvF,SAAS9C,SAAS+C,IAC5B,IAAIgpF,EAAW,GAGZA,EADChpF,EAAEg5B,aACQm2D,EAAMpvF,QAAQsvF,GAEnBA,EAAIr2D,cACJq2D,EAAIjwF,UACJY,EAAEZ,UACFiwF,EAAIjwF,SAASO,YAAcK,EAAEZ,SAASO,YACtC0vF,EAAIjwF,SAASa,UAAYD,EAAEZ,SAASa,UACpCovF,EAAIjwF,SAASc,aAAeF,EAAEZ,SAASc,aACvCmvF,EAAIjwF,SAASgB,YAAcJ,EAAEZ,SAASgB,aAIjC+uF,EAAMpvF,QAAQsvF,GAAQA,EAAIhyF,KAAO2C,EAAE3C,MAGjD2rF,EAAWA,EAAS7hF,KAAKkoF,IACf,CACJz1F,GAAIy1F,EAAIz1F,GACR+B,MAAO0zF,EAAIj1F,UAIjB80F,EAAajrF,QAAQ,CAClBvK,KAAM,SACNyG,KAAMH,EAAEpG,GACRQ,MAAO4F,EAAE5F,MACTe,QAAS6tF,GACV,IAGLkG,EAAapK,UAAU9rF,KAAK+1F,aAAe,CAAC,GAAE,EAG7CO,EAAiBN,EAAuBh2F,KAAKwuF,aAC7C+H,EAAmBP,EAAuBh2F,KAAKs1F,eAC/CkB,EAAcR,EAAuBh2F,KAAK2uF,UAC1C8H,EAAqBT,EAAuBh2F,KAAKu1F,iBAEjD90F,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNiyF,eAAgB,CACb7wF,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAIquF,kBACR7tF,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAKuuF,kBACZpnF,KAAM,oBACNhF,QAASktF,GAEZ,CACGzuF,GAAIV,EAAIsuF,YACR9tF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKwuF,YACZrnF,KAAM,cACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAAWw1E,IACR73E,KAAKwuF,YAAc3W,EA9GT,CAAC7/D,IACvB,IAAI7V,EAAU6zF,EAAuBh+E,GACrCy3E,EAAa,CAACvvF,EAAIs1F,uBAAwBrzF,EAAQ,EA6GtCu0F,CAAmB7e,EAAO,IAInC,CACGj3E,GAAIV,EAAIs1F,sBACR90F,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAKw1F,sBACZruF,KAAM,wBACNhF,QAASm0F,GAEZ,CACG11F,GAAIV,EAAIo1F,cACR50F,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAKs1F,cACZnuF,KAAM,gBACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAAWw1E,IACR73E,KAAKs1F,cAAgBzd,EA/Hd,CAAC7/D,IACpB,IAAI7V,EAAU6zF,EAAuBh+E,GACrCy3E,EACG,CAACvvF,EAAI21F,eAAgB31F,EAAI01F,mBAAoB11F,EAAI41F,WACjD3zF,EACF,EA2HWw0F,CAAgB9e,EAAO,IAIhC,CACGj3E,GAAIV,EAAI01F,mBACRl1F,KAAM,SACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAK41F,mBACZzuF,KAAM,qBACNhF,QAASo0F,GAEZ,CACG31F,GAAIV,EAAI21F,eACRn1F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAK61F,eACZ1uF,KAAM,iBACNhF,QAASo0F,GAEZ,CACG31F,GAAIV,EAAI41F,UACRp1F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAK81F,UACZ3uF,KAAM,YACNhF,QAASo0F,GAEZ,CACG31F,GAAIV,EAAIyuF,SACRjuF,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAK2uF,SACZxnF,KAAM,WACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAAWw1E,IACR73E,KAAK2uF,SAAW9W,EA7JT,CAAC7/D,IACpB,IAAI7V,EAAU6zF,EAAuBh+E,GACrCy3E,EAAa,CAACvvF,EAAIu1F,eAAgBv1F,EAAIw1F,WAAYvzF,EAAQ,EA4J9Cy0F,CAAgB/e,GAChBoe,GAAoB,IAI7B,CACGr1F,GAAIV,EAAIu1F,eACR/0F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKy1F,eACZtuF,KAAM,iBACNhF,QAASq0F,GAEZ,CACG51F,GAAIV,EAAIw1F,UACRh1F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAK01F,UACZvuF,KAAM,YACNhF,QAASq0F,GAEZ,CACG51F,GAAIV,EAAIq1F,gBACR70F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAKu1F,gBACZpuF,KAAM,kBACNhF,QAASmtF,EACTltF,GAAI,CACDC,SAAWw1E,IACR73E,KAAKu1F,gBAAkB1d,EAvLT,CAAC7/D,IAC3B,IAAI7V,EAAU6zF,EAAuBh+E,GACrCy3E,EAAa,CAACvvF,EAAIy1F,uBAAwBxzF,EAAQ,EAsLtC00F,CAAuBhf,GACvBoe,GAAoB,IAI7B,CACGr1F,GAAIV,EAAIy1F,sBACRj1F,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAK21F,sBACZxuF,KAAM,wBACNhF,QAASs0F,GAEZ,CACG/1F,KAAM,WACNU,MAAO,kBACPK,KAAM,CACHb,GAAIV,EAAI61F,YACRr1F,KAAM,OACNiB,YAAY,EACZuH,SAAU,OAMtBzF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,OAEPqxF,GACH,CAQA5I,gBAAgBzsF,GACb,IAAIV,EAAMF,KAAKsuF,YAAY1tF,GAC3BZ,KAAKmH,KAAOnH,KAAKstF,SAASptF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAE1B5M,KAAK4M,GADE,gBAANA,EACSjJ,GAAGzD,EAAI61F,aAAa5K,YAEpBnrF,KAAKstF,SAASptF,EAAI0M,GAC/B,GAEN,oBCpVH,MAAMkqF,EAAoB,EAAQ,OAIlCr3F,EAAOC,QAAU,cAA4Bo3F,EAK1C9uB,eAOG,GANAloE,MAAMkoE,eAEDhoE,KAAK+2F,aACP/2F,KAAKuvD,eAAe,yBAGnBvvD,KAAK+2F,YAAa,CACnB,MAAMhhE,EAAO,CAAC,GACb/1B,KAAKwmB,QAAQshB,kBAAkB9nC,OAAS,IAAIiE,SAASmK,IACnD2nB,EAAK,IAAI3nB,EAAKhN,UAAYgN,CAAI,IAGjC,IAAI4oF,EAAM,IAAI50E,OAAO,UAAW,MAClBpiB,KAAK+2F,YAAYp0D,MAAMq0D,IAAQ,IACrC/yF,SAASiW,IACT6b,EAAK7b,IACPla,KAAKuvD,eACF,oCAAoCr1C,KAE1C,GAEN,CACH,oBC9BH,MAAM+8E,EAA8C,EAAQ,OAE5Dx3F,EAAOC,QAAU,cAAsD,EAGpEsoE,eACGloE,MAAMkoE,eAEDhoE,KAAKiQ,OACPjQ,KAAKuvD,eAAe,iCAYG,IATLvvD,KAAKwmB,QAAQshB,kBAAkB9nC,OAAS,IACzD8I,QAAQsF,GAA4B,SAAnBA,EAAKxI,OAAOvB,MAC7B8J,KAAKC,IACI,CACJxN,GAAIwN,EAAK/J,IACT1B,MAAOyL,EAAKhN,UAIL+E,QACbnG,KAAKuvD,eAAe,gDAE1B,oBC1BH,MAAM2nC,EAAuB,EAAQ,OAErCz3F,EAAOC,QAAU,cAA+Bw3F,EAC7ClvB,eACGloE,MAAMkoE,eAEDhoE,KAAK45B,UACP55B,KAAKuvD,eAAe,sBAGvB,MAAM4nC,EAAKhjF,OAAOC,KAAKpU,KAAK2vF,aAAe,CAAC,IAAM,GAClD,GAAiB,GAAbwH,EAAGhxF,OACJnG,KAAKuvD,eAAe,yBAChB,CACJ,IAAI6nC,GAAQ,EACZD,EAAGlzF,SAAS+C,IAEsB,KAA5BhH,KAAK2vF,YAAY3oF,IAAI6S,KACS,MAA9B7Z,KAAK2vF,YAAY3oF,IAAIrE,QAErBy0F,GAAQ,EACX,IAEEA,GACFp3F,KAAKuvD,eAAe,oBAE1B,CACH,oBC3BH,MAAM8nC,EAAgC,EAAQ,OAExC9sC,EAAc,EAAQ,OAE5B9qD,EAAOC,QAAU,cAAwC,EAGtDC,YAAYqjB,EAAYwD,EAASzkB,GAC9BjC,MAAMkjB,EAAYwD,EAASzkB,GAE3B/B,KAAKgjB,WAAaA,CACrB,CAEAunC,cACG,OAAOA,CACV,CAEA1T,WAEG,IAAIygD,EAAa,GAUjB,OATIt3F,KAAK8oD,QACNwuC,EAAaA,EAAWxwE,OAAO9mB,KAAK8oD,MAAMjS,aAI7CygD,EAAWrzF,SAASszF,IACbA,GAAGjmF,SAAStR,KAAKuvD,eAAegoC,EAAEjmF,QAAQ,IAEhCxR,MAAM+2C,WACL/tC,QAAQyuF,GAAMA,GACnC,CAEAvvB,eACGloE,MAAMkoE,eACFhoE,KAAK8oD,MACN9oD,KAAK8oD,MAAMkf,eAEXhoE,KAAKuvD,eAAe,yBAGlBvvD,KAAKmH,MACPnH,KAAKuvD,eAAe,wBAAyB,CAC1CvsC,WAAYhjB,KAAKgjB,aAIvB,IAAIw0E,GAAU,EACV9/D,EAAO13B,KAAK8oD,MAChB,KAAOpxB,GACa,aAAbA,EAAKrzB,KAAmC,aAAbqzB,EAAKrzB,KACjCmzF,GAAU,EACV9/D,EAAO,MAEPA,EAAOA,EAAKhN,KAIb8sE,GACFx3F,KAAKuvD,eAAe,wCAE1B,oBC5DH,MAAMkoC,EAAiB,EAAQ,OAI/Bh4F,EAAOC,QAAU,cAAyB+3F,EAwFvC1K,kBAAkB2K,GACf,IAAIC,EAAQ73F,MAAMitF,oBAYlB,OAXA4K,EAAQA,GAAS,CAAC,CAAC,GACnBA,EAAM,GAAGl2E,IAAMk2E,EAAM,GAAGl2E,KAAO,CAAC,EAER,MAApBzhB,KAAKorD,cACNusC,EAAM,GAAGl2E,IAAMk2E,EAAM,GAAGl2E,KAAO,CAAC,EAChCk2E,EAAM,GAAGl2E,IAAIm2E,oBAAsBF,EAC/B/hF,IAAI,UACJ2yD,OAAO,yCACXqvB,EAAM,GAAGl2E,IAAIm2E,oBAAoBC,cAAe,GAG5CF,CACV,CAQAt1F,SAASwqF,GACN,IAAI+K,EACD/K,EAAW+K,qBACX/K,EAAWjmD,eAAegxD,qBAC1B,CAAC,EAEJ,OAAQA,EAAoBlxC,OACzB,IAAK,wCACF1mD,KAAK83F,SAAWF,EAAoBC,aAC/B,aACA,WACL,MACH,IAAK,mCACF73F,KAAK83F,SAAW,UAGzB,CAQAljF,UAGG,OAAO5U,KAAKwmB,QAAQ5R,QAAQwkC,KAAKp5C,KACpC,CASA4H,OAGG,OAAO5H,KAAKwmB,QAAQ5e,KAAKwxC,KAAKp5C,KACjC,CAcAswE,6BAA6Bt3C,GAC1B,IAAIoP,EAAOpoC,KAAK+B,GAAGg3B,oCAAoCC,EAASh5B,MAMhE,OAHIooC,GACDpoC,KAAKinC,WAAWmB,GAEZA,CACV,CAEA4/B,eACGloE,MAAMkoE,gBAELhoE,KAAKirD,oBAAsB,IAAIhnD,SAASyhC,IACtC1lC,KAAKuvD,eACF,gDAAgD7pB,KAChD,CAAElf,QAASxmB,KAAKY,GAAI8kC,OACtB,GAEP,oBC5LH,MAAMqyD,EAAwB,EAAQ,OAEtCt4F,EAAOC,QAAU,cAAgCq4F,qBCFjD,MAAMC,EAAgC,EAAQ,OAE9Cv4F,EAAOC,QAAU,cAAwC,qBCAzD,MAAMu4F,EAAgC,EAAQ,OAE9Cx4F,EAAOC,QAAU,cAAwC,qBCFzD,MAAMw4F,EAAuB,EAAQ,OAIrCz4F,EAAOC,QAAU,cAA+Bw4F,qBCNhD,MAAMC,EAAgC,EAAQ,OAE9C14F,EAAOC,QAAU,cAAwC,qBCFzD,MAAM04F,EAA4B,EAAQ,OAO1C34F,EAAOC,QAAU,cAAoC04F,EAMlDxwF,OACG,OACG6H,QAAQC,UACJ8E,MAAK,IAAM1U,MAAM8H,SAEjB4M,MAAM1G,GACG9N,KAAK+B,GAAGsN,QAAQ8G,IAAI,CACxB7F,KAAMtQ,KAAKotD,UAlBX,4BACD,4BAiB8Cp6C,QAC1C,OACAhT,KAAKY,OAKvB,oBClBH,MAAMy3F,EAAW,EAAQ,OACnB9d,EAAa,WAEbx6E,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GA2zBlDnW,EAAOC,QAzzBP,cAAmB24F,EAChB14F,YAAYqjB,EAAY+qC,EAAsBC,EAAQ5lB,EAAMrmC,GACzDjC,MAAMkjB,EAAY+qC,EAAsBC,EAAQ5lB,EAAMrmC,GAEtD/B,KAAKoC,GAAG,WAAW,CAACkP,EAASzH,KAC1B7J,KAAK82C,UAAUxyC,KAAK,CAAEgN,UAASzH,QAAO,GAE5C,CAoBAyuF,SAASp5E,EAAKte,GAGXZ,KAAK+tD,qBAAqB9pD,SAAS4qD,IAEhC,MAAMxC,EAAOrsD,KAAKu4F,KAAK33F,GAEvBZ,KAAKE,IAAMF,KAAKw4F,MAAMnsC,GACtBrsD,KAAK4V,OAAS5V,KAAK4V,QAAU,CAAC,EAE9B,IAAI6iF,EAAe,KAEnB,OAAQ5pC,EAAKjtD,MACV,IAAK,eACF5B,KAAK4V,OAAOi5C,EAAK1nD,MAAQxD,GAAG3D,KAAKE,IAAIw4F,cAAczsF,WAEnD,MAEH,IAAK,aACFjM,KAAK4V,OAAOi5C,EAAK1nD,MAAQxD,GAAG3D,KAAKE,IAAIy4F,YAAY1sF,WAEjD,MAEH,IAAK,mBACL,IAAK,eAGF,GAFAwsF,EAAe90F,GAAG3D,KAAKE,IAAIgpC,WAEvBuvD,EAAc,CACf,MAAMvvD,EAAYuvD,EAAaxsF,WAE3Bi9B,GAA2B,KAAdA,IACdlpC,KAAK4V,OAAOi5C,EAAK1nD,MAAQ0M,KAAK0D,MAAM2xB,GAE1C,CAEA,MAEH,IAAK,YACFlpC,KAAK4V,OAAOi5C,EAAK1nD,MAAQxD,GAAG3D,KAAKE,IAAI04F,WAAW3sF,WAGtD,GAEN,CAQAusF,MAAMnsC,GACH,MAAO,CACJnjB,UAAW,GAAGmjB,cACdqsC,aAAc,GAAGrsC,iBACjBssC,WAAY,GAAGtsC,YACf8mB,MAAO,GAAG9mB,UACVwsC,OAAQ,GAAGxsC,WACXysC,UAAW,GAAGzsC,cACdusC,UAAW,GAAGvsC,cACd0sC,OAAQ,GAAG1sC,WAEjB,CAaA2sC,iBAAiBnqC,EAAMjuD,EAAIH,GAGxB,IAAKA,EAAGU,KAAM,CACX,IAAIV,EAAGoB,KAOA,MAAM,IAAIyG,MAAM,+CANpB,IAAK,IAAI+K,EAAI,EAAGA,EAAI5S,EAAGoB,KAAKsE,OAAQkN,IACjC,GAAI5S,EAAGoB,KAAKwR,GAAGlS,KAAM,CAClBnB,KAAKg5F,iBAAiBnqC,EAAMjuD,EAAIH,EAAGoB,KAAKwR,IAExC,KACH,CAGN,MACH,CAEA,MAAM4lF,EAAUj5F,KAAKk5F,UAAUrqC,EAAMjuD,GAEjCq4F,IAEwC,IAArCj5F,KAAK+tD,qBAAqB5nD,QAC3B1F,EAAGU,KAAK6rC,MACRvsC,EAAGU,KAAKmD,KAAK20F,IAKTx4F,EAAGU,KAAKgF,OAAS,EAClB1F,EAAGU,KAAKmD,KAAK,CACVzC,KAAM,CAACo3F,KAGRx4F,EAAGU,KAAK,GAAGU,KAAKyC,KAAK20F,GAGnC,CAUAE,UAAUv4F,EAAIH,GACX,MAAM24F,EAAQp5F,KAAKq5F,UAAUz4F,GAIzBZ,KAAK0qB,MACN1qB,KAAK0qB,KAAK4uE,YAAY14F,EAAIw4F,GAC1B34F,EAAGoB,KAAKyC,KAAK80F,GACbp5F,KAAK0qB,KAAKyuE,UAAUv4F,EAAIH,IAGtBA,EAAGoB,KAAKyC,KAAK80F,EACrB,CAUAE,YAAY14F,EAAIH,GACbT,KAAK+tD,qBAAqB9pD,SAAS4qD,IAChC7uD,KAAKg5F,iBAAiBnqC,EAAMjuD,EAAIH,EAAG,GAEzC,CAQA83F,KAAK33F,GACF,OAAIZ,KAAKguD,OAAe,GAAGhuD,KAAKguD,OAAOuqC,KAAK33F,MAAOZ,KAAKL,YAAY0E,MAE7D,GAAGzD,KAAMZ,KAAKL,YAAY0E,KACpC,CAqBAg1F,UAAUz4F,GACP,MAAMuB,EAAUnC,KAAKL,YAAY0uD,UAAUlgD,KAAKmb,IACtC,CAAE1oB,GAAI0oB,EAAGjlB,IAAK1B,MAAO2mB,EAAGloB,UAGlCe,EAAQ2pC,QAAQ,CAAElrC,GAAI,EAAG+B,MAAO5C,EAAE,2BAElC,MAAMssD,EAAOrsD,KAAKu4F,KAAK33F,GACjBV,EAAMF,KAAKw4F,MAAMnsC,GAiGvB,MA/Fc,CACXlrD,KAAM,CACH,CACGP,GAAIV,EAAI24F,OACRn4F,KAAM,SACNiC,MAAO3C,KAAK0qB,KAAO1qB,KAAK0qB,KAAK/qB,YAAY0E,IAAM,EAC/ClC,QAASA,EACTC,GAAI,CACDC,SAAU,CAACk3F,EAAUnhB,KAClB,MAAMohB,EAAa,KAChB,MAAMX,EAASl1F,GAAGzD,EAAI24F,QAEtBA,EAAO1e,aACP0e,EAAOh0F,SAASuzE,GAChBygB,EAAOze,cAAc,EAGxB,GAAImf,IAAanhB,EAAU,OAE3B,MAAMqhB,EAAQz5F,KAAKL,YAAY0uD,UAAUhiC,MACrC/C,GAAOA,EAAGjlB,MAAQk1F,IAGtB,IAAKE,EAGF,YAFAD,IAKH,MAAME,EAAU/1F,GAAGzD,EAAI24F,QAAQptF,gBACzBkuF,EAAYD,EAAQjuF,gBACpBmuF,EAAQ,KACX,GAAIH,EAAO,CACR,MAAMrrC,EAAS,IAAIqrC,EAChB,CAAC,EACDz5F,KACAA,KAAKooC,KACLpoC,KAAK+B,IAGR/B,KAAK0qB,KAAO0jC,EAEZA,EAAOyrC,cAAcj5F,EAAI84F,GACzBtrC,EAAO0rC,YAAYl5F,EAAI+4F,EAC1B,GAKGI,EAAUJ,EAAU7uF,gBAEtBivF,EAAQ5zF,OAAS,EAAI4zF,EAAQ1sF,QAAQqsF,GACtCj2F,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,aACTsO,KAAMtO,EACH,sDAEHwR,GAAIxR,EAAE,OACN4R,OAAQ5R,EAAE,MACV8R,SAAW/D,IACR,GAAIA,EAAQ,CAET,IAAIksF,EAAKD,EAAQ5zF,OAAS,EAE1B,KACG4zF,EAAQC,GAAI/3F,OAAOrB,KAAO84F,EAAQz3F,OAAOrB,IAEzC+4F,EAAUnuF,WAAWuuF,EAAQC,IAC7BA,IAIH,MAAMC,EAAUP,EAAQ5uF,gBAExB,IAAIovF,EAAKD,EAAQ9zF,OAEjB,KAAO+zF,EAAK,GACTR,EAAQluF,WAAWyuF,EAAQC,EAAK,IAChCA,IAGHN,GACH,MAAOJ,GAAY,IAGvBI,GAAO,IAIrB,CACGh5F,GAAIV,EAAI64F,SAMpB,CAEAoB,yBAAyBv5F,GACtB,MAAMw5F,EAAUz2F,GAAG3D,KAAKE,IAAI24F,QAE5B,IAAKuB,EAAS,OAEd,MAAMf,EAAYr5F,KAAKq5F,UAAUz4F,GAE3By5F,EACHhB,EAAUl4F,KAAK2H,QAAQvF,GAAMA,EAAE3C,IAAMw5F,EAAQn4F,OAAOrB,KAAI,IACxDy4F,EAAUl4F,KAAK,GAEdk5F,GAAWt4F,GAAG0Y,MAAMha,GAAG45F,EAAWD,EACzC,CAaAlB,UAAUrqC,EAAMjuD,GACb,MAAM05F,EAAWv4F,GAAG+M,OAAOyrF,aAE3B,IAAIluC,EAAOrsD,KAAKu4F,KAAK33F,GAErBZ,KAAKE,IAAMF,KAAKw4F,MAAMnsC,GAEtB,IAAI4sC,EAAU,KACV92F,EAAU,KACV+6E,EAAS,KACTvuB,EAAe,KACf6rC,EAAc,KACdC,EAAe,KACfC,EAAe,KACfC,EAAU,KACVlkB,EAAQ,KAGZ,OAAQ5nB,EAAKjtD,MACV,IAAK,eAGE5B,KAAKiF,SACN9C,EAAUnC,KAAKiF,OAAO8B,SAASoH,KAAKnH,IAC1B,CAAEpG,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOmK,KAAM,SAASvE,EAAEuE,YAG1DpJ,EAAQ2pC,QAAQ,CACblrC,GAAI,MACJ+B,MAAO,UAML3C,KAAK65B,SAAW13B,EAAQgE,OAAS,IAEnCnG,KAAK4V,OAAOi5C,EAAK1nD,MAAQhF,EAAQ,GAAGvB,GACpCZ,KAAK4uD,aAAaC,EAAMjuD,IAG3Bq4F,EAAU,CACPr4F,GAAIZ,KAAKE,IAAIw4F,aACbh4F,KAAM,aACNU,MAAOrB,EAAE,SACT+B,WAAY,GACZa,MAAO3C,KAAK65B,QACZ13B,QAASA,EACTC,GAAI,CACDC,SAAU,CAACk3F,EAAUnhB,KAEdmhB,IAAav5F,KAAK4V,OAAOi5C,EAAK1nD,QAC/BnH,KAAK4V,OAAOi5C,EAAK1nD,MAAQoyF,EACzBv5F,KAAK4uD,aAAaC,EAAMjuD,GAC3B,IAKT,MAEH,IAAK,aAGFuB,EAAUnC,KAAK+B,GAAG2jB,UAAUvX,KAAKkX,IACvB,CAAEzkB,GAAIykB,EAAEzkB,GAAI+B,MAAO0iB,EAAEjkB,WAG1BpB,KAAK45B,UAAYz3B,EAAQgE,OAAS,IACpCnG,KAAK45B,SAAWz3B,EAAQ,GAAGvB,GAC3BZ,KAAK4V,OAAOi5C,EAAK1nD,MAAQnH,KAAK45B,SAC9B55B,KAAK4uD,aAAaC,IAGrBoqC,EAAU,CACPr4F,GAAIZ,KAAKE,IAAIy4F,WACbj4F,KAAM,SACNU,MAAOrB,EAAE,eACT+B,WAAYw4F,EAASp4F,gBACrBS,MAAO3C,KAAK45B,SACZz3B,QAASA,EACTC,GAAI,CACDC,SAAWk3F,IACRv5F,KAAK4V,OAAS5V,KAAK4V,QAAU,CAAC,EAE1B2jF,IAAav5F,KAAK4V,OAAOi5C,EAAK1nD,QAC/BnH,KAAK4V,OAAOi5C,EAAK1nD,MAAQoyF,EACzBv5F,KAAK4uD,aAAaC,GACrB,IAKT,MAEH,IAAK,mBA0BF,GAHAquB,EAASl9E,KAAK+B,GAAGoxB,iBAAiBvyB,GAClC+tD,EAAe3uD,KAAKyuD,iCAEhBzuD,KAAKiF,OAAQ,CACdi4E,EAAO9pD,WAAWpzB,KAAKiF,OAAO8B,SAAU/G,KAAKiF,QAM7C,MAAM21F,EAAczmF,OAAOC,KAAKu6C,GAAcxgD,KAC1CnH,GAAM2nD,EAAa3nD,KAGvBk2E,EAAO1xC,kBAAkBovD,EA0D5B,CAIA1d,EAAO96E,GAAG,QAAS8mC,IAIhBlpC,KAAK4V,OAAS5V,KAAK4V,QAAU,CAAC,EAC9B5V,KAAK4V,OAAOi5C,EAAK1nD,MAAQ+hC,EAEzB,MAAM2xD,EAAYl3F,GAAG3D,KAAKE,IAAI44F,WAE9B+B,EAAUp2F,OAAO,CACdrD,MAAO87E,EAAO/I,gBAEjB0mB,EAAUn2F,UAIV,MAAMo2F,EAAcn3F,GAAG3D,KAAKE,IAAIgpC,WAEhC4xD,EAAYr2F,OAAO,CAChB9B,MAAOkR,KAAKC,UAAU9T,KAAK4V,OAAOi5C,EAAK1nD,SAE1C2zF,EAAYp2F,SAAS,IAIxB81F,EAAc,GAEVx6F,KAAK4V,QAAU5V,KAAK4V,OAAOi5C,EAAK1nD,QACjC+1E,EAAOr4E,SAAS7E,KAAK4V,OAAOi5C,EAAK1nD,OACjCqzF,EAAc3mF,KAAKC,UAAU9T,KAAK4V,OAAOi5C,EAAK1nD,QAKjDszF,EAAevd,EAAO/I,cAEtB8kB,EAAU,CACPp3F,KAAM,CACH,CACGjB,GAAIZ,KAAKE,IAAI44F,UACbp4F,KAAM,SACNU,MAAOq5F,EACPr4F,GAAI,CACDgI,YAAa,KACV8yE,EAAOzG,MAAM9yE,GAAG3D,KAAKE,IAAI44F,WAAY,KAAM,CACxCvpE,IAAK,UACN,IAMX,CACG3uB,GAAIZ,KAAKE,IAAIgpC,UACbxoC,KAAM,OACNiC,MAAO63F,EACPlnB,QAAQ,KAKjB,MAEH,IAAK,eAMFonB,EAAe,GACfC,EAAU,IAAIpgB,EAAWluB,EAAMrsD,KAAK+B,IAEhC/B,KAAKiF,QAAQ01F,EAAQ31F,WAAWhF,KAAKiF,QAGzC01F,EAAQ1e,oBACJj8E,KAAKooC,KAAK5hB,QAAQshB,kBAAkB9nC,KAAKooC,OAAS,IAAIj6B,KACnDC,IACS,CACJxN,GAAIwN,EAAK/J,IACT1B,MAAOyL,EAAKhN,WAQpBpB,KAAK4V,QAAU5V,KAAK4V,OAAOi5C,EAAK1nD,QACjCwzF,EAAQ91F,SAAS7E,KAAK4V,OAAOi5C,EAAK1nD,OAClCuzF,EAAe7mF,KAAKC,UAAU9T,KAAK4V,OAAOi5C,EAAK1nD,QAGlDsvE,EAAQ,KAEL,MAAMh2E,EAAK,CACRG,GAAIZ,KAAKE,IAAIizE,MACbzyE,KAAM,QACNC,SAAU,SACVykE,SAAU,IACVtkE,OAAO,EACPD,QAAQ,EACRY,KAAM,CACHI,KAAM,CACH,CACGd,OAAQ,GACRY,YAAY,EACZR,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNiC,MAAO,IACP3B,MAAO,GACPO,MAAO,KACJoC,GAAG3D,KAAKE,IAAIizE,OAAOxuE,MAAM,KAKrCg2F,EAAQl6F,KACR,CACGC,KAAM,SACNiC,MAAO5C,EAAE,QACTmB,IAAK,gBACLK,MAAO,KACJvB,KAAK4V,OAAS5V,KAAK4V,QAAU,CAAC,EAC9B5V,KAAK4V,OAAOi5C,EAAK1nD,MAAQwzF,EAAQ1uF,WACjC,MAAM8uF,EAAKp3F,GAAG3D,KAAKE,IAAI44F,WAEvBiC,EAAGt2F,OAAO,CACPilF,MAAO1pF,KAAK4V,OAAOi5C,EAAK1nD,MAAMhB,SAEjC40F,EAAGr2F,UAEH,MAAMqpB,EAAOpqB,GAAG3D,KAAKE,IAAIgpC,WAEzBnb,EAAKtpB,OAAO,CACT9B,MAAOkR,KAAKC,UAAU9T,KAAK4V,OAAOi5C,EAAK1nD,SAE1C4mB,EAAKrpB,UAELf,GAAG3D,KAAKE,IAAIizE,OAAOxuE,MAAM,MAQxC3E,KAAKg7F,SAAWv3F,MAAMhD,GAAGA,GACzBT,KAAKg7F,SAASp2F,OAIV5E,KAAK4V,QAAU5V,KAAK4V,OAAOi5C,EAAK1nD,OACjCwzF,EAAQ91F,SAAS7E,KAAK4V,OAAOi5C,EAAK1nD,MAAM,EAG9C8xF,EAAU,CACPp3F,KAAM,CAEH,CACGjB,GAAIZ,KAAKE,IAAI44F,UACbp4F,KAAM,SACNU,MAAOrB,EAAE,iBACT2pF,MAAO1pF,KAAK4V,OAAOi5C,EAAK1nD,OAAOhB,OAC/B/D,GAAI,CACDgI,YAAa,KACVqsE,GAAO,IAKhB,CACG71E,GAAIZ,KAAKE,IAAIgpC,UACbxoC,KAAM,OACNiC,MAAO+3F,EACPpnB,QAAQ,KAKjB,MAEH,IAAK,YACF2lB,EAAU,CACPr4F,GAAIZ,KAAKE,IAAI04F,UACbl4F,KAAM,OACNU,MAAOrB,EAAE,YACT+B,WAAY,GACZa,MAAO3C,KAAK4V,OAAOi5C,EAAK1nD,MACxBkvE,YAAat2E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAACk3F,EAAUnhB,KAEdmhB,IAAav5F,KAAK4V,OAAOi5C,EAAK1nD,QAC/BnH,KAAK4V,OAAOi5C,EAAK1nD,MAAQoyF,EACzBv5F,KAAK4uD,aAAaC,EAAMjuD,GAC3B,IAQf,OAAOq4F,CACV,CAYAa,YAAYl5F,EAAIq6F,GACb,MAAM7B,EAAQp5F,KAAKq5F,UAAUz4F,GAE7Bq6F,EAAQhwF,QAAQmuF,EACnB,CAWAS,cAAcj5F,EAAIs6F,GACf,MAAMtlF,EAAS,GAEf5V,KAAK+tD,qBAAqB9pD,SAAS4qD,IAEhCj5C,EAAOtR,KAAKtE,KAAKk5F,UAAUrqC,EAAMjuD,GAAI,IAGxC,IAAIu6F,EAAW,KAIZA,EADCvlF,EAAOzP,OAAS,EACN,CACRtE,KAAM+T,GAEIA,EAAOo3B,MAEnBmuD,IACDD,EAAQ1vF,WAAW0vF,EAAQpwF,gBAAgB,IAC3CowF,EAAQjwF,QAAQkwF,GAEtB,CAEAtkD,WACG,IAAIukD,EAAap7F,KAAK82C,WAAa,GAGnC,OAFI92C,KAAK0qB,OACN0wE,EAAaA,EAAWt0E,OAAO9mB,KAAK0qB,KAAKmsB,YAAY/tC,QAAQyuF,GAAMA,KAC/Dv3F,KAAK+B,GAAGygB,KAAK44E,EACvB,CAEApzB,eACGhoE,KAAK82C,UAAY,GACb92C,KAAK0qB,MAAM1qB,KAAK0qB,KAAKs9C,cAC5B,CAcAzY,eAAej+C,GAEZtR,KAAK82C,UAAY92C,KAAK82C,WAAa,GACnC92C,KAAK82C,UAAUxyC,KAAK,CAAEgN,QAAS,GAAGtR,KAAKqE,QAAQiN,KAClD,oBCzzBH,MAAM09C,EAAe,EAAQ,OAW7BvvD,EAAOC,QATP,cAAuBsvD,qBCDvB,MAAMC,EAAkB,EAAQ,OAC1BosC,EAAiB,EAAQ,OAEzB9wC,EAAc,CAajBG,eAAgBuE,EAAgBvE,eAShCxqD,IAAMU,IACI,CACJ06F,KAAM,GAAG16F,SACTi4F,OAAQ,GAAGj4F,gBACXuB,QAAS,GAAGvB,mBAkBlBm0B,QAAS,CAACwmE,EAAQnzD,EAAMrmC,KAId,CACJtB,GAAKG,IACF26F,EAASA,GAAU,IAAIF,EAAe,CAAC,EAAGjzD,EAAMrmC,GAEhD,MACMtB,EAAK,CACRoB,KAAM,CACH,CACGjB,GAJG2pD,EAAYrqD,IAAIU,GAIX06F,KACRn6F,KAAM,MAQf,OAHAo6F,EAAOjC,YAAY14F,EAAIH,GACvB86F,EAAOpC,UAAUv4F,EAAIH,GAEdA,CAAE,EAEZ6C,KAAO1C,IAAD,IAiBZ2W,MAAO,CAAC3W,EAAIwnC,EAAMrmC,KACf,MAAM7B,EAAMqqD,EAAYrqD,IAAIU,GACtB06F,EAAO33F,GAAGzD,EAAIo7F,MAEpB,IAAKA,EAGF,YAFA9yF,QAAQC,KAAK,oDAMhB,MAAM5G,EAAOy5F,EAAK7vF,gBAAgBX,gBAE5B0wF,EAAe,CAAC35F,EAAMM,EAAS6rD,KAClC,GAAoB,IAAhBnsD,EAAKsE,OAAc,OAAO,KAE9B,MAAM+Y,EAAMrd,EAAK0S,QAIXkS,EAAQvH,EAAIpU,gBAElB,IAAI2wF,EAAWh1E,EAAMlS,QAErB,MAAQknF,GAAUxvF,UAAUwvF,EAAWh1E,EAAMlS,QAE7C,MAAM5R,EAAQ84F,EAASxvF,WAGjBqiD,EAAKnsD,EAAQkqB,MAAMhH,GACfA,EAAEhhB,MAAQ1B,GAAS0iB,EAAEhhB,MAAQg3F,EAAeh3F,MAGtD,GAAIiqD,EAAI,CACL,IAAIotC,EAAS,KAEDA,EAAR1tC,EAAiB,IAAIM,EAAG,CAAC,EAAGN,EAAQ5lB,EAAMrmC,GAChC,IAAIusD,EAAG,CAAC,EAAGlmB,EAAMrmC,GAG/B25F,EAAOpD,SAASp5E,EAAKte,IAIhB86F,EAAOz2F,QAAU+oD,IACnB0tC,EAAOz2F,OAAS+oD,EAAO/oD,OACvBy2F,EAAO9hE,SAAW8hE,EAAOz2F,QAAQrE,IAAM,MAG1C,MAAM+6F,EAAUH,EACb35F,EACA65F,EAAO/7F,YAAY0uD,UACnBqtC,GAKH,OAFAA,EAAOhxE,KAAOixE,EAEPD,CACV,CAEA,OAAO,IAAI,EAKd,OAFkBF,EAAa35F,EAAMotD,EAAgBE,MAAO,KAE5C,GAItB1vD,EAAOC,QAAU6qD,mBC1JjB,MAAMqxC,EAAqB,EAAQ,OAoEnCn8F,EAAOC,QAlEP,cAAyBk8F,EAkBtBhtC,aAAaC,GACQ,SAAdA,EAAK1nD,OACNnH,KAAK45B,SAAW55B,KAAK4V,OAAOi5C,EAAK1nD,MACjCnH,KAAKiF,OAASjF,KAAKmuD,aAAanuD,KAAK45B,UAKjC55B,KAAK0qB,OAAM1qB,KAAK0qB,KAAKzlB,OAASjF,KAAKiF,QAE7C,CAgBAqzF,SAASp5E,EAAKte,GACXd,MAAMw4F,SAASp5E,EAAKte,GAKhBZ,KAAK4V,OAAOzO,OACbnH,KAAK45B,SAAW55B,KAAK4V,OAAOzO,KAC5BnH,KAAKiF,OAASjF,KAAKmuD,aAAanuD,KAAK4V,OAAOzO,MAElD,CAEA6gE,eACGloE,MAAMkoE,eACDhoE,KAAKiF,QACPjF,KAAKuvD,eAAe,qBAAsB,CACvC31B,SAAU55B,KAAK45B,UAGxB,oBC3EH,MAAMk2B,EAAmB,EAAQ,OAmBjCrwD,EAAOC,QAjBP,cAA2BowD,EASxBlB,aAAaC,EAAMjuD,GAChBd,MAAM8uD,aAAaC,GAGD,YAAdA,EAAK1nD,MAAoBnH,KAAKm6F,yBAAyBv5F,EAC9D,oBCRH,MAAMsvD,EAAkB,EAAQ,OAQhCzwD,EAAOC,QANP,cAA0BwwD,EACvBtB,aAAaC,EAAMjuD,GAChBd,MAAM8uD,aAAaC,EACtB,kBCLH,MAAMsB,EAAoB,EAAQ,OAelC1wD,EAAOC,QAbP,cAA4BywD,qBCF5B,MAAME,EAAmB,EAAQ,OAWjC5wD,EAAOC,QATP,cAA2B2wD,oBCiC3B,MAAMC,EAAmB,EAAQ,OAuFjC7wD,EAAOC,QArFP,cAA2B4wD,EAgBxB1B,aAAaC,GACQ,YAAdA,EAAK1nD,OAENnH,KAAK65B,QAAU75B,KAAK4V,OAAOi5C,EAAK1nD,MAGhCnH,KAAK4F,MAAQ5F,KAAKiF,OAAO8I,UAAU/N,KAAK65B,SAIpC75B,KAAK4F,OAA4B,kBAAnB5F,KAAK4F,MAAMvB,MAC1BrE,KAAKiuD,UAAYjuD,KAAK4F,MAAMgB,eAC5B5G,KAAKuwD,YAAcvwD,KAAKiuD,UAAUrtD,GAK9BZ,KAAK0qB,OAAM1qB,KAAK0qB,KAAKzlB,OAASjF,KAAKiuD,YAGhD,CAoBAqqC,SAASp5E,EAAKte,GACXd,MAAMw4F,SAASp5E,EAAKte,GAEpBZ,KAAK65B,QAAU75B,KAAK4V,OAAOikB,QAI3B75B,KAAK+B,GAAG2jB,SAASL,IACd,IAAKrlB,KAAK4F,MAAO,CAEd,MAAMA,EAAQyf,EAAEtX,UAAU/N,KAAK65B,SAE3Bj0B,IAAO5F,KAAK4F,MAAQA,EAC3B,KAGC5F,KAAK4F,QACN5F,KAAKiF,OAASjF,KAAK4F,MAAMX,OAIrBjF,KAAK4F,OAA4B,kBAAnB5F,KAAK4F,MAAMvB,MAC1BrE,KAAKiuD,UAAYjuD,KAAK4F,MAAMgB,eAC5B5G,KAAKuwD,YAAcvwD,KAAKiuD,UAAUrtD,IAG3C,oBCvHH,MAAM4vD,EAAkB,EAAQ,OA2ChC/wD,EAAOC,QAzCP,cAA0B8wD,EAgBvB5B,aAAaC,GACQ,eAAdA,EAAK1nD,OACNnH,KAAKywD,UAAYzwD,KAAK4V,OAAOi5C,EAAK1nD,MAExC,CAEAmxF,SAASp5E,EAAKte,GACXd,MAAMw4F,SAASp5E,EAAKte,GAEpBZ,KAAKywD,UAAYzwD,KAAK4V,OAAmB,WAEpC5V,KAAK0wD,aACP1wD,KAAKooC,KAAKuiB,mBAAmB3qD,MAC7BA,KAAK0wD,YAAa,EAExB,CAEAsX,eACGloE,MAAMkoE,eACDhoE,KAAKywD,WAAgC,KAAnBzwD,KAAKywD,WACzBzwD,KAAKuvD,eAAe,uCAE1B,oBChDH,MAAMssC,EAAa,EAAQ,OACrBC,EAAkB,WAExBr8F,EAAOC,QAAU,cAAqBm8F,EA4bnC17F,YAGG,OAFkB,IAAI27F,EAAgB97F,KAGzC,CAQA2yD,cAAcoP,GAMX,IAAIg6B,EAAgB,CACjB,OACA,OACA,YACA,gBAEA,iBACA,eACA,gBACA,cACA,oBACA,aACA,aAEA,SACA,WACA,UACA,aACA,cACA,UACA,YACA,eACA,iBACA,WACA,gBAEA,MACA,MACA,OACA,OAEA,SACA,aACA,eAQH,OALoB/7F,KAAK+E,YAAYgiB,UACCje,QAAQvF,IACM,GAA1Cw4F,EAAc1uF,QAAQ9J,EAAEwlC,SAAS1kC,MAM9C,CAEA23F,WAAWh5B,GACRhjE,KAAKwP,KAAK,aAAcwzD,EAC3B,mBCjgBH,MAAMi5B,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3Cz8F,EAAOC,QAAU,cAAgCu8F,EAS9C97F,UAAUg8F,EAAOC,GACd,IAAIj8F,EAAY,IAAI+7F,EAA2Bl8F,MAG/C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMm8F,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3C98F,EAAOC,QAAU,cAAgC48F,EAO9Cn8F,UAAUg8F,GAAQ,EAAOt8F,GACtB,IAAIM,EAAY,IAAIo8F,EAA2Bv8F,KAAMH,GAGrD,GAAIs8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,8EC1BY,MAAMq8F,UAAgCV,EAAA,EAClDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,kBAAkB48F,EAAS77F,KACrCuT,OAAOsmC,OACJ,CACGiiD,SAAU,IAEbx8F,IAINF,KAAK28F,kBAAoB,KACtB38F,KAAKwK,QAAQ,EAGhBxK,KAAK48F,kBAAoB,OAIzB58F,KAAK68F,kBAAoB,CAACC,EAAUC,KAIjC,MAAMhrE,EAAK/xB,KAAKkrB,eAEX6G,IAELA,EAAGjE,gBAAgBivE,GACnBhrE,EAAGrC,aAAY,EAGlB1vB,KAAKg9F,cAAgB,KAClBh9F,KAAK27E,MAAM,EAGd37E,KAAKi9F,eAAiB,KACnBj9F,KAAK+7E,OAAO,CAElB,CAEAt7E,KACG,MAAMP,EAAMF,KAAKE,IAEXu8F,EAAWz8F,KAAKU,KAEtBV,KAAKk9F,SAAWT,EAAS9/C,aACzB38C,KAAKm9F,SAAWV,EAASW,eAAej9F,YAExC,MAAM44F,EAAS,CAAC,EACV3yF,EAAWpG,KAAKoG,SAEC,IAAnBA,EAASpF,OACVmT,OAAOsmC,OAAOs+C,EAAQ,CACnB/3F,MAAO,IAGb,MAAMq8F,EAAMv9F,MAAMW,GAAG,CAClB,CACGkB,YAAY,EACZR,KAAM,CACH43F,EACA,CACGp3F,YAAY,EACZE,KAAM,CACH7B,KAAKk9F,SAASz8F,KACd,CACGG,GAAIV,EAAIw8F,SACRh8F,KAAM,WACNS,KAAM,GACNH,MAAOoF,EAASpF,MAChBD,OAAQqF,EAASrF,OACjBu8F,WAAY,CACTjW,OAAQjhF,EAAS8rD,SACjBqrC,SAAUn3F,EAAS+rD,WACnBvwD,KAAMwE,EAASgsD,gBAElBhwD,GAAI,CACDoI,OAAQ,KACL,MAAMgzF,EAAc75F,GACjBzD,EAAIw8F,UACLe,iBAEFz9F,KAAK09F,YAAYF,EAAY,MAM5CzE,MAOT,cAFOsE,EAAIz7F,KAEJy7F,CACV,CAGAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMgwB,EAAK/xB,KAAKkrB,eAEhB,IAAK6G,EAKF,YAJAhwB,EAAGqG,OAAO2sB,QAAQ,qBAAqBhD,IAAM,CAC1CzgB,QAAS,sCAMf,MAAMrM,EAAS8sB,EAAG9G,WAElB,IAAKhmB,EAKF,YAJAlD,EAAGqG,OAAOC,UAAU,aAAa0pB,IAAM,CACpCzgB,QAAS,8BAMfygB,EAAG+C,eAAe,WAAY90B,KAAK28F,mBACnC5qE,EAAG3vB,GAAG,WAAYpC,KAAK28F,mBAEvB5qE,EAAG+C,eAAe,SAAU90B,KAAK48F,mBACjC7qE,EAAG3vB,GAAG,SAAUpC,KAAK48F,mBAErB7qE,EAAG+C,eAAe,SAAU90B,KAAK48F,mBACjC7qE,EAAG3vB,GAAG,SAAUpC,KAAK48F,mBAErB7qE,EAAG+C,eAAe,SAAU90B,KAAK48F,mBACjC7qE,EAAG3vB,GAAG,SAAUpC,KAAK48F,mBAErB7qE,EAAG+C,eAAe,mBAAoB90B,KAAKg9F,eAC3CjrE,EAAG3vB,GAAG,mBAAoBpC,KAAKg9F,eAE/BjrE,EAAG+C,eAAe,kBAAmB90B,KAAKi9F,gBAC1ClrE,EAAG3vB,GAAG,kBAAmBpC,KAAKi9F,gBAE1Bj9F,KAAKoG,SAASisD,iBACftgC,EAAG+C,eAAe,eAAgB90B,KAAK28F,mBACvC5qE,EAAG3vB,GAAG,eAAgBpC,KAAK28F,oBAG9B,MAAMF,EAAWz8F,KAAKU,KAGtB+7F,EAAS9/C,aAAa33C,WAAWC,GACjCw3F,EAAS9/C,aAAaghD,SAAS39F,MAE/BA,KAAKk9F,SAAS55F,KAAKtD,KAAK+B,IACxB/B,KAAKk9F,SAASpoE,eAAe,cAAe90B,KAAK68F,mBACjD78F,KAAKk9F,SAAS96F,GAAG,cAAepC,KAAK68F,mBAGrC78F,KAAKm9F,SAAS75F,KAAK,CAChB5C,KAAM+7F,EACNvxE,eAAgB6G,IAInB,MAAM6rE,EAAgBj6F,GAAG3D,KAAKE,IAAIw8F,WAAWhvF,MAEzCkwF,IACDA,EAAchd,aACX,UACA,GAAG6b,EAASp4F,OAAOo4F,EAAS77F,MAE/Bg9F,EACIjd,cAAc,2BACbkd,mBAAmBjd,aAClB,UACA,GAAG6b,EAASp4F,uBAAuBo4F,EAAS77F,MAElDg9F,EACIjd,cAAc,2BACbkd,mBAAmBjd,aAClB,UACA,GAAG6b,EAASp4F,mBAAmBo4F,EAAS77F,MAGpD,CAWAk9F,UACG,MAAM/rE,EAAK/xB,KAAKkrB,eAEX6G,IAELA,EAAG+C,eAAe,WAAY90B,KAAK28F,mBAE/B38F,KAAK48F,oBACN7qE,EAAG+C,eAAe,SAAU90B,KAAK48F,mBACjC7qE,EAAG+C,eAAe,SAAU90B,KAAK48F,mBACjC7qE,EAAG+C,eAAe,SAAU90B,KAAK48F,oBAGpC7qE,EAAG+C,eAAe,mBAAoB90B,KAAKg9F,eAE3CjrE,EAAG+C,eAAe,kBAAmB90B,KAAKi9F,gBAEtCj9F,KAAKoG,SAASisD,gBACftgC,EAAG+C,eAAe,eAAgB90B,KAAK28F,mBAE1C38F,KAAKk9F,SAASpoE,eAAe,cAAe90B,KAAK28F,mBACpD,CAEAoB,WAAW7+E,GACR,GAAIA,GAAKwmE,IAAK,CACX,MAAMt/E,EAAWpG,KAAKoG,SAEtB,MAAO,CACJ,4CACA,aAAa8Y,EAAIwmE,qDACjBt/E,EAAS6rD,UACJ,wCAAwC/yC,EAAI9d,OAAS,WACrD,GACL,uCACAgF,EAASksD,aAAelsD,EAASmsD,WAC5B,oBAAoBrzC,EAAIte,8DACxB,GACLwF,EAASosD,UAAYpsD,EAASqsD,QACzB,oBAAoBvzC,EAAIte,+DACxB,GACL,2EACA,kGACA,SACA,UACD0N,KAAK,GACV,CAEK,MAAO,EACf,CAEAqtE,OACG,MAAMqiB,EAAYr6F,GAAG3D,KAAKE,IAAIw8F,UAE9BsB,GAAW54F,UACX44F,GAAW34F,eAAe,CAAEzD,KAAM,QACrC,CAEAm6E,QACG,MAAMiiB,EAAYr6F,GAAG3D,KAAKE,IAAIw8F,UAE9BsB,GAAWt2F,SACXs2F,GAAWr2F,gBACd,CAEAxC,kBAAkB84F,GACf,MAAMlsE,EAAK/xB,KAAKkrB,eAEhB,GAAK6G,GAIFksE,GAAmBj+F,KAAKk+F,YAAc,GACtCnsE,EAAGc,WAAa7yB,KAAKm+F,UACtB,CAECn+F,KAAK27E,OAEL,UACS5pD,EAAGP,SAASxxB,KAAKm+F,WAAa,EAMvC,CALE,MAAOh2F,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,4EAET,CAEAtR,KAAK+7E,OACR,CACH,CAEAvxE,OAAOsyF,EAAW98F,KAAKk9F,SAASkB,aAC7B,MAAMl+F,EAAMF,KAAKE,IACX6xB,EAAK/xB,KAAKkrB,eAEhB,IAAK6G,EAAI,OAET,MAAMja,EAAMia,EAAG9G,WAEf,IAAKnT,EAAK,OAEV,MAAMlS,EAAQ5F,KAAKU,KAAKkyD,WAExB,IAAKhtD,EAAO,OAEZ,GAAImsB,EAAGtG,YAAcsG,EAAGjI,eAAeC,WAKpC,YAHAgI,EAAGP,WAMN,MAAMprB,EAAWpG,KAAKoG,SAEtB,IAAIvE,EAAOkwB,EAAGY,QAAQmqE,GAGtB,GAAI12F,EAASisD,eAAgB,CAC1B,MAAMgsC,EAAStsE,EAAGjG,YAEduyE,IACDx8F,EAAOA,EAAKiH,QACR8G,IACGA,EAAEkI,EAAIwW,OAAS1e,EAAEhP,IAAMgP,MACvByuF,EAAOvmF,EAAIwW,OAAS+vE,EAAOz9F,IAAMy9F,KAE9C,CAEA,MAAMC,EAAS,GAEfz8F,EAAKoC,SAAS2L,IACX,MAAM2uF,EAAU3uF,EAAEhK,EAAMkB,YAExB,GAAIy3F,EAAS,CACV,MAAMC,EAAU,CACb59F,GAAIgP,EAAEhP,GACN8kF,IAAK,SAAS6Y,KAIbn4F,EAAS6rD,YAAWusC,EAAQp9F,MAAQ0W,EAAIsqB,YAAYxyB,IAExD0uF,EAAOh6F,KAAK,CACTpD,IAAK,QACLS,YAAY,EACZ0/D,SAAU,IAAIzrD,IACJ5V,KAAK+9F,cAAcnoF,GAE7B/L,KAAM20F,GAEZ,KAGH,MAAMC,EAAKz+F,KAAK+B,GAGZ6D,EAAMQ,SAASu3C,iBAChB2gD,EAAOxyD,QAAQ,CACZ5qC,IAAK,QACLmgE,SAAU,IAAIzrD,IAAW5V,KAAK+9F,cAAcnoF,GAC5C/L,KAAM,CACHjJ,GAAI69F,EAAG5uF,OACP61E,IAAK,SAAS9/E,EAAMQ,SAASu3C,kBAC7Bv8C,MAAOpB,KAAKoB,MAAM,oBAKvBk9F,EAAOn4F,OAAS,GACjBm4F,EAAOh6F,KAAK,CACTzC,KAAM,CACH,CACGnB,KAAM,QACNW,MAAO,SACPN,OAAQqF,EAASrF,OACjBK,MAAO,+PAEV,CACGV,KAAM,QACNW,MAAO,SACPD,MAAOpB,KAAKoB,MAAM,gBAM9BpB,KAAKm+F,UAAYt8F,EAAKsE,OAGtBnG,KAAKk+F,YAAcI,EAAOn4F,OAE1B,MAAM63F,EAAYr6F,GAAGzD,EAAIw8F,UACnBgC,EAAUD,EAAGhkF,MAEnB,GAAIujF,EAAW,CAEZU,EAAQj+F,GAAG69F,EAAQN,GAGnBU,EAAQh7F,OAAOs6F,EAAWU,EAAQ96F,aAGlC,MAAM4uD,EAAWpsD,EAASosD,SACpBF,EAAclsD,EAASksD,YAG7B0rC,EAAUtwF,MAAMixF,QAAWt0F,IACxB,GAAIA,EAAE47C,OAAOiD,UACV,GAAI7+C,EAAE47C,OAAOiD,UAAU77C,QAAQ,qBAAuB,EAAG,CACtDqxF,EAAQ9Z,KAAKnZ,UAAUuyB,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAIjxE,EAAQxjB,EAAE47C,OAAOo9B,aAAa,aAClCrjF,KAAKm9F,SAASnB,WAAWxpC,EAAU3kC,EACtC,MAAO,GACJxjB,EAAE47C,OAAOiD,UAAU77C,QAAQ,uBAAyB,EACrD,CACCqxF,EAAQ9Z,KAAKnZ,UAAUuyB,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAIjxE,EAAQxjB,EAAE47C,OAAOo9B,aAAa,aAClCrjF,KAAKm9F,SAASnB,WAAW1pC,EAAazkC,EACzC,MACGxjB,EAAE47C,OAAOiD,UAAU77C,QAAQ,2BAA6B,IAExD2wF,EAAUv5F,OAAO,MAAO,cACxBi6F,EAAQG,WAAWhlF,IAAI3Z,EAAIw8F,SAAU,CAClCz7F,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLgI,SAAU,CACP,CAAC,EACD,CACGxI,KAAM,OACN6K,KAAM,cACNhK,MAAO,WACJm9F,EAAQ9Z,KAAKnZ,UACVuyB,EAAUY,UACV,cAEHF,EAAQG,WAAWC,MACtB,OAMlB,CAEN,CACH,CAEAC,gBAAgBrxF,GACb1N,KAAKk9F,SAAS8B,UAAUtxF,EAC3B,4BCjcH,MAAMuxF,EAAqB,EAAQ,OAWpB,MAAMC,UAAuBD,EACzCt/F,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,EACtC,CAYA77B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAK28C,aAAagV,aAAa3xD,KAAKoG,SAAS0C,OAChD,CAQA3I,UAAUg8F,GAAQ,GACf,IAAIpqE,EAAK/xB,KAAKkrB,eACV6G,IACD/xB,KAAK28C,aAAa33C,WAAW+sB,EAAG9G,YAChCjrB,KAAK28C,aAAagV,aAAa3xD,KAAKoG,SAAS0C,SAGhD,IAAI3I,EAAY,IAAIq8F,EAAwBx8F,MAG5C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEIN,aACD,MAAO,kBAAkBG,KAAKY,IACjC,CAEI+7C,mBAOD,OAN2B,MAAvB38C,KAAKm/F,iBACNn/F,KAAKm/F,eAAiB,IAAIC,EAAA,EACvBp/F,KAAK+B,GACL/B,KAAKH,SAGJG,KAAKm/F,cACf,CAEI/B,qBAID,OAH6B,MAAzBp9F,KAAKq/F,mBACNr/F,KAAKq/F,iBAAmB,IAAIC,EAAA,GAExBt/F,KAAKq/F,gBACf,oBCpFH,MAAME,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErC//F,EAAOC,QAAU,cAA0B6/F,EAiBxCp/F,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIq/F,EAAqBx/F,MAGzC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEAs/F,aAGG,OAFKz/F,KAAK0/F,WAAU1/F,KAAK0/F,SAAW,IAAIj8F,MAAMwnE,gBAEvCjrE,KAAK0/F,QACf,CAEAzrC,cACG,MAAM/nC,EAAKlsB,KAAKkrB,eAChB,GAAU,MAANgB,EAAY,OAAOlsB,KAAK2/F,QAE5B,MAAMC,EAAW5/F,KAAKm0D,aAChB0rC,EAAW7/F,KAAKo0D,aAChB0rC,EAAY9/F,KAAKq0D,cAEvB,IAAKurC,IAAaC,EAAU,OAAO7/F,KAAK2/F,QAGxC,MAAMI,EAAgBF,EAAS/4F,WAE/B,IAAIk5F,EAAiB,GAEjBhgG,KAAKoG,SAAS2tD,gBAAkB+rC,IACjCE,EAAiBF,EAAUh5F,YAG9B,MAAMm5F,EAAY,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGGC,EAAQh0E,EAAGyG,UAEjB,IAAIuL,EAAU,GACViiE,EAAU,CAAC,EACXC,EAAY,EACZC,EAAa,EACbC,EAAcJ,EAAM/5F,OAExB+5F,EAAMj8F,SAASmK,IACZ,MAAM0iD,EAAW8uC,EAASt/E,OAAOlS,IAASA,EAAKxN,GAE/C,IAAIw1C,EAAYP,WAAWznC,EAAK2xF,IAAkB,GAC9CQ,EAAa,KAKjB,OAHIvgG,KAAKoG,SAAS2tD,iBACfwsC,EAAa1qD,WAAWznC,EAAK4xF,KAAoB,GAE5CH,EAASx7F,KAEd,IAAK,UACF+xC,EAAYypD,EAASv/E,OAAOlS,GAE5B,MAGH,IAAK,YACFgoC,EAAYP,WACTgqD,EAASlgG,YAAY+2C,YAClBmpD,EAAS56F,OACT46F,EAASz5F,SAAS2vC,QAClB3nC,EACAyxF,EAASz5F,SAAS6vC,gBAU9B,GAAyB,MAArBkqD,EAAQrvC,GAAmB,CAC5B,IAAI1vD,EAAQ0vD,EAGZ,GAAI8uC,EAAS5/D,aAAc,CACxB,IAAIwgE,EAAeZ,EAASxoD,mBAAmBhpC,GAC3B,MAAhBoyF,IAEEp/F,EADC+L,MAAMC,QAAQozF,GACPA,EACJryF,KAAK6H,GAAQA,EAAI3H,MAAQ,KACzBC,KAAK,MACCkyF,EAAanyF,KAEhC,CAEIrO,KAAKoG,SAAS2tD,eACfosC,EAAQrvC,GAAY,CACjB1vD,MAAOA,GAASgN,EAAKxN,GACrB+B,MAAO,EACP89F,OAAQ,GAGXN,EAAQrvC,GAAY,CACjB1vD,MAAOA,GAASgN,EAAKxN,GACrB+B,MAAO,EAGhB,CAEAw9F,EAAQrvC,GAAUnuD,OAASyzC,EAC3BgqD,GAAahqD,EAETp2C,KAAKoG,SAAS2tD,iBACfosC,EAAQrvC,GAAU2vC,QAAUF,EAC5BF,GAAcE,EACjB,IAGH,IAAIx0F,EAAQ,EAEZ,IAAK,MAAM1H,KAAO87F,EAAS,CACxB,IAAInqF,EAAMmqF,EAAQ97F,GAAK1B,MAEvB,KAAIqT,GAAO,GAAX,CASA,GANIhW,KAAKoG,SAASytD,eACf79C,EAAOA,EAAMoqF,EAAa,IAC1BpqF,EAAMzP,KAAKquC,MAAY,IAAN5+B,GAAa,IAC9BA,GAAY,MAGXhW,KAAKoG,SAAS2tD,eAAgB,CAC/B,IAAI2sC,EAAOP,EAAQ97F,GAAKo8F,OAExB,GAAIC,GAAQ,EAAG,SAGX1gG,KAAKoG,SAASytD,eACf6sC,EAAQA,EAAOL,EAAc,IAC7BK,EAAOn6F,KAAKquC,MAAa,IAAP8rD,GAAc,IAChCA,GAAc,MAGjBxiE,EAAQ55B,KAAK,CACVlD,MAAO++F,EAAQ97F,GAAKjD,MACpBuB,MAAOqT,EACPyqF,OAAQC,EACRzjB,MAAOgjB,EAAUl0F,EAAQk0F,EAAU95F,QACnCsqB,MAAO6vE,GAEb,MACGpiE,EAAQ55B,KAAK,CACVlD,MAAO++F,EAAQ97F,GAAKjD,MACpBuB,MAAOqT,EACPinE,MAAOgjB,EAAUl0F,EAAQk0F,EAAU95F,QACnCsqB,MAAO6vE,IAIbv0F,GAAS,CArCa,CAsCzB,CAEA,MAAM4zF,EAAU3/F,KAAKy/F,aAErBE,EAAQ7kF,WACR6kF,EAAQpoF,MAAM2mB,EACjB,oBC/MH,MAAMyiE,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzCnhG,EAAOC,QAAU,cAA8BihG,EAW5CxgG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIygG,EAAyB5gG,MAG7C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCjCH,MAAM0gG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExCrhG,EAAOC,QAAU,cAA6BmhG,EAW3C1gG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI2gG,EAAwB9gG,MAG5C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCjCH,MAAMywD,EAAe,EAAQ,OACvBmwC,EAAgC,EAAQ,MAE9CthG,EAAOC,QAAU,cAAmCkxD,EACjDrsD,gBAAgB3E,EAAKg1E,EAAMzyE,GACxB,IAAIhC,EAAYH,KAAKG,UAAUP,GAC3By9F,EAAMl9F,EAAUM,GACpB48F,EAAIz8F,GAAKuB,EAAQ6+F,YAEjB,IAKIx/F,EAASrB,EAAU85E,MACnBgnB,EAAU9gG,EAAUqK,OAExB,MAAO,CACJ/J,GAAI48F,EACJ/5F,KAVS,KACTnD,EAAUmD,KAAK,CACZ09F,YAAa3D,EAAIz8F,IAClB,EAQFq5E,MAAOz4E,EACPgJ,OAAQy2F,EAEd,CAQA9gG,UAAUg8F,GACP,IAAIh8F,EAAY,IAAI4gG,EAA8B/gG,MAGlD,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEI+qB,qBACD,OAAOlrB,KAAK+U,OAAOmW,cACtB,oBCtDH,MAAMg2E,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC1hG,EAAOC,QAAU,cAA8BwhG,EAW5C/gG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIghG,EAAyBnhG,MAG7C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCjCH,MAAMihG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExC5hG,EAAOC,QAAU,cAA6B0hG,EAW3CjhG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIkhG,EAAwBrhG,MAG5C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBCjCH,MAAMmhG,EAAoB,EAAQ,OAC5BC,EAAyB,EAAQ,OAEvC9hG,EAAOC,QAAU,cAA4B4hG,EAW1CnhG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIohG,EAAuBvhG,MAG3C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCjCH,MAAMqhG,EAAiC,EAAQ,OACzCC,EAAsC,EAAQ,OAEpDhiG,EAAOC,QAAU,cAAyC,EASvDS,UAAUg8F,GACP,IAAIh8F,EAAY,IAAIshG,EAAoCzhG,MAGxD,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEAgF,aACG,MAAMu8F,EAAS1hG,KAAKymB,QAAQ4F,MAAMjZ,GAAiB,OAAXA,EAAEjM,OACpCw6F,EAAW3hG,KAAKymB,QAAQ4F,MAAMjZ,GAAiB,SAAXA,EAAEjM,OACtCy6F,EAAc,GAEhBF,GAAQE,EAAYt9F,KAAKo9F,EAAO95F,QAEhC+5F,GAAUC,EAAYt9F,KAAKq9F,EAAS/5F,cAElC6H,QAAQ4R,IAAIugF,SAEZ9hG,MAAM8H,MACf,iGC1CY,MAAMi6F,UAAyC/F,EAAA,EAC3Dn8F,YAAY88F,EAAUqF,EAAQ5hG,GAC3BJ,MACG28F,EACAqF,GAAU,2BAA2BrF,EAAS77F,KAC9CuT,OAAOsmC,OACJ,CACG3xC,OAAQ,GACRwR,MAAO,IAEVpa,IAINF,KAAK4F,MAAQ,IAChB,CAEAnF,KACG,MAAMP,EAAMF,KAAKE,IACXm9F,EAAMv9F,MAAMW,GAAG,CAClB,CACGmB,KAAM,QACND,YAAY,EACZR,KAAM,CACH,CACGT,KAAM,OACN6K,KAAM,eACNlK,MAAO,OACP8jC,UAAU,GAEb,CACGzkC,KAAM,QACNE,GAAIV,EAAI4I,OACRhH,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,iBACxCqoB,UAAU,EACV/iC,GAAI,CACDC,SAAWzB,GAAOZ,KAAK+hG,mBAAmBnhG,KAGhD,CACGF,KAAM,OACNE,GAAIV,EAAIoa,MACR/O,KAAM,cACNlK,MAAO,OACP8jC,UAAU,EACV68D,QAAShiG,KAAKoB,MAAM,uBACpBgB,GAAI,CACDgI,YAAa,IAAMpK,KAAKiiG,2BASvC,cAFO5E,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMgwB,EAAK/xB,KAAKkrB,eAEhB,IAAK6G,EAAI,OAET,MAAM9sB,EAAS8sB,EAAG9G,WAElB,IAAKhmB,EAAQ,OAEb,MAAOW,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe9G,KAAKoG,SAASR,QAGzC,IAAKA,EASF,YARA5F,KAAK+B,GAAGqG,OAAOC,UACZ,sBAAsBrI,KAAKoG,SAASR,aAAaX,EAAOkC,OACxD,CACGmI,QAAS,0CACTzF,KAAM,CAAEzD,SAAUpG,KAAKoG,YAOhCpG,KAAK4F,MAAQA,EAEb,MAAM1F,EAAMF,KAAKE,IACX83E,EAAUv0E,MAAMhD,GAAG,CACtBC,KAAM,UACNoI,OAAQ,EAAGnG,SAASoT,IACjBpT,EAAMwV,cAAc20B,SAAS/2B,EAAOoC,eACvC/V,GAAI,CACDoI,OAAQ,KACL5E,EAAM46E,sBAAsB78E,GAAGzD,EAAI4I,QAASlD,EAAO,CAAC,EAAE,KAI/DA,EAAMy4E,sBAAsBrG,EAAS,KAAMpyE,GAE3C,MAAMs8F,EAAUv+F,GAAGzD,EAAI4I,QAEvBo5F,EAAQz9F,OAAO,UAAWuzE,GAC1BkqB,EAAQz9F,OAAO,QAAS,GAAGzE,KAAKoB,MAAM,gBAAgBwE,EAAMxE,SAC5D8gG,EAAQx6F,SACRw6F,EAAQx9F,SACX,CAEAu9F,qBACG,MAAM/hG,EAAMF,KAAKE,IACXgsB,EAAKlsB,KAAKkrB,eAEhBgB,EAAG4B,gBAAgB,CAAEhF,KAAM,MAAO3H,MAAO,KACzC+K,EAAGwD,aAGH,MAAMwyE,EAAUv+F,GAAGzD,EAAI4I,QAEvBo5F,EAAQ/nB,aACR+nB,EAAQr9F,WACRq9F,EAAQ9nB,eACR8nB,EAAQ98F,SACX,CAEA28F,mBAAmBI,GAChB,MAAMC,EAAa,CAChB/9F,IAAKrE,KAAK4F,MAAMhF,GAChBouB,KAAM,SACNrsB,MAAOw/F,GAEJj2E,EAAKlsB,KAAKkrB,eAEhBgB,EAAG4B,gBAAgB,CAAEhF,KAAM,MAAO3H,MAAO,CAACihF,KAC1Cl2E,EAAGwD,aACH/rB,GAAG3D,KAAKE,IAAIoa,OAAO5S,QACtB,ECvIY,MAAM26F,UAAgC,KAOlDliG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI0hG,EAAiC7hG,MAGrD,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CACA,OAAOzV,CACV,oBC3BH,MAAMmiG,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC9iG,EAAOC,QAAU,cAA8B4iG,EAc5CniG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIoiG,EAAyBviG,MAG7C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,4IC9BY,MAAMqiG,UAAkC1G,EAAA,EACpDn8F,YAAY88F,EAAUqF,EAAQ5hG,GAC3BJ,MACG28F,EACAqF,GAAU,oBAAoBrF,EAAS77F,KACvCuT,OAAOsmC,OACJ,CACG3xC,OAAQ,GACRwR,MAAO,GACPmoF,WAAY,GACZC,aAAc,GACdC,oBAAqB,IAExBziG,IAINF,KAAK4iG,oBAAsB,CAAC9F,EAAUC,KACnC/8F,KAAK6iG,mBAAmB/F,EAAUC,EAAY,EAGjD/8F,KAAK4F,MAAQ,KACb,MAAM64F,EAAKz+F,KAAK+B,GAIhB/B,KAAK8iG,mBAAqB,IAAI,IAC3B,+BAA+B9iG,KAAKoG,SAAS4qD,cAEhDhxD,KAAK8iG,mBAAmBx/F,KAAKm7F,GAC7Bz+F,KAAK8iG,mBAAmB1gG,GAAG,WAAY2gG,IACpC/iG,KAAKgjG,iBAAiBD,EAAY,IAGrC/iG,KAAK28C,aAAe,IAAI,IACrB38C,KAAK+B,GACL,iCAAiC/B,KAAKoG,SAAS4qD,cAElDhxD,KAAK28C,aAAav2C,SAAW,CAC1B65D,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAEpBngE,KAAK28C,aAAar5C,KAAKm7F,GACvBz+F,KAAK89F,UACL99F,KAAK28C,aAAav6C,GAAG,cAAepC,KAAK4iG,oBAC5C,CAEAK,aACG,MAAMC,EAASljG,KAAKE,IAAIC,UACxB,MAAO,CACJ,CACGe,IAAK,UACLiiG,UAAW,GACXthG,KAAM,CACH,CAAC,EACD,CACGV,KAAM,CACH,CACGH,MAAO,IAEV,CACGN,KAAM,SACNkB,KAAM,OACN2J,KAAM,eACNvK,MAAO,GACPJ,GAAIZ,KAAKE,IAAIwiG,aACbxhG,IAAK,+BAA+BlB,KAAKoG,SAAS4qD,aAClDzvD,MAAO,CAACX,EAAI6uB,KACTzvB,KAAKojG,cAAcz/F,GAAG3D,KAAKE,IAAIwiG,cAAch1F,MAAM,EAEtDtL,GAAI,CACD0zE,cAAe,WACZ91E,KAAKqjG,eAAeziB,aACjB,UACA,GAAGsiB,kBAET,IAGN,CACGxiG,KAAM,SACNkB,KAAM,OACN2J,KAAM,aACNvK,MAAO,GACPJ,GAAIZ,KAAKE,IAAIuiG,WACbvhG,IAAK,6BAA6BlB,KAAKoG,SAAS4qD,aAChDzvD,MAAO,CAACX,EAAI6uB,KACTzvB,KAAKsjG,SAAS3/F,GAAG3D,KAAKE,IAAIuiG,YAAY/0F,MAAM,EAE/CtL,GAAI,CACD0zE,cAAe,WACZ91E,KAAKqjG,eAAeziB,aACjB,UACA,GAAGsiB,gBAET,IAGN,CACGtiG,GAAIZ,KAAKE,IAAIyiG,oBACbjiG,KAAM,SACN21E,YAAar2E,KAAKoB,MAAM,YACxBF,IAAK,sBAAsBlB,KAAKoG,SAAS4qD,aACzChwD,MAAO,EACPgiB,WAAY,CACT,UAAW,GAAGhjB,KAAKE,IAAIC,0BACvB+qB,eAAgBlrB,KAAKoG,SAAS4qD,YAEjC5uD,GAAI,CACDq2E,gBAAiB,KACd,MAAMl0D,EAAa5gB,GAChB3D,KAAKE,IAAIyiG,qBACV12F,WAGSjM,KAAKkrB,eACb9kB,SAASwiB,gBAAgBrE,WACzBA,EAEHvkB,KAAK28C,aAAa4mD,mBAAmBh/E,EAAW,IAIzD,CACGvjB,MAAO,MAIhB,CAAC,IAIb,CAEAwiG,mBACG,MAAO,CACJ,CACGtiG,IAAK,UACLiiG,UAAW,GACXhiG,KAAM,CACH,CACGH,MAAO,IAEV,CACGa,KAAM,CACH,CAAC,EACD,CACGnB,KAAM,YACN+B,MAAO,CACJ,CACGvB,IAAK,UACLR,KAAM,QACNE,GAAIZ,KAAKE,IAAI4I,OACbhH,WAAY,EACZ2hG,UAAU,EACVt+D,UAAU,EACV/iC,GAAI,CACDC,SAAWzB,GAAOZ,KAAK+hG,mBAAmBnhG,KAGhD,CACGF,KAAM,OACNE,GAAIZ,KAAKE,IAAIoa,MACb/O,KAAM,cACNm4F,MAAO,GACPC,IAAK,EACL3iG,MAAO,GACPD,OAAQ,GACRuyE,QAAQ,EACR0uB,QAAShiG,KAAKoB,MAAM,sBACpBgB,GAAI,CACDgI,YAAa,IACVzG,GAAG3D,KAAKE,IAAI4I,QAAQjE,eAKnC,CAAC,IAGP,CACG7D,MAAO,MAKtB,CAEAP,KACG,GAA8B,YAA1BT,KAAKoG,SAASqzD,UACf,IAAKz5D,MAAMoG,UAAU4qD,WAAY,MAAO,CAAEjwD,OAAQ,QAElD,IAAKf,MAAMoG,UAAU4qD,aAAehxD,MAAMoG,UAAUR,MACjD,MAAO,CAAE7E,OAAQ,GAGvB,MAAMN,EACuB,YAA1BT,KAAKoG,SAASqzD,SACTz5D,KAAKijG,aACLjjG,KAAKwjG,mBACPnG,EAAMv9F,MAAMW,GAAGA,GAIrB,cAFO48F,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMgwB,EAAK/xB,KAAKkrB,eAEhB,IAAK6G,EAAI,OAET,MAAM9sB,EAAS8sB,EAAG9G,WAElB,GAAKhmB,EAEL,GAA8B,YAA1BjF,KAAKoG,SAASqzD,SACXz5D,KAAKoG,SAASuzD,UACf35D,KAAK8iG,mBAAmB99F,WAAWC,GAEnCjF,KAAK8iG,mBAAmB12F,YACrB2lB,GAAI3rB,UAAUwiB,iBAAiBrc,aAGlC5I,GAAG3D,KAAKE,IAAIuiG,YAAY99F,OAEvB3E,KAAKoG,SAASszD,WACf15D,KAAK28C,aAAa33C,WAAWC,GAE7BtB,GAAG3D,KAAKE,IAAIwiG,cAAc/9F,YAEzB,GAA8B,aAA1B3E,KAAKoG,SAASqzD,SAAyB,CAC/C,MAAO7zD,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe9G,KAAKoG,SAASR,QAGzC,IAAKA,EASF,YARA5F,KAAK+B,GAAGqG,OAAOC,UACZ,sBAAsBrI,KAAKoG,SAASR,aAAaX,EAAOkC,OACxD,CACGmI,QAAS,mCACTzF,KAAM,CAAEzD,SAAUpG,KAAKoG,YAOhCpG,KAAK4F,MAAQA,EAEb,MAAM1F,EAAMF,KAAKE,IACX83E,EAAUv0E,MAAMhD,GAAG,CACtBC,KAAM,UACNoI,OAAQ,EAAGnG,SAASoT,IACjBpT,EAAMwV,cAAc20B,SAAS/2B,EAAOoC,eACvC/V,GAAI,CACDoI,OAAQ,KACL5E,EAAM46E,sBAAsB78E,GAAGzD,EAAI4I,QAASlD,EAAO,CAAC,EAAE,GAG5Dk5E,gBAAgB,IAEnBl5E,EAAMy4E,sBAAsBrG,EAAS,KAAMpyE,GAE3C,MAAMs8F,EAAUv+F,GAAGzD,EAAI4I,QAEvBo5F,EAAQz9F,OAAO,UAAWuzE,GAC1BkqB,EAAQz9F,OACL,cACA,GAAGzE,KAAKoB,MAAM,gBAAgBwE,EAAMxE,SAEvC8gG,EAAQx6F,SACRw6F,EAAQx9F,SACX,CACH,CAEA8F,SACG1K,MAAM0K,SACNxK,KAAK4jG,UACR,CAEA7B,mBAAmBI,GAChB,IAAIC,EAAa,GACbD,GACDx+F,GAAG3D,KAAKE,IAAIoa,OAAO1V,OACnBw9F,EAAa,CACV,CACG/9F,IAAKrE,KAAK4F,MAAMhF,GAChBouB,KAAM,SACNrsB,MAAOw/F,KAIbx+F,GAAG3D,KAAKE,IAAIoa,OAAO3V,OAEtB,MAAMunB,EAAKlsB,KAAKkrB,eAEhBgB,EAAG4B,gBAAgB,CAAEhF,KAAM,MAAO3H,MAAOihF,IACzCl2E,EAAGwD,YACN,CAEA4zE,SAAS51F,GACN1N,KAAK8iG,mBAAmBl+F,KAAK8I,EAChC,CAQAvI,uBAAuB0+F,EAAY,IAChC,MAAM33E,EAAKlsB,KAAKkrB,eACX,YAAUgB,GAAI9lB,UAAUwiB,iBAAiBrc,WAAYs3F,KACvD33E,EAAG9lB,SAASwiB,gBAAgBrc,WAAas3F,QACnC7jG,KAAKkrB,eAAewE,cAE7B1vB,KAAK4jG,UACR,CAWAf,mBAAmB/F,EAAUC,EAAc,IACxC,MAAM7wE,EAAKlsB,KAAKkrB,eACX,YAAUgB,GAAIlC,aAAc+yE,KAC9B7wE,EAAG4B,gBAAgBivE,GACnB7wE,EAAGwD,aACH1vB,KAAK4jG,WAEX,CAEAR,cAAc11F,GACX1N,KAAK28C,aAAaqiD,UAAUtxF,EAC/B,CAEAk2F,WACG,MAAM13E,EAAKlsB,KAAKkrB,eAEhB,IAAKgB,EAAI,OAET,IAAI43E,EAAgBv6D,SAASy/C,uBAC1B,iBAAiBhpF,KAAKoG,SAAS4qD,cAGlC,MAAM+yC,EAAkB/jG,KAAK28C,aAAaogD,cAC1C,IAAIiH,EACDD,GAAiB5iF,OAAOhb,OAAS,EAC5B49F,GAAiB5iF,OAAOhb,OACxB,KACR,IAAK,IAAI0H,KAAKi2F,EACXngG,GAAGkK,GAAGpJ,OAAO,QAASu/F,GACtBrgG,GAAGkK,GAAGnJ,UAGT,IAAIu/F,EAAc16D,SAASy/C,uBACxB,eAAehpF,KAAKoG,SAAS4qD,cAGhC,MAAMkzC,EAAgBh4E,EAAG9lB,SAASwiB,gBAAgBrc,WAClD,IAAI43F,EAAYD,GAAe/9F,OAAS,EAAI+9F,GAAe/9F,OAAS,KAEpE,IAAK,IAAI0H,KAAKo2F,EACXtgG,GAAGkK,GAAGpJ,OAAO,QAAS0/F,GACtBxgG,GAAGkK,GAAGnJ,UAGT,IAAI0/F,EAAe76D,SAASy/C,uBACzB,sBAAsBhpF,KAAKoG,SAAS4qD,cAGvC,MAAMzsC,EAAa2H,EAAG9lB,SAASwiB,gBAAgBrE,WAC/C,GAAkB,MAAdA,EACD,IAAK,IAAI3X,KAAKw3F,EAAc,CACzB,IAAIC,EAAgB96D,SAAS86D,cAE1BA,GAAerhF,YAAYkI,gBAAgBvoB,OACxC3C,KAAKoG,SAAS4qD,YACjBqzC,GAAiBz3F,EAAEqkE,qBAAqB,SAAS,IAIjDttE,GAAGiJ,GAAG/H,SAAS0f,EAErB,CAEN,CAEAu5E,UACG99F,KAAK28C,aAAa7nB,eAAe,cAAe90B,KAAK4iG,oBAExD,EClZY,MAAM0B,UAAyB,KAO3CnkG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIqiG,EAA0BxiG,MAG9C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CACA,OAAOzV,CACV,oBC3BH,MAAMokG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAElCzqC,EAAyBwqC,EAAmBziE,gBAIlDriC,EAAOC,QAAU,cAA6B6kG,EAW3Ct+F,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASksD,YACXtyD,KAAKoG,SAASksD,aAAeyH,EAAuBzH,YACvDtyD,KAAKoG,SAASosD,SACXxyD,KAAKoG,SAASosD,UAAYuH,EAAuBvH,SACpDxyD,KAAKoG,SAASmsD,WACXvyD,KAAKoG,SAASmsD,YAAcwH,EAAuBxH,WACtDvyD,KAAKoG,SAASqsD,QACXzyD,KAAKoG,SAASqsD,SAAWsH,EAAuBtH,OACtD,CAUAtyD,UAAUg8F,EAAOC,GACd,IAAIj8F,EAAY,IAAIqkG,EAAwBxkG,MAG5C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCzDH,MAAMskG,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtCjlG,EAAOC,QAAU,cAA2B+kG,EAazCtkG,UAAUg8F,EAAOC,GACd,IAAIj8F,EAAY,IAAIukG,EAAsB1kG,MAG1C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBClCH,MAAMwkG,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9CnlG,EAAOC,QAAU,cAAmCilG,EAQjDxkG,UAAUg8F,GACP,IAAIh8F,EAAY,IAAIykG,EAA8B5kG,MAGlD,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC7BH,MAAM0kG,EAA0B,EAAQ,OAClCC,EACH,WAEGC,EAA+B,EAAQ,OAE7CtlG,EAAOC,QAAU,cAAkCmlG,EAWhD5+F,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKglG,YAAYrzC,aAAa3xD,KAAKoG,SACtC,CAUAjG,UAAUg8F,EAAOC,GACd,IAAIj8F,EAAY,IAAI4kG,EAA6B/kG,MAGjD,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEI6kG,kBAID,OAH0B,MAAtBhlG,KAAKilG,gBACNjlG,KAAKilG,cAAgB,IAAIH,GAErB9kG,KAAKilG,aACf,oBCxDH,MAAMC,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,MAE5C1lG,EAAOC,QAAU,cAAiCwlG,EAS/C/kG,UAAUg8F,GACP,IAAIh8F,EAAY,IAAIglG,EAA4BnlG,MAGhD,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMilG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3C5lG,EAAOC,QAAU,cAAgC0lG,EAS9CjlG,UAAUg8F,EAAOC,GACd,IAAIj8F,EAAY,IAAIklG,EAA2BrlG,MAG/C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMmlG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C9lG,EAAOC,QAAU,cAA+B4lG,EAW7CnlG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIolG,EAA0BvlG,MAG9C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBChCH,MAAMqlG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1ChmG,EAAOC,QAAU,cAA+B8lG,EAiB7CrlG,UAAUg8F,GACP,IAAIh8F,EAAY,IAAIslG,EAA0BzlG,MAG9C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCtCH,MAAMulG,EAAuB,EAAQ,MAC/BC,EAA4B,EAAQ,MAE1ClmG,EAAOC,QAAU,cAA+BgmG,EAkB7CvlG,UAAUg8F,EAAOC,GACd,IAAIj8F,EAAY,IAAIwlG,EAA0B3lG,MAG9C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBCvCH,MAAMylG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CpmG,EAAOC,QAAU,cAAgCkmG,EAO9CzlG,UAAUg8F,GACP,IAAIh8F,EAAY,IAAI0lG,EAA2B7lG,MAG/C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEA2lG,gBAAgBC,EAAM/pD,GACnB,MAAM1rC,EAAM0I,OAAOgtF,IAAIC,gBAAgBF,GAEjCn4F,EAAI27B,SAASC,cAAc,KACjC57B,EAAE61E,KAAOnzE,EACT1C,EAAEs4F,SAAWlqD,EACbzS,SAAS9nC,KAAKqoF,YAAYl8E,GAC1BA,EAAErM,QACFqM,EAAEiN,SAEF7B,OAAOgtF,IAAIG,gBAAgB71F,EAC9B,oBCzCH,MAAM81F,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAC9BC,EAAmB,EAAQ,OAC3BjoC,EAAmB,EAAQ,OAC3BkoC,EAAoB,EAAQ,OAC5BC,EAA2B,EAAQ,OAcnCzpC,GAboB,EAAQ,OAaUqpC,EAAetkE,iBAE3DriC,EAAOC,QAAU,cAAyB0mG,EACvCzmG,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAEnC9hC,KAAKymG,WAAa,CACfC,iBAAkB,KAAM,EAE9B,CAEAC,iBAIG,OAH4B,MAAxB3mG,KAAK4mG,kBACN5mG,KAAK4mG,gBAAkB9mG,MAAMK,aAEzBH,KAAK4mG,eACf,CAQAzmG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIkmG,EAAoBrmG,MAGxC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEA0mG,qBAAqB3mG,GAElB,IAAI4mG,EAAgB9mG,KAAKymB,OACrBrT,GAAMA,aAAakzF,GAAoBlzF,EAAEhN,SAASi2D,YACpD,GAGmB,MAAjByqC,GACDA,EAAgBR,EAAiB7rC,YAAYz6D,KAAK+E,YAAa/E,MAC/D8mG,EAAc1gG,SAASi2D,WAAY,GAInCr8D,KAAK0mB,OAAS1mB,KAAKymB,OACfrT,KAAQA,aAAakzF,GAAsBlzF,EAAEhN,SAASi2D,aAK7D,IAAI0qC,EAAQ/mG,KAAKymB,QAAQtY,KAAKiF,IAAOA,EAAEzS,SAAS21D,GAAK,GAAK,IAC1DywC,EAAMziG,KAAKtE,KAAK0mB,OAAOvgB,QAAU,GACjC4gG,EAAMziG,KAAKX,GAAGzD,EAAI6G,QAAQZ,QAAU,GACpC,IAAI6gG,EAAOzgG,KAAK22C,OAAO6pD,GAQvB,OALAD,EAAcnmG,SAAS21D,EAAI0wC,EAG3BhnG,KAAK0mB,OAAOpiB,KAAKwiG,GAEVA,CACV,CAUAG,cAAc7sC,EAAUtiD,EAAKoU,EAAIg7E,GAE9B,MAAMC,EAAgB,CAAC,MACvB/sC,EAAS+wB,WAAU,SAAUrzE,GAC1BqvF,EAAc7iG,KAAKwT,EAAI7V,OAAOkF,KACjC,IAGA,MAAMigG,EAAUhtC,EAAS+wB,YACnBkc,EAAW,CAAC,EAClBF,EAAcljG,SAAS+R,IACpBqxF,EAASrxF,GAAOoxF,EAAQpxF,EAAI,IAI/BhW,KAAKq9D,iBACDlR,GACEA,aAAgBkS,GAChBlS,aAAgBo6C,GAChBp6C,aAAgBq6C,IACpBviG,SAAS+C,IACR,MAAMsgG,EAAatnG,KAAKunG,eAAevgG,EAAEpG,IACzC,GAAkB,MAAd0mG,EAAoB,OAExB,MAAM1hG,EAAQoB,EAAEpB,QAChB,GAAIA,EAAO,CACR,MAAMqG,EAAWq7F,EAAWr7F,UAAYq7F,EAAWrtB,MAAMhuE,SACrDA,IACDo7F,EAASzhG,EAAMkB,YAAcmF,EAASmtC,KAAKkuD,EAAYD,GAC7D,KAIHvvF,EAAIgO,gBAAgB7hB,SAAS+C,KAEiB,GAAxCmgG,EAAc95F,QAAQrG,EAAEF,aACxBugG,EAASrgG,EAAEF,qBAEJugG,EAASrgG,EAAEF,mBACXugG,EAASrgG,EAAE+oB,gBACrB,IAIH,IAAK,MAAMoS,KAAQklE,EACM,MAAlBA,EAASllE,IAA0C,GAAzBklE,EAASllE,GAAMh8B,SAC1CkhG,EAASllE,GAAQ,IAIvB,IAAIqlE,EAMJ,GAJIN,IACDM,EAAaN,EAAOp7E,aAGnB07E,EAAY,CACb,MAAMhpE,EAAa0oE,EAAOj8E,WAEJnT,EAAIgO,gBACZ7hB,SAAS+C,IACpB,MAAMygG,EAAeznG,KAAKq9D,iBACtBqqC,GAAUA,GAAO9hG,WAAWhF,KAAOoG,GAAGpG,KAG1C,GACG49B,EAAW59B,IAAMoG,EAAEZ,SAASO,YAC5B8gG,EAAathG,OAAS,QACK+jB,IAA3Bm9E,EAASrgG,EAAEF,YACZ,CACC,MAAM6gG,EAAc3gG,EAAEK,WACjBL,EAAEK,WAAWP,WACb03B,EAAWlQ,KAEhB+4E,EAASrgG,EAAEF,YAAc,CAAC,EAC1BugG,EAASrgG,EAAEF,YAAY6gG,GACpBH,EAAWG,IAAgBH,EAAW5mG,EAC5C,IAEN,CAIA,MAAMgnG,EAAiBzzF,OAAOsmC,OAAOvuB,EAAGJ,aAAe,CAAC,EAAGu7E,GAW3D,OARAvvF,EAAI/Q,QAAQC,GAAe,aAATA,EAAE3C,KAA+B,WAAT2C,EAAE3C,MAAkBJ,SAC1D+C,IACgC,MAA1BqgG,EAASrgG,EAAEF,cACZugG,EAASrgG,EAAEF,YAAcE,EAAEsZ,OAAOsnF,GAAgB,GACrD,IAICP,CACV,CAWAQ,aAAaC,EAAW7iG,EAAQoiG,GAC7B,IAAI9hG,GAAU,EAGd,MAAMwiG,EAAiB/nG,KAAKq9D,iBACxBqqC,GACyC,GAAvCA,GAAO9hG,UAAUQ,UAAUkyC,UACE,GAA7BovD,GAAOthG,UAAUkyC,WACrBnqC,KAAKu5F,GAAUA,EAAM9hG,UAGvB,IAAI2B,EA4CJ,GA3CIhC,IACDgC,EAAYtC,EAAOmqB,YAAYi4E,GAC/B9hG,EAAUgC,EAAUiW,QAIvBsqF,EAAUvvB,WAGVwvB,EAAe9jG,SAAS+C,IACrB,IAAKA,EAAG,OAER,MAAMgjC,EAAWq9D,EAASrgG,EAAEF,YAC5B,GAAgB,IAAZkjC,GAA8B,MAAZA,GAAoBA,EAAS7jC,OAAS,EAAG,CAC5D2hG,EAAU9oF,YAAYhY,EAAEF,WApO1B,KAAI8O,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAoOF7V,CAAE,8BACtCwF,GAAU,EAGV,MAAMyiG,EAAaF,EAAU5+F,SAASlC,EAAEF,YACxC,GAAIkhG,EAAY,CAEEA,EAAWC,QACb,KACVD,EAAWvjG,OAAO,SAAU,IAC5BujG,EAAWnnG,UAId,MAAMqnG,EACHF,EAAWt6F,MAAMs7E,uBACd,0BACD,GACAkf,GAAmBlyB,MAAM,iBAC3BkyB,EAAkBlyB,MAAMmyB,WAAa,GAClCnoG,KAAKoG,SAAStE,YACdi7D,EAAoCj7D,eAG7C,CACH,MAIEyD,EAAS,CACX,MAAM6iG,EAAaN,EAAU/xB,UAAU,CACpCr1E,KAAM,SACNkB,KAAM,SAIL2F,GAAW+V,QAAQnX,QACpBoB,EAAU+V,OAAOrZ,SAASkE,IACvB2/F,EAAU9oF,YAAY7W,EAAIhB,KAAMgB,EAAImJ,QAAQ,IAG/C82F,GAAYhjG,WAEZgjG,GAAY1gG,QAElB,CAEA,OAAOnC,CACV,CAQAJ,yBACG,OAAOnF,KAAKwxD,WAAW62C,YAC1B,CASAljG,eAAe2iG,GAGZ,IAAK9nG,KAAKymG,YAAYC,qBAAsB,OAG5C,IAAKoB,IAAcA,EAAUvvB,WAE1B,OAGHuvB,EAAUQ,kBAGV,MAAMv2E,EAAK/xB,KAAKkrB,eAChB,GAAU,MAAN6G,EAAY,OAGhB,MAAMja,EAAMia,EAAG9G,WACf,GAAW,MAAPnT,EAAa,OAGjB,MAAM9P,EAAQ+pB,EAAG/pB,MACjB,GAAa,MAATA,EAAe,OAGnB,MAAMq/F,EAAWrnG,KAAKinG,cACnBa,EACAhwF,EACAia,EACAA,EAAG3G,oBAUN,SANMprB,KAAKuoG,mBAGXvoG,KAAK4xD,iBAAiBy1C,IAGjBrnG,KAAK6nG,aAAaC,EAAWhwF,EAAKuvF,GAEpC,YADA7+F,QAAQC,KAAK,oBAOhB,IAAI+/F,EAFJV,EAAUziG,eAAe,CAAEzD,KAAM,SAOjC,IAGM4mG,EADCnB,EAASzmG,SACUoH,EAAM0lE,OAAO25B,EAASzmG,GAAIymG,SAE1Br/F,EAAMsgE,OAAO++B,EAKvC,CAHE,MAAOl/F,GAEN,MADAsgG,EAAUtgG,EAAI0B,MACR1B,CACT,CAGA,MAAMugG,EAAaF,IAEZz2E,IACG/xB,KAAKoG,SAAS62D,aACflrC,EAAGrG,UAAU,MACbo8E,EAAU5iG,SAENsjG,GAAeA,EAAY5nG,IAAImxB,EAAGrG,UAAU88E,EAAY5nG,KAIlEknG,EAAUngG,iBAIN6gG,GAAaxoG,KAAKwP,KAAK,QAASg5F,EAAY,EAG7CC,EAAatgG,IAChB,MAAMwgG,EAAcb,EAAU/xB,UAAU,CACrCr1E,KAAM,SACNkB,KAAM,SAIT,GAAIuG,EACD,GAAIA,EAAIuV,kBACL,IAAK,MAAMC,KAAQxV,EAAIuV,kBAAmB,CACvC,IAAIkrF,EAAezgG,EAAIuV,kBAAkBC,GACrCirF,GAAgBA,EAAa,KAC9BA,EAAeA,EAAa,IAE/Bd,EAAU9oF,YAAYrB,EAAMirF,EAAat3F,QAC5C,MACQnJ,EAAI0gG,WACZplG,MAAM6N,QAAQ,CACXjD,KAAMlG,EAAI0gG,WACVjnG,KAAM,WAGT6B,MAAM6N,QAAQ,CACXjD,KAAM,kCACNzM,KAAM,UAET5B,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,2BACT5Q,KAAMV,KAAK8F,WAKpB6iG,GAAajhG,SAEbogG,GAAWngG,gBAAgB,EAG9B,IAKG,aAJM3H,KAAK+xD,cAAcy2C,GAEzBxoG,KAAK09D,cAAc8qC,GACnBE,EAAUF,GACHA,CAYV,CAXE,MAAOrgG,GAUN,OATAnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,iCACT5Q,KAAMV,KAAK8F,QACX0iG,YAAaA,IAIhBxoG,KAAK09D,cAAc8qC,QACnBE,EAAUF,EAEb,CACH,CAEAM,eACG,IAAIC,EAAc,EACdC,EAAgB,GACpBhpG,KAAKymB,QAAQxiB,SAASmK,IACH,WAAZA,EAAK/J,KAAgC,aAAZ+J,EAAK/J,KAC3B+J,EAAKzN,SAAS21D,GAAKyyC,IACpBA,EAAc36F,EAAKzN,SAAS21D,EAC5B0yC,EAAgB56F,EAAKxN,GAE3B,IAEH,IAAIqoG,EAAiBjpG,KAAKunG,eAAeyB,GACrCC,GAAkBtlG,GAAGslG,EAAexoG,GAAGG,KACxC+C,GAAGslG,EAAexoG,GAAGG,IAAIqe,OAE/B,CAEIsoF,qBAED,OADuBvnG,KAAK2mG,iBACNY,cACzB,oBCjdH,MAAM2B,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C1pG,EAAOC,QAAU,cAA+BwpG,EAO7C/oG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIgpG,EAA0BnpG,MAG9C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMipG,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5C5pG,EAAOC,QAAU,cAAiC0pG,EAO/CjpG,UAAUg8F,GACP,IAAIh8F,EAAY,IAAIkpG,EAA4BrpG,MAGhD,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,IAGtCzV,EAAUk9F,IAAMhB,EAAagB,GAChC,CAEA,OAAOl9F,CACV,oBC7BH,MAAMmpG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OACrCzE,EACH,WACG0E,EACH,WAEG/sC,EACH6sC,EAAsBxnE,gBAEL,EAAQ,OAK5BriC,EAAOC,QAAU,cAAgC4pG,EAM9C3pG,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,GAGnC9hC,KAAKypG,kBAAoBzpG,KAAK+B,GAAGoxB,iBAC9B,GAAGnzB,KAAKY,uBAGXZ,KAAKypG,kBAAkBr2E,WACpBpzB,KAAKirB,WAAajrB,KAAKirB,WAAWlkB,SAAW,GAC7C/G,KAAKirB,WAAajrB,KAAKirB,WAAa,MAInCjrB,KAAKoG,SAASwiB,iBACd5oB,KAAKoG,SAASwiB,gBAAgBC,mBAE/B7oB,KAAK+B,GAAGwN,MAAM,wCAAyC,CACpDA,MAAO,gCACPm6F,aAAc,CACX3kG,YAAa/E,KAAK+E,YAAYoC,KAC9BvG,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKoB,OAEdV,KAAMV,OAGTA,KAAKoG,SAA0B,gBAAI,CAAC,EACpCpG,KAAKoG,SAA0B,gBAAoB,iBAAI,CAAE0iB,KAAM,QAGlE9oB,KAAKypG,kBAAkB5kG,SACpB7E,KAAKoG,SAASwiB,gBAAgBC,kBAC3B4zC,EAA2C5zC,iBAEpD,CAYA5iB,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKglG,YAAYrzC,aAAa3xD,KAAKoG,UACnCpG,KAAK2pG,aAAah4C,aAAa3xD,KAAKoG,SACvC,CAEWwjG,6BACR,OAAO9E,EAAsB+E,kBAAkB7pG,KAAKJ,IAAKI,KAAKH,OACjE,CAEWiqG,8BACR,OAAON,EAAuBK,kBAAkB7pG,KAAKJ,IAAKI,KAAKH,OAClE,CAQAM,UAAUg8F,GACP,IAAIh8F,EAAY,IAAIopG,EAA2BvpG,MAG/C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEI6kG,kBAID,OAH0B,MAAtBhlG,KAAKilG,gBACNjlG,KAAKilG,cAAgB,IAAIH,GAErB9kG,KAAKilG,aACf,CAEI0E,mBAID,OAH2B,MAAvB3pG,KAAK+pG,iBACN/pG,KAAK+pG,eAAiB,IAAIP,GAEtBxpG,KAAK+pG,cACf,oBCzHH,MAAMC,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CxqG,EAAOC,QAAU,cAA+BsqG,EAO7C7pG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI8pG,EAA0BjqG,MAG9C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAM+pG,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9C1qG,EAAOC,QAAU,cAAmCwqG,EAOjD/pG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIgqG,EAA8BnqG,MAGlD,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMiqG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAGrCD,EAAmBtoE,gBAEtBriC,EAAOC,QAAU,cAA6B0qG,EAKhCE,yBACR,OAAOD,CACV,CAQAlqG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIkqG,EAAwBrqG,MAG5C,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CA2FAoqG,mBAAmBlmG,GAChB,IAAI6F,EAAOlK,KAAKy3D,sBAQhB,OAAOpzD,GANH6F,EACkBA,EAAKsgG,iBAEL/mG,MAAMyH,MAI/B,oBC5IH,MAAMu/F,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CjrG,EAAOC,QAAU,cAA+B+qG,EAO7CtqG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIuqG,EAA0B1qG,MAG9C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMwqG,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5CnrG,EAAOC,QAAU,cAAiCirG,EAO/CxqG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIyqG,EAA4B5qG,MAGhD,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAM0qG,EAA+B,EAAQ,OACvCC,EAAoC,EAAQ,OAElDrrG,EAAOC,QAAU,cAAuC,EASrDS,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI2qG,EAAkC9qG,MAGtD,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAM4qG,EAA6B,EAAQ,OACrCC,EAAkC,EAAQ,OAEhDvrG,EAAOC,QAAU,cAAqC,EASnDS,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI6qG,EAAgChrG,MAGpD,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAM8qG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CzrG,EAAOC,QAAU,cAAgCurG,EAO9C9qG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI+qG,EAA2BlrG,MAG/C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMgrG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,MAExC3rG,EAAOC,QAAU,cAA6ByrG,EAO3ChrG,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIirG,EAAwBprG,MAG5C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,8EC1BY,MAAMkrG,UAA6BvP,EAAA,EAC/Cn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,eAAe48F,EAAS77F,KAClCuT,OAAOsmC,OACJ,CACG6wD,KAAM,GACNC,MAAO,IAEVrrG,IAINF,KAAKwrG,QAAU,KAOfxrG,KAAKyrG,WAAa,KAClBzrG,KAAK0rG,eAAiB,KACtB1rG,KAAK2rG,aAAe,KACpB3rG,KAAK4rG,cAAgB,KACrB5rG,KAAK6rG,cAAgB,KACrB7rG,KAAK8rG,WAAa,KAElB9rG,KAAK+rG,kBAAoB,KACzB/rG,KAAKgsG,gBAAkB,KAEvBhsG,KAAKisG,YAAc,CAAC,EAMpB,MAAMC,EAAUlsG,KAAKE,IAAIqrG,MAEzBvrG,KAAKmsG,aAAe,CACjBC,aAAeC,IACZ,MAAMC,EAAe3oG,GAAGuoG,GAASK,WAAW,SAC5C,IAAKD,EAAc,OAAO,EAE1B,MAAME,EAAYF,EAAalmD,QAE/B,SAAKomD,IAAcA,EAAUrgF,SAEtBqgF,EAAUrgF,OAAOkgF,EAAO,EAElCI,WAAaJ,IACV,IAAKrsG,KAAKmsG,aAAaC,aAAaC,GAAS,OAE7C,MAAMK,EAAa/oG,GAAGuoG,GAASK,WAAW,cAE1C,OAAKG,EAEEA,EAAWD,WAAWJ,QAF7B,CAEoC,EAG7C,CAEA5rG,KACG,MAAMP,EAAMF,KAAKE,IACXy6E,EAAO36E,MACP,WAAE2sG,EAAU,YAAEC,EAAW,UAAEC,GAAc7sG,KAAK8sG,kBAC9CzP,EAAMv9F,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,OACNE,GAAIV,EAAIorG,KACRxvB,OAAQ,IACR96E,MAAO,IACP6I,KAAM,CACH,CACGjJ,GAAI,MACJ+B,MAAO3C,KAAKoB,MAAM,QAErB,CACGR,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,SAErB,CACGR,GAAI,QACJ+B,MAAO3C,KAAKoB,MAAM,UAErB,CACGR,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,UAGxBgB,GAAI,CACDgI,YAAcxJ,IACXZ,KAAK+sG,SAASnsG,EAAG,MAMhC,CACGA,GAAIV,EAAIqrG,MACR7qG,KAAM,QACNqjD,OAAQ,CAAC4oD,EAAYC,EAAaC,GAClCG,SAAU,IAAIC,IAAI,CACf,CACG1B,MAAM2B,SAASC,QAEf,cAAwB5B,MAAM2B,SAASC,QACpChoG,cACG,MAAMqqB,EAAKmrD,EAAKyyB,sBAChB,OAAK59E,GAOGA,EAAGmD,WAAa,IAAIxkB,KAAI,CAACyhB,EAAGy9E,IACjC1yB,EAAK2yB,cAAc19E,EAAGy9E,KART,EAUnB,CACAhpE,QACG,OAAO50B,QAAQC,QAAQ,GAC1B,CACAvK,cAAc2S,EAAK/L,EAAOgJ,GAClB4lE,EAAKsxB,YAAYn0F,EAAIlX,MACvB+5E,EAAKsxB,YAAYn0F,EAAIlX,IAAM+5E,EAAK4yB,QAAQz1F,IAE3C,MAAMghB,QAAgB6hD,EAAKsxB,YAAYn0F,EAAIlX,IAE3C,cADO+5E,EAAKsxB,YAAYn0F,EAAIlX,IACrB,CACJA,IAAKk4B,GAAW,CAAC,GAAGl4B,GAE1B,CACAuE,iBAAiBvE,EAAIkX,GAClB,aAAa6iE,EAAK6yB,WAAW11F,EAAIlX,GAAIkX,EACxC,CACA3S,iBAAiBvE,GACd,aAAa+5E,EAAK8yB,WAAW7sG,EAChC,SASf,cAFOy8F,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAOjB,MAAM2rG,EAAQ/pG,GAAG3D,KAAKE,IAAIorG,MAEtBoC,GAAOA,EAAMC,SAAS,MAC7B,CAOIP,4BACD,OAAOttG,MAAMstG,uBAAyBptG,KAAKwrG,OAC9C,CAaA8B,cAAcpuF,EAAM,CAAC,EAAGnT,EAAQ,MAC7B,MAAMlC,EAAO,CAAC,EACR6hG,EAAiB1rG,KAAK0rG,eACtBC,EAAe3rG,KAAK2rG,aACpBC,EAAgB5rG,KAAK4rG,cAE3B,IAAKF,IAAoBC,IAAiBC,EAAgB,OAAO/hG,EAEjE,MAAM6wC,EAAW,IAAIn6B,KAErB1W,EAAS,GAAIqV,EAAIte,IAAMse,EAAIrP,KAC3BhG,EAAW,KAAI,OACfA,EAAa,OAAI,EACjBA,EAAW,MAAI,EAGf,MAAM4hG,EAAazrG,KAAKyrG,WAClBI,EAAgB7rG,KAAK6rG,cACrBC,EAAa9rG,KAAK8rG,WAyBxB,OAvBAjiG,EAAW,KAAI4hG,EACVvsF,EAAIusF,EAAW3kG,aAAe,GAC9B9G,KAAKyK,cAAc23B,YAAYljB,GACpCrV,EAAiB,WAAIqV,EAAIwsF,EAAe5kG,aAAe4zC,EACvD7wC,EAAe,SAAIgiG,EACdh2D,WAAW32B,EAAI2sF,EAAc/kG,aAAe,GAC5C,EAEDglG,IAAYjiG,EAAc,QAAIqV,EAAI4sF,EAAWhlG,aAAe,IAE5D6kG,IACD9hG,EAAe,SAAIqV,EAAIysF,EAAa7kG,aAAe4zC,GAElDkxD,IAAe/hG,EAAe,SAAIqV,EAAI0sF,EAAc9kG,aAAe,GAGlE+C,EAAe,UAAMA,EAAe,WACtCA,EAAe,SAAI6wC,EACnB7wC,EAAe,SAAI,GAGlBkC,IAAOlC,EAAY,MAAIkC,GAEpBlC,CACV,CAWA+jG,cAAcxlE,GACX,MAAMylE,EAAQ,CAAC,EACTpC,EAAazrG,KAAKyrG,WAClBC,EAAiB1rG,KAAK0rG,eACtBG,EAAgB7rG,KAAK6rG,cACrBC,EAAa9rG,KAAK8rG,WAClBH,EAAe3rG,KAAK2rG,aACpBC,EAAgB5rG,KAAK4rG,cAe3B,OAbIH,IAAYoC,EAAMpC,EAAW3kG,YAAcshC,EAAW,MAAK,IAE3DsjE,IAAgBmC,EAAMnC,EAAe5kG,YAAcshC,EAAiB,YAEpEyjE,IACDgC,EAAMhC,EAAc/kG,YAAc+uC,WAAWzN,EAAe,UAAK,IAEhE0jE,IAAY+B,EAAM/B,EAAWhlG,YAAcshC,EAAc,SAEzDujE,IAAckC,EAAMlC,EAAa7kG,YAAcshC,EAAe,UAE9DwjE,IAAeiC,EAAMjC,EAAc9kG,YAAcshC,EAAe,UAE7DylE,CACV,CAMA7oG,WAAWC,GACRnF,MAAMkF,WAAWC,GAEAjF,KAAKU,KAAtB,MACM0F,EAAWpG,KAAKoG,SAElBnB,IACDjF,KAAKyrG,WAAaxmG,EAAO8I,UAAU3H,EAAS64D,cAC5Cj/D,KAAK0rG,eAAiBzmG,EAAO8I,UAAU3H,EAAS84D,kBAChDl/D,KAAK2rG,aAAe1mG,EAAO8I,UAAU3H,EAAS+4D,gBAC9Cn/D,KAAK4rG,cAAgB3mG,EAAO8I,UAAU3H,EAASg5D,iBAC/Cp/D,KAAK6rG,cAAgB5mG,EAAO8I,UAAU3H,EAASi5D,iBAC/Cr/D,KAAK8rG,WAAa7mG,EAAO8I,UAAU3H,EAASk5D,cAElD,CAMAwuC,mBAAmB5iF,GAChBprB,MAAMguG,mBAAmB5iF,GAEzB,MAAMgB,EAAKlsB,KAAKotG,uBAAyBliF,EAEpCgB,IAILlsB,KAAKwrG,QAAUtgF,EAGflrB,KAAKgF,WAAWknB,EAAGjB,YAEA,CAAC,SAAU,SAAU,SAAU,mBAEvChnB,SAASoG,IAEdA,KAAK6hB,EAAG6hF,UACiD,IAAzD/tG,KAAK40B,SAASwgC,WAAW44C,GAAOA,EAAG38E,YAAchnB,MAK5C,WADAA,EAEFrK,KAAKmxB,SAAS,CACXC,QAASlF,EACTmF,UAAW,SACXC,SAAW+6E,IAEJrsG,KAAKmsG,aAAaC,aAAaC,IAChCrsG,KAAKmsG,aAAaM,WAAWJ,EAAO,IAO7CrsG,KAAKmxB,SAAS,CACXC,QAASlF,EACTmF,UAAWhnB,EACXinB,SAAU,KACPtxB,KAAKiuG,UAAU,IAK3B,IAEN,CAMAtpG,OACGhB,GAAG3D,KAAKE,IAAIC,YAAYwE,MAC3B,CAEAspG,WACG,MAAMC,EAAYvqG,GAAG3D,KAAKE,IAAIqrG,OAE9B,IAAK2C,EAAW,OAEhB,MAAMC,EAAcD,EAAU3B,WAAW,SAEzC,IAAK4B,EAAa,OAElB,MAAMC,EAAUD,EAAY/nD,QAEvBgoD,GAWLz5F,YAAW,KACRy5F,EAAQtzF,WAER,MAAM0U,EAAKxvB,KAAKotG,sBACViB,EAAa,CAChBxkG,KAAM2lB,GACAA,EAAGmD,WAAa,IAAIxkB,KAAI,CAACyhB,EAAG7jB,IAC1B/L,KAAKstG,cAAc19E,EAAG7jB,KAEzB,IAIJ/L,KAAK0rG,iBAAmB1rG,KAAK2rG,cAAgB3rG,KAAK4rG,gBACnDwC,EAAQ72F,MAAM82F,GAIjB,MAAMC,EAAYH,EAAYI,YAE9BvuG,KAAK+rG,kBAAoBuC,EAAU78E,MACnCzxB,KAAKgsG,gBAAkBsC,EAAUtqD,IAEjChkD,KAAK2N,MAAM,GACX,GACN,CAEIm/F,wBAoBD,MAAO,CACJD,UApBe,CAAE9rF,KAAM,MAAOT,OAAQ,MAqBtCkuF,WApBa,CACVztF,KAAM,OACNT,OAASmR,IACN,MAAMojD,EAASpxE,MAAM8c,KAAK+6B,UAAU,SAC9BmzD,EAAShrG,MAAM8c,KAAKmuF,UAAUj9E,GAC9Bk9E,EAAOlrG,MAAM8c,KAAKW,IACrBzd,MAAM8c,KAAKW,IAAIutF,EAAQ,EAAG,QAAQ,IACjC,EACD,OACA,GAGH,OAAO55B,EAAO45B,GAAU,MAAQ55B,EAAO85B,EAAK,GASlD/B,YANc,CAAE7rF,KAAM,QAAST,OAAQ,MAOvCqsF,WANa,CAAE5rF,KAAM,OAAQT,OAAQ,MAQ3C,CAEAysF,SAAS6B,GACN,MAAMV,EAAYvqG,GAAG3D,KAAKE,IAAIqrG,OAE9B,IAAK2C,EAAW,OAEhB,MAAMW,EAAYX,EAAU3B,WAAW,SAEvC,IAAKsC,EAAW,OAEhB,MAAMC,EAAY,IACZ,WAAEnC,EAAU,YAAEC,EAAW,WAAE4B,EAAU,UAAE3B,GAC1C7sG,KAAK8sG,kBAER,OAAQ8B,GACL,IAAK,MACFE,EAAUxqG,KAAKqoG,EAAYC,EAAaC,GAExC,MACH,IAAK,OACFiC,EAAUxqG,KAAKqoG,EAAYC,EAAa4B,GAExC,MACH,IAAK,QACFM,EAAUxqG,KAAKqoG,EAAYC,GAE3B,MACH,IAAK,OACFkC,EAAUxqG,KAAKqoG,GAKrB,MAAMjO,EAAU1+F,KAAK+B,GAAG0Y,MAClB6zF,EAAYJ,EAAU3B,WAAW,SAASgC,YAC7C98E,EAAQitE,EAAQn+E,KAAKW,IAAIlhB,KAAK+rG,mBAAoB,EAAG6C,GAAO,GAC5D5qD,EAAM06C,EAAQn+E,KAAKW,IAAIlhB,KAAKgsG,gBAAiB,EAAG4C,GAAO,GAE1DC,EAAUE,UACPt9E,EACAuyB,EACAsqD,EAAUU,QACVV,EAAUW,UACVX,EAAUY,WACVJ,GAEHZ,EAAU55B,KAAK5vE,UACfwpG,EAAUt6B,WAAWu7B,OAAO,CAAExL,IAAK,EAAGyL,KAAM,GAC/C,CAMA5kG,SACG1K,MAAM0K,SACNxK,KAAK8tG,mBAAmB9tG,KAAKkrB,gBAE7BvnB,GAAG3D,KAAKE,IAAIC,YAAYyE,MAC3B,CAEA+I,OAiCA,CAEAxI,cAAckqG,GACX,MAAMxB,EAAQ7tG,KAAK4tG,cAAcyB,GAC3B5Q,EAAKz+F,KAAK+B,GAEhB,IAGG,aAAa/B,KAAKyK,eAAezC,QAAQsgE,OAAOulC,GAanD,CAZE,MAAOxjG,GAWN,MAVAo0F,EAAGhkF,MAAMtJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,qBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,+BAEpBq9F,EAAGr2F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,2CACTu+F,UAGGxjG,CACT,CACH,CAEAlF,iBAAiB0oB,GACd,MAAM4wE,EAAKz+F,KAAK+B,GAEhB,IAKG,aAFM/B,KAAKyK,cAAczC,QAAQoO,OAAOyX,GAEjC,CAAC,CAaX,CAZE,MAAOxjB,GAWN,MAVAo0F,EAAGhkF,MAAMtJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,uBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,iCAEpBq9F,EAAGr2F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,gDACTue,UAGGxjB,CACT,CACH,CAEAlF,iBAAiB0oB,EAAOyhF,GACrB,MAAMzB,EAAQ7tG,KAAK4tG,cAAc0B,GAC3B7Q,EAAKz+F,KAAK+B,GAEhB,IAKG,aAFM/B,KAAKyK,cAAczC,QAAQ0lE,OAAO7/C,EAAOggF,GAExC,CAAC,CAaX,CAZE,MAAOxjG,GAWN,MAVAo0F,EAAGhkF,MAAMtJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,uBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,iCAEpBq9F,EAAGr2F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,gDACTu+F,UAGGxjG,CACT,CACH,EC/kBH,MAAMklG,EAAkB,EAAQ,OAEjB,MAAMC,UAAoBD,EACtC5vG,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,EACtC,CAQA3hC,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIkrG,EAAqBrrG,MAGzC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,IACI+4F,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,yFCzBY,MAAMsvG,UAAgCnxF,EAAA,EAClD3e,YAAYE,GAGTC,MAAM,CACH4vG,YAAa,GAHhB7vG,EAASA,GAAU,sCAIhBoK,KAAM,GAAGpK,uBAGZG,KAAKkD,eAAiB,KAKtBlD,KAAK2vG,gBAAkB,KAIvB3vG,KAAK4vG,MAAQ,KAIb5vG,KAAK6vG,UAAY,KAIjB7vG,KAAK8vG,cAAgB,EAGxB,CAEArvG,KACG,IAAIk6E,EAAO36E,KAGX,MAAO,CACJU,KAAM,QACNE,GAAIZ,KAAKE,IAAIwvG,YACb1uG,MAAO,IACPD,OAAQ,EACR83F,QAAQ,EACRvlB,QAAQ,EACR7xE,KAAM,CACHb,GAAIZ,KAAKE,IAAI+J,KACbvJ,KAAM,OACNqvG,YAAY,EACZlmG,KAAM,CACH,CAAE1C,KAAM,MAAOoE,KAAM,gBACrB,CAAEpE,KAAM,QAASoE,KAAM,gBACvB,CAAEpE,KAAM,MAAOoE,KAAM,cACrB,CAAEpE,KAAM,MAAOoE,KAAM,iBAExB81D,SACG,mFACHj/D,GAAI,CACDgI,YAAa,SAAUxJ,GACpB,IAAIT,EAAYH,KAAKgsB,QAAQprB,GAC7B+5E,EAAKnS,OAAOroE,EAAUgH,KACzB,IAIZ,CAEAhC,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAEb0B,MAAMhD,GAAGT,KAAKS,MACdkD,GAAG3D,KAAKE,IAAIwvG,aAAa7uG,QAC5B,CASAmvG,mBAAmB9jF,GAChBlsB,KAAK2vG,gBAAkBzjF,CAC1B,CAOAlnB,WAAWC,GACRjF,KAAKkD,eAAiB+B,CACzB,CAQAgrG,gBAAgBlpG,EAAS,IACtB/G,KAAK8vG,cAAgB/oG,GAAU,EAClC,CAOAmpG,YAAYl0D,GACTh8C,KAAK6vG,UAAY7zD,CACpB,CAQAm0D,iBAAiBC,GACdpwG,KAAK4vG,MAAQQ,CAChB,CAQAxrG,KAAK8I,GACF/J,GAAG3D,KAAKE,IAAIwvG,aAAa9qG,KAAK8I,EACjC,CAEAvI,aAAagC,GACV,IAAIkpG,EAEAn6C,EAAU,CAAC,EAEXhqC,EAAKlsB,KAAK2vG,gBACVzsG,EAAiBlD,KAAKkD,eACtB0sG,EAAQ5vG,KAAK4vG,MACbC,EAAY7vG,KAAK6vG,WAGlB3jF,GACEA,EAAG9lB,SAAS2iB,SAAWmD,EAAGT,YAAcS,EAAGpC,eAAeC,mBAGtDmC,EAAGwD,WAAW,EAAG,MACvBxD,EAAG9lB,SAAS2iB,SAAU,GAKrB7lB,GACDA,EAAe6D,SAAS9C,SAAS+C,IAE1BhH,KAAK8vG,cAAcziG,QAAQrG,EAAEF,aAAe,IAEhDovD,EAAQlvD,EAAEF,YAAc,CACrBu6D,SAAW/zC,GACDtmB,EAAEsZ,OAAOgN,IAErB,IAMP,MAAMgjF,EAAeV,EAAM/lG,KAAKwiB,KAAK,CAACkkF,uBAAwB,IAAIpqG,OAAS,EACrEqqG,EAAatxF,GAAQoxF,GAA+C,GAA/BpxF,GAAKqxF,uBAEhD,OAAQppG,GACL,IAAK,MACF1D,MAAMgtG,IAAI38D,UAAU3yC,KAAO,IAE3BkvG,EAAW5sG,MAAMitG,MAAMd,EAAO,CAC3B5zD,SACG6zD,IAAc3sG,EAAiBA,EAAe9B,MAAQ,MACzD80D,QAASA,EACTptD,OAAQ0nG,IAEX,MACH,IAAK,QACFH,EAAW5sG,MAAMktG,QAAQf,EAAO,CAC7B5zD,SACG6zD,IAAc3sG,EAAiBA,EAAe9B,MAAQ,MACzD+F,KACG0oG,IAAc3sG,EAAiBA,EAAe9B,MAAQ,MACzD80D,QAASA,EACT06C,YAAY,EACZ9nG,OAAQ0nG,IAEX,MACH,IAAK,MACFH,EAAW5sG,MAAMotG,MAAMjB,EAAO,CAC3B5zD,SACG6zD,IAAc3sG,EAAiBA,EAAe9B,MAAQ,MACzDwvG,YAAY,EACZ9nG,OAAQ0nG,IAEX,MACH,IAAK,MACFH,EAAW5sG,MAAMqtG,MAAMlB,EAAO,CAC3B5zD,SACG6zD,IAAc3sG,EAAiBA,EAAe9B,MAAQ,QAMlE,UACSivG,EACN1sG,GAAG3D,KAAKE,IAAIwvG,aAAa/qG,MAQ5B,CAPE,MAAOwD,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4DAA4DnK,IACrE4pG,WAAY5pG,EACZ+uD,UACA86C,SAAUnB,GAEhB,CACH,iBCzNC9vG,EAAI,KAEO,MAAMkxG,UAAkC3yF,EAAA,EAGpD3e,YAAYuxG,EAAqBrxG,GAG9BC,MAAM,CACHK,UAAW,GAHdN,EAASA,GAAU,8CAIhBsxG,OAAQ,GAAGtxG,uBAGdG,KAAKyK,cAAgB,KAIrBzK,KAAKoxG,cAAgBF,EAIrBlxG,KAAK+B,GAAKmvG,EAAoBnvG,GAG9B/B,KAAKqxG,WAAa,IAAI92B,EAAA,EAAW16E,EAAQG,KAAK+B,IAIzChC,IACFA,EAAI,IAAI6V,IACE5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,GAG9C,CAEAnV,KACG,IAAIP,EAAMF,KAAKE,IAGf,MAAO,CACJQ,KAAM,QACNE,GAAIV,EAAIC,UAERsB,KAAM,CACHT,MAAO,IACPa,KAAM,CAEH7B,KAAKqxG,WAAW5wG,KAChB,CAAEM,OAAQ,IACV,CACGI,KAAM,CACH,CAAC,EACD,CACGT,KAAM,SACNiC,MAAO5C,EAAE,UACTiB,MAAO,IACPO,MAAO,KACJvB,KAAK2E,MAAM,GAGjB,CACG/D,GAAIV,EAAIixG,OACRjwG,IAAK,gBACLR,KAAM,SACNU,MAAOrB,EAAE,UACT6B,KAAM,OACNZ,MAAO,IACPO,MAAO,KACJvB,KAAKmxG,QAAQ,OAO/B/uG,GAAI,CACDoI,OAAQ,KACLxK,KAAKwK,QAAQ,GAIzB,CAEArF,WAAWpD,GAIR,OAHA0B,MAAMhD,GAAGT,KAAKS,MACdT,KAAKqxG,WAAW/tG,KAAKvB,GAEd0N,QAAQC,SAClB,CAMA/K,OACGhB,GAAG3D,KAAKE,IAAIC,WAAWwE,MAC1B,CAWAK,WAAWC,EAAQs/E,GAChBvkF,KAAKyK,cAAgBxF,EACrBjF,KAAKqxG,WAAWrsG,WAAWC,GAC3BjF,KAAKgvE,UAAYuV,CACpB,CAEA/5E,SAAU,CAUV5F,KAAK8I,EAAOvL,EAAU,MACJ,MAAXA,EACDwB,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAAOvL,GAEnCwB,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAElC,CAOAyjG,SAEG,IAAIG,EAAgB3tG,GAAG3D,KAAKE,IAAIixG,QAC7BI,EAAevxG,KAAKqxG,WAAWplG,YAAc,GAIhD,GAFAqlG,EAAclsG,WAETpF,KAAKoxG,cAIP,YADAE,EAAc5pG,SAEV,GAAI6pG,EAAaprG,OAAS,EAG9B,YADAmrG,EAAc5pG,SAIjB,IAAI8pG,EAAaxxG,KAAKoxG,cAAcK,eAChCC,EAAgB,GACpBF,EAAW3nG,KAAK42E,MAAK,SAAUvhE,GAEzBA,GACAA,EAAI8uD,eAAe,2BACW,GAA9B9uD,EAAIqxF,wBAEJmB,EAAcptG,KAAK4a,EAAIte,GAE7B,IAEA,IAAI6E,EAAO,CAAC,EACZ8rG,EAAattG,SAASmK,IACnB,IAAIu1B,EAAY3jC,KAAKyK,cAAcsD,UAAUK,EAAK1D,SAC7Ci5B,IAELl+B,EAAKk+B,EAAU78B,YAAcsH,EAAKzL,MAAK,IAGtC+uG,EAAcvrG,OAAS,EACxB1C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,6BACTsO,KAAMtO,EAAE,yDACR8R,SAAW/D,IACJA,GACG0jG,GAAcA,EAAWnsG,cAC1BmsG,EAAWnsG,aAAa,CAAEzD,KAAM,SAEpB5B,KAAKyK,cAAczC,QAE9B2lE,YAAY,CACVC,OAAQ8jC,EACR/rG,OAAQF,IAEV+O,MAAK,KAEH88F,EAAc5pG,SACd1H,KAAK2E,OAED6sG,GAAcA,EAAW7pG,cAC1B6pG,EAAW7pG,cAAc,IAE9B8M,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,+DACHs+D,OAAQ8jC,EACR/rG,OAAQF,GACT,KAGR6rG,EAAc5pG,QACjB,KAINjE,MAAM0N,MAAM,CACTC,MAAOrR,EAAE,uBACTsO,KAAMtO,EACH,+EAGNuxG,EAAc5pG,SACd1H,KAAK2E,OAEX,iBClOY,MAAMusG,UAA4BpV,EAAA,EAC9Cn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,cAAc48F,EAAS77F,KACjCuT,OAAOsmC,OACJ,CACGk3D,MAAO,GAGPC,QAAS,GACTC,qBAAsB,GAEtBC,aAAc,GACdC,iBAAkB,GAClBC,WAAY,GACZC,aAAc,GAEdtP,oBAAqB,GAErBuP,UAAW,IAEdhyG,IAINF,KAAK4iG,oBAAsB,CAAC9F,EAAUC,KACnC/8F,KAAK6iG,mBAAmB/F,EAAUC,EAAY,EAGjD/8F,KAAKmyG,eAAiB,IAAIv8F,KACvB5V,KAAKoyG,aAAax8F,EAAO,EAO5B5V,KAAK89F,UACLrB,EAAS9/C,aAAav6C,GAAG,cAAepC,KAAK4iG,qBAG7C5iG,KAAKY,GAAK67F,EAAS77F,GAqBnBZ,KAAKqyG,gBAAkB,EAIvBryG,KAAKsyG,iBAAmB,EAQxBtyG,KAAKuyG,iBAAkB,EAIvBvyG,KAAKm9F,SAAWV,EAASW,eAAej9F,YAIxC,MAAMqyG,EAAUxyG,KAAKE,IAAIyxG,MACnBlT,EAAKz+F,KAAK+B,GAEhB/B,KAAKyyG,YAAc,IAAI,EAAcD,GACrCxyG,KAAKyyG,YAAYnvG,KAAKm7F,GAItBz+F,KAAK0yG,yBAA2B,IAAI,EAAuB1yG,KAAMwyG,GACjExyG,KAAK0yG,yBAAyBpvG,KAAKm7F,GAKnCz+F,KAAK2yG,4BAA8B,IAAI,IAAiBH,GACxDxyG,KAAK2yG,4BAA4BrvG,KAAKm7F,GACtCz+F,KAAK2yG,4BAA4BvwG,GAAG,WAAY2gG,IAC7C/iG,KAAKgjG,iBAAiBD,EAAY,IAKrC/iG,KAAK4yG,iBAAmB,CACrB,yBACA,yBACA,wBACA,uBACA,oBAeH5yG,KAAK6yG,qBAAsB,EAM3B7yG,KAAK8yG,cAAgB,KAKrB9yG,KAAK+yG,yBAA0B,CAClC,CAIIC,yBACD,MAAO,qBACV,CAEAlV,UACG99F,KAAKU,KAAKi8C,aAAa7nB,eACpB,cACA90B,KAAK4iG,qBAER5iG,KAAKkrB,gBAAgB4J,eAAe,eAAgB90B,KAAKmyG,eAC5D,CASAc,eAAeryG,GACZ,IAAIysG,EAAOrtG,KAAKyxG,eAAewB,eAAeryG,GAQ9C,OAPKZ,KAAKoG,SAASs5D,YAKhB2tC,IAEIA,CACV,CAEA6F,cACG,MAAMhzG,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAChBu0E,EAAO36E,KAEb,IAAIU,EAAO,aAEP0F,EAAS+sG,eAAiB/sG,EAASm6D,WAEpC7/D,EAAO,aAEV,IAAI0yG,EAAa,OAKjB,OAHKhtG,EAASq5D,aAAer5D,EAASksD,cAAelsD,EAASosD,WAC3D4gD,EAAa,OAET,CACJ1yG,OACAE,GAAIV,EAAIgyG,UACRmB,aAAc,CAAE9wB,KAAM,IACtB+wB,UAAW,CAAE/wB,KAAM,IACnBgxB,WAAW,EACX1uD,SAAUz+C,EAASq5D,WACnB+zC,gBAAgB,EAChBzyG,OAAQqF,EAASrF,QAAU,EAC3B0yG,WAAY,SACZ5a,OAAQua,EACRvkC,OAEGzoE,EAAS05D,eAAe35D,OAAS,GACjCC,EAAS25D,aAAa55D,OAAS,EAClC67F,SAAS,EAgBT0R,YAAY,EACZtxG,GAAI,CACDuxG,eAAgB,SAAU9pG,EAAM+pG,GAC7B,IAAmD,GAA/Cj5B,EAAKi4B,iBAAiBvlG,QAAQxD,EAAKslE,QACpC,OAAO,EACH,GAAI/oE,EAASq5D,WAAY,CAC7B,MACM0Y,EADawC,EAAKzvD,eAAeD,WACRlkB,QAC3BC,GAAMA,EAAEF,aAAe+C,EAAKslE,SAC9B,GAEF,GAAmB,MAAfgJ,EAAqB,OAAO,EAEhC,MAAM07B,EAAW7zG,KAAKkvE,YAAY,CAC5BhwD,IAAKrV,EAAKqV,IACViwD,OAAQtlE,EAAKslE,SAEhB7hD,EAAUttB,KAAKgsB,QAAQniB,EAAKqV,KAE/B,OAAOi5D,EAAYkF,WAAW/vD,EAAS,KAAMumF,EAChD,CAAO,SAAKztG,EAASksD,cAAgBlsD,EAASosD,gBAAvC,CAEV,EACAshD,cAAe,CAACjqG,EAAM+pG,KAMf5zG,KAAKoG,SAASq5D,YACfz/D,KAAK8zG,cAAcjqG,EAAM+pG,EAC5B,EAEHG,kBAAmB,SAAUnzG,GAC1B,GAAyB,2BAApBZ,KAAKgsB,QAAQprB,GAAiC,OAAO,CAC7D,EACAozG,QAAS,SAAU90F,EAAKg7D,EAAKlkE,GAE1B,GAAW,0BAAPkkE,EAGDS,EAAKs5B,0BAEL,GAAI7tG,EAASq5D,WAAY,CAGtB,MAAM9Y,EAAQ,CACXhkD,MAAOqT,GAEJ1Q,EAAS,CACZ4Z,IAAKA,EACLiwD,OAAQ+K,EACRj4E,OAAQ,MAGX04E,EAAKu5B,gBAAgBvtD,EAAOrhD,EAC/B,KAAO,CACStF,KAAKkvE,YAAY,CAC3BhwD,IAAKA,EACLiwD,OAAQ+K,IAEWyG,cACnB,0BAISwzB,QADD,GAAPn+F,CAKP,CAEN,EACAo+F,iBAAkB,SAAUztD,EAAOrhD,GAEnC,EACA4uG,gBAAiB,CAACvtD,EAAOrhD,EAAQ+uG,KACF,GAAxBr0G,KAAKuyG,iBACNvyG,KAAKk0G,gBAAgBvtD,EAAOrhD,EAAQ+uG,EAAa,EAEvDC,kBAAmB,WAChBt0G,KAAKuyG,iBAAkB,CAC1B,EACAgC,oBAAqB,WAClBv0G,KAAKuyG,iBAAkB,CAC1B,EAMAiC,eAAgB,SACb1tG,EACAunE,EACAoB,EACAglC,GAWA,IAA4C,GAPpB,CACrB,yBACA,wBACA,uBACA,oBAGiBpnG,QAAQvG,GAAmB,CAE5C9G,KAAKm6E,aAELn6E,KAAK00G,eAAe5tG,EAAY2oE,GAChCzvE,KAAKo6E,eAIL,MAAMjL,EAASwL,EAAKg6B,gBAEpB7tG,EAAaqoE,EAAOvuE,IAIjBytE,EADCA,EAAWoB,EACDN,EAAOnuE,MAAQ,GAIfmuE,EAAOnuE,OAASqtE,EAAW,KAO1B,KACZA,EAAW,IAGdc,EAAO/J,SAAWiJ,EAElBruE,KAAK00G,eAAe5tG,EAAYunE,EACnC,CAEIomC,GACD95B,EAAK65B,eACF1tG,EACAunE,EACAoB,EACAglC,EAGT,EACAG,YAAc/mF,IAAD,EAKbgnF,mBAAoB,CAACv0E,EAAU7Q,OACmB,IAA7CzvB,KAAK4yG,iBAAiBvlG,QAAQizB,IACnCw0E,mBAAoB,CAACx0E,EAAUC,EAAU9Q,OAGS,IAA7CzvB,KAAK4yG,iBAAiBvlG,QAAQkzB,IACnCw0E,kBAAmB,CAACz0E,EAAUC,EAAU9Q,IACrCzvB,KAAK+0G,kBAAkBz0E,EAAUC,EAAU9Q,GAU9CulF,cAAe,CAACp0G,EAAIyJ,EAAG9H,KAEpBvC,KAAKg1G,cAAcp0G,EAAIyJ,EAAG9H,EAAK,GAI3C,CAEA0yG,WACG,OAAOj1G,KAAKU,KAAKi8C,aAAal8C,IAGjC,CAOAy0G,YACG,MAAMh1G,EAAMF,KAAKE,IACXy6E,EAAO36E,KAEb,MAAO,CACJU,KAAM,UACNE,GAAIV,EAAI0xG,QACRt+B,QAAQ,EACRpyE,IAAK,kBACLC,KAAM,CACH,CACGT,KAAM,SACNE,GAAIV,EAAI6xG,iBACR7wG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,QAClBmK,KAAM,wBACN3J,KAAM,OACNujC,UAAU,EACV7jC,WAAW,EACXC,MAAO,WACJo5E,EAAKw6B,kBAAkBn1G,KAAK0N,MAC/B,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAI2xG,qBACR3wG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,UAClBmK,KAAM,cACN3J,KAAM,OACNujC,UAAU,EACV7jC,WAAW,EACXC,MAAO,WACJo5E,EAAKy6B,sBAAsBp1G,KAAK0N,MACnC,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAI4xG,aACR5wG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,WAClBmK,KAAM,eACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJo5E,EAAKyoB,cAAcpjG,KAAK0N,MAC3B,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAI8xG,WACR9wG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,QAClBmK,KAAM,aACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJo5E,EAAK06B,YAAYr1G,KAAK0N,MACzB,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAI+xG,aACR/wG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,UAClBmK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJo5E,EAAK26B,cAAct1G,KAAK0N,MAC3B,GAEH,CAAC,EACD,CACG9M,GAAIV,EAAIyiG,oBACRjiG,KAAM,SACN21E,YAAar2E,KAAKoB,MAAM,aACxBgB,GAAI,CACDq2E,gBAAiB,KACd,MAAMl0D,EAAa5gB,GAAGzD,EAAIyiG,qBAAqB12F,WAE/CjM,KAAKU,KAAKi8C,aAAa4mD,mBAAmBh/E,EAAW,KAMvE,CAEA9jB,KACG,MAAM80G,EAAU,CACb30G,GAAIZ,KAAKE,IAAIyxG,MACb/vG,KAAM,QACND,YAAY,EACZE,KAAM,CACH,CAAC,EACD,CACGnB,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,6BAClBo0G,WAAY,IACZn0G,MAAO,UAEV,CAAC,IAID+E,EAAWpG,KAAKoG,UAElBpG,KAAKkrB,gBAA0C,KAAxB9kB,EAAS4qD,cACjCukD,EAAQ/yG,QAAU4D,EAAS5D,QAC3B+yG,EAAQ1zG,KAAO,GACXuE,EAASo5D,aACV+1C,EAAQ1zG,KAAKyC,KAAKtE,KAAKk1G,aAEtBl1G,KAAKoG,SAAS45D,WAAWC,cAC1Bs1C,EAAQ1zG,KAAKyC,KAAKtE,KAAKi1G,YAG1BM,EAAQ1zG,KAAKyC,KAAKtE,KAAKkzG,gBAG1B,MAAM7V,EAAMv9F,MAAMW,GAAG,CAAC80G,IAItB,cAFOlY,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,EAAIu1D,EAAc,GACtBv1D,SAAUjC,MAAMwD,KAAKvB,GAEzB,MAAM44E,EAAO36E,KACPE,EAAMF,KAAKE,IAIXw+F,EAAU38F,EAAG0Y,MAEnBikF,EAAQ+W,SAAW,GACnB/W,EAAQgX,IAAM,YAUd,MAAMC,EAAa31G,KAAKyxG,eAExB,IAAImE,EAAwB,KACxBC,EAAgB,KAEpB,IAAKF,EAAY,OAEjBjX,EAAQh7F,OAAOiyG,EAAYjX,EAAQ96F,aAEnC+xG,EAAW1zG,OAAOq1D,YAAcA,EAE5BA,EAAc,GAAGq+C,EAAWlxG,OAAO,YAAY,GAEnD,MAAM2B,EAAWpG,KAAKoG,SAEhB2oE,EAAkBllE,IACrB,MAAMY,EAAgBzK,KAAKkrB,gBAAgBD,WAE3C,IAAKxgB,IAAkBkrG,EAAW9rG,KAAM,OAExC,MAAMisG,EAAiB,GAEjBC,EAAsBJ,EAAWK,iBAAiB1/C,EACrD2/C,EAAYN,EAAW1zG,OAAOg0G,UAG9BC,GADGP,EAAWjoG,MAAMizE,cAAc,kBAAkB8I,aACpCljF,KAAKC,MAAMuvG,EAAsBE,IACjDE,EAAcD,EAAgBP,EAAWS,kBAE5C,IAAIrqG,EAAQ,EAEZ4pG,EAAW9rG,KAAK+4D,MAAM6d,MAAM7/E,IACf,MAANA,GAAcs1G,GAAiBnqG,GAASA,GAASoqG,GAClDL,EAAexxG,KAAK1D,GAEvBmL,GAAO,IAGV,IAAI84C,EAAWz+C,EAASq5D,WAEpBk2C,EAAW1zG,OAAOq1D,YAAc,IAAGzS,GAAW,GAElDp6C,EAAcskE,eACXllE,EACA7J,KAAK+B,GAAGw3B,KACRo8E,EACAG,EACAjxD,EACF,EAGJ8wD,EAAWznF,YAAY,iBAAiB,SAAUrkB,GAC/C8rG,EAAW90G,SAEP+0G,GAAuB7hG,aAAa6hG,GAExCA,EAAwBjhG,YAAW,KAC5BkhG,GAAe9hG,aAAa8hG,GAChC9mC,EAAe/uE,KAAK6J,KAAK,GACzB,KAEH9H,EAAGuc,QAAQ+3F,YAAYV,GACvBxhG,OAAOC,KAAKlU,GAAK+D,SAASI,IACvB,MAAMgwE,EAAM1wE,GAAGzD,EAAImE,IACfgwE,GACDtyE,EAAGuc,QAAQ+3F,YAAYhiC,EAC1B,GAEN,IAKAshC,EAAWznF,YAAY,YAAY,WAC5B2nF,GAAe9hG,aAAa8hG,GAE5BD,GAAuB7hG,aAAa6hG,GAExCC,EAAgBlhG,YAAW,KACxBo6D,EAAe/uE,KAAK6J,KAAK,GACzB,KACN,IACA8rG,EAAWznF,YAAY,iBAAiB,WACjC0nF,GAAuB7hG,aAAa6hG,GAExCA,EAAwBjhG,YAAW,KAC5BkhG,GAAe9hG,aAAa8hG,GAChC9mC,EAAe/uE,KAAK6J,KAAK,GACzB,IACN,IAIA8rG,EAAWznF,YAAY,eAAe,SAAUttB,EAAIyJ,EAAG9H,GAEpD,MAAM2pB,EAAKyuD,EAAKzvD,eACVzgB,EAAgByhB,GAAIjB,WAE1B,GAAKxgB,EAOL,GAL4B,IAAxBrE,EAASq5D,YACIk2C,EAAW3pF,QAAQprB,GAI1B,SAANyJ,GAAgBA,EAAE47C,OAAOiD,UAAU77C,QAAQ,QAAU,EAEtDstE,EAAKqhB,WAAW9vE,EAAItrB,EAAIwF,EAASksD,aACjCqoB,EAAK27B,UAAUlwG,EAASmsD,WAAYvyD,WAChC,GAAIqK,EAAE47C,OAAOiD,UAAU77C,QAAQ,WAAa,EAChDstE,EAAKqhB,WAAW9vE,EAAItrB,EAAIwF,EAASosD,UACjCmoB,EAAK27B,UAAUlwG,EAASqsD,QAASzyD,WAC7B,GAAIqK,EAAE47C,OAAOiD,UAAU77C,QAAQ,UAAY,EAC/CstE,EAAKnrE,KAAK,eAAgB/E,EAAe7J,EAAGse,UAE1C,GAAI7U,EAAE47C,OAAOiD,UAAU77C,QAAQ,sBAAwB,EAAG,CAC5D,MAAMkpG,EAAa,CAAC,EAEpBA,EAAW31G,EAAGuuE,QAAU,GAENhqE,WACf,UAC0BsF,EAAczC,QAAQ0lE,OAC1C9sE,EAAGse,IACHq3F,EAWN,CAPE,MAAOpuG,GACNwyE,EAAK54E,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kCACTgC,QAAS,sBACTwG,IAAKrN,EAAc3E,QACnBlF,GAAIA,EAAGse,KAEb,GAGHs3F,EACH,MAESnsG,EAAE47C,OAAOiD,UAAU77C,QAAQ,UAAY,EAC7CqxF,EAAQ9sF,QAAQ,CACbR,MAAOupE,EAAKv5E,MAAM,eAClBiN,KAAMssE,EAAKv5E,MAAM,mCACjByQ,SAAU,SAAU/D,GAkCjB,OAjCIA,GACiB3I,WACf,WAC0BsF,EAAczC,QAAQoO,OAC1CxV,EAAGse,MAGOu3F,QAAU,GACpBd,EAAW96F,OAAOja,GAClB+0G,EAAWr2F,kBAEXo/E,EAAQvtF,MAAM,CACX9C,KAAMssE,EAAKv5E,MACR,sDAYZ,CATE,MAAO+G,GACNwyE,EAAK54E,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kCACTgC,QAAS,sBACTwG,IAAKrN,EAAc3E,QACnBlF,GAAIA,EAAGse,KAIb,GAGHw3F,GAGHf,EAAWr2F,kBAEJ,CACV,IAEGlZ,EAASksD,YAAYnsD,QAG3Bw0E,EAAKqhB,WAAW9vE,EAAItrB,EAAIwF,EAASksD,aACjCqoB,EAAK27B,UAAUlwG,EAASmsD,WAAYvyD,OAC5BoG,EAASosD,SAASrsD,SAG1Bw0E,EAAKqhB,WAAW9vE,EAAItrB,EAAIwF,EAASosD,UACjCmoB,EAAK27B,UAAUlwG,EAASqsD,QAASzyD,MAEvC,IAGIoG,EAASo5D,eAEPp5D,EAASs5D,YACTt5D,EAASotC,YACTptC,EAASw5D,cACRx5D,EAAS45D,YACP55D,EAAS45D,WAAWC,cACuB,YAA3C75D,EAAS45D,WAAWE,qBAEvBv8D,GAAGzD,EAAI0xG,SAAShtG,OAEdwB,EAASs5D,aACX/7D,GAAGzD,EAAI6xG,kBAAkBptG,OACzBhB,GAAGzD,EAAI2xG,sBAAsBltG,QAG3ByB,EAASu5D,aAAah8D,GAAGzD,EAAI2xG,sBAAsBltG,OAEpDyB,EAAS45D,aAE8B,IAArC55D,EAAS45D,WAAWC,cACuB,YAA3C75D,EAAS45D,WAAWE,oBAEpBv8D,GAAGzD,EAAI4xG,cAAcntG,OAGgB,IAArCyB,EAAS45D,WAAWC,cACyB,WAA7C75D,EAAS45D,WAAW22C,sBAEpBhB,EAAWhxG,OAEVyB,EAAS45D,WAAWG,gBACrBx8D,GAAGzD,EAAIyiG,qBAAqB/9F,OAC1BjB,GAAGzD,EAAIyiG,qBAAqBh+F,OAE7ByB,EAAS45D,WAAWC,cACrBjgE,KAAKU,KAAKi8C,aAAar5C,KAAKtD,KAAK+B,KAGlCqE,EAASotC,YAAY7vC,GAAGzD,EAAI8xG,YAAYrtG,OAExCyB,EAASw5D,cAAcj8D,GAAGzD,EAAI+xG,cAActtG,QAGhDyB,EAASg6D,YAAYpgE,KAAKogE,aAE9B,MAAMl0C,EACHlsB,KAAKkrB,gBAAkBlrB,KAAK+B,GAAGspB,mBAAmBjlB,EAAS4qD,YAEzDhxD,KAAK+yG,yBAAyB/yG,KAAK8tG,mBAAmB5hF,GAG3DlsB,KAAK8yG,cACF9yG,KAAK8yG,qBACE9yG,KAAK+B,GAAG6X,QAAQjE,IAAI3V,KAAKgzG,qBAChC,CAAC,EAEA9mF,GAAIjB,aAGLjrB,KAAKm9F,SAAS75F,KAAK,CAChB5C,KAAMV,KAAKU,KACXwqB,eAAgBgB,IAGnBlsB,KAAK42G,gBAEX,CAOAj7B,OACG37E,KAAKyxG,gBAAgBpsG,eAAe,CAAEzD,KAAM,QAC/C,CAWAihG,mBAAmB/F,EAAUC,EAAc,IACxC,MAAM78F,EAAMF,KAAKE,IACX22G,EAAgBlzG,GAAGzD,EAAI4xG,cAE7B,GAAI+E,EAAe,CAChB,MAAM9S,EAAkB/jG,KAAKU,KAAKi8C,aAAaogD,cAE/C8Z,EAAcpyG,OAAO,QAASs/F,GAAiB5iF,OAAOhb,QAAU,GAChE0wG,EAAcnyG,SACjB,CAEA,MAAMwnB,EAAKlsB,KAAKkrB,eAEhBgB,EAAG4B,gBAAgBivE,GACnB7wE,EAAGwD,YACN,CAEAvqB,uBAAuB0+F,EAAY,IAChC,MAAMiT,EAAcnzG,GAAG3D,KAAKE,IAAI8xG,YAEhC8E,EAAYryG,OAAO,QAASo/F,EAAU19F,QAAU,MAChD2wG,EAAYpyG,UAEZ,MAAMqyG,EAAW/2G,KAAKyxG,eAEtB,GAAIsF,EAASltG,KAAKwiB,KAAK,CAAC,GAAGlmB,OAAS4wG,EAASltG,KAAK4mB,QAC/C,UAGSzwB,KAAKkrB,eAAewE,WAAW,EAAG,EAM3C,CALE,MAAOvnB,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,4EAET,CAIHqF,YAAW,KACRoiG,EAASppG,MAAK,CAACC,EAAGC,IAAM7N,KAAK2yG,4BAA4BhlG,KAAKC,EAAGC,IAAG,GACpE,IACN,CAaAmuF,WAAWjqE,EAAIilF,EAASl0C,GACrB,MAAMj1C,EAAQmpF,GAAS93F,KAAO,KAG1B6S,GAAIA,EAAGrG,UAAUmC,GAGjB7tB,KAAKm9F,UAAUn9F,KAAKm9F,SAASnB,WAAWl5B,EAAMj1C,GAElD/tB,MAAMk8F,WAAWl5B,EACpB,CAEAr2D,aAAamK,EAAU,IACpB5W,KAAKoG,SAASqG,aAAemK,CAChC,CAQAk3F,mBAAmB5hF,GAChB,MAAM+qF,EAAQj3G,KAAKkrB,eACnBlrB,KAAKkrB,eAAiBgB,EAEtB,MAAMzhB,EAAgByhB,GAAIjB,WACpB0qF,EAAa31G,KAAKyxG,eAEpBkE,IAEI31G,KAAKk3G,oBACPl3G,KAAKk3G,kBAAoB,KACtBl3G,KAAK27E,MAAM,EAGd37E,KAAKm3G,mBAAqB,KACvBn3G,KAAK+7E,OAAO,EAGf/7E,KAAKo3G,sBAAwB,KAEI,cAA3BzB,EAAW1zG,OAAOvB,MAClB+J,IACCA,EAAcga,UAEfkxF,EAAW76F,WACX66F,EAAWp+F,MAAM2U,EAAGyG,WAAa,IAEjC3yB,KAAKqjC,WACLrjC,KAAK+7E,QACR,GAIFk7B,IAEDA,EAAMniF,eAAe,mBAAoB90B,KAAKk3G,mBAC9CD,EAAMniF,eAAe,kBAAmB90B,KAAKm3G,oBAC7CF,EAAMniF,eAAe,WAAY90B,KAAKo3G,wBAGrClrF,GACGA,EAAGd,oBAAsBc,EAAGZ,UAC7BY,EAAG4G,KAAK6iF,EAAYzpF,EAAGd,mBAAoBc,EAAGZ,WAC5CY,EAAG4G,KAAK6iF,GAGbzpF,EAAG4I,eAAe,mBAAoB90B,KAAKk3G,mBAC3ChrF,EAAG9pB,GAAG,mBAAoBpC,KAAKk3G,mBAC/BhrF,EAAG4I,eAAe,kBAAmB90B,KAAKm3G,oBAC1CjrF,EAAG9pB,GAAG,kBAAmBpC,KAAKm3G,oBAC9BjrF,EAAG4I,eAAe,WAAY90B,KAAKo3G,uBACnClrF,EAAG9pB,GAAG,WAAYpC,KAAKo3G,uBACvBp3G,KAAKqjC,WAELrjC,KAAKq3G,uBAAwB,GACzB1B,EAAW5iF,SAGdtoB,IACDzK,KAAKU,KAAKi8C,aAAa33C,WAAWyF,GAClCzK,KAAK0yG,yBAAyB1tG,WAC3ByF,EACAzK,KAAKyxG,gBAERzxG,KAAK2yG,4BAA4B3tG,WAAWyF,GAE5CzK,KAAKyyG,YAAYztG,WAAWyF,GAC5BzK,KAAKyyG,YAAYzC,mBAAmB9jF,GACpClsB,KAAKyyG,YAAYtC,iBAAiBnwG,KAAKyxG,gBACvCzxG,KAAKyyG,YAAYxC,gBAAgBjwG,KAAKoG,SAASo5B,cAC/Cx/B,KAAKyyG,YAAYvC,YAAYlwG,KAAKU,KAAKU,QAGhD,CAQAk2G,sBACG3zG,GAAG3D,KAAKE,IAAI6xG,mBAAmB3sG,UAC/BzB,GAAG3D,KAAKE,IAAI2xG,uBAAuBzsG,UAEnCpF,KAAKwP,KAAK,oBACb,CAQA+nG,qBACG5zG,GAAG3D,KAAKE,IAAI6xG,mBAAmBrqG,SAC/B/D,GAAG3D,KAAKE,IAAI2xG,uBAAuBnqG,SAEnC1H,KAAKwP,KAAK,YACb,CAEAgoG,qBAGG,OAAOx3G,KAAKyxG,eAAehtG,OAAO,aAAczE,KAAKsyG,iBACxD,CAOAb,eACG,OAAO9tG,GAAG3D,KAAKE,IAAIgyG,UACtB,CAMAyC,gBACG,MAAMgB,EAAa31G,KAAKyxG,eAExB,IAAIgG,EAAa,CAAC,EASlB,OANA9B,EAAW1mC,YAAY9jE,IACpB,MAAMsB,EAAekpG,EAAW+B,gBAAgBvsG,GAErB,IAAvBsB,EAAa+a,QAAaiwF,EAAahrG,EAAY,IAGnDgrG,CACV,CAMAp0E,WACG,IAAKrjC,KAAKoG,SAASm6D,QAAS,OAE5B,MAAMo3C,EAAa33G,KAAKyxG,eAMlBmG,EAAe,CAAC,EACA53G,KAAKkrB,eAAeD,WAE5BlkB,SAAS9C,SAAS+C,IAC7B,OAAQA,EAAE3C,KACP,IAAK,SACFuzG,EAAa5wG,EAAEF,YAAc,CAACE,EAAEF,WAAY,OAE5C,MAEH,IAAK,YACL,IAAK,UACF8wG,EAAa5wG,EAAEF,YAAc,CAC1BE,EAAEF,WACF,CAACq7B,EAAM01E,KACJ,IAAKA,EAAU,OAAO,EAEtB,IAAI56D,EAAM,EASV,GAPA46D,EAAS5zG,SAAS2L,IAGfqtC,GAAkC,EAA3Bj2C,EAAEsZ,OAAO1Q,GAAG,GAAO,EAAS,IAIjC5I,EAAEskB,WAAiC,cAApBtkB,EAAEskB,UAAUjnB,IAE3B,CACF,MAAMo4C,EAAgB,CAAC,EAIvB,OAFAA,EAAcz1C,EAAEskB,UAAUxkB,YAAcm2C,EAEjCj2C,EAAEskB,UAAUhL,OAAOm8B,EAC7B,CAPG,OAAOQ,CAOV,GAIN,MAEH,IAAK,gBACF26D,EAAa5wG,EAAEF,YAAc,CAC1BE,EAAEF,WACF,CAACq7B,EAAM01E,KACJ,IAAKA,IAAaA,EAAS1xG,OAAQ,OAAO,EAE1C,IAAIsqB,EAAQ,EAWZ,OATAonF,EAAS5zG,SAAS2L,IACf,MAAMkoG,EAAcloG,EAAE5I,EAAE+oB,gBAGpB+nF,GAAa3xG,OAAQsqB,GAASqnF,EAAY3xG,OAErC2xG,IAAarnF,GAAS,EAAC,IAG5BA,CAAK,GAIlB,MAEH,QACGmnF,EAAa5wG,EAAEF,YAAc,CAC1BE,EAAEF,WACF,SAAUq7B,EAAM01E,GACb,IAAKA,IAAaA,EAAS1xG,OAAQ,OAAO,EAE1C,IAAIsqB,EAAQ,EASZ,OAPAonF,EAAS5zG,SAAS2L,IACHuyB,EAAKvyB,KAGR6gB,GAAS,EAAC,IAGfA,CACV,GAIT,IAYH,IAAIsnF,GAAY/3G,KAAKoG,SAASm6D,SAAW,IACrC/4C,MAAM,KACNrZ,KAAK6pG,GAAMA,EAAEx1E,SAEjBu1E,EAAWA,EAAS50D,UAEpB40D,EAAS9zG,SAAQ,CAACuyB,EAASyhF,KACxB,MAAMC,EAAWl4G,KAAK+B,GAAG2D,UAAUkyG,GAEnC,IAAI5pG,EAGAiqG,IAAWF,EAAS5xG,OAAS,EAAG6H,EAAKwoB,GAGtCxoB,EAAMkR,IACH,IAAIi5F,EAAUj5F,EAAIsX,GAElB,IAAK,IAAInjB,EAAI4kG,EAAS,EAAG5kG,EAAI0kG,EAAS5xG,OAAQkN,IAC3C8kG,EAAU,GAAGj5F,EAAI64F,EAAS1kG,SAAS8kG,IAGtC,OAAOA,CAAO,EAIjBJ,EAAS9zG,SAASm0G,IACXA,IAAa5hF,IAAS0hF,EAASE,GAAY,CAACA,GAAS,KAI/DT,EAAW9tG,KAAKwuG,MAAM,CACnBrqG,GAAIA,EACJG,IAAK+pG,GACN,GAER,CAEA93C,aACG,MAAMu1C,EAAa31G,KAAKyxG,eAExBkE,EAAWlxG,OAAO,UAAU,GAC5BkxG,EAAWjxG,SACd,CAWAS,wBAAwBm7B,EAAUC,EAAU9Q,GACtBzvB,KAAKyxG,eACFzxG,KAAKkrB,eAAeD,WAD1C,MAEM7kB,EAAWpG,KAAKoG,SAChBqG,EAAezM,KAAKkiB,gBAM1B,IAAIse,EAAY,KACZC,EAAO,EAEX,IAAK,IAAIptB,EAAI,EAAGA,EAAI5G,EAAatG,OAAQkN,IACtC,GAAI5G,EAAa4G,GAAGzS,IAAM0/B,EAAU,CACjCE,EAAY/zB,EAAa4G,GACzB5G,EAAaN,OAAOkH,EAAG,GACvBotB,EAAOptB,EAEP,KACH,CAIH,IAAK,IAAIqtB,EAAI,EAAGA,EAAIj0B,EAAatG,OAAQu6B,IACtC,GAAIj0B,EAAai0B,GAAG9/B,IAAM2/B,EAAU,CAI7BE,GAAQC,GAAGA,IAEfj0B,EAAaN,OAAOu0B,EAAG,EAAGF,GAE1B,KACH,CAWHxgC,KAAKkiB,cAAczV,GAEfrG,EAASo6D,WAAWxgE,KAAKs4G,oBAM7Bt4G,KAAKwP,KACF,eACA/C,EAAa0B,KAAK5K,GAAMA,EAAEs2B,WAG7B75B,KAAK42G,eAuCR,CAUAzxG,sBAAsBwhD,EAAOrhD,EAAQ+uG,GAIlC,MAAMsB,EAAa31G,KAAKyxG,eAGxB,IACK9qD,EAAM4xD,KAAuB,KAAhB5xD,EAAMhkD,OACN,KAAdgkD,EAAM4xD,KAA8B,KAAhB5xD,EAAMhkD,MAI3B,OAFAgzG,EAAWr2F,kBAEJ,EAGV,GAAIha,EAAOrD,OACR,OAAQqD,EAAOrD,OAAOqD,QACnB,IAAK,SACFqhD,EAAMhkD,MAAQkzC,WAAW8Q,EAAMhkD,OAE/B,MAEH,IAAK,WACFgkD,EAAMhkD,MAAQgkD,EAAMhkD,MAAMyyC,UAEtBuR,GAASA,EAAM4xD,KAAO5xD,EAAM4xD,IAAInjE,UACjCuR,EAAM4xD,IAAM5xD,EAAM4xD,IAAInjE,WAQlC,GAAIuR,EAAMhkD,QAAUgkD,EAAM4xD,IAAK,CAC5B,MAAMnqG,EAAOunG,EAAW3pF,QAAQ1mB,EAAO4Z,KAEvC9Q,EAAK9I,EAAO6pE,QAAUxoB,EAAMhkD,MAE5BgzG,EAAW6C,cAAcpqG,EAAKxN,GAAI0E,EAAO6pE,OAAQ,iBACjDwmC,EAAW6C,cAAcpqG,EAAKxN,GAAI0E,EAAO6pE,OAAQ,sBAEjD,MAAM1kE,EAAgBzK,KAAKkrB,eAAeD,WACpC1jB,EAAYkD,EAAc2kB,YAAYhhB,GAE5C,GAAI7G,EAAUiW,OAAQ,CAQnB,MAAMihF,EAAKz+F,KAAK+B,GAEhB,UACS0I,EAAczC,QAAQ0lE,OAAOt/D,EAAKxN,GAAIwN,GAExCunG,EAAWxpF,OAAO7mB,EAAO4Z,OAC1By2F,EAAWzlF,WAAW5qB,EAAO4Z,IAAK9Q,GAClCunG,EAAWr2F,iBACXq2F,EAAWjxG,QAAQY,EAAO4Z,KA0BhC,CAxBE,MAAO/W,GACNs2F,EAAGr2F,OAAOC,UAAUF,EAAK,CACtBmH,QAAS,kDACTlB,OACA9I,SACAqhD,QACA1hD,OAAQwF,EAAc3E,UAGzB6vG,EAAWr2F,iBAGRm/E,EAAG5gF,WAAWK,sBACX/V,EACA7C,EAAO4Z,IACPy2F,EAST,CA8BH,MAAOpuG,EAAUwW,WAAWzY,EAAO4Z,IAAKy2F,EAC3C,MAAOA,EAAWr2F,iBAElB,OAAO,CA4BV,CASAw0F,cAAcjqG,GAMX7J,KAAKyxG,gBAAgBgH,SAAS5uG,EAAKqV,IAAKrV,EAAKslE,OAChD,CAWAhqE,qBAAqB2B,EAAYunE,EAAUoB,EAAUglC,GAGlD,IAAIiE,GAAiB,EAErB,MAAMja,EAAKz+F,KAAK+B,GAEZssE,EAAW,KACZA,EAAW,GACXqqC,GAAiB,EAEjBja,EAAGhkF,MAAMnJ,QAAQ,CACd1P,KAAM,OACNyM,KAAMrO,KAAKoB,MAAM,8BAA+B,CAAC,KACjD+Q,OAAQ,OAId,MAAM+P,EAAgBliB,KAAKkiB,gBAE3B,GAAIA,EAAe,CAChB,MAAMusD,EAASvsD,EAAcmK,MAAMqjD,GAAMA,EAAE9uE,IAAMkG,IAE7C2nE,IACDA,EAAOztE,MAAQqtE,SAERI,EAAOG,OAEpB,CAEA5uE,KAAKkiB,cAAcA,GAEfliB,KAAKoG,SAASo6D,iBACTxgE,KAAKs4G,oBAaVI,GAAgB14G,KAAK42G,gBAEzB52G,KAAKw3G,qBAMLx3G,KAAKwP,KAAK,gBAAiB1I,EAAYunE,EAAUoB,EACpD,CAMAulC,cAAcp0G,EAAIyJ,EAAG9H,GAClB,IAAkD,IAA9CvC,KAAK4yG,iBAAiBvlG,QAAQzM,EAAGuuE,QAAgB,OAAO,EAK5D,MAAMwpC,EAAY34G,KAAKkrB,eAAeD,WAAWlkB,QAC7CC,GAAMA,EAAEF,aAAelG,EAAGuuE,SAC5B,GAQF,OAFAnvE,KAAKwP,KAAK,wBAAyBjN,EAAMo2G,IAElC,CACV,CAMAnuG,SACG1K,MAAM0K,SAGNxK,KAAKyxG,gBAAgB7iC,SAErB,MAAM78C,EAAK/xB,KAAKkrB,eAEZ6G,GACD/xB,KAAKmxB,SAAS,CACXC,QAASW,EACTV,UAAW,eACXC,SAAUtxB,KAAKmyG,eAAer/E,KAAK9yB,OAE5C,CAMA+7E,QACG/7E,KAAKyxG,gBAAgB9pG,gBACxB,CAUAivG,cAAcgC,EAAc54G,KAAK44G,aAG9B,MAAMnuG,EAAgBzK,KAAKkrB,eAAeD,WAE1C,IAAKxgB,EAAe,OAEpB,MAAMvK,EAAMF,KAAKE,IACXy1G,EAAahyG,GAAGzD,EAAIgyG,WAE1B,IAAKyD,EAAY,OAEjB,MAAMr+C,EAAcq+C,EAAW1zG,OAAOq1D,YAEtCq+C,EAAWlxG,OAAO,YAAa,GAC/BkxG,EAAWlxG,OAAO,aAAc,GAEhC,IAAIwxG,EAAY,EAEhBxrG,EAAco2B,cAAc58B,SAASoxD,IAClC,MAAMjvD,EAAWivD,EAAM/oD,cAEnBlG,EAASo3C,WAAap3C,EAASq3C,YAAcw4D,IAC9CA,EAAY7vG,EAASq3C,YAAW,IAGlCw4D,GAAWN,EAAWlxG,OAAO,YAAawxG,GAI9C,MAAM7vG,EAAWpG,KAAKoG,SAEtB,IAAIy+C,EAAWz+C,EAASq5D,WAEpBk2C,EAAW1zG,OAAOq1D,YAAc,IAAGzS,GAAW,GAIlD,MAAMg0D,EAAmBpuG,EAAc6jE,eACpC,EACAzpB,EAEA,GACA,GACA,IAGH,IAAIypB,EAAgBtuE,KAAKkiB,gBAEzB,MAAMu8E,EAAKz+F,KAAK+B,GAGXusE,IAAiBsqC,IACnBtqC,EAAgBmwB,EAAG/4F,UAAU1F,KAAKoG,SAASqG,eAGjB,IAAzB6hE,EAAcnoE,SAAcmoE,EAAgBuqC,GAKhD,MAAMC,EAAqBD,EAAiB1qG,KAAKuhE,GAAMA,EAAE71C,UAEzDy0C,EAAgBA,EAAcxlE,QAC1BvF,GAAMu1G,EAAmBzrG,QAAQ9J,EAAEs2B,UAAY,IAInDy0C,EAAcrqE,SAASV,IAGpB,MAAMw1G,EAAUF,EAAiBxsF,MAAMqjD,GAAMA,EAAE71C,UAAYt2B,EAAEs2B,UAO7D1lB,OAAOC,KAAK2kG,GAAS90G,SAASoQ,IACD,mBAAf0kG,EAAQ1kG,IAA2B,YAANA,IACrC9Q,EAAE8Q,GAAK0kG,EAAQ1kG,GAClB,IAGH,MAAMrN,EAAIyD,EAAcsD,UAAUxK,EAAEs2B,SAE/B7yB,IAGDZ,EAASo5B,aAAanyB,QAAQrG,EAAEF,aAAe,IAChDvD,EAAE+vE,QAAS,GAIVltE,EAAS05D,eAAezyD,QAAQrG,EAAEpG,KAAO,EAC7B,aAAToG,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAC3Bd,EAAEsrE,OAAS,CAAEC,QAAS,cAAelpE,MAAOoB,GAC1CzD,EAAEsrE,OAAS,CAAEC,QAAS,cAGrB1oE,EAAS25D,aAAa1yD,QAAQrG,EAAEpG,KAAO,IAC7C2C,EAAEsrE,OAAS,CAAEC,QAAS,gBAAe,IAG3C,IAAI5sD,EAAgBliB,KAAKkiB,gBAEpBA,IAAiB02F,IACnB54G,KAAKkiB,cAAcosD,GAEnBpsD,EAAgBosD,GAGnBA,EAAgBmwB,EAAG/4F,UAAUwc,GAE7B,MAAM82F,EAAmB,GACnBC,EAAW,GA0EjB,GAxEA3qC,EAAcrqE,SAASi2E,IAKpB,GAJAA,EAAIx3E,WAAY,EAIZw3E,EAAIvL,kBAC8B,iBAAxBuL,EAAIvL,kBACZuL,EAAIvL,gBAAkB96D,KAAK0D,MAAM2iE,EAAIvL,kBAGpCuL,EAAIvL,gBAAgBxoE,QAAQ,CAC7B,MAAM+yG,EAAe,GAGrBh/B,EAAIvL,gBAAgB1qE,SAAS+qB,IAC1B,MAAMkuD,EAASuhB,EAAGtrE,iBACf+mD,EAAIt5E,IAGPs4G,EAAa50G,KAAK44E,EAAOz8E,IAEzBu4G,EAAiB10G,KAAK,CACnBwE,OAAQo0E,EACRx8E,KAAMw8E,EAAOh9E,IAAIkzE,aACjBtsE,WAAYozE,EAAIt5E,GAChB+tE,gBAAiB3/C,EAAK7N,MACtB8nD,eAAgBj6C,EAAKi6C,gBACtB,IAIL,MAAMkwC,EACHj5G,EAAIihB,MAAQ,IAAM+4D,EAAIt5E,GAGzBq4G,EAAS30G,KAAK60G,GAEd1a,EAAGhkF,MAAMha,GAAG,CACTC,KAAM,QACNQ,IAAK,iBACLN,GAAIu4G,EACJ13G,KAAM,CACHI,KAAMq3G,IAGf,CAIH,GACG9yG,EAASm6D,UACRn6D,EAASm6D,SAAW,IAAIlzD,QAAQ6sE,EAAIt5E,KAAO,EAC7C,CACC,MAAMw4G,EAAa3uG,EAAcsD,UAAUmsE,EAAIrgD,SAE3Cu/E,IACDl/B,EAAI7Y,SAAW,CAACvpD,EAAKixB,KAElB,GAAIjxB,EAAI0lE,OAAQ,CACb,MAAMlwD,EAAUmxE,EAAG/4F,UAAUoS,GAI7B,OAFAwV,EAAQ8rF,EAAWtyG,YAAcwmB,EAAQ3qB,MAGtComC,EAAOswE,UAAUvhG,EAAKixB,GACtBqwE,EAAW94F,OAAOgN,EAExB,CAAO,OAAO8rF,EAAW94F,OAAOxI,EAAI,EAE7C,KAGCkhG,EAAiB7yG,OAAQ,CAE1B,MAAMmzG,EAAqB,GAE3BN,EAAiB/0G,SAAS+C,IAGvBA,EAAE8B,OAAOsqB,WAAW3oB,EAAc1D,UAElCC,EAAE8B,OAAOjE,SAASmC,EAAE2nE,iBAGfxhE,MAAMC,QAAQksG,EAAmBtyG,EAAEF,eACrCwyG,EAAmBtyG,EAAEF,YAAc,IAGtCwyG,EAAmBtyG,EAAEF,YAAYxC,KAAK,CACnCowB,QAAS/wB,GAAGqD,EAAEtG,MAAM64G,kBACpB5zG,OAAQgwG,EAAW6D,kBACnBvwC,eAAgBjiE,EAAEiiE,gBACnB,IAGL,MAAM9nD,EAAQ,CAAC,EAGfw0F,EAAWjoG,MAAM4rG,mBAAqBA,EAEtCnlG,OAAOC,KAAKklG,GAAoBr1G,SAASI,IACtC8c,EAAM9c,GAAO,CAAC1B,EAAOkH,KAElB,IAAItE,GAAU,EACV0jE,EAAiB,GA8BrB,OA5BA0sC,EAAWjoG,MAAM4rG,mBAAmBj1G,GAAKJ,SAAS6E,IAE/C,MAAM2wG,EAAU,CAAC,GAEhBhvG,EAAc1D,UAAY,IAAI9C,SAAS2B,IACrC6zG,EAAQ7zG,EAAMhF,IAAMiJ,EAAKjE,EAAMkB,WAAW,IAIzC+C,EAAKgG,OAAM4pG,EAAqB,YAAI5vG,EAAKgG,MAG3B/G,EAAO4rB,QAAQ+kF,KAI9Bl0G,GAAU,EACV0jE,EAAiBngE,EAAOmgE,eAC3B,IAIE1jE,GACFk5F,EAAGhkF,MAAMnJ,QAAQ,CACd1P,KAAM,QACNyM,KAAM46D,IAGL1jE,CAAO,CAChB,IAGJowG,EAAWlxG,OAAO,QAAS0c,GAE3Bw0F,EAAW1zG,OAAOg3G,SAAWA,EAC7BtD,EAAWjxG,SACd,MAEOixG,EAAW1zG,OAAOg3G,UACnBtD,EAAW1zG,OAAOg3G,SAASh1G,SAASkvE,IAC7BxvE,GAAGwvE,IAAQxvE,GAAGwvE,GAAOumC,YAAY,IAG3C/D,EAAWlxG,OAAO,QAAS,CAAC,GAC5BkxG,EAAWjxG,UAGd,MAAMi1G,EAAe,GAKjBvzG,EAASi6D,eAEViO,EAAcxiC,QAAQ,CACnBlrC,GAAI,yBACJ6tE,OAAQ,QACR/rE,WAAW,EACX2+D,SAAWvpD,GAAQrN,EAAc23B,YAAYtqB,KAGhD6hG,EAAar1G,KAAK,2BAGjB8B,EAASs5D,YAA8B,IAAhBpI,GACxBgX,EAAcxiC,QAAQ,CACnBlrC,GAAI,yBACJ6tE,OAAQ,CAAEK,QAAS,iBAAkB8qC,UAAW,OAChD54G,MAAO,GACPqgE,SAAU,sDACVngE,IAAK,CAAE,aAAc,YAExBlB,KAAKqyG,gBAAkB,EACvBsH,EAAar1G,KAAK,2BACdtE,KAAKqyG,gBAAkB,EAED,KAAzBjsG,EAASksD,aAAuBlsD,EAASk6D,cAC1CgO,EAAchqE,KAAK,CAChB1D,GAAI,yBACJ6tE,OAAQ,GACRztE,MAAO,GACPqgE,SAAU,CAACvpD,EAAKixB,IACb,4EACH7nC,IAAK,CAAE,aAAc,YAGxBy4G,EAAar1G,KAAK,2BAGM,IAAvB8B,EAASy5D,WAAmC,IAAhBvI,IAC7BgX,EAAchqE,KAAK,CAChB1D,GAAI,wBACJ6tE,OAAQ,GACRztE,MAAO,GACPqgE,SACG,qEACHngE,IAAK,CAAE,aAAc,SAAUm9F,OAAQ,aAG1Csb,EAAar1G,KAAK,0BAII,KAAtB8B,EAASosD,UACRpsD,EAASk6D,aACM,IAAhBhJ,IAEAgX,EAAchqE,KAAK,CAChB1D,GAAI,uBACJ6tE,OAAQ,GACRztE,MAAO,GACPqgE,SAAU,8CACVngE,IAAK,CAAE,aAAc,YAGxBy4G,EAAar1G,KAAK,yBAGjB8B,EAASu5D,aAA+B,IAAhBrI,IACzBgX,EAAchqE,KAAK,CAChB1D,GAAI,mBACJ6tE,OAAQ,GACRztE,MAAO,GACPqgE,SAAU,gDACVngE,IAAK,CAAE,aAAc,YAGxBy4G,EAAar1G,KAAK,qBAIrB,IAAIu1G,EAAU,KAEd,IAAK,IAAIxmG,EAAIi7D,EAAcnoE,OAAS,EAAGkN,GAAK,EAAGA,IAC5C,IAAKwmG,EAAS,CACX,MAAM3/B,EAAM5L,EAAcj7D,GAE1B,IAAK6mE,EAAI5G,SAA4C,IAAlCqmC,EAAatsG,QAAQ6sE,EAAIt5E,IAAY,CACrDi5G,EAAU3/B,EAEV,KACH,CACH,CAEC2/B,IACDA,EAAQn3G,WAAY,EACpBm3G,EAAQz0C,SAAWy0C,EAAQ74G,MAC3B64G,EAAQ74G,MAAQ,KAGnB20G,EAAWmE,eAAexrC,GAG1BtuE,KAAKsyG,iBAAmBqH,EAAaxzG,OAGjCwzG,EAAatsG,QAAQ,2BAA6B,IACnDrN,KAAKsyG,kBAAoB,GAExBtyG,KAAKsyG,iBAAmB,IAAGtyG,KAAKsyG,iBAAmB,GAGvD,MAAM/yE,EAAiBn5B,EAASm5B,eAEV,IAAlBA,EACDo2E,EAAWlxG,OACR,YACAkxG,EAAW1C,eAAe1zE,GAAkB,GAE7Co2E,EAAWlxG,OAAO,YAAazE,KAAKqyG,iBAEzCryG,KAAKw3G,qBACL7B,EAAWmE,gBAEd,CAOA30G,0BACG,MAAMs5F,EAAKz+F,KAAK+B,GACVg4G,QACItb,EAAG7kF,QAAQjE,IAAI3V,KAAKgzG,qBAAwB,CAAC,EACjDF,EAAgB9yG,KAAK8yG,cAE3BiH,EAAmB/5G,KAAKg6G,cAAgBlH,EAAc9yG,KAAKg6G,cACtDlH,EAAc9yG,KAAKg6G,cACnB,GAEL,IAAK,MAAM5rG,KAAQ2rG,EAChBA,EAAmB3rG,GAAMnK,SAASmK,IAE3BA,GAAMygE,QAAQjpE,cAAcwI,EAAKygE,OAAOjpE,KAAK,UAIjD64F,EAAG7kF,QAAQC,IAAI7Z,KAAKgzG,mBAAoB+G,EACjD,CAYA73F,cAAcvf,EAAQ,MACnB,MAAMmwG,EAAgB9yG,KAAK8yG,cAE3B,IAAInwG,EACC,OAAOmwG,EAAc9yG,KAAKg6G,cADpBlH,EAAc9yG,KAAKg6G,cAAgBr3G,CAEjD,CASAyvG,UAAU9kF,GACP,MAAMqoF,EAAa31G,KAAKyxG,eAEnBkE,IAEAroF,EACIA,GAAS1sB,IAAM+0G,EAAWxpF,OAAOmB,EAAQ1sB,IAC/C+0G,EAAW9c,OAAOvrE,EAAQ1sB,IAAI,GAC5B+0G,EAAW9c,OAAO,MAAM,GAHf8c,EAAWsE,WAI5B,CAQAD,aACG,MAAMvvG,EAAgBzK,KAAKkrB,eAAeD,WAE1C,MAAO,GAAGjrB,KAAKY,MAAM6J,EAAgBA,EAAc7J,GAAK,KAC3D,CASA01G,UAAU4D,EAAWC,GAElB,MAAMC,EACHD,EAAGE,mBAAmBtkC,UAAU,CAAEn1E,GAAIs5G,KAAgBv2G,GAAGu2G,GAE5D,IAAKE,EAAK,OAGV,MAAME,EAASF,EAAI3uG,gBAAgBA,gBAEnC,IAAK6uG,EAAQ,OAGTA,EAAOz1G,UAAUy1G,EAAOz1G,SAASq1G,GAGrC,MAAMK,EAAUD,EAAOvkC,UAAU,CAAEr1E,KAAM,cAAgB,UAGrD65G,GAASv6G,KAAKs2G,UAAUiE,EAASJ,EACxC,CAEAlG,qBACG,MAAM0B,EAAa31G,KAAKyxG,eAExB,IAAI+I,EAAe,EAEnB7E,EAAW9rG,KAAK42E,MAAM3oE,SAED,IAARA,GACP3D,OAAOglC,UAAU60B,eAAe50B,KAC7BthC,EACA,2BAE4B,IAA/BA,EAAIy4F,wBAEJiK,GAAc,IAGhBA,EAAe,EAAGx6G,KAAKu3G,qBACtBv3G,KAAKs3G,qBACb,CAEAlC,sBAAsB1nG,GACnB,MAAMioG,EAAa31G,KAAKyxG,eAClBhnG,EAAgBzK,KAAKkrB,eAAeD,WACpCwvF,EAAc,GAEpB9E,EAAW9rG,KAAK42E,MAAMvhE,SAED,IAARA,GAEP/K,OAAOglC,UAAU60B,eAAe50B,KAC7Bl6B,EACA,2BAE4B,IAA/BA,EAAIqxF,wBAGJkK,EAAYn2G,MAAK,IAAMmG,EAAczC,QAAQoO,OAAO8I,EAAIte,KAC3D,IAGH,MAAM89F,EAAU1+F,KAAK+B,GAAG0Y,MAEpBggG,EAAYt0G,OAAS,EACtBu4F,EAAQ9sF,QAAQ,CACbR,MAAOpR,KAAKoB,MAAM,2BAClBiN,KAAMrO,KAAKoB,MACR,yDAEHyQ,SAAU1M,MAAO2I,IACVA,UAEK2B,QAAQ4R,IAAIo5F,EAAYtsG,KAAK8tB,GAAMA,OAGzCj8B,KAAKs3G,sBACR,IAIN5Y,EAAQvtF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,uBAClBiN,KAAMrO,KAAKoB,MACR,8EAGZ,CAEAgiG,cAAc11F,GACX1N,KAAKU,KAAKi8C,aAAaqiD,UAAUtxF,EACpC,CAEA2nG,YAAY3nG,GACT1N,KAAK2yG,4BAA4B/tG,KAAK8I,EACzC,CAEA4nG,cAAc5nG,GACX1N,KAAKyyG,YAAY7tG,KAAK8I,EACzB,CAEAynG,kBAAkBznG,GACf1N,KAAK0yG,yBAAyB9tG,KAAK8I,EACtC,CAOAgtG,QAAQ5iG,EAAKixB,GACV,MAAMt+B,EAAgBzK,KAAKkrB,eAAeD,WACpC0vF,EAAqBlwG,EAAco2B,cAAc1yB,KACnDnH,GAAMA,EAAEF,aAGZ,IAAI8zG,EAAM,GAEV,MAAM9zG,EAAaiiC,EAAOomC,OAAOvuE,GAAGoS,QAAQ,IAAK,IAEjD,GAAI7F,MAAMC,QAAQ0K,EAAIhR,IACnBgR,EAAIhR,GAAY7C,SAAQ,SAAUohB,GAC3BA,EAAEhX,OAAMusG,GAAOv1F,EAAEhX,KAAO,QAC/B,SACI,QACsC,IAAnCyJ,EAAIhR,EAAa,eACG,iBAApBgR,EAAIhR,GAEX8zG,EAAM9iG,EAAIhR,EAAa,cAAcuH,UACnC,QAA8C,IAAnCyJ,EAAIhR,EAAa,cAA+B,CAC7D,IAAI+zG,EAAe/iG,EAAIhR,EAAa,cAE/BqG,MAAMC,QAAQytG,KAAeA,EAAe,CAACA,KAEjDA,GAAgB,IAAI52G,SAAQ,SAAUohB,GAChCA,IAAGu1F,GAAOv1F,EAAEhX,KAAO,QAC1B,GACH,MAAO,IAAgD,IAA5CssG,EAAmBttG,QAAQvG,GAAoB,CACvD,IAAKgR,EAAIhR,GACN,MAAO,GAGP8zG,EAAM,gEAAgE9iG,EAAIhR,QAEhF,KAAoC,SAAzBiiC,EAAOomC,OAAO7pE,OACtBs1G,EAAM7xE,EAAOomC,OAAO7uD,OAAOxI,EAAIhR,IACA,eAAzBiiC,EAAOomC,OAAO7pE,OACpBmF,EAAc1D,SAAS9C,SAAS+C,IACzBA,EAAEF,aAAeA,GACdE,EAAEZ,SAASjE,SACZ6E,EAAEZ,SAASjE,QAAQ8B,SAASohB,IACrBA,EAAEzkB,KAAOkX,EAAIhR,KACd8zG,EAAMv1F,EAAEhX,KACX,GAGT,IAEDusG,EAAM9iG,EAAIhR,GAEf,OAAK8zG,GAAY,EAEpB,CAOAE,sBAAsBv4G,GAEnBA,EAAKyzE,MAAM+kC,WAAa,QAC3B,CAOAC,qBAAqBz4G,GAEgB,QAA9BA,EAAK04G,YAAYC,SAClBvmG,YAAW,KACR,MAAMwmG,EAAYt2F,SAAStiB,EAAKyzE,MAAM2tB,IAAI3wF,QAAQ,KAAM,KAAO,IACzDooG,EAAWv2F,SAAStiB,EAAKyzE,MAAMo5B,KAAKp8F,QAAQ,KAAM,KAAO,IAE/D,GAAImoG,EAAYniG,OAAOqiG,YAAa,CACjC,MAAMC,EAAaH,EAAYniG,OAAOqiG,YAChCE,EACH12F,SAAStiB,EAAKyzE,MAAM2tB,IAAI3wF,QAAQ,KAAM,KAAOsoG,EAChD/4G,EAAKyzE,MAAM2tB,IAAM4X,EAAS,IAC7B,CAEA,GAAIH,EAAWpiG,OAAOmE,WAAY,CAC/B,MAAMq+F,EAAaJ,EAAWpiG,OAAOmE,WAC/Bs+F,EACH52F,SAAStiB,EAAKyzE,MAAMo5B,KAAKp8F,QAAQ,KAAM,KAAOwoG,EACjDj5G,EAAKyzE,MAAMo5B,KAAOqM,EAAU,IAC/B,CAEAl5G,EAAKyzE,MAAM+kC,WAAa,SAAS,GACjC,KACCx4G,EAAKyzE,MAAM+kC,WAAa,SAClC,iBC9vEH,MAAMW,EAAiB,EAAQ,OAGzBpc,EACH,WAEY,MAAMqc,UAAmBD,EAoBrCz1G,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAK28C,aAAagV,aAAa3xD,KAAKoG,SAAS45D,WAChD,CAEA47C,oBAAoB17G,EAAKqgE,GACtB,IAAIs7C,EAAWt7C,GAAW,GACH,iBAAZs7C,IACRA,EAAWA,EAASr0F,MAAM,MAG7B,IAAIrlB,EAAUwB,GAAGzD,EAAIqgE,SAAS+Y,UAAUzvE,KAAKwiB,KAAK,CAAC,GAEnD1oB,GAAGzD,EAAI47G,aAAahhG,WACpB+gG,EAAS53G,SAASuyB,IACf,IAAI0nB,EAAM/7C,EAAQ2G,QAAQuc,GAAMA,EAAEzkB,IAAM41B,IAAS,GAC7C0nB,GACDv6C,GAAGzD,EAAI47G,aAAa56F,IAAIg9B,EAC3B,GAEN,CASA/9C,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI+wG,EAAoBlxG,MAGxC,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEIw8C,mBAQD,OAP2B,MAAvB38C,KAAKm/F,iBACNn/F,KAAKm/F,eAAiB,IAAI,IACvBn/F,KAAK+B,GACL,GAAG/B,KAAKY,oBAIPZ,KAAKm/F,cACf,CAEI/B,qBAID,OAH6B,MAAzBp9F,KAAKq/F,mBACNr/F,KAAKq/F,iBAAmB,IAAIC,GAExBt/F,KAAKq/F,gBACf,iECpFCt/F,EAAI,KAEO,MAAMg8G,UAAiD,IACnEp8G,YAAYE,GAGTC,MAAM,CACHK,UAAW,GAHdN,EAASA,GAAU,wCAIhBoK,KAAM,GAAGpK,mBACTqK,KAAM,GAAGrK,qBAGZG,KAAKyK,cAAgB,KAIrBzK,KAAKuN,gBAAiB,EAItBvN,KAAKqM,UAAY,KAIZtM,IACFA,EAAI,IAAI6V,IACE5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,GAG9C,CAEAomG,SACG,MAAM9Y,EAASljG,KAAKE,IAAIC,UACxB,MAAO,CACJO,KAAM,OACNE,GAAIZ,KAAKE,IAAIgK,KAEbvI,YAAY,EACZuH,SAAU,CACP,CACGxI,KAAM,SACNkB,KAAM,OACNV,IAAK,gBACLyB,MAAO5C,EAAE,gBACTqC,GAAI,CACDgI,YAAa,KACVpK,KAAKsK,kBACLtK,KAAKuK,iBAAiB,EAEzBurE,cAAe,WACZ91E,KAAKqjG,eAAeziB,aACjB,UACA,GAAGsiB,oBAET,KAKf,CAEAziG,KACG,MAAO,CACJC,KAAM,QACNE,GAAIZ,KAAKE,IAAIC,UAEba,MAAO,IACPS,KAAMzB,KAAKg8G,SACX55G,GAAI,CACDoI,OAAQ,KACLxK,KAAKwK,QAAQ,GAIzB,CAGArF,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAIR4B,GAAG3D,KAAKE,IAAIC,YAAYsD,MAAMhD,GAAGT,KAAKS,KAC9C,CAYA6J,gBAAgBI,EAASC,GACtB,IAAIgwE,EAAO36E,KACP4K,EAAYjH,GAAG3D,KAAKE,IAAIgK,MAExBW,EAAYD,EAAUE,gBAAgB3E,OAAS,EAC/C4E,EAAa/K,KAAKgL,cAAa,GACnCJ,EAAUK,QACP,CACGrK,GAAI,OAAS6C,MAAMyH,MACnB/J,KAAM,CACH,CACGT,KAAM,QACNM,MAAO,IACPmB,QAAS4I,EACT3I,GAAI,CACDC,SAAU,SAAU8I,GAEjBwvE,EAAKvvE,cAAcD,EADVnL,KAEZ,IAGN,CACGU,KAAM,YACNM,MAAO,IACPmB,QAAS,CACN,CACGvB,GAAI,GACJ+B,MAAO5C,EAAE,yBAGfqC,GAAI,CACDC,SAAU,KAEPrC,KAAKuK,iBAAiB,IAI/B,CACG7J,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNZ,MAAO,GACPoB,GAAI,CACDgI,YAAa,WACVQ,EAAUY,WAAWxL,KAAKyL,iBAC1BkvE,EAAKjvE,kBAAiB,GACtBivE,EAAKpwE,iBACR,MAKZM,GAICH,GACiBE,EACdE,gBACAD,GAAWC,gBAAgB,GACnBjG,SAAS6F,GAGpBC,GACmBC,EAChBE,gBACAD,GAAWC,gBAAgB,GACjBjG,SAAS8F,EAE7B,CAWAK,aAAaW,GACV,IAAIf,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBa,EAAa,GAEZjH,EAAY9D,KAAKyK,cAAc1D,SACnC,GAAwB,GAApBjD,EAAUqC,OAAa,OAAO4E,EAalC,GAVAjH,EAAUG,SAAS+C,IACZA,EAAE4E,mBACHb,EAAWzG,KAAK,CACb1D,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,OAEf,IAICuK,EAAiB,CAClB,IAAIE,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIC,EAAgBF,EAAMhB,gBAAgB,GAAGmB,WACzCD,IACDjB,EAAaA,EAAWjC,QAAQ9B,GAAMA,EAAEpG,IAAMoL,IAEpD,GAEN,CACA,OAAOjB,CACV,CAOA/F,WAAWC,GACRjF,KAAKyK,cAAgBxF,CACxB,CAcAmH,YAAYhG,GACTpG,KAAKqM,UAAYrM,KAAK+B,GAAG2D,UAAUU,EACtC,CAaAkG,cACG,IAAI1B,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBqC,EAAa,GAEZV,EAAajB,EAAUE,gBAc3B,OAbIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WACnCM,EAAWjI,KAAK,CACbD,IAAKqG,EACLC,IAAKA,GAEX,IAEI4B,CACV,CAYAnB,cAAcyuB,EAASrtB,GACpB,IACIyvG,EADAn4G,EAAY9D,KAAKyK,cAAc1D,SAEhC2F,EAAUF,EAAGf,gBAAgBX,gBAAgB,GAG7C3I,EAAU,KAGb,GADA85G,EAAcn4G,EAAUuoB,MAAMrlB,GAAMA,EAAEpG,IAAMi5B,IAC5C,CAEA,OAAQoiF,EAAY53G,KACjB,IAAK,OACFlC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,oBACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,qBAE1B,MACH,IAAK,SACFoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAE1B,MAEH,QACGoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAKhC2M,EAAQjI,OAAO,UAAWtC,GAC1BuK,EAAQhI,UAOR1E,KAAK0L,mBACL1L,KAAKuK,iBAjCmB,CAkC3B,CAMAC,SACG,IAAII,EAAYjH,GAAG3D,KAAKE,IAAIgK,MAG5BzG,MAAMhD,GAAGT,KAAKg8G,SAAUpxG,GAExB,IAAI+B,EAAQ3M,KAAKqM,UACbM,GAASA,EAAM1I,SAChB0I,EAAM1I,SAAS2I,IACZ5M,KAAKsK,gBAAgBsC,EAAEvI,IAAKuI,EAAEjC,IAAI,IAI3B,MAATgC,GAAiC,GAAhBA,EAAMxG,QACxBnG,KAAKsK,iBAEX,CAQAoB,iBAAiBmB,GACd,IAAIjC,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBa,EAAa/K,KAAKgL,cAAa,GAC/B8B,EAAiB,GACjBC,EAAmB,GAElBlB,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWshB,MAAMrlB,GAAMA,EAAEpG,IAAM8J,IAEzCsC,EAEDF,EAAexI,KAAK0I,GAGpBD,EAAiBzI,KAAKwH,EAE5B,IAIEe,GACFE,EAAiB9I,SAAQ,SAAU6H,GAChClB,EAAUY,WAAWM,EACxB,KAIHD,EAAajB,EAAUE,iBACR3E,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWjC,QAAO,SAAU9B,GACpC,OAAOA,EAAEpG,IAAM8J,CAClB,IAGCuC,EAAgCH,EAAehE,QAAO,SACvDoE,GAEA,OAAIC,MAAMC,QAAQJ,KAAsC,IAAzBA,EAASK,QAAQH,EAInD,IAGII,EAAevC,EAAWjC,QAAO,SAAUoE,GAC5C,OACGC,MAAMC,QAAQH,KACgC,IAA9CA,EAA8BI,QAAQH,EAK5C,IAGApB,EAAMhB,gBAAgB,GAAGrG,OAAO,UAAW6I,GAC3CxB,EAAMhB,gBAAgB,GAAGpG,SAC5B,GAEN,CAMA6F,kBAEOvK,KAAKuN,iBAETvN,KAAKqM,UAAYrM,KAAKsM,cAEtBtM,KAAKwP,KAAK,UAAWxP,KAAKqM,WAC7B,CAEAmB,gBACGxN,KAAKuN,gBAAiB,CACzB,CAEAE,kBACGzN,KAAKuN,gBAAiB,CACzB,CAYA3I,KAAK8I,EAAOhD,EAASvI,GAClBnC,KAAKwN,gBAEL7J,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAAOvL,GAAW,MAE1CuI,GACD1K,KAAKsK,gBAAgBI,GAGxB1K,KAAKyN,iBACR,CASAE,KAAKC,EAAGC,GACL,IAAIC,EAAS,EAEb,MAAMjC,EAAalI,GAAG3D,KAAKE,IAAIgK,MAAMY,gBAyCrC,OAxCIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,CAAC6H,EAAOC,KACxB,GAAIF,EAAW1F,OAAS,GAAK4F,GAAmB,GAAV+B,EAAa,OAEnD,MAAMpD,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WAE/BrG,EAAQ5F,KAAKyK,cAAcsD,UAAUrD,GAC3C,IAAK9E,EAAO,OAEZ,MAAMoI,EAAKpI,EAAMkB,WAEjB,IAAImH,EAASL,EAAEI,GACZE,EAASL,EAAEG,GAEVb,MAAMC,QAAQa,KACfA,GAAUA,GAAU,IAChBE,KAAI,SAAUC,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRnB,MAAMC,QAAQc,KACfA,GAAUA,GAAU,IAChBC,KAAKC,GAASA,EAAKC,MAAQD,IAC3BE,KAAK,MAGRL,GAAUC,IAERJ,EADQ,OAAPnD,EACQsD,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,EAEtC,IAICJ,CACV,oBClhBH,MAAMouG,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErC,IAAIp8G,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA0Bw8G,EAiBxC33G,gBAAgB3E,EAAKg1E,GAKlB,OAFqB50E,KAAKG,UAAUP,EAFvB,6BAKhB,CAMAqqB,qCAAqCrqB,EAAKM,EAAKsB,EAAQ46G,GACpD,IAAIC,EAAWv8G,MAAMw8G,8BAClB18G,EACAM,EACAsB,EACA46G,GAoDH,OAjDA56G,EAAO+6G,aAAgBnuG,IAEpB,IAAIi0E,EAAkB,CAAC,MAAO,OAAQ,MAAO,MAAO,OAChDzgF,EAAOwM,EAAKxM,KAAKuW,cACrB,IAAsC,GAAlCkqE,EAAgBh1E,QAAQzL,GAMzB,OALA6B,MAAM6N,QACHvR,EAAE,kCAAmC,CAClCsiF,EAAgB/zE,KAAK,UAGpB,EACH,CAEJ,IAAIkzB,EAAWhgC,EAAOg7G,oBACtB,IAAIC,EAAY,cAAcj7E,EAASz8B,YAAYoC,KAAK6L,QACrD,IACA,WAEC1C,EAAM,gBAAgBkxB,EAASz8B,YAAYoC,QAAQs1G,MAKvD,OAHA94G,GAAGzD,EAAIoxE,MAAM7sE,OAAO,SAAU6L,GAC9B3M,GAAGzD,EAAIoxE,MAAM5sE,WAEN,CACV,GAGHlD,EAAOk7G,aAAgBrrC,IACpB,GAAKA,GAAaA,EAASxnE,KAA3B,CAEA,IAAI23B,EAAWhgC,EAAOg7G,oBAItB,GAHAh7E,EAASp7B,SAAS41C,SAAWq1B,EAASxnE,KAAKgG,KAGvCwhE,EAASC,KAAM,CAChB,IAAI2T,EAAM,IAAIC,MACdD,EAAIrT,OAAS,WACVjuE,GAAGzD,EAAIc,OAAO6D,SAASogF,EAAIjkF,OAC3B2C,GAAGzD,EAAIa,QAAQ8D,SAASogF,EAAIlkF,OAC/B,EACAkkF,EAAIS,IAAMsgB,IAAIC,gBAAgB50B,EAASC,KAC1C,CAGAtxE,KAAK28G,mBAAmBz8G,EAAKshC,EAhBU,CAgBD,EAKlC66E,EAASv1F,OAAO,CACpB,CACG3lB,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,UACTmB,IAAK,eACLF,MAAOhB,KAAK+B,GAAGC,WAAWC,SAAS6a,kBAEtC,CACGpc,KAAM,WACNiC,MAAO5C,EAAE,gBACToH,KAAM,OACN46E,SAAS,EACTE,UAAW,QACXC,UAAU,EACV9/E,GAAI,CACD+/E,gBAAkB/zE,GACR5M,EAAO+6G,aAAanuG,GAG9Bq0E,aAAc,CAACnR,EAAM95D,KAClBhW,EAAOk7G,aAAaprC,EAAK,EAG5BoR,kBAAmB,CAACpR,EAAM95D,KAAP,MAK/B,CACG9W,KAAM,UACNyG,KAAM,QACN/F,MAAOrB,EAAE,UACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,kBAE3C,CACGpc,KAAM,UACNyG,KAAM,SACN/F,MAAOrB,EAAE,WACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,mBAGjD,CAEAmN,8BAA8BrqB,EAAKM,EAAKQ,GACrCZ,MAAM88G,uBAAuBh9G,EAAKM,EAAKQ,GAEvCiD,GAAGzD,EAAIc,OAAO6D,SAASnE,EAAK0F,SAASpF,OACrC2C,GAAGzD,EAAIa,QAAQ8D,SAASnE,EAAK0F,SAASrF,OACzC,CAEAkpB,4BAA4B/pB,EAAKQ,GAC9BZ,MAAM+8G,qBAAqB38G,EAAKQ,GAEhCA,EAAK0F,SAASpF,MAAQ2C,GAAGzD,EAAIc,OAAOiL,WACpCvL,EAAK0F,SAASrF,OAAS4C,GAAGzD,EAAIa,QAAQkL,UACzC,CAQA9L,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIg8G,EAAqBn8G,MAGzC,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EAEnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,+DC/KH,MAAM28G,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEhCzd,EACH,WAEY,MAAM0d,UAAqBF,EAavCv4G,gBAAgB3E,EAAKg1E,GAClB,IAEIqoC,EAASj9G,KAAKG,UAAUP,EAFf,+BAIb,MAAO,CACJa,GAAIw8G,EAAOx8G,GACXw5E,MAAOgjC,EAAOhjC,MACdzvE,OAAQyyG,EAAOzyG,OAEflH,KAAM,KAEH,IAAIyuB,EAAK/xB,KAAKkrB,eACV6G,GAAIA,EAAGiB,gBAAgBiqF,EAAOx8G,GAAGG,IAErCq8G,EAAO35G,MAAM,EAGtB,CASAnD,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI48G,EAAsB/8G,MAG1C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEIi9F,qBACD,OAAQp9F,KAAKq/F,iBACVr/F,KAAKq/F,kBAAoB,IAAIC,CACnC,oBC/DH,MAAMxD,EAAkB,WAClBxhB,EAAa,EAAQ,OACrBgsB,EAAmB,EAAQ,OAEjC,IAAIvmG,EAAI,KAGRN,EAAOC,QAAU,cAAiCo8F,EAC/Cn8F,YAAYu9G,EAAWr9G,EAAQohE,GAE5BnhE,MADAD,EAASA,GAAU,GAAGq9G,EAAUt8G,mBAClB,CACXsJ,KAAM,KAGJnK,IACFA,EAAI,IAAI6V,IACE5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,IAI3C5V,KAAK+B,GAAKm7G,EAAUn7G,GAEpB/B,KAAKm9G,gBAAkB,KAIvBn9G,KAAKihE,WAAaA,EAKlBjhE,KAAKy5B,SAAWz5B,KAAK+B,GAAG81B,eAAe,CAAC,EAK3C,CAOIptB,oBACD,OAAOzK,KAAK+B,GAAGgW,WAAW/X,KAAKm9G,gBAClC,CAEA18G,KACG,IAAIP,EAAMF,KAAKE,IAGf,MAAO,CACJU,GAAIV,EAAIC,UACRa,MAAO,IACPsyE,QAAQ,EACRzxE,KAAM,CACH,CACGnB,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,gBAEZ,CACGW,KAAM,OACN6K,KAAM,YACNlK,MAAO,QACPE,MAAO,KACJvB,KAAK2E,MAAM,KAKvB,CACGjE,KAAM,aACNe,KAAM,CACHI,KAAM,CACH,CACGjB,GAAIV,EAAIgK,KACRxJ,KAAM,OACNiB,YAAY,EACZE,KAAM,QAO3B,CAEAsD,WAAWpD,GACR/B,KAAK+B,GAAKA,CACb,CAOI0I,oBACD,OAAOzK,KAAK+B,GAAGgW,WAAW/X,KAAKm9G,gBAClC,CAEAn4G,WAAWC,GACRjF,KAAKm9G,gBAAkBl4G,EAAOrE,EACjC,CAEA+D,OACGhB,GAAG3D,KAAKE,IAAIC,YAAYwE,OAExB3E,KAAKwP,KAAK,QACb,CAEA5K,KAAKiF,GACFlG,GAAG3D,KAAKE,IAAIC,YAAYyE,OAExB5E,KAAKo9G,YAAYvzG,EACpB,CAEA0xE,YACG,OAAO53E,GAAG3D,KAAKE,IAAIC,YAAYo7E,cAAe,CACjD,CAEA6hC,YAAYvzG,GACT,IAAI3J,EAAMF,KAAKE,IACf,IAAI4nG,EAAYnkG,GAAGzD,EAAIgK,MACnBO,EAAgBzK,KAAKyK,cAEzB,IAAKA,IAAkBq9F,EAAW,OAElCj+F,EAAOA,GAAQ,CAAC,EAEhB,IAAIwzG,EAAY,CACbz8G,GAAI,GAAGZ,KAAKE,IAAIC,qBAChBkE,IAAKi2E,EAAWvxC,SAAS1kC,IACzB+B,SAAU,CACP8vD,QAAS,EACTpC,cAAe,MACf7B,UAAW,EACX+K,YAAa,EACbC,YAAa,EACbn7D,WAAY,IACZf,OAAQ,IAKVmJ,EAAOlK,KAAK+B,GAAGy3B,iBAAiB6jF,GAEpCnzG,EAAKlF,WAAWyF,GAGhBA,EAAc1D,SAAS9C,SAAQ,CAAC+C,EAAG+E,OAE3B/L,KAAKihE,YAAcjhE,KAAKihE,WAAW5zD,QAAQrG,EAAEpG,KAAO,IACtDsJ,EAAKqzD,eAAev2D,EAAG+E,EAC1B,IAIH7B,EAAKwc,OAAOpiB,KACT,IAAIgiG,EACD,CACGlgG,SAAU,CACPy1D,aAAa,EACbE,eAAe,EACfE,cAAc,GAEjBt7D,SAAU,CACP21D,EAAG7rD,EAAc1D,SAASZ,SAGhCnG,KAAKy5B,SACLvvB,IAKNA,EAAKwc,OAAOziB,SACT,CAACmP,EAAGrH,IAAWqH,EAAExS,GAAK,GAAGsJ,EAAKtJ,MAAMwS,EAAE/O,OAAO0H,MAGhD,IAAIuxG,EAAUpzG,EAAK/J,UAAUH,KAAK+B,GAAGw3B,MAGrC91B,MAAMhD,GAAG68G,EAAQ78G,GAAGoB,KAAKilB,OAAO,CAAC,GAAIghF,GACrCrkG,MAAMC,OAAOokG,EAAWrkG,MAAMG,aAE9B05G,EAAQh6G,KACL,CACGojG,iBAAkB,KAEf,IAAIW,EAAWn9F,EAAK+8F,cAAca,EAAWr9F,GAG7C,QAAKP,EAAK29F,aAAaC,EAAWr9F,EAAe48F,KAIjDS,GAAWziG,aAAa,CAAEzD,KAAM,SAE5BylG,EAASzmG,GACV6J,EAAczC,QACV0lE,OAAO25B,EAASzmG,GAAIymG,GACpB7yF,MAAM+oG,IACJv9G,KAAKwP,KAAK,SAAU+tG,GAGpBzV,GAAWngG,aAAa,CAAE/F,KAAM,QAAS,IAE3C6S,OAAOtM,IAELnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,8EACH+3F,aAEHS,GAAWngG,aAAa,CAAE/F,KAAM,QAAS,IAK/C6I,EAAczC,QACVsgE,OAAO++B,GACP7yF,MAAMgpG,IAEJx9G,KAAKwP,KAAK,MAAOguG,GAEjB1V,GAAWngG,aAAa,CAAE/F,KAAM,QAAS,IAE3C6S,OAAOtM,IAELnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,+EACH+3F,aAGHS,GAAWngG,aAAa,CAAE/F,KAAM,QAAS,KAI3C,EAAK,GAGlB,GAIHkmG,EAAU5iG,QACV4iG,EAAUvwF,MAAM1N,GAEhByzG,EAAQ9yG,OAAOX,EAClB,oBCrQH,MAAM4zG,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErCj+G,EAAOC,QAAU,cAA0B+9G,EACxC99G,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,EACtC,CAQA3hC,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIu9G,EAAqB19G,MAGzC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBCjCH,MAAMw9G,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtCn+G,EAAOC,QAAU,cAA2Bi+G,EAOzCx9G,UAAUg8F,GACP,IAAIh8F,EAAY,IAAIy9G,EAAsB59G,MAG1C,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAM09G,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAEpC,IAAI/9G,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,MAAMq+G,UAAmBF,EAiBvCt5G,gBAAgB3E,EAAKg1E,GAClB,IAEIopC,EAAWh+G,KAAKG,UAAUP,EAFjB,6BAIb,MAAO,CACJa,GAAIu9G,EAASv9G,GACbw5E,MAAO+jC,EAAS/jC,MAChBzvE,OAAQwzG,EAASxzG,OAEjBlH,KAAM,KAEH,IAAIyuB,EAAK/xB,KAAKkrB,eACV6G,GAAIA,EAAGiB,gBAAgBgrF,EAASv9G,GAAGG,IAEvCo9G,EAAS16G,MAAM,EAGxB,CAMA2mB,qCAAqCrqB,EAAKM,EAAKsB,EAAQ46G,GACpD,IAAIC,EAAWv8G,MAAMw8G,8BAClB18G,EACAM,EACAsB,EACA46G,GAYH,OAPA56G,EAAOy8G,aAAe,CAACC,EAAMC,KAC1B,IAAI38E,EAAWhgC,EAAOg7G,oBAGtBx8G,KAAKo+G,2BAA2Bl+G,EAAKshC,EAAU08E,EAAK,EAGhD7B,EAASv1F,OAAO,CACpB,CACG3f,KAAM,iBACNzG,KAAM,aACNU,MAAOrB,EAAE,eACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCE,GAAI,CACDC,SAAUb,EAAOy8G,eAGvB,CACG92G,KAAM,QACNzG,KAAM,aACNU,MAAOrB,EAAE,SACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,iBAE3C,CACGxB,KAAM,UACNyG,KAAM,SACN/F,MAAOrB,EAAE,WACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,kBAGjD,CAUA+nB,kCAAkC/pB,EAAKQ,EAAM29G,GAC1C,IAAInzF,EAAiBxqB,EAAKqB,GAAGspB,mBAAmBgzF,GAC5Cp5G,EAASimB,EAAiBA,EAAeD,WAAa,KAGtDyoD,EAAe,GACL,MAAVzuE,IACDyuE,EAAezuE,EAAO8B,SAASoH,KAAKnH,IAC1B,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,WAKlBuC,GAAGzD,EAAI0F,OAAOnB,OAAO,UAAWivE,GAChC/vE,GAAGzD,EAAI0F,OAAOlB,SACjB,CAEAulB,8BAA8BrqB,EAAKM,EAAKQ,GACrCZ,MAAM88G,uBAAuBh9G,EAAKM,EAAKQ,GAEvC,IAAI2pE,EAAmB3pE,EAAK0F,SAAS4qD,WAChCtwD,EAAK0F,SAAS4qD,WACd,KACDstD,EAAiB36G,GAAGzD,EAAIgrB,gBAGxBsuD,EAAY94E,EAAK69G,0BACrBD,EAAe75G,OAAO,UAAW+0E,GACjC8kC,EAAe75G,OAAO,QAAS4lE,GAC/Bi0C,EAAe55G,UAEf1E,KAAKo+G,2BAA2Bl+G,EAAKQ,EAAM2pE,GAE3C1mE,GAAGzD,EAAI0F,OAAOf,SAASnE,EAAK0F,SAASR,OACrCjC,GAAGzD,EAAIa,QAAQ8D,SAASnE,EAAK0F,SAASrF,OACzC,CAEAkpB,4BAA4B/pB,EAAKQ,GAC9BZ,MAAM+8G,qBAAqB38G,EAAKQ,GAEhCA,EAAK0F,SAAS4qD,WAAartD,GAAGzD,EAAIgrB,gBAAgBjf,WAClDvL,EAAK0F,SAASR,MAAQjC,GAAGzD,EAAI0F,OAAOqG,WACpCvL,EAAK0F,SAASrF,OAAS4C,GAAGzD,EAAIa,QAAQkL,WACtCvL,EAAK0F,SAASrF,OACX8jB,SAASnkB,EAAK0F,SAASrF,SAAWg9G,EAAWj8E,gBAAgB/gC,MACnE,CAQAZ,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI29G,EAAoB99G,MAGxC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC1KH,MAAMq+G,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAEpCh/G,EAAOC,QAAU,cAAyB8+G,EAOvCr+G,UAAUg8F,GACP,IAAIh8F,EAAY,IAAIs+G,EAAoBz+G,MAGxC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMu+G,EAAiB,EAAQ,OAEzBzoD,EAA8ByoD,EAAe58E,gBAEnDriC,EAAOC,QAAU,cAAyBg/G,EAWvCv+G,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAYL,MAAMK,YAiBtB,GAfAA,EAAUk9F,IAAMl9F,EAAUM,KAG1BN,EAAUM,GAAK,KACL,CACJC,KAAM,aACNiB,YAAY,EACZT,IACGlB,KAAKoG,SAAS+9D,gBACdlO,EAA4BkO,eAC/B1iE,KAAMtB,EAAUk9F,MAKlBlB,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm1D,KACbA,EAAcA,GAAet3D,KAAKq3D,gBAC3BglC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,EAAan1D,IAElDqI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBChDH,MAAMw+G,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,MAErC,IAAI7+G,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA0Bi/G,EACxCh/G,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,EACtC,CAcAv9B,gBAAgB3E,EAAKg1E,GAClB,IACI10E,EAAM,CACPC,UAAWP,EAAIQ,OAAO,yCAGrBy+G,EAAgB7+G,KAAKG,UAAUP,GAC/BO,EAAYP,EAAImC,GAAG2D,UAAUm5G,GAiBjC,OAfA1+G,EAAUM,GAAGG,GAAKV,EAAIC,UACtBA,EAAUM,GAAGq+G,UAAW,EACxB3+G,EAAUM,GAAG2B,GAAK,CACf28G,cAAgBh6C,IACb/kE,KAAKoG,SAAS2+D,UAAYA,EAC1B/kE,KAAK4H,MAAM,GAIjBzH,EAAUmD,KAAQnB,IACf08G,EAAcv7G,KAAK,CAChB09F,YAAa9gG,EAAIC,WAClB,EAGEA,CACV,CAUA8pB,qCAAqCrqB,EAAKM,EAAKsB,EAAQ46G,GAQpD,OAPet8G,MAAMw8G,8BAClB18G,EACAM,EACAsB,EACA46G,GAGat1F,OAAO,CACpB,CACG3f,KAAM,iBACNzG,KAAM,aACNU,MAAOrB,EAAE,eACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,iBAE3C,CACGxB,KAAM,UACNyG,KAAM,SACN/F,MAAOrB,EAAE,WACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,iBAE3C,CACGxB,KAAM,WACNyG,KAAM,eACN00E,WAAY97E,EAAE,sBACd+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGvc,KAAM,WACNyG,KAAM,cACN00E,WAAY97E,EAAE,wBACd+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGvc,KAAM,WACNyG,KAAM,gBACN00E,WAAY97E,EAAE,0BACd+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGvc,KAAM,WACNyG,KAAM,MACN00E,WAAY97E,EACT,4DAEH+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGvc,KAAM,WACNyG,KAAM,MACN00E,WAAY97E,EACT,8DAEH+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACG9V,KAAM,gBACNzG,KAAM,UACNy8C,IAAK,EACL/7C,MAAOrB,EAAE,kBACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,mBAGjD,CAEAmN,8BAA8BrqB,EAAKM,EAAKQ,GACrCZ,MAAM88G,uBAAuBh9G,EAAKM,EAAKQ,GAEvC,IAAI2pE,EAAmB3pE,EAAK0F,SAAS4qD,WAChCtwD,EAAK0F,SAAS4qD,WACd,KACDstD,EAAiB36G,GAAGzD,EAAIgrB,gBAGxBsuD,EAAY94E,EAAK69G,0BACrBD,EAAe75G,OAAO,UAAW+0E,GACjC8kC,EAAe75G,OAAO,QAAS4lE,GAC/Bi0C,EAAe55G,UAEff,GAAGzD,EAAI0kE,cAAc//D,SAASnE,EAAK0F,SAASw+D,cAC5CjhE,GAAGzD,EAAI2kE,aAAahgE,SAASnE,EAAK0F,SAASy+D,aAC3ClhE,GAAGzD,EAAI4kE,eAAejgE,SAASnE,EAAK0F,SAAS0+D,eAC7CnhE,GAAGzD,EAAIi9C,KAAKt4C,SAASnE,EAAK0F,SAAS+2C,KACnCx5C,GAAGzD,EAAIg9C,KAAKr4C,SAASnE,EAAK0F,SAAS82C,KACnCv5C,GAAGzD,EAAIa,QAAQ8D,SAASnE,EAAK0F,SAASrF,QACtC4C,GAAGzD,EAAI+1C,eAAepxC,SACY,MAA/BnE,EAAK0F,SAAS6vC,cAAwB,EAAIv1C,EAAK0F,SAAS6vC,cAE9D,CAEAhsB,4BAA4B/pB,EAAKQ,GAC9BZ,MAAM+8G,qBAAqB38G,EAAKQ,GAEhCA,EAAK0F,SAAS4qD,WAAartD,GAAGzD,EAAIgrB,gBAAgBjf,WAElDvL,EAAK0F,SAASw+D,aAAejhE,GAAGzD,EAAI0kE,cAAc34D,WAClDvL,EAAK0F,SAASy+D,YAAclhE,GAAGzD,EAAI2kE,aAAa54D,WAChDvL,EAAK0F,SAAS0+D,cAAgBnhE,GAAGzD,EAAI4kE,eAAe74D,WACpDvL,EAAK0F,SAAS+2C,IAAMx5C,GAAGzD,EAAIi9C,KAAKlxC,WAChCvL,EAAK0F,SAAS82C,IAAMv5C,GAAGzD,EAAIg9C,KAAKjxC,WAChCvL,EAAK0F,SAASrF,OAAS4C,GAAGzD,EAAIa,QAAQkL,UACzC,CAQA9L,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIy+G,EAAqB5+G,MAGzC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCzLH,MAAM6+G,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9Cx/G,EAAOC,QAAU,cAAmCs/G,EACjDr/G,YAAYgG,EAAQZ,EAAagQ,EAAQ+sB,GACtChiC,MAAM6F,EAAQZ,EAAagQ,EAAQ+sB,EACtC,CAcAv9B,gBAAgB3E,EAAKg1E,GAClB,IACI10E,EAAM,CACPC,UAAWP,EAAIQ,OAAO,kDAGrBD,EAAYH,KAAKG,UAAUP,GAM/B,OAJAO,EAAUM,GAAGG,GAAKV,EAAIC,UAEtBA,EAAUmD,KAAQnB,IAAD,EAEVhC,CACV,CAMA8pB,qCAAqCrqB,EAAKM,EAAKsB,EAAQ46G,GAQpD,OAPet8G,MAAMw8G,8BAClB18G,EACAM,EACAsB,EACA46G,GAGat1F,OAAO,GAC1B,CAEAmD,8BAA8BrqB,EAAKM,EAAKQ,GACrCZ,MAAM88G,uBAAuBh9G,EAAKM,EAAKQ,EAC1C,CAEAupB,4BAA4B/pB,EAAKQ,GAC9BZ,MAAM+8G,qBAAqB38G,EAAKQ,GAEhCA,EAAK0F,SAAS4qD,WAAartD,GAAGzD,EAAIgrB,gBAAgBjf,UACrD,CAQA9L,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAI8+G,EAA8Bj/G,MAGlD,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,GAAIu1D,GAErC9sD,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCrFH,MAAM++G,EAAgB,EAAQ,OAExBC,EAAqB,EAAQ,OAEnC1/G,EAAOC,QAAU,cAAwBw/G,EAOtC/+G,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIg/G,EAAmBn/G,MAGvC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBC9BH,MAAMi/G,EAAiB,EAAQ,OAEzBC,EAAsB,EAAQ,OAEpC5/G,EAAOC,QAAU,cAAyB0/G,EAOvCj/G,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAIk/G,EAAoBr/G,MAGxC,GAAIm8F,EAAO,CACR,MAAME,EAAel8F,EAErBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,CAACnB,EAASm1D,IACN+kC,EAAa/4F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMm/G,EAAmB,EAAQ,OAE3BrpD,EAA8BqpD,EAAiBx9E,gBAErD,IAAI/hC,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA2B4/G,EASzCr1F,qCAAqCrqB,EAAKM,EAAKsB,EAAQ46G,GAUpD,OATet8G,MAAMw8G,8BAClB18G,EACAM,EACAsB,EACA46G,GAKat1F,OAAO,CACpB,CACG3f,KAAM,aACNzG,KAAM,UACNy8C,IAAK,EACL/7C,MAAOrB,EAAE,eAETuzE,QAAQ,GAEX,CACGnsE,KAAM,UACNzG,KAAM,UACNy8C,IAAK,EACL/7C,MAAOrB,EAAE,YAETuzE,QAAQ,IAGjB,CAEArpD,8BAA8BrqB,EAAKM,EAAKQ,GACrCZ,MAAM88G,uBAAuBh9G,EAAKM,EAAKQ,GAEvCiD,GAAGzD,EAAIkmE,YAAYvhE,SAChBnE,EAAKC,SAASo2D,IAAMd,EAA4BmQ,YAEnDziE,GAAGzD,EAAImmE,SAASxhE,SACbnE,EAAKC,SAASq2D,IAAMf,EAA4BoQ,QAEtD,CAEAp8C,4BAA4B/pB,EAAKQ,GAC9BZ,MAAM+8G,qBAAqB38G,EAAKQ,GAEhCA,EAAKC,SAASo2D,GAAKpzD,GAAGzD,EAAIkmE,YAAYn6D,WACtCvL,EAAKC,SAASq2D,GAAKrzD,GAAGzD,EAAImmE,SAASp6D,UACtC,CAQA9L,UAAUP,GACP,IAAI8gE,EAAO5gE,MAAMK,UAAUP,GAU3B,OARA8gE,EAAKl2D,OAAUkuD,IACZ,IAAI3mC,EAAK/xB,KAAKkrB,eACV6G,GAAMA,EAAGtG,YAAcsG,EAAGjI,eAAeC,YAE1CgI,EAAGP,UACN,EAGIkvC,CACV,oBCjFH,MAAMo7B,EAAkB,WAExBr8F,EAAOC,QAAU,cAAyCo8F,EACvDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,iBAAiB48F,EAAS77F,KACpCuT,OAAOsmC,OACJ,CACGyjC,OAAQ,GACR4zB,aAAc,GACdt1B,cAAe,IAElBt8E,IAINF,KAAKu/G,aAAe,IACvB,CAEA9+G,KACG,MAAMP,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAChBwgF,EAAkB5mF,KAAKU,KAAKf,YAAYmiC,gBACxCu7D,EAAMv9F,MAAMW,GAAG,CAClB,CACGC,KAAM,SACNkB,KAAM,QACND,YAAY,EACZR,KAAM,CACH,CACGP,GAAIV,EAAI4xG,aACRpxG,KAAM,SACNQ,IAAK,oBACLU,KAAM,OACN2J,KAAM,eACN5J,YAAY,EACZX,MAAO,GACPI,MAAO,GACPG,MAAO,KACJvB,KAAK++F,iBAAiB,GAG5B,CACGn+F,GAAIV,EAAIg+E,OACRx9E,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,iBACN5J,YAAY,EACZX,MAAOoF,EAASpF,OAAS4lF,EAAgB5lF,MACzCI,MAAOgF,EAAS6qD,aAAe21B,EAAgB31B,YAC/C1vD,MAAO,KACJvB,KAAKw/G,iBAAiB,GAG5B,CAAE98G,WAAW,OAOtB,cAFO26F,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,GAGR,SAFMjC,MAAMwD,KAAKvB,IAEZ/B,KAAKu/G,aAAc,CACrB,MAAMA,EAAex9G,EAAGoxB,iBAAiBnzB,KAAKE,IAAIs8E,eAE5CtwD,EAAKlsB,KAAKkrB,eAEhB,GAAIgB,EAAI,CACL,MAAMpU,EAAMoU,EAAGjB,WAEfs0F,EAAansF,WAAWtb,GAAK/Q,YAAc,GAC9C,CAEAw4G,EAAaj8G,OACbi8G,EAAan9G,GAAG,UAAW4T,IACxBhW,KAAKy/G,eAAezpG,EAAI,IAG3BhW,KAAKu/G,aAAeA,CACvB,CACH,CAEAC,kBACG,IAAIlvG,EAAM,0BAA0BtQ,KAAKU,KAAKE,KAE9C,MAAMguB,EAAQ5uB,KAAKu/G,aAAatzG,WAEhC,IAAK2iB,GAAOzN,OAAS,IAAIhb,OAAQ,CAC9B,IAAIu5G,EAAU7rG,KAAKC,UAAU8a,GAE7B8wF,EAAUzpG,mBAAmBypG,GAC7BpvG,EAAM,GAAGA,WAAaovG,GACzB,CAEA1mG,OAAO2mG,KAAKrvG,EACf,CAEAyuF,kBACG,MAAM6gB,EAAgBj8G,GAAG3D,KAAKE,IAAI4xG,cAElC9xG,KAAKu/G,aAAa9oC,MAAMmpC,EAAgBA,EAAclyG,MAAQ,KACjE,CAEA+xG,iBACG,MAAMG,EAAgBj8G,GAAG3D,KAAKE,IAAI4xG,cAElC,IAAK8N,EAAe,OAEpB,MAAMhxF,EAAQ5uB,KAAKu/G,aAAatzG,WAEhC2zG,EAAcn7G,OAAO,SAAUmqB,EAAMzN,OAAS,IAAIhb,QAAU,MAC5Dy5G,EAAcl7G,SACjB,oBCvHH,MAAMo3F,EAAkB,WAClB+jB,EAAc,EAAQ,OAE5BpgH,EAAOC,QAAU,cAAyCo8F,EACvDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,iBAAiB48F,EAAS77F,KACpCuT,OAAOsmC,OACJ,CACGyjC,OAAQ,GACR/K,MAAO,GAEPjpE,KAAM,GACN43E,SAAU,GACVg+B,eAAgB,GAChBruC,YAAa,GACbsuC,kBAAmB,GACnBC,WAAY,GAEZjqG,OAAQ,GACRm8F,UAAW,GAEX+N,cAAe,GACfC,YAAa,GAEbC,aAAc,GACdh/F,MAAO,IAEVjhB,IAINF,KAAKogH,YAAc,IAAIP,GAAY,IAAIQ,IAASrgH,KAAKoB,SAASi/G,KAI9DrgH,KAAKuyG,iBAAkB,EAEvBvyG,KAAKsgH,UAAY,KACjBtgH,KAAKugH,aAAe,IACvB,CAEA9/G,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBwgF,EAAkB5mF,KAAKU,KAAKf,YAAYmiC,gBACxCu7D,EAAMv9F,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CACGT,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,eACNnK,MAAOpB,KAAKoB,MACTgF,EAAS6qD,aAAe21B,EAAgB31B,aAE3CjwD,MAAOoF,EAASpF,OAAS4lF,EAAgB5lF,MACzCO,MAAO,KACJvB,KAAKg/F,WAAW,GAGtB,CACGt8F,WAAW,OAQvB,cAFO26F,EAAIz7F,KAEJy7F,CACV,CAEA/C,WACG,MAAMp6F,EAAMF,KAAKE,IAEjB,MAAO,CACJU,GAAIV,EAAIgK,KACRxJ,KAAM,OACNkB,KAAM,QACND,YAAY,EACZyjE,SAAU,IACVjP,QAAS,EACTjtD,SAAU,CACP,CACGrH,KAAM,CACH,CACGjB,GAAIV,EAAI4hF,SACRphF,KAAM,WACNyG,KAAM,UACNjG,IAAK,gBACLyB,MAAO3C,KAAKoB,MAAM,qBAClBo/G,OAAQ,WACRt+B,UAAU,EACVu+B,UAAU,EACV97E,KAAMzkC,EAAI4/G,eACV19G,GAAI,CACD+/E,gBAAkB9Q,IACfrxE,KAAKugH,aAAelvC,EAEbrxE,KAAK0gH,iBAIrB,CACG9/G,GAAIV,EAAI4/G,eACR34G,KAAM,eACNzG,KAAM,OACNkB,KAAM,WACNmuG,YAAY,EACZpuG,YAAY,EACZg/G,QAAS,CACNC,oBAAqB,CAACv2G,EAAGzJ,KACtBZ,KAAK6gH,cAAcjgH,EAAG,IAI/B,CACG4B,QAAS,GACTX,KAAM,CACH,CACGjB,GAAIV,EAAIuxE,YACR/wE,KAAM,aACNyG,KAAM,cACN/F,MAAOpB,KAAKoB,MAAM,gBAClBU,WAAY,IACZK,QAASnC,KAAKogH,YAAYjvC,mBAC1BxuE,MAAO,IACPP,GAAI,CACDC,SAAU,KACPrC,KAAK0gH,aAAa,IAI3B,CACG9/G,GAAIV,EAAI6/G,kBACRr/G,KAAM,WACNyG,KAAM,oBACN/F,MAAOpB,KAAKoB,MAAM,wBAClBU,WAAY,IACZqjC,UAAU,EACVxiC,OAAO,EACPP,GAAI,CACDC,SAAU,KACPrC,KAAK8gH,oBAAoB,MAMxC,CACGl/G,KAAM,QACNC,KAAM,CACH,CACGnB,KAAM,aACNqgH,UAAW,IACXt/G,KAAM,CACHe,QAAS,GACT5B,GAAIV,EAAI8/G,WACRn+G,KAAM,UASjC,CAEAm/G,gBACG,MAAM9gH,EAAMF,KAAKE,IAEjB,MAAO,CACJi2D,QAAS,EACTt0D,KAAM,CACH,CACGnB,KAAM,UACNQ,IAAK,UACLC,KAAM,CACH,CAAEH,MAAO,GACT,CACGJ,GAAIV,EAAI6V,OACRrV,KAAM,SACNiC,MAAO,GACPvB,MAAO,GACPi1E,YAAar2E,KAAKoB,MAAM,qBACxB6/G,gBAAiB,IACjB7+G,GAAI,CACDq2E,gBAAiB,KACdz4E,KAAK+V,OAAOpS,GAAGzD,EAAI6V,QAAQ9J,WAAW,IAI/C,CAAEjL,MAAO,KAGf,CACGJ,GAAIV,EAAIgyG,UACRxxG,KAAM,YACN2yG,cAAc,EACdxuD,UAAU,EACV4uD,WAAY,WACZvyG,IAAK,kBACLS,YAAY,EACZqgG,QAAUlqF,GACSA,EAAIopG,UACfppG,EAAIopG,UACJ,uBAGR97C,SAAU,IACVlP,QAAS,GACT9zD,GAAI,CACDkyG,kBAAmB,CAAC1zG,EAAIkX,EAAKqpG,KAE1B,IAAI7jG,EAAS,GAEbnJ,OAAOC,KAAK+sG,GAASl9G,SAASI,IAC3BrE,KAAK0N,MAAM4rG,mBAAmBj1G,GAAKJ,SAASkE,IACzCmV,GAAUnV,EAAI8gE,eAAiB,OAAO,GACvC,IAGL,MAAMm4C,EAAMz9G,GAAGzD,EAAIgyG,WAEnBkP,EAAIjnC,aACJinC,EAAIlxF,WAAWtvB,EAAI,CAChBygH,QAAS,UACTH,UAAW5jG,IAEd8jG,EAAIhnC,eAEJp6E,KAAKuyG,iBAAkB,CAAI,EAE9BgC,oBAAqB,CAAC3zG,EAAIkX,EAAKqpG,KAE5B,MAAMC,EAAMz9G,GAAGzD,EAAIgyG,WAEnBkP,EAAIjnC,aACJinC,EAAIlxF,WAAWtvB,EAAI,CAChBygH,QAAS,QACTH,UAAW,KAEdE,EAAIhnC,eACJp6E,KAAKuyG,iBAAkB,CAAK,EAE/ByB,QAAS,KACN,MAAM90B,EAAWv7E,GAAGzD,EAAIgyG,WAAW7lF,KAAK,CACrCi1F,WAAW,IAERC,EAAgB59G,GAAGzD,EAAIigH,cAE7BoB,EAAc18G,SAAS7E,KAAKwhH,YAAYtiC,IAEpCl/E,KAAKyhH,eAAeviC,GAAWqiC,EAAcn8G,UAC5Cm8G,EAAc75G,QAAQ,IAIpC,CACG9G,GAAIV,EAAIggH,YACRn/G,OAAQ,GAEX,CACGL,KAAM,SACNyG,KAAM,SACNvG,GAAIV,EAAIigH,aACRx9G,MAAO3C,KAAKoB,MAAM,UAClBF,IAAK,gBACLikC,UAAU,EACV5jC,MAAO,KACJvB,KAAK0oE,QAAQ,IAK5B,CAEAg5C,UACG,MAAMxhH,EAAMF,KAAKE,IAEjB,MAAO,CACJU,GAAIV,EAAIizE,MACRzyE,KAAM,SACN4yE,QAAQ,EACR3yE,SAAU,SACVG,OAAO,EACPD,QAAQ,EACRI,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CAAC,EACD,CACGT,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,gBAClBE,WAAW,GAEd,CAAC,EACD,CACGZ,KAAM,SACNM,MAAO,GACPE,IAAK,oBACLU,KAAM,OACN2J,KAAM,uBACNhK,MAAO,KACJvB,KAAK2E,MAAM,KAKvBlD,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGD,KAAM,OACNT,KAAM,CACHnB,KAAKs6F,WACL,CAAEt5F,MAAO,IACThB,KAAKghH,gBACL,CAAEhgH,MAAO,KAGf,CACGJ,GAAIV,EAAI+/G,cACRv/G,KAAM,QACNW,MAAO,QACPiyE,QAAQ,GAEX,CACGA,QAAQ,EACR0B,OAAQ,EACR7zE,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNyG,KAAM,SACNxE,MAAO3C,KAAKoB,MAAM,UAClBF,IAAK,mBACLI,WAAW,EACXC,MAAO,KACJvB,KAAK2E,MAAM,OAsBnC,CAEAQ,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IAIXgsB,EAAKlsB,KAAKkrB,eAEZgB,GAAIlsB,KAAKgF,WAAWknB,EAAGjB,YAE3B,MAAMyzE,EAAU38F,EAAG0Y,MAEnBikF,EAAQj+F,GAAGT,KAAK0hH,WAEhB,MAAMxmC,EAAQv3E,GAAGzD,EAAIgK,MAEjBgxE,GAAOwjB,EAAQh7F,OAAOw3E,EAAOwjB,EAAQ96F,aAEzC,MAAM+9G,EAAeh+G,GAAGzD,EAAIggH,aAExByB,GAAcjjB,EAAQh7F,OAAOi+G,EAAcjjB,EAAQ96F,YAC1D,CAEAo7F,YACG,MAAM9+F,EAAMF,KAAKE,IAEjByD,GAAGzD,EAAIizE,QAAQvuE,OAEf5E,KAAK4hH,YAGLj+G,GAAGzD,EAAI4hF,UAAUiB,YACpB,CAEAp+E,OACGhB,GAAG3D,KAAKE,IAAIizE,QAAQxuE,MACvB,CAEAi9G,YACG,MAAM1hH,EAAMF,KAAKE,IAEjBF,KAAKsgH,UAAY,KACjBtgH,KAAKugH,aAAe,KAEpB,MAAMrlC,EAAQv3E,GAAGzD,EAAIgK,MAErBgxE,EAAMotB,kBACNptB,EAAMh2E,QAENvB,GAAGzD,EAAIuxE,aAAa5sE,SAAS,KAE7B7E,KAAK+B,GAAG0Y,MAAMha,GAAG,GAAIkD,GAAGzD,EAAI8/G,aAE5Br8G,GAAGzD,EAAI6/G,mBAAmB36G,UAC1BzB,GAAGzD,EAAIigH,cAAc/6G,UAErBzB,GAAGzD,EAAI6V,QAAQlR,SAAS,IACxBlB,GAAGzD,EAAI4/G,gBAAgBhlG,WACvBnX,GAAGzD,EAAIgyG,WAAWp3F,WAElB,MAAM+mG,EAAiBl+G,GAAGzD,EAAI+/G,eAE9B4B,EAAeh9G,SAAS,IACxBg9G,EAAel9G,MAClB,CAEAoR,OAAOwO,GACJ,MAAMitF,EAAa7tG,GAAG3D,KAAKE,IAAIgyG,WAE/B,IAAKV,EAAY,OAEjBjtF,GAAcA,GAAc,IAAIpM,cAEhC,MAAM2pG,EAAc9hH,KAAK+hH,iBAEzBvQ,EAAW1oG,QAAQoW,IAChB,IAAIiN,GAAS,EAYb,OAVC21F,GAAe,IAAI79G,SAAS+C,IACtBmlB,IAEJA,GACIjN,EAAI,GAAGlY,EAAEg7G,gBAAkB,IACxBttG,WACAyD,cACA9K,QAAQkX,IAAe,EAAC,IAG3B4H,CAAM,GAEnB,CAEA81F,eAAe7zG,GACZ,IAAIizD,EAAW,GAEf,IAAKjzD,EAAM,OAAOizD,EAElB,OAAQjzD,EAAKizG,SACV,IAAK,cACFhgD,EAAW,sCACX,MACH,IAAK,UACFA,EAAW,mDACX,MACH,IAAK,QAGL,IAAK,OACFA,EAAW,oCACX,MACH,IAAK,OACFA,EAAW,qCAIjB,OAAOA,CACV,CAEAl8D,oBACG,MAAMo7G,EAAevgH,KAAKugH,aAE1B,IAAKA,EAAc,OAAO,EAE1B,MAAMH,EAAcpgH,KAAKogH,YAEzB,IAAKA,EAAYhvC,aAAamvC,GAO3B,OANAvgH,KAAK+B,GAAG0Y,MAAMtJ,MAAM,CACjBC,MAAOpR,KAAKoB,MAAM,sCAClBiN,KAAMrO,KAAKoB,MAAM,gCACjBmQ,GAAIvR,KAAKoB,MAAM,SAGX,EAGV,MAAMlB,EAAMF,KAAKE,IAGXg7E,EAAQv3E,GAAGzD,EAAIgK,MAErBgxE,GAAO71E,eAAe,CAAEzD,KAAM,SAG9B,MAAMsgH,EAAqBv+G,GAAGzD,EAAI6/G,mBAC5BwB,EAAgB59G,GAAGzD,EAAIigH,cAE7B+B,EAAmBx6G,SACnB65G,EAAc75G,SAEd1H,KAAKsgH,gBAAkBF,EAAY5uC,YAChC+uC,EACA58G,GAAGzD,EAAIuxE,aAAaxlE,YAGvB,MAAMq0G,EAAYtgH,KAAKsgH,UAEvB,IAAIn6G,EAASm6G,EAAUn6G,OAQvB,OANI+7G,EAAmBj2G,aAAY9F,EAASm6G,EAAUn6G,OAAS,GAE/Do7G,EAAc18G,SAAS7E,KAAKwhH,YAAYr7G,IACxCnG,KAAK8gH,qBACL5lC,GAAOvzE,kBAEA,CACV,CAEAk5G,cAAcsB,GAIX,OAHAx+G,GAAG3D,KAAKE,IAAI4/G,gBAAgBjlG,OAAOsnG,GACnCniH,KAAK4hH,aAEE,CACV,CAEAd,qBACG,MAAMnmC,EAAO36E,KACPE,EAAMF,KAAKE,IACXw+F,EAAU1+F,KAAK+B,GAAG0Y,MAGlB2nG,EAAcz+G,GAAGzD,EAAI8/G,YAE3BthB,EAAQj+F,GAAG,GAAI2hH,GAEf,MAAM9B,EAAYtgH,KAAKsgH,UAEvB,IAAKA,EAAW,OAGhB,MAAM+B,EAAY/B,EAAU,GAE5B,IAAK+B,EAAW,OAEhB,MAAMC,EAAgB,GAChB9mF,EAAY,GACZ+mF,EAAgBviH,KAAKyK,cAEvB83G,GACD/mF,EAAUl3B,QACJi+G,EAAcx7G,QAAQC,IAEtB,GACGhH,KAAKoG,SAASkrD,mBAAmBnrD,QACjCnG,KAAKoG,SAASkrD,kBAAkBjkD,QAAQrG,EAAEpG,IAAM,EAEhD,OAAO,EAIV,MAAM4hH,EAAWx7G,EAAEy2D,gBAEnB,IAAK+kD,EAAU,OAAO,EAEtB,MAAMC,EAAaD,EAASz5E,SAE5B,OAAK05E,GAEoB,iBAAlBA,EAAWp+G,GAAsB,KAIjD,MAAM+7G,EAAcpgH,KAAKogH,YAGrBz8G,GAAGzD,EAAI6/G,mBAAmB9zG,WAC3Bq2G,EAAch+G,QACR+9G,EAAUl0G,KAAI,CAACqoB,EAASzqB,KACjB,CACJnL,GAAImL,EAAQ,EACZpJ,MAAO6zB,EACPnyB,IAAK+7G,EAAYpuC,iBAAiBsuC,EAAWv0G,QAKtDs2G,EAAUp+G,SAAQ,CAACoG,EAAGgJ,KACnBivG,EAAch+G,KAAK,CAChB1D,GAAIyS,EAAI,EACR1Q,MAAO3C,KAAKoB,MAAM,aAAc,CAACiS,EAAI,IACrChP,IAAK+7G,EAAYpuC,iBAAiBsuC,EAAWjtG,IAC9C,IAIRivG,EAAcx2E,QAAQ,CACnBlrC,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,UAIrB,MAAMshH,EAAY,GACZC,EAAkB,GAExBnnF,EAAUv3B,SAAS+C,IAEhB,MAAM47G,EAAWN,EAAcx5G,QAC3BvF,GAAMA,EAAEc,KAAO2C,EAAE3C,KAAOs+G,EAAgBt1G,QAAQ9J,EAAE3C,IAAM,IAC1D,GAEF,IAAIiiH,EAAY,OAEZD,IACDC,EAAYD,EAAShiH,GAGrB+hH,EAAgBr+G,KAAKu+G,IAGxB,IAAIC,EAAc,CACfpiH,KAAM,aACNy1D,QAAS,EACTh0D,QAASmgH,EACT53G,QAAS1D,EAAEpG,GACXmiH,OAAQ,cACRpgH,MAAOkgH,EACPzgH,GAAI,CACDC,SAAU,WACPs4E,EAAKqoC,iBAAiBhjH,MACtB26E,EAAKsoC,gBACR,IAKN,GAAc,SAAVj8G,EAAE3C,IAAgB,CACnB,MAAM6+G,EAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAmB,CACtB,CAAExgH,MAAO3C,KAAKoB,MAAM,WAAYR,GAAI,KACpC,CAAE+B,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,OAElCwiH,EAAqB,CACxB,CAAEzgH,MAAO3C,KAAKoB,MAAM,WAAYR,GAAI,KACpC,CAAE+B,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,OAElCyiH,EAAoB,CACvB,CAAE1gH,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,MACrC,CAAE+B,MAAO3C,KAAKoB,MAAM,gBAAiBR,GAAI,SAEtC0iH,EAAmB,CACtB,CACG3gH,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,IAIVkiH,EAAc,CACX3sD,QAAS,EACTt0D,KAAM,CACHihH,EACA,CACGpiH,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,aAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKijH,gBAAgB,GAG3B97G,KAAM,YACN47G,OAAQ,mBACR5gH,QAAS+gH,EACTvgH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,OAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKijH,gBAAgB,GAG3B97G,KAAM,MACN47G,OAAQ,mBACR5gH,QAASghH,EACTxgH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,SAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKijH,gBAAgB,GAG3B97G,KAAM,QACN47G,OAAQ,mBACR5gH,QAASihH,EACTzgH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,QAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKijH,gBAAgB,GAG3B97G,KAAM,OACN47G,OAAQ,mBACR5gH,QAASkhH,EACT1gH,MAAO,MAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,SAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKijH,gBAAgB,GAG3B97G,KAAM,QACN47G,OAAQ,mBACR5gH,QAASmhH,EACT3gH,MAAO,IAInB,CAGA,GAAIqE,EAAEg5B,aAAc,CACjB,IAAIujF,EAAmB,GAEnBv8G,EAAEJ,iBACH28G,EAAmBv8G,EAAEJ,eACjBG,QAAQy8G,IAASA,EAAIxjF,eACrB7xB,KAAKq1G,IACI,CACJ5iH,GAAI4iH,EAAI5iH,GACR+B,MAAO6gH,EAAIpiH,WAKvB0hH,EAAc,CACX3sD,QAAS,EACTt0D,KAAM,CACHihH,EACA,CACGpiH,KAAM,aACNU,MAAO,IACPU,WAAY,GACZihH,OAAQ,iBACRzvC,QAAQ,EACRnxE,QAASohH,EACT5gH,MAAO4gH,EAAiB,GAAKA,EAAiB,GAAG3iH,GAAK,OAIlE,CAEA8hH,EAAUp+G,KAAK,CACZ5D,KAAM,SACNiB,YAAY,EACZR,KAAM,CACH,CACGT,KAAM,WACNy1D,QAAS,EACTx0D,YAAY,EACZT,IAAK,CAAE,cAAe,IACtBmgE,SAAU,sBAAsBr6D,EAAEuE,iBAAiBvE,EAAE5F,SAExD0hH,IAEJ,IAELpkB,EAAQj+F,GAAGiiH,EAAWN,GAEtBpiH,KAAKijH,gBACR,CAEAD,iBAAiBS,GACd,IAAKA,EAAe,OAEpB,MACMC,EADeD,EAAch4G,gBACGsqE,UACnC,CAAEgtC,OAAQ,kBACV,OACD,GAEGW,IAE4B,SAA7BD,EAAcx3G,WAAuBy3G,EAAiB/+G,OACrD++G,EAAiB9+G,OACzB,CAEA68G,eAAe53G,GAGZ,OAAIA,EAAK1D,OAFK,MAIXnG,KAAK+B,GAAG0Y,MAAMtJ,MAAM,CACjBC,MAAOpR,KAAKoB,MAAM,oBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,0HACA,CATK,SAaJ,EAIb,CAEA6hH,iBACG,MAAM/iH,EAAMF,KAAKE,IACXsxG,EAAa7tG,GAAGzD,EAAIgyG,WACpBzT,EAAKz+F,KAAK+B,GAEhB,IAAKyvG,EAAY,OAEjBA,EAAW12F,WAGX02F,EAAWnsG,eAAe,CAAEzD,KAAM,SAGlC,MAAMkgH,EAAc9hH,KAAK+hH,iBACnB7rD,EAAU,GAGhBA,EAAQ5xD,KAAK,CACV1D,GAAI,UACJ6tE,OAAQ,GACRpN,SAAUrhE,KAAKiiH,eACfjhH,MAAO,KAIVk1D,EAAQ5xD,KAAK,CACV1D,GAAI,YACJ6tE,OAAQ,CAAEK,QAAS,kBACnBzN,SAAU,sBACVrgE,MAAO,KAGV,MAAMg4G,EAAmB,GACnBC,EAAW,GA4DjB,IAzDC6I,GAAe,IAAI79G,SAAS+C,IAC1B,IAAI2nE,EAAkB3nE,EAAEpB,MAAMQ,SAASuoE,gBAMvC,GAHIA,GAA8C,iBAApBA,IAC3BA,EAAkB96D,KAAK0D,MAAMo3D,IAE5BA,GAAiBxoE,OAAQ,CAC1B,MAAM+yG,EAAe,GAGrBvqC,EAAgB1qE,SAAS+qB,IACtB,MAAMkuD,EAASuhB,EAAGtrE,iBACf,GAAGnsB,EAAEpB,MAAMhF,MAAM69F,EAAGhkF,MAAMvP,SAG7BguG,EAAa50G,KAAK44E,EAAOz8E,IAEzBu4G,EAAiB10G,KAAK,CACnBwE,OAAQo0E,EACRx8E,KAAMw8E,EAAOh9E,IAAIkzE,aACjBtsE,WAAYE,EAAEpB,MAAMhF,GACpB+tE,gBAAiB3/C,EAAK7N,MACtB8nD,eAAgBj6C,EAAKi6C,eACrB+4C,YAAah7G,EAAEg7G,aAChB,IAIL,MAAM7I,EAAU,GAAGj5G,EAAIihB,SAASna,EAAEpB,MAAMhF,MAAM69F,EAAGhkF,MAAMvP,QAGvD+tG,EAAS30G,KAAK60G,GAEd1a,EAAGhkF,MAAMha,GAAG,CACTC,KAAM,QACNQ,IAAK,iBACLN,GAAIu4G,EACJ13G,KAAM,CACHI,KAAMq3G,IAGf,CAEA,MAAM5zG,EAAyB,UAAhB0B,EAAEpB,OAAOvB,IAAkB,SAAW,OAErD6xD,EAAQ5xD,KAAK,CACV1D,GAAIoG,EAAEg7G,YACNvzC,OAAQznE,EAAEpB,MAAMxE,MAChBkE,OAAQA,EACR+7D,SAAU,CAACvpD,EAAKixB,EAAQpmC,IACrBA,EAAMqQ,QAAQ,OAAQ,QACzBoyD,SAAU,IACV1iE,WAAW,GACZ,IAGDs2G,EAAiB7yG,OAAQ,CAE1B,MAAMmzG,EAAqB,GAE3BN,EAAiB/0G,SAAS+C,IAGvBA,EAAE8B,OAAOsqB,WAAWpzB,KAAKyK,cAAc1D,UAEvCC,EAAE8B,OAAOjE,SAASmC,EAAE2nE,iBAGfxhE,MAAMC,QAAQksG,EAAmBtyG,EAAEF,eACrCwyG,EAAmBtyG,EAAEF,YAAc,IAGtCwyG,EAAmBtyG,EAAEF,YAAYxC,KAAK,CACnCowB,QAAS/wB,GAAGqD,EAAEtG,MAAM64G,kBACpB5zG,OAAQ6rG,EAAWgI,kBACnBvwC,eAAgBjiE,EAAEiiE,eAClB+4C,YAAah7G,EAAEg7G,aAChB,IAGL,MAAM7gG,EAAQ,CAAC,EAGfqwF,EAAW9jG,MAAM4rG,mBAAqBA,EAGtCnlG,OAAOC,KAAKklG,GAAoBr1G,SAASI,IACtC8c,EAAM9c,GAAO,CAAC1B,EAAOkH,KAElB,IAAItE,GAAU,EAgCd,OA9BAisG,EAAW9jG,MAAM4rG,mBAAmBj1G,GAAKJ,SAAS6E,IAC/C,MAAM66G,EAAW,CAAC,GAKjB7B,GAAe,IAAI79G,SAAS+C,IAC1B,MAAMimB,EAASpjB,EAAK7C,EAAEg7G,aAGH,SAAhBh7G,EAAEpB,MAAMvB,KACR4oB,EAAO6f,SAAS,kBAEhBvnC,GAAU,GAEbo+G,EAAS38G,EAAEpB,MAAMhF,IAAMqsB,CAAM,IAGdnkB,EAAO4rB,QAAQivF,KAI9Bp+G,GAAU,EAKb,IAGIA,CAAO,CAChB,IAGJisG,EAAW/sG,OAAO,QAAS0c,GAE3BqwF,EAAWvvG,OAAOg3G,SAAWA,EAC7BzH,EAAW9sG,SACd,MAEO8sG,EAAWvvG,OAAOg3G,UACnBzH,EAAWvvG,OAAOg3G,SAASh1G,SAASkvE,IACjC,MAAMywC,EAASjgH,GAAGwvE,GAEbywC,GAELA,EAAOlK,YAAY,IAKzBlI,EAAW/sG,OAAO,QAAS,CAAC,GAC5B+sG,EAAW9sG,UAId,MAAMm/G,EAAa,IAElB7jH,KAAKsgH,WAAa,IAAIr8G,SAAQ,CAACib,EAAKnT,KAClC,MAAM43G,EAAW,CACd/iH,GAAImL,EAAQ,IAId+1G,GAAe,IAAI79G,SAAS+C,IAC1B,MAAM6C,EAAOqV,EAAIlY,EAAEg7G,YAAc,GAEjC,GAAoB,SAAhBh7G,EAAEpB,MAAMvB,IAAgB,CAKzB,IAAIo0C,EAAagmD,EAAGt9E,MAAMhB,OAAOtW,EAAM,CACpCyW,OAAQtZ,EAAEsZ,SAEbm4B,EAAagmD,EAAGt9E,MAAMX,aAAai4B,EAAY,CAC5Cn4B,OAAQ,eAGQ,iBAAfm4B,IACDA,EAAaA,EAAa,MAAQ5uC,GAErC85G,EAAS38G,EAAEg7G,aAAevpE,CAC7B,MAAOkrE,EAAS38G,EAAEg7G,aAAen4G,CAAI,IAIxC85G,EAAoB,WAAI,EAExBE,EAAWv/G,KAAKq/G,EAAS,IAIJhgH,GAAGzD,EAAI6/G,mBAAmB9zG,YAE3B43G,EAAW19G,OAAS,GAAG09G,EAAWtvG,QAEzD,MAAMgtG,EAAgB59G,GAAGzD,EAAIigH,cAE7BoB,EAAc18G,SAAS7E,KAAKwhH,YAAYqC,IACxCrS,EAAWsI,eAAe5jD,GAC1Bs7C,EAAWj6F,MAAMssG,GAEb7jH,KAAKyhH,eAAeoC,GAAatC,EAAcn8G,UAC9Cm8G,EAAc75G,SAGnB8pG,EAAW7pG,gBACd,CAEAm8G,yBAAyBC,EAAiBC,EAAOj4G,GAC9C,MAAM7L,EAAMF,KAAKE,IAOX+jH,GAJY,IAAI1jG,KAASwjG,GAEOh4G,GAEEi4G,EAAQj4G,GAEhD,IAAI+B,EAAS,GAGb,MAAMo2G,GAAQD,EAAa,OAAUxtE,QAAQ,GACvChB,GAASwuE,EAAa,MAASxtE,QAAQ,GACvCd,GAAWsuE,EAAa,KAAOxtE,QAAQ,GACvC0tE,GAAWF,EAAa,KAAMxtE,QAAQ,GAqB5C,GAnBiB3oC,EAAbq2G,EAAU,EAAY,GACjBA,EAAU,GACPnkH,KAAKoB,MAAM,wCAAyC,CAC1D+iH,IAKc,GAAXxuE,EACG31C,KAAKoB,MAAM,+CAAgD,CACjE+iH,EAAU,KAGPxuE,EAAU,GACP31C,KAAKoB,MAAM,sCAAuC,CAACu0C,IACtDF,EAAQ,GACLz1C,KAAKoB,MAAM,sCAAuC,CAACq0C,IACjDz1C,KAAKoB,MAAM,qCAAsC,CAAC8iH,IAE5Dp2G,EACDnK,GAAGzD,EAAIigH,eAAet7G,SAASiJ,OAC3B,CACJ,MAAMoxE,EAAWv7E,GAAGzD,EAAIgyG,YAAY7lF,KAAK,CAAEi1F,WAAW,IACtD39G,GAAGzD,EAAIigH,eAAet7G,SAAS7E,KAAKwhH,YAAYtiC,GACnD,CACH,CAcA6iC,iBACG,MAAMj0G,EAAS,GACT5N,EAAMF,KAAKE,IAiGjB,OA9FuByD,GAAGzD,EAAI8/G,YAC1BjqC,UAAU,CAAEgtC,OAAQ,eAAiB,OACrCj6G,QAAQ2yF,GAAoC,QAAvBA,EAASxvF,cAEf,IAAIhI,SAASmgH,IAC7B,MAAM7B,EAAgBviH,KAAKyK,cAE3B,IAAK83G,EAAe,OAGpB,MAAM38G,EAAQ28G,EAAcx0G,UAAUq2G,EAAUniH,OAAOyI,SAEvD,IAAK9E,EAAO,OAEZ,MACMy+G,EAAY,CACfrC,YAFcoC,EAAUn4G,WAGxBrG,MAAOA,GAGV,GAAkB,SAAdA,EAAMvB,IAAgB,CACvB,MACMigH,EADeF,EAAU34G,gBACWsqE,UACvC,CAAEgtC,OAAQ,oBACV,OAIH,GAAIuB,EAAsB,CAMvB,IAAIhkG,EAEJ,OAPAgkG,EAAqBrgH,SAASw3F,IAC3B4oB,EAAU5oB,EAASx5F,OAAOkF,MAAQs0F,EAASxvF,UAAU,IAMhDo4G,EAAUzhD,OACf,IAAK,IACFtiD,EACG+jG,EAAU32D,IACV22D,EAAUE,UACVF,EAAU12D,MACV02D,EAAUE,UACVF,EAAUG,KACb,MACH,IAAK,IACFlkG,EACG+jG,EAAU12D,MACV02D,EAAUE,UACVF,EAAU32D,IACV22D,EAAUE,UACVF,EAAUG,KACb,MACH,IAAK,IACFlkG,EACG+jG,EAAUG,KACVH,EAAUE,UACVF,EAAU12D,MACV02D,EAAUE,UACVF,EAAU32D,IACb,MACH,IAAK,IACFptC,EACG+jG,EAAUG,KACVH,EAAUE,UACVF,EAAU32D,IACV22D,EAAUE,UACVF,EAAU12D,MAGnB02D,EAAU/jG,OAASA,CACtB,CACH,CAEA,GAAI1a,EAAMo6B,aAAc,CACrB,MACMykF,EADeL,EAAU34G,gBACQsqE,UACpC,CAAEgtC,OAAQ,kBACV,OACD,GAGF,GAAI0B,EAAmB,CACpB,MAAMC,EAAc9+G,EAAMgB,eAAemH,UACtC02G,EAAkBx4G,YAGrBo4G,EAAUK,YAAcA,CAC3B,CACH,CAEA52G,EAAOxJ,KAAK+/G,EAAU,IAGlBv2G,CACV,CAEA0zG,YAAYtiC,GACT,IAAI/4E,EAAS+4E,EAIb,OAFI/xE,MAAMC,QAAQ8xE,KAAW/4E,EAAS+4E,EAAS/4E,QAExCnG,KAAKoB,MAAM,qBAAsB,CAAC+E,GAC5C,CAOAhB,eAEG,MAAM+mB,EAAKlsB,KAAKkrB,eAOVq3F,EAAgBviH,KAAKyK,cAE3B,IAAK83G,EAAe,OAMpB,MAAMriH,EAAMF,KAAKE,IACXqhH,EAAgB59G,GAAGzD,EAAIigH,cAE7BoB,EAAcn8G,UAGd,MAAM81E,EAAQv3E,GAAGzD,EAAIgK,MACfy3G,EAAeh+G,GAAGzD,EAAIggH,aAE5BhlC,EAAM71E,aAAa,CAAEzD,KAAM,SAC3B+/G,EAAat8G,aAAa,CACvBzD,KAAM,MACNjB,SAAU,OAIb,MAAMmhH,EAAc9hH,KAAK+hH,iBAGnB4C,EAAWpC,EAAcv6G,QACzBwpG,EAAa7tG,GAAGzD,EAAIgyG,WACpB0S,EAAepT,EAAWnlF,KAAK,CAAEi1F,WAAW,IAElD,IAAIuD,EAAgB,EAEpB,MAAMC,EAAsB,KACzBD,GAAiB,EACjBlD,EAAat8G,aAAa,CACvBzD,KAAM,SACNjB,SAAUkkH,EAAgBD,EAAaz+G,QACxC,EAEC4+G,EAAa,CAACp5F,EAAQ2zB,KACrBkyD,IAEDA,EAAWwT,UAAUr5F,EAAQ,YAC7B6lF,EAAWr3B,aACXq3B,EAAWthF,WAAWvE,EAAQ,CAC3B01F,QAAS,OACTH,UAAW5hE,IAEdkyD,EAAWp3B,gBAGd0qC,IAEAt8G,QAAQ+G,MAAM+vC,EAAW,EAEtBo/C,EAAU1+F,KAAK+B,GAAG0Y,MAClBwqG,EAAc,CAACt5F,EAAQrO,EAAS,MACnC,GAAIk0F,EAAY,CAEb,MAAM0T,EAAW,GAEjB5nG,EAAOrZ,SAASkE,IACRA,GAAKhB,OAEQ26G,EAAYh5G,QAC1B9B,GAAMA,EAAEpB,OAASoB,EAAEpB,MAAMkB,YAAcqB,EAAIhB,OAC7C,GAEF+9G,EAAS5gH,KAAK6D,EAAIhB,KAAO,KAAOgB,EAAImJ,SAAQ,IAS/CkgG,EAAWr3B,aACXq3B,EAAWthF,WAAWvE,EAAQ,CAC3B01F,QAAS,UACTH,UAAWgE,EAAS52G,KAAK,WAE5BkjG,EAAWp3B,eACXo3B,EAAWwT,UAAUr5F,EAAQ,gBAChC,GAuCGk2F,EAAiBl+G,GAAGzD,EAAI+/G,eACxBkF,EAAY,KAGf5D,EAAc75G,SAGdwzE,EAAMvzE,eACNg6G,EAAah6G,eAEbk6G,EAAeh9G,SAAS,IACxBg9G,EAAel9G,OAEf,MAAMu6E,EAAWsyB,EAAWnlF,KAAK,CAAEi1F,WAAW,IAE9CC,EAAc18G,SAAS7E,KAAKwhH,YAAYtiC,IACxCl/E,KAAKwP,KAAK,OAAO,EAId03F,EAASh7E,GAAId,mBACbg6F,EAAoB,GAE1B,IAAI5mF,EACAgpE,EAEAN,GAAQp7E,cACT0S,EAAa0oE,EAAOj8E,WAEpBm6F,EAAkB9gH,QACZi+G,EAAcx7G,QACbC,GAAMA,EAAEg5B,cAAgBh5B,EAAEZ,SAASO,aAAe63B,EAAW59B,MAIpE4mG,EAAaN,EAAOp7E,aAGvB,MAAMu5F,EAAY,GAElB,IAAIC,GAAW,EA0Ef,IArECV,GAAgB,IAAI3gH,SAAQ,CAAC4F,EAAMkC,KACjC,MAAMu/B,EAAa,CAAC,EAGhB9M,GAAc4mF,EAAkBj/G,QAAUqhG,GAC3C4d,EAAkBnhH,SAAS+C,IACxB,MAAM2gG,EAAc3gG,EAAEK,WACjBL,EAAEK,WAAWP,WACb03B,EAAWlQ,KAEhBgd,EAAWtkC,EAAEF,YAAc,CAAC,EAC5BwkC,EAAWtkC,EAAEF,YAAY6gG,GACtBH,EAAWG,IAAgBH,EAAW5mG,EAAE,IAIjDkhH,EAAY79G,SAAS+C,IAClB,GAAKA,EAAEpB,OAAOvB,IAEd,OAAQ2C,EAAEpB,MAAMvB,KAIb,IAAK,SACF,GAAmC,iBAAxBwF,EAAK7C,EAAEg7G,aAA2B,CAC1C12E,EAAWtkC,EAAEpB,MAAMkB,aAChB+C,EAAK7C,EAAEg7G,cAAgB,IACxBhvG,QAAQ,aAAc,IAExB,KACH,CAEAs4B,EAAWtkC,EAAEpB,MAAMkB,YAAc+C,EAAK7C,EAAEg7G,aAExC,MAEH,QACG12E,EAAWtkC,EAAEpB,MAAMkB,YAAc+C,EAAK7C,EAAEg7G,aAG9C,IAGH,IAAIz8G,GAAU,EACV2/G,EAAW,GAGf,MAAM39G,EAAYg7G,EAAcnzF,YAAYkc,GAjH7B,IAAC3f,EAmHhBpmB,EAAUgC,EAAUiW,OACpB0nG,EAAW39G,EAAU+V,OAEjB/X,EAEDA,EAAUisG,EAAWj5B,SAAS1uE,EAAKjJ,KAEnC0kH,GAAW,EAEXL,EAAYp7G,EAAKjJ,GAAIskH,IAGpB3/G,GA/HYomB,EAgIH9hB,EAAKjJ,GA/Hd4wG,IAUDA,EAAW+T,aAAa55F,EAAQ,iBAChC6lF,EAAWr3B,aACXq3B,EAAWthF,WAAWvE,EAAQ,CAC3B01F,QAAS,GACTH,UAAW,KAEd1P,EAAWp3B,gBAgHXirC,EAAU/gH,KAAK,CAAE1D,GAAIiJ,EAAKjJ,GAAIiJ,KAAMyhC,KAChCg6E,GAAW,CAAK,KAKrBA,EAwBF,OAVAH,SAEAzmB,EAAQvtF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,gBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,sGAUT,MAAMokH,EAAc,CAAC,EAKf3/F,EAAkBi8F,EAAYh5G,QAChC9B,GAAMA,GAAKA,EAAEpB,OAAOo6B,cAAgBh5B,EAAE09G,cAG1C,IAAIX,EACAl+B,EAAU,EAEd,IAEG,MAAM4/B,EAAa,GAgFnB,IA9EC5/F,GAAmB,IAAI5hB,SAAS+C,IAC9B,MAAM6B,EAAe7B,EAAEpB,MAEjB8/G,EAAgB78G,EAAajC,eAEnC,IAAK8+G,EAAe,OAEpB,MAAMC,EAAeD,EAAc19G,QAEnC,IAAK29G,EAAc,OAEnB,MAAMC,EAAY/8G,EAAaxB,WAC1BwB,EAAaxB,WAAWP,WACxB+B,EAAa5D,OAAOqpB,KAGzBk3F,EAAY38G,EAAajI,IAAM,CAAC,EAuBhC6kH,EAAWnhH,KApBWa,WACnB,IACG,MAAM8E,QAAa07G,EAAa12F,QAAQ,CACrCL,MAAO,CAAC,EACR3lB,UAAU,KAEAgB,EAAKJ,MAAQI,GAEjB,IAAIhG,SAASib,IAGnBsmG,EAAY38G,EAAajI,IACtBse,EAAIlY,EAAE09G,YAAY59G,aACjBoY,EAAI0mG,EAAU,GAIxB,CAFE,MAAOz9G,GACNK,QAAQ+G,MAAMpH,EACjB,GAGa09G,GAAgB,UAG7Bp2G,QAAQ4R,IAAIokG,GAGlBJ,EAAUphH,SAAS4F,IAChB,MAAMyhC,EAAazhC,EAAKA,KAGxB2nG,EAAWr3B,aACXq3B,EAAWthF,WAAWrmB,EAAKjJ,GAAI,CAC5BygH,QAAS,cACTH,UAAW,KAEd1P,EAAWp3B,gBAGVv0D,GAAmB,IAAI5hB,SAAS+C,IAE9B,MAAM6B,EAAe7B,EAAEpB,MACjBggH,EAAY/8G,EAAaxB,WAC1BwB,EAAaxB,WAAWP,WACxB+B,EAAa5D,OAAOqpB,KACnBze,EACH21G,EAAY38G,EAAajI,IACtB0qC,EAAWziC,EAAa/B,aAGzB+I,IACFo1G,EAAYp7G,EAAKjJ,GAAI,CAAC,CAAEuG,KAAM0B,EAAa/B,cAC3Cw+G,GAAW,GAGdh6E,EAAWziC,EAAa/B,YAAc,CAAC,EACvCwkC,EAAWziC,EAAa/B,YAAY8+G,GAAa/1G,CAAI,GACtD,KAGAy1G,EAUF,OATA5mB,EAAQvtF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,gBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,2GAGN+jH,IAMH,MAAM9rD,EAAW,GACXysD,EAAe,CAACnB,EAAUoB,EAAa/sF,EAASgrF,IACnD,IAAIv0G,SAAQ,CAACC,EAASiH,KACnBqiB,EAAQ44B,iBAAiBm0D,GAEH5gH,WACnB,IACG,MAAM2I,QAAe62G,EAASt3C,YAAY,CACvC7+B,MAAOu3E,IAEJC,EAAel4G,EAAOwP,OAG5BnJ,OAAOC,KAAK4xG,GAAc/hH,SAASgiH,IAChC,MAAM12G,EAAQy2G,EAAaC,GAEvB12G,GACDw1G,EACGkB,EACA12G,EAAM+B,SAAW/B,EAAMs5F,YAAct5F,EAE3C,IAGH,MAAM22G,EAAap4G,EAAOjE,KACpBs8G,EAAsB,GAE5BhyG,OAAOC,KAAK8xG,GAAYjiH,SAASgiH,IAC9BE,EAAoB7hH,KACjB,IAAImL,SAAQ,CAACC,EAASiH,KAEIxR,WACpB,UACS6zB,EAAQ+4B,cACXm0D,EAAWD,IAlU1Bt6F,EAqUqBs6F,EApUhCzU,IAEDA,EAAW+T,aAAa55F,EAAQ,YAChC6lF,EAAWwT,UAAUr5F,EAAQ,YAC7B6lF,EAAWr3B,aACXq3B,EAAWthF,WAAWvE,EAAQ,CAC3B01F,QAAS,OACTH,UAAW,KAEd1P,EAAWp3B,gBAGd0qC,IAyT2Bp1G,GAIH,CAHE,MAAOvH,GACN48G,EAAWkB,EAAU99G,GACrBwO,EAAO,mBACV,CA1UV,IAACgV,CA0US,EAGHy6F,EAAgB,IAErB,IAGJ,MAAMC,EAA0BlhH,UAC7B,UACSsK,QAAQ4R,IAAI8kG,GAElBJ,EAAY9hH,SAASib,IAElB2mE,IACIA,EAAU,IAAM,GACjB7lF,KAAK8jH,yBACFC,EACAsB,EAAUl/G,OACV0/E,EAEN,IAGCA,IAAYm+B,IACbmB,IACA5D,EAAcn8G,WAGjBsK,GAOH,CANE,MAAOvH,GAKNwO,EAAOxO,EACV,SAGGk+G,GAIT,CAHE,MAAOl+G,GACNK,QAAQ+G,MAAMpH,GACdwO,EAAOxO,EACV,GAGHm+G,EAAe,IAGrBjB,EAAUphH,SAAS4F,IAChBwvD,EAAS/0D,KAAK,CAAE1D,GAAIiJ,EAAKjJ,GAAIiJ,KAAMA,EAAKA,MAAO,IAKlD,MAAM08G,EAAiB,GACjBvC,EAAQ3qD,EAASlzD,OAEvB,IAAI4F,EAAQ,EAEZ,KAAOstD,EAASlzD,QACbogH,EAAex6G,GAASstD,EAASltD,OAAO,EAAG,IAE3CJ,IAIH,MAAMy6G,EAAwB,CAC3BC,EACAC,EACAC,EACA3C,IAEA,IAAIv0G,SAAQ,CAACC,EAASiH,KAWIxR,WACpB,UACS2gH,EACHnB,EACA8B,EACAE,EACA3C,GAIH,MAAM4C,EAAcF,EAAiBnyG,QAGjCqyG,GAAazgH,aACRqgH,EACHI,EACAF,EACAC,EACA3C,GAIHt0G,GAKN,CAHE,MAAOvH,GAENwO,EAAOxO,EACV,GAGH6R,EAAgB,IAMtB+pG,EAAkB,IAAIxjG,KAEtB,MAAMmK,EAAO67F,EAAehyG,cAGtBiyG,EAAsB97F,EAAM67F,EAAgBvmH,KAAKU,KAAMsjH,EAWhE,CAVE,MAAO77G,GAENu2F,EAAQvtF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,0BAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MAAM,+CAGpB+jH,IACA38G,QAAQ+G,MAAMpH,EACjB,CACH,oBChyDH,MAAM44F,EAAgC,EAAQ,MAE9CthG,EAAOC,QAAU,cAAuC,EAGrDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,mBAAmB48F,EAAS77F,KAAMV,EAC/D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAAS2sD,SACf8zD,MAAO,CACJp1F,MAAO,EACP6uB,KAAMl6C,EAAS+sD,UACfnP,IAAK59C,EAASgtD,UAEjB0zD,MAAO,CACJzlD,SAAUj7D,EAAS4sD,SACd,yBAAyB5sD,EAAS8sD,kCAClC,IAER6zD,OAAQ3gH,EAAS4sD,SACZ,CACGqO,SAAU,yBAAyBj7D,EAAS8sD,kCAC5CvtD,OAAQ,IAEX,KACLqhH,OAAQ,CACL,CACGC,MAAO,GACPtkH,MAAO,UACPs6E,MAAO,WAEV,CACGgqC,MAAO,GACPtkH,MAAO,WACPs6E,MAAO,YAGbl8E,OAAQqF,EAAS6sD,aAGvB,CAEA9tD,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBCtDH,MAAMu2F,EAAgC,EAAQ,MAE9CthG,EAAOC,QAAU,cAAsC,EAGpDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,kBAAkB48F,EAAS77F,KAAMV,EAC9D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAASktD,QACf4zD,OAAQ9gH,EAASmtD,UACjB5wD,MAAO,UACPs6E,MAAO,UACP4pC,MAAO,CACJp1F,MAAO,EACP6uB,KAAMl6C,EAAS+sD,UACfnP,IAAK59C,EAASgtD,UAEjB0zD,MAAO,CACJzlD,SAAUj7D,EAAS4sD,SACd,yBAAyB5sD,EAAS8sD,kCAClC,IAER6zD,OACwB,QAArB3gH,EAASktD,SAAsBltD,EAASktD,QAInCltD,EAAS4sD,SACT,CACGqO,SAAU,yBAAyBj7D,EAAS8sD,kCAC5CvtD,OAAQ,IAEX,KARAS,EAAS4sD,SACN,yBAAyB5sD,EAAS8sD,kCAClC,GAOXnyD,OAAQqF,EAASrF,QAGvB,CAEAoE,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBClDH,MAAM+3F,EAA2B,EAAQ,OAEzC9iG,EAAOC,QAAU,cAAmC6iG,EACjD5iG,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,eAAe48F,EAAS77F,KAAMV,EAC3D,CAEAO,KACG,OAAOX,MAAMW,IAChB,CAEA0E,WAAWpD,EAAIu1D,SACNx3D,MAAMwD,KAAKvB,EAAIu1D,GAErB,MAAM6vD,EAAaxjH,GAAG3D,KAAKE,IAAIC,WACzBu+F,EAAU1+F,KAAK+B,GAAG0Y,MAEpB0sG,GAAYzoB,EAAQh7F,OAAOyjH,EAAYzoB,EAAQ96F,aAEnD,MAAM64F,EAAWz8F,KAAKU,KAChBwrB,EAAKlsB,KAAKkrB,eAEhB,GAAIgB,EAAI,CACL,MAAMk7F,EAAa,CAChB,eACA,SACA,SACA,SACA,mBAIAl7F,EAAGd,sBACD,iBAAmBc,EAAGd,mBAAmB2iF,SAAW,MAEtDtR,EAAStrE,SAAS,CACfC,QAASlF,EAAGd,mBACZiG,UAAW,eACXC,SAAU,KACPmrE,EAASxoC,aAAa,IAI/BmzD,EAAWnjH,SAASojH,IACjB5qB,EAAStrE,SAAS,CACfC,QAASlF,EACTmF,UAAWg2F,EACX/1F,SAAU,KACPmrE,EAASxoC,aAAa,GAE1B,GAER,CAEAwoC,EAASxoC,aACZ,CAEAzpD,SACG1K,MAAM0K,QACT,mBC3DH,MAAMsxF,EAAkB,WAExBr8F,EAAOC,QAAU,cAA4Co8F,EAC1Dn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,wBAAwB48F,EAAS77F,KAC3CuT,OAAOsmC,OACJ,CACG6sE,eAAgB,IAEnBpnH,GAGT,CAEAO,GAAG8mH,GACA,MAAMlqB,EAAMv9F,MAAMW,GAAG,CAClB0T,OAAOsmC,OAAO,CAAE75C,GAAIZ,KAAKE,IAAIonH,gBAAkBC,GAAoB,CAAC,KAKvE,cAFOlqB,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,SAIN,MAAMiyF,EAAWz8F,KAAKU,KAEtB+7F,EAAS+qB,SAAU,EAEnBxnH,KAAKi0D,YAAYwoC,EAAS1nF,OAAO0qF,aAEpC,CAEAxrC,YAAY0rC,GACT,MAAM8nB,EAAkB9jH,GAAG3D,KAAKE,IAAIonH,gBAEhCG,GAAiB59G,MAAM49G,EAAgB59G,KAAK6gE,KAAKi1B,EACxD,oBC/CH,MAAMoB,EAAgC,EAAQ,MAE9CthG,EAAOC,QAAU,cAAuC,EAGrDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,mBAAmB48F,EAAS77F,KAAMV,EAC/D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAASmuD,SACf2yD,OAAQ9gH,EAASouD,WACjB7xD,MAAO,UACPs6E,MAAO,UACP4pC,MAAO,CACJp1F,MAAO,EACP6uB,KAAMl6C,EAAS+sD,UACfnP,IAAK59C,EAASgtD,UAEjB0zD,MAAO,CACJzlD,SAAUj7D,EAAS4sD,SACd,yBAAyB5sD,EAAS8sD,kCAClC,IAER6zD,OAAQ3gH,EAAS4sD,SACZ,CACGqO,SAAU,yBAAyBj7D,EAAS8sD,kCAC5CvtD,OAAQ,IAEX,KACL5E,OAAQqF,EAAS6sD,aAGvB,CAEA9tD,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBC7CH,MAAMu2F,EAAgC,EAAQ,MAE9CthG,EAAOC,QAAU,cAAsC,EAGpDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,kBAAkB48F,EAAS77F,KAAMV,EAC9D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAASsuD,QACf/xD,MAAO,UACPs6E,MAAO,UACP8pC,OAAQ3gH,EAAS4sD,SACZ,CACGhyD,MAAOhB,KAAKU,KAAKqU,OAAO3O,SAAStE,WACjCu/D,SAAU,0BAA0Bj7D,EAAS8sD,mCAEhD,KACLw0D,aAAc,0BAA0BthH,EAASuuD,kCACjDgzD,OAAQ,EACR5mH,OAAQqF,EAASrF,QAGvB,CAEAoE,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBCpCH,MAAMsxF,EAAkB,WAExBr8F,EAAOC,QAAU,cAAqCo8F,EACnDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,iBAAiB48F,EAAS77F,KACpCuT,OAAOsmC,OACJ,CACGmtE,QAAS,IAEZ1nH,GAGT,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChB28F,EAAMv9F,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAI0nH,QACblnH,KAAM,WACN0O,MAAOqtF,EAAShnC,cAChBN,YAAasnC,EAASznC,mBACtBj0D,OAAQf,KAAKoG,SAASrF,OACtB8I,KAAM7J,KAAK6nH,iBACXzlH,GAAI,CACD0lH,YAAa,CAAClnH,EAAIkX,EAAK/L,KACpB/L,KAAK+nH,WAAWjwG,EAAIzJ,KAAM,IAAIkS,KAAO,EAWxCynG,cAAgBn6F,IACb7tB,KAAKioH,cAAcp6F,EAAM,MAQrC,cAFOwvE,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM06F,EAAWz8F,KAAKU,KAEtB+7F,EAASyrB,WAAazrB,EAASyrB,YAAc,CAAC,EAE9C,MAAMhoH,EAAMF,KAAKE,IACXioH,EAAWxkH,GAAGzD,EAAI0nH,SAExB,GAAIO,EAAU,CACX,MAAMC,EAAeD,EAASpyC,UAAU,CAAEr1E,KAAM,SAE5C0nH,IAEI3rB,EAASyrB,WAAWG,iBACtB5rB,EAASyrB,WAAWG,eACjBD,EAAav+G,KAAKqkB,YACf,kBACA,CAACL,EAAOhkB,EAAMy+G,KACK,WAAZA,GACDtoH,KAAKuoH,cAAc16F,GAAQhkB,GAAQ,CAAC,GAAGwE,KAC1C,KAKZ5K,MAAMC,OAAO0kH,EAAc3kH,MAAMG,aAEvC,CAEA,MAAMmuB,EAAK/xB,KAAKkrB,eAEX6G,IAKA0qE,EAASyrB,WAAW5/C,SACtBm0B,EAASyrB,WAAW5/C,OAASv2C,EAAG3vB,GAAG,UAAU,IAC1CpC,KAAKwoH,oBAGN/rB,EAASyrB,WAAWx6C,SACtB+uB,EAASyrB,WAAWx6C,OAAS37C,EAAG3vB,GAAG,UAAU,IAC1CpC,KAAKwoH,oBAGN/rB,EAASyrB,WAAW9xG,SACtBqmF,EAASyrB,WAAW9xG,OAAS2b,EAAG3vB,GAAG,UAAU,IAC1CpC,KAAKwoH,oBAGN/rB,EAASyrB,WAAW12F,WACtBirE,EAASyrB,WAAW12F,SAAWO,EAAG3vB,GAAG,YAAY,IAC9CpC,KAAKwoH,oBAEd,CAEAX,iBACG,MAAMprB,EAAWz8F,KAAKU,KAChBqxB,EAAK/xB,KAAKkrB,eAEhB,IAAK6G,EAAI,OAAO,KAEhB,MAAM02F,EAAUhsB,EAASnnC,eACnBozD,EAAajsB,EAASlnC,kBACtBozD,EAAUlsB,EAASjnC,eAEzB,IAAKizD,IAAYC,EAAY,OAAO,KAEpC,MAAME,EAAcH,EAAQ3hH,WACtB+hH,EAAiBH,EAAW5hH,WAC5BgiH,EAAcH,EAAUA,EAAQ7hH,WAAa,KAC7CiiH,EAAah3F,EAAGY,UAChBq2F,EAAW,GA6BjB,OA3BAD,EAAW9kH,SAAQ,CAACmK,EAAMrC,KACvB,GAAIqC,EAAKy6G,GAAiB,CACvB,MAAMtuF,EAAOkiE,EAAShnC,cAAcppC,MAAMkO,GAChCA,EAAK53B,QAAUyL,EAAKw6G,KAExB/+G,EAAO,CACVjJ,GAAIwN,EAAKxN,GACTqoH,QAAS1uF,EAAOA,EAAK35B,GAAK,EAC1B6f,KAAMrS,EAAK06G,GAAe,IAAIvoG,KAAKnS,EAAK06G,IAAgB,KACxDI,aAAc,IAAI3oG,KAAKnS,EAAiB,YACxCC,KAAMD,EAAKy6G,IAGdG,EAAS1kH,KAAKuF,EACjB,KAGHm/G,EAASr7G,MAAK,SAAUC,EAAGC,GACxB,OAAIi7G,EACM,IAAIvoG,KAAK3S,EAAE6S,MAAM20B,UAAY,IAAI70B,KAAK1S,EAAE4S,MAAM20B,UAGlD,IAAI70B,KAAK3S,EAAEs7G,cAAc9zE,UACzB,IAAI70B,KAAK1S,EAAEq7G,cAAc9zE,SAElC,IAEO4zE,CACV,CAEAR,iBACG,MAAM/rB,EAAWz8F,KAAKU,KAElB+7F,EAAS0sB,kBAAkBp1G,aAAa0oF,EAAS0sB,kBAErDnpH,KAAK27E,OAEL,MAAMz7E,EAAMF,KAAKE,IAEjBu8F,EAAS0sB,iBAAmBx0G,YAAW,KACpC,MAAMwzG,EAAWxkH,GAAGzD,EAAI0nH,SAExB,IAAKO,EAAU,OAGf,MAAMC,EAAeD,EAASpyC,UAAU,CAAEr1E,KAAM,SAE5C0nH,GAAcA,EAAattG,WAG/B,MAAMsuG,EAAcppH,KAAK6nH,iBAErBuB,GACDjB,EAAS5wG,MAAM6xG,GAIdhB,GAAcA,EAAaiB,SAAS,EAAGx+E,OAAOy+E,yBAE3C7sB,EAAS0sB,iBAEhBnpH,KAAK+7E,OAAO,GACZ,GACN,CAEAgsC,WAAWwB,EAAaC,GACrBxpH,KAAKypH,SAASF,EAAaC,EAC9B,CAEArkH,oBAAoB0oB,EAAO07F,GACxB,MAAM9sB,EAAWz8F,KAAKU,KAChBsH,EAAQy0F,EAASz0F,QAEvB,IAAKA,EAAO,OAEZ,MAAM0hH,EAAejtB,EAASlnC,kBAE9B,IAAKm0D,EAAc,OAEnB,MAAM/jH,EAAS,CAAC,EAIhB,OAFAA,EAAO+jH,EAAa5iH,YAAcyiH,GAAe,SAEpCvhH,EAAM0lE,OAAO7/C,EAAOloB,EACpC,CAEAR,oBAAoB0oB,GACjB,MACM7lB,EADWhI,KAAKU,KACCsH,QAEvB,GAAKA,EAEL,aAAaA,EAAMoO,OAAOyX,EAC7B,CAEA8tD,OACG,MAAMz7E,EAAMF,KAAKE,IACXioH,EAAWxkH,GAAGzD,EAAI0nH,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAASpyC,UAAU,CAAEr1E,KAAM,SAE3C0nH,IAELA,EAAahjH,UAETgjH,EAAa/iH,cACd+iH,EAAa/iH,aAAa,CAAEzD,KAAM,SACxC,CAEAm6E,QACG,MAAM77E,EAAMF,KAAKE,IACXioH,EAAWxkH,GAAGzD,EAAI0nH,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAASpyC,UAAU,CAAEr1E,KAAM,SAE3C0nH,IAELA,EAAa1gH,SAET0gH,EAAazgH,cAAcygH,EAAazgH,eAC/C,CAEAxC,eAAeokH,EAAaC,GACzB,IAAKD,EAAa,OAElB,MAAMx3F,EAAK/xB,KAAKkrB,eAEhB,IAAK6G,EAAI,OAET,MAAM0qE,EAAWz8F,KAAKU,KAChBsH,EAAQy0F,EAASz0F,QACjBy2F,EAAKz+F,KAAK+B,GAEhB,IAAKiG,EAUF,YATAy2F,EAAGr2F,OAAO2sB,QACP,CAAC,EACD,CACGzjB,QACG,iEACHwpB,SAAU2hE,EAASr7F,QAO5B,MAAMwmH,EAAU,CAAC,EACXliE,EAAY+2C,EAASnnC,eAEvB5P,IAAWkiE,EAAQliE,EAAU5+C,YAAc23F,EAAG7rF,QAAQhC,YAE1D,MAAM84G,EAAejtB,EAASlnC,kBAE1Bm0D,IAAc9B,EAAQ8B,EAAa5iH,YAAcyiH,GAErD,MAAMvvC,EAAYyiB,EAASjnC,eAEvBwkB,IAAW4tC,EAAQ5tC,EAAUlzE,YAAc0iH,GAG/C,MAAMp8F,EAAS2E,EAAG3G,mBAElB,GAAIgC,GAAQtB,YAAa,CACtB,MAAM0S,EAAapR,EAAOnC,WACpBK,EAAYyG,EAAGzG,UAEjBkT,GAAclT,IACfs8F,EAAQt8F,EAAUxkB,YAAc,CAAC,EACjC8gH,EAAQt8F,EAAUxkB,YAAY03B,EAAWlQ,MACtClB,EAAOtB,YAAYlrB,GAE5B,CAEA,aAAaoH,EAAMsgE,OAAOs/C,EAC7B,CAEAp9G,OAAOkuD,GACJ54D,MAAM0K,OAAOkuD,EAChB,iEChTY,MAAMojC,UAAwB,IAC1Cn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAMD,GAAU,UAAU48F,EAAS77F,KAAMV,GAEzCF,KAAKU,KAAO+7F,EACZz8F,KAAKoG,SAAWq2F,EAASr2F,SACzBpG,KAAK+B,GAAK06F,EAAS16F,GACnB/B,KAAKkrB,eAAiBuxE,EAASvxE,eAE/BlrB,KAAK40B,SAAW,GAShB50B,KAAKm9G,gBAAkB,KAIvBn9G,KAAK2pH,wBAA0B,IAGlC,CAOIl/G,oBACD,OAAOzK,KAAK+B,GAAGgW,WAAW/X,KAAKm9G,gBAClC,CAMI/P,4BACD,OAAOptG,KAAK+B,GAAGspB,mBAAmBrrB,KAAK2pH,wBAC1C,CAEAlpH,GAAGmpH,EAAe,IAEf,MAAMvsB,EAAM,CACTz8F,GAAIZ,KAAKE,IAAIC,UACbO,KAAM,SACNkB,KAAM,QACNC,KAAM+nH,GAST,OAFKvsB,EAAIx7F,KAAKsE,SAAQk3F,EAAIt8F,OAAS,IAE5Bs8F,CACV,CAEAl4F,WAAWpD,GACR/B,KAAK+B,GAAKA,CACb,CAOA+rG,mBAAmB5iF,GAChBlrB,KAAK2pH,wBAA0Bz+F,GAAgBtqB,EAClD,CAEAoE,WAAWC,GACRjF,KAAKm9G,gBAAkBl4G,GAAQrE,EAClC,CAcAuwB,SAASwD,GACN,IAAKA,IAAQA,EAAIvD,UAAYuD,EAAIrD,SAAU,OAG3C,MAAMsD,EAAW50B,KAAK40B,SACPA,EAAS9rB,QACpBuB,GAAMA,EAAE+mB,UAAYuD,EAAIvD,SAAW/mB,EAAEgnB,YAAcsD,EAAItD,YAI/ClrB,SAETyuB,EAAStwB,KAAK,CACX8sB,QAASuD,EAAIvD,QACbC,UAAWsD,EAAItD,UACfC,SAAUqD,EAAIrD,WAIjBqD,EAAIvD,QAAQhvB,GAAGuyB,EAAItD,UAAWsD,EAAIrD,UAExC,CAMAu4F,cACG7pH,KAAK40B,SAAS3wB,SAAS0wB,IACpBA,EAAIvD,QAAQ0D,eAAeH,EAAItD,UAAWsD,EAAIrD,SAAS,IAG1DtxB,KAAK40B,SAAW,EACnB,CAMApqB,SAGG,MAAM0hB,EAAKlsB,KAAKkrB,eAEXgB,GAEDA,EAAGT,aAAeS,EAAGpC,eAAeC,YAErCmC,EAAGsF,UACT,oBClJH,MAAM+wE,EAA2B,EAAQ,OAEzC9iG,EAAOC,QAAU,cAAkD,EAGhEC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,8BAA8B48F,EAAS77F,KACjDuT,OAAOsmC,OACJ,CACGjM,MAAO,IAEVtuC,IAINF,KAAK8pH,aAAe,KACpB9pH,KAAK+pH,eAAiB,KAGtB/pH,KAAKypG,kBAAoBhN,EAAS16F,GAAGoxB,iBAClC,GAAGspE,EAAS77F,sBAGfZ,KAAKgqH,yBACR,CAEAvpH,KACG,MAAMwpH,EAA0B,CAC7BrpH,GAAIZ,KAAKE,IAAIsuC,MACb9tC,KAAM,YACN+B,MAAO,CACJ,CACG+rC,MAAO,OACP9tC,KAAM,SACNmB,KAAM,CACH,CACGnB,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,uBAM3Bi8F,EAAMv9F,MAAMW,GAAG,CAACwpH,IAStB,OAPAA,EAAwBxnH,MAAM6B,KAC3B6P,OAAOsmC,OAAO,CAAEjM,MAAO,MAAQxuC,KAAKkqH,YAAYzpH,MAChD0T,OAAOsmC,OAAO,CAAEjM,MAAO,QAAUxuC,KAAKmqH,cAAc1pH,cAGhD48F,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,EAAIu1D,SACNx3D,MAAMwD,KAAKvB,EAAIu1D,SAEf7nD,QAAQ4R,IAAI,CACfrhB,KAAKkqH,YAAY5mH,KAAKvB,EAAIu1D,GAC1Bt3D,KAAKmqH,cAAc7mH,KAAKvB,EAAIu1D,KAG/Bt3D,KAAKgqH,0BAEL,MAAM99F,EAAKlsB,KAAKkrB,eAEhB,GAAIgB,EAAI,CACL,MAAMuwE,EAAWz8F,KAAKU,KAGtB+7F,EAAStrE,SAAS,CACfC,QAASlF,EACTmF,UAAW,WACXC,SAAU,IAAMtxB,KAAKoqH,gBAGxB3tB,EAAStrE,SAAS,CACfC,QAASlF,EACTmF,UAAW,eACXC,SAAU,IAAIxP,IAAM9hB,KAAKoqH,eAAetoG,IAE9C,CAEA9hB,KAAKoqH,aACR,CAEA5/G,SACG1K,MAAM0K,SAENxK,KAAKgqH,0BACLhqH,KAAKoqH,aACR,CAEIF,kBACD,OAAQlqH,KAAK8pH,aACV9pH,KAAK8pH,cACL9pH,KAAKU,KACD+lB,QACA4F,MAAMjZ,GAAkB,OAAZA,GAAGjM,OACfhH,WACV,CAEIgqH,oBACD,OAAQnqH,KAAK+pH,eACV/pH,KAAK+pH,gBACL/pH,KAAKU,KACD+lB,QACA4F,MAAMjZ,GAAkB,SAAZA,GAAGjM,OACfhH,WACV,CAEAiqH,YAAYj8F,GACT,MAAMjC,EAAKlsB,KAAKkrB,eACVhrB,EAAMF,KAAKE,IACXivG,EAASxrG,GAAGzD,EAAIsuC,QAElBtiB,IACIiC,IAAUA,EAAWjC,EAAGJ,aAIzBqC,GACAjC,EAAGT,aAAeS,EAAGpC,eAAeC,YAClCmC,EAAGT,aAAeS,EAAGpC,eAAeyB,cAQ7BvrB,KAAKypG,kBAAkBlkG,QAAQ4oB,IAI5CghF,EAAOl2B,UAAU,MACjBj5E,KAAKkqH,aAAa1/G,aAElB2kG,EAAOl2B,UAAU,QACjBj5E,KAAKmqH,eAAe3/G,YAdjB2kG,EAAOl2B,UAAU,OAgB1B,CAEA+wC,0BACG,MAAM99F,EAAKlsB,KAAKkrB,eACVu+E,EAAoBzpG,KAAKypG,kBAE3Bv9E,GAAIjB,WAAYw+E,EAAkBr2E,WAAWlH,EAAGjB,WAAWlkB,UAC1D0iG,EAAkBr2E,WAAW,IAElCq2E,EAAkB5kG,SACf7E,KAAKoG,SAASyiB,kBACX7oB,KAAKU,KAAKf,YAAYmiC,gBAAgBjZ,iBAE/C,oBC7JH,MAAMizE,EAAkB,WAExBr8F,EAAOC,QAAU,cAAuCo8F,EACrDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,mBAAmB48F,EAAS77F,KAAMV,GAE5DF,KAAKmC,QAAU,KAEfnC,KAAKunG,eAAiB,CAEtB,EAIAvnG,KAAKqqH,iBAAmB,CAExB,EAIArqH,KAAKsqH,mBAAsBtnD,IACxBy5B,EAAST,WAAWh5B,EAAO,CAEjC,CAEAviE,GAAGmpH,GAEA,MAAMnjG,EAAQzmB,KAAKU,KAAK21D,sBAClBk0D,EAAWvqH,KAAKwqH,YAAY/jG,GAC5B42E,EAAMv9F,MAAMW,GAAGmpH,GAAgBW,GAIrC,cAFOltB,EAAIz7F,KAEJy7F,CACV,CAGAl4F,WAAWpD,EAAIu1D,EAAc,EAAGn1D,EAAU,CAAC,SAClCrC,MAAMwD,KAAKvB,GAEjB/B,KAAKmC,QAAUA,EAEf,MAAMif,EAAW,GAUjBzd,GAAG3D,KAAKE,IAAIC,YAAYsE,OAAO,MAAO,eAAe6yD,KAErD,MAAMiwC,EAAiBvnG,KAAKunG,eAG5B,IAAK,MAAMljG,KAAOkjG,IAGXA,EAAeljG,KACfrE,KAAKU,KAAK+lB,OAAOrT,GAAMA,EAAExS,KAAOyD,IAAK8B,UAKrCmxD,EACDl2C,EAAS9c,KAAKijG,EAAeljG,GAAKf,KAAKvB,EAAIu1D,EAAan1D,IAK3DwB,GAAG3D,KAAKqqH,iBAAiBhmH,IAAMM,cAG5B8K,QAAQ4R,IAAID,EACrB,CAEAopG,YAAY/jG,GACT,MAAM5kB,EAAO,GACP4oH,EAAe,CAAC,EAEtB,IAAIC,EACAC,EAEJ,MAAMvkH,EAAWpG,KAAKoG,SAChBwgF,EAAkB5mF,KAAKU,KAAKf,YAAYmiC,gBAsF9C,OApFArb,EAAMxiB,SAASmP,IAGZ,IAAIjT,EAEJ,IACGA,EAAYiT,EAAEjT,WAOjB,CANE,MAAOgI,GACNhI,EAAYiT,EAAEjT,UAAUH,KAAK+B,GAAGw3B,MAEhC,MAAM94B,EAAKN,EAAUM,GAErBN,EAAUM,IAAK,IAAOA,GAAIqyB,KAAK3yB,EAClC,CAcA,GAZAH,KAAKunG,eAAen0F,EAAExS,IAAMT,EAYR,MAAhBiT,EAAEzS,SAAS21D,GAAaljD,EAAEzS,SAAS21D,IAAMo0D,EAAa,CACvDA,EAAct3G,EAAEzS,SAAS21D,GAAKz0D,EAAKsE,OACnCwkH,EAAc,EAEd,MAAMC,EAAS,CACZzpH,KAAM,IAIH0pH,EAAYzkH,EAAS8vD,SAAW0wB,EAAgB1wB,QAEtD,IAAK,IAAI7iD,EAAI,EAAGA,EAAIw3G,EAAWx3G,IAC5Bu3G,EAAOzpH,KAAKmD,KAAK,CACd6xD,QAAS/vD,EAAS+vD,UAAU9iD,GACvBwR,SAASze,EAAS+vD,QAAQ9iD,IAC1BuzE,EAAgBzwB,UAG3Bt0D,EAAKyC,KAAKsmH,EACb,CAGA,MAAME,EAAUjpH,EAAKsE,OAAS,EACxB4kH,EAASlpH,EAAKipH,GACdE,EAAS53G,EAAEzS,SAASuM,GAAK,EACzB+9G,EAAS,GAAGH,KAAWE,IAE7B,IAAIE,EAAU,EAEVT,EAAaQ,IACdziH,QAAQ+G,MACL,aAAapP,GAAWD,KAAKC,uCAAuCsqH,EAAaQ,GAAQ/qH,KAAKC,wCAGpGsqH,EAAaQ,GAAU9qH,EAEnB4qH,EAAO5pH,KAAK6pH,IAAS70D,UACtB+0D,EAAUH,EAAO5pH,KAAK6pH,GAAQ70D,SAEjC,MAAMknC,EAAMl9F,EAAUM,KAEtBT,KAAKqqH,iBAAiBj3G,EAAExS,IAAMy8F,EAAIz8F,GAClCy8F,EAAIlnC,QAAU+0D,EAGdH,EAAO5pH,KAAK6pH,GAAU3tB,EAGtBr9F,KAAKmxB,SAAS,CACXC,QAAShe,EACTie,UAAW,aACXC,SAAUtxB,KAAKsqH,mBAAmBx3F,KAAK9yB,QAG1C2qH,GAAa,IAGT9oH,CACV,CAEA2I,SACG1K,MAAM0K,SAGN2J,OAAOxO,OAAO3F,KAAKunG,gBAAgBtjG,SAAS+R,IACzCA,EAAIxL,UAAU,GAEpB,oBCtLH,MAAMsxF,EAAkB,WAClB4I,EAAwB,EAAQ,OAChCpF,EACH,WAEH7/F,EAAOC,QAAU,cAAsCo8F,EACpDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,kBAAkB48F,EAAS77F,KACrCuT,OAAOsmC,OACJ,CACG0wE,WAAY,GACZC,aAAc,IAEjBlrH,IAINF,KAAKm9F,SAAW,IACnB,CAEA18F,KACG,MAAMP,EAAMF,KAAKE,IACXm9F,EAAMv9F,MAAMW,GAAG,CAClB,CACGG,GAAIV,EAAIirH,WACRzqH,KAAM,aACNgB,OAAQ,IACRD,KAAM,CACHb,GAAIV,EAAIkrH,aACR1qH,KAAM,aACN2qH,SAAU,GACVC,SAAU,GACV1pH,KAAM,QACNT,KAAM,IAETiB,GAAI,CACDmpH,cAAepmH,UACZ,MAAMoqB,EAAM5rB,GAAGzD,EAAIirH,YAAYnV,uBAEzBh2G,KAAK0B,OAAO6tB,EAAI,MAQlC,cAFO8tE,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACXgsB,EAAKlsB,KAAKkrB,eAEhB,IAAKgB,EAAI,OAET,MAAMs/F,EAAW7nH,GAAGzD,EAAIkrH,cAGxBprH,KAAKm9F,SAAWn9F,KAAKo9F,eAAej9F,YACpCH,KAAKm9F,SAAS75F,KAAK,CAChB5C,KAAMV,KAAKU,KACXwqB,eAAgBgB,IASnBA,EAAGu+C,iBAAiB+gD,GACpBt/F,EAAG9pB,GAAG,oBAAoB,KACvBpC,KAAK27E,MAAM,IAEdzvD,EAAG9pB,GAAG,mBAAmB,KACtBpC,KAAK+7E,OAAO,IAEf7vD,EAAG9pB,GAAG,YAAY,KACfpC,KAAKyrH,YACLzrH,KAAK0rH,YAAY,IAEpBx/F,EAAG9pB,GAAG,UAAU,KACbpC,KAAKyrH,YACLzrH,KAAK0rH,YAAY,IAEpBx/F,EAAG9pB,GAAG,UAAU,KACbpC,KAAKyrH,YACLzrH,KAAK0rH,YAAY,IAEpBx/F,EAAG9pB,GAAG,UAAU,KACbpC,KAAKyrH,YACLzrH,KAAK0rH,YAAY,GAYvB,CAEAlhH,SACG1K,MAAM0K,SAEN,MAAM0hB,EAAKlsB,KAAKkrB,eAEXgB,GAEDA,EAAGT,aAAeS,EAAGpC,eAAe0B,aAAaxrB,KAAK0rH,YAC7D,CAEInxD,gBACD,OAAOv6D,KAAK2rH,YAAc,CAC7B,CAEIpxD,cAAUhrC,GACXvvB,KAAK2rH,WAAap8F,CACrB,CAEAosD,OACG,MAAMz7E,EAAMF,KAAKE,IACX0rH,EAASjoH,GAAGzD,EAAIkrH,cAChBS,EAASloH,GAAGzD,EAAIirH,YAGtB,IAAKU,IAAWD,EAAQ,OAExBA,EAAOxmH,UAEP,MAAMs5F,EAAU1+F,KAAK+B,GAAG0Y,MAEnBoxG,EAAOxmH,cAAcq5F,EAAQh7F,OAAOmoH,EAAQntB,EAAQ96F,aAEzDioH,EAAOxmH,aAAa,CAAEzD,KAAM,QAC/B,CAEAm6E,QACG,MAAM77E,EAAMF,KAAKE,IACX0rH,EAASjoH,GAAGzD,EAAIkrH,cAChBS,EAASloH,GAAGzD,EAAIirH,YAGtB,IAAKU,IAAWD,EAAQ,OAExBA,EAAOlkH,SAEP,MAAM3F,EAAK/B,KAAK+B,GAEZ8pH,IAAWA,EAAOlkH,cACnB5F,EAAG0Y,MAAM/W,OAAOmoH,EAAQ9pH,EAAG0Y,MAAM7W,aAEpCioH,EAAOlkH,cACV,CAEA+jH,aACG,MAAMxrH,EAAMF,KAAKE,IACXsyD,EAAWxyD,KAAKoG,SAASosD,SACzBF,EAActyD,KAAKoG,SAASksD,YAC5Bw5D,EAAU,GACV5/F,EAAKlsB,KAAKkrB,eAEhB,IAAKgB,EAGF,YAFAlsB,KAAK+7E,QAKR,MAAM6vC,EAASjoH,GAAGzD,EAAIkrH,eAAiBznH,GAAGzD,EAAIC,WAE9C,IAAKyrH,GAAUvsE,MAAMusE,EAAOG,QAGzB,YAFA/rH,KAAK+7E,QAKR,MAAM0gB,EAAWz8F,KAAKU,KAChBo5D,EAASj1C,SAAS7kB,KAAKoG,SAAS0zD,QAChCkyD,EAAczlH,KAAKC,OACrBolH,EAAOG,OAAS,GAAc,GAATjyD,GAAeA,GAGlCj4D,EAAOqqB,EAAGyG,UAGhB,GAAIi5F,EAAOK,gBAAkBpqH,EAAKsE,OAG/B,YAFAnG,KAAK+7E,QAKR6vC,EAAOK,cAAgBpqH,EAAKsE,OAG5BnG,KAAKksH,UAAYN,EAAO9gH,cAAgB8gH,EAAO9gH,gBAAgB3E,OAAS,EAExE,IAAIgmH,EAAUtqH,EAAKsE,OAEf+lB,EAAG9lB,SAAS2iB,SAA8B,IAAnB/oB,KAAKksH,UAAiBC,EAAUtqH,EAAKsE,OACvDtE,EAAKsE,OAASnG,KAAKksH,UAAY,KAAIC,EAAUnsH,KAAKksH,UAAY,IAEvE,IAAK,IAAI74G,EAAIrT,KAAKksH,UAAW74G,EAAI84G,EAAS94G,IAAK,CAE5C,MAAM2nD,EAAY,IAAI0pC,EAAsBjI,EAAU56F,EAAKwR,GAAGzS,IACxDy8F,EAAMriC,EAAUv6D,KAGtB48F,EAAIz7F,KAAO,QACXy7F,EAAIn8F,IAAM,kBAENoxD,GAAeE,KAChB6qC,EAAIn8F,KAAO,8BAA8BW,EAAKwR,GAAGzS,KAE7C0xD,IAAa+qC,EAAIn8F,KAAO,mBAExBsxD,IAAU6qC,EAAIn8F,KAAO,kBAG5Bm8F,EAAIguB,SAAW,GACfhuB,EAAIiuB,SAAW,EACfjuB,EAAIj4B,SAAW4mD,EAAc,GAC7B3uB,EAAIxiB,SAAWmxC,EAEXJ,EAAO3gH,SACR2gH,EAAO3gH,QAAQoyF,GAAM,GACrBriC,EAAU13D,KAAK,KAAM,GACrBqR,WAAWqmD,EAAU54B,YAAYvgC,EAAKwR,IAAK,IACvCy4G,EAAQxnH,KAAK+4F,EACvB,CAEA,GAAIyuB,EAAQ3lH,OAAQ,CACjB,MAAMimH,EAAa,CAChBxrH,GAAIV,EAAIkrH,aACR1qH,KAAM,aACN2qH,SAAU,GACVC,SAAU,GACV1pH,KAAM,QACNT,KAAM2qH,GAGT9rH,KAAK+B,GAAG0Y,MAAMha,GAAG2rH,EAAYzoH,GAAGzD,EAAIirH,YAAaxnH,GAAGzD,EAAIkrH,eAExD,IAAK,IAAI1qF,EAAI1gC,KAAKksH,UAAWxrF,EAAIyrF,EAASzrF,IAAK,CAC5C,MAAMs6B,EAAY,IAAI0pC,EAAsBjI,EAAU56F,EAAK6+B,GAAG9/B,IAE9Do6D,EAAU13D,KAAK,KAAM,GACrBqR,WAAWqmD,EAAU54B,YAAYvgC,EAAK6+B,IAAK,EAC9C,CACH,CAEI/8B,GAAGzD,EAAIirH,cACRxnH,GAAGzD,EAAIirH,YAAY9B,SAAS,EAAGrpH,KAAKu6D,YAEhCjI,GAAeE,KAChBo5D,EAAOl+G,MAAMixF,QAAWt0F,IACrB,IAAIgiH,GAAU,EACVC,EAAOjiH,EAAE4hD,MAAQ,GAQrB,GALKqgE,EAAKnmH,SACPmmH,EAAKhoH,KAAK+F,EAAE47C,QACZqmE,EAAKhoH,KAAK+F,EAAE47C,OAAOijC,aAGlB12B,EACD,IAAK,IAAI1wC,KAAKwqG,EACX,GACGxqG,EAAEonC,WACFpnC,EAAEonC,UAAU77C,QAAQ,+BAAiC,EACtD,CACCg/G,GAAU,EACVvqG,EAAEonE,WAAWA,WAAW9G,UAAUn+E,SAASV,IACxC,GAAIA,EAAE8J,QAAQ,eAAiB,EAAG,CAE/B,MAAM4f,EAAS1pB,EAAEyP,QAAQ,aAAc,IACvChT,KAAKm9F,SAASnB,WAAWxpC,EAAUvlC,EAEtC,KAEH,KACH,CAIN,GAAIqlC,IAAgB+5D,EACjB,IAAK,IAAIvqG,KAAKwqG,EACX,GACGxqG,EAAEonC,WACFpnC,EAAEonC,UAAU77C,QAAQ,wBAA0B,EAC/C,CACCyU,EAAEonE,WAAWA,WAAW9G,UAAUn+E,SAASV,IACxC,GAAIA,EAAE8J,QAAQ,eAAiB,EAAG,CAE/B,MAAM4f,EAAS1pB,EAAEyP,QAAQ,aAAc,IACvChT,KAAKm9F,SAASnB,WAAW1pC,EAAarlC,EAEzC,KAGH,KACH,CAEN,IAMT,MAAM9lB,EAAOs1F,EAASt1F,KAAK6L,QAAQ,YAAa,IAEhD44G,EAAOl+G,MAAMkzE,aACV,UACA,sBAAsBz5E,KAAQs1F,EAAS77F,MAG1CgrH,EAAO9gH,gBAAgB7G,SAAQ,CAACwoF,EAAOp5E,KACpC,MAAMxD,EAAOhO,EAAKwR,EAAIrT,KAAKksH,WAAiB,KACtCxrH,EAAO+rF,EAAM/+E,MAEnBhN,EACIigF,cAAc,8BACbC,aACC,UACA,iBAAiBz5E,KAAQ0I,KAAQ4sF,EAAS77F,MAEhDF,EACIigF,cAAc,gCACbC,aACC,UACA,wBAAwBz5E,KAAQ0I,KAAQ4sF,EAAS77F,KACnD,IAGPZ,KAAK+7E,OACR,CAEA0vC,YACG,MAAMvrH,EAAMF,KAAKE,IACXksH,EAAa,CAChBxrH,GAAIV,EAAIkrH,aACR1qH,KAAM,aACNkB,KAAM,QACNY,QAAS,GACTtB,IAAK,CAAEqrH,WAAY,sBACnBprH,KAAM,IAGTnB,KAAK+B,GAAG0Y,MAAMha,GAAG2rH,EAAYzoH,GAAGzD,EAAIirH,YAAaxnH,GAAGzD,EAAIkrH,cAC3D,CASAjmH,aAAaoqB,GACV,MAAMrvB,EAAMF,KAAKE,IACX0rH,EAASjoH,GAAGzD,EAAIkrH,cAChBS,EAASloH,GAAGzD,EAAIirH,YAEhB70D,EAAI/mC,EAAI+mC,EAGd,GAFgBs1D,EAAO3jB,QAAU4jB,EAAO5jB,QAE1B3xC,GAJG,GAIY,CAC1B,GAAIt2D,KAAKwsH,cAAe,OAExBxsH,KAAKu6D,UAAYjE,EAEjB,MAAMpqC,EAAKlsB,KAAKkrB,eAEhB,IAAKgB,EAAI,OAET,GAAI0/F,EAAO9gH,gBAAgB3E,QAAU+lB,EAAG2G,WAAY,OAGpD7yB,KAAK27E,aAECzvD,EAAGsF,SAASo6F,EAAO9gH,gBAAgB3E,QAAU,GAEnDnG,KAAKwsH,cAAgB73G,YAAW,KAC7B3U,KAAKwsH,cAAgB,IAAI,GACzB,KACN,CACH,CAEIpvB,qBACD,OAAQp9F,KAAKq/F,iBACVr/F,KAAKq/F,kBAAoB,IAAIC,CACnC,oBC9YH,MAAMiG,EAA4B,EAAQ,OAE1C9lG,EAAOC,QAAU,cAA4C,EAG1DC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,wBAAwB48F,EAAS77F,KAAMV,EACpE,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QAEvB,OAAO9F,MAAMW,GAAG,CACb2B,GAAI,CAED0zE,cAAe,KACZ,MAAMsR,EAAS,mBAAmBxhF,GAAOkB,cACtClB,GAAOhF,MACN67F,EAAS/kC,yBAAyB92D,IAAM67F,EAAS1nF,OAAOnU,KAE5D+C,GAAG3D,KAAKE,IAAIusH,aAAa/+G,MAAMkzE,aAAa,UAAWwG,EAAO,IAI1E,CAEAviF,SAASmR,GACN,IAAI2nE,EAAW,GAIZA,EADC3nE,GAAOnC,KAAK0D,MAAMvB,GAEhB,8DAEU,wDAEhBlW,MAAM+E,SAAS84E,EAClB,oBCtCH,MAAMjvD,EAAgB,EAAQ,OACxB6zE,EAA2B,EAAQ,OAEzC9iG,EAAOC,QAAU,cAAoC6iG,EAClD5iG,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,gBAAgB48F,EAAS77F,KAAMV,EAC5D,CAEAO,KAMG,MAAO,CACJmB,KAAM,OACND,YAAY,EACZE,KAAM,CACH,CACGJ,KAVC3B,MAAMW,OAcnB,CAEA+J,SACG,MAAMiyF,EAAWz8F,KAAKU,KAEtB,IACG,MAAM0mF,EAAS,UAAUqV,EAASt1F,MAAMqgB,MAAM,KAAK,MAAMi1E,EAAS77F,KAElE+C,GAAG3D,KAAKE,IAAIC,WAAWuN,MAAMkzE,aAAa,UAAWwG,EAGxD,CAFE,MAAO/8E,GACN7B,QAAQC,KAAK,0BAA2B4B,EAC3C,CAGA,MAAM0nB,EAAK/xB,KAAKkrB,eAEhB,GAAI6G,EAAI,CACL,MAAM5D,EAAW4D,EAAGjG,YAEhBqC,GAAUnuB,KAAKoiC,YAAYjU,GAE/BnuB,KAAKmxB,SAAS,CACXC,QAASW,EACTV,UAAW,eACXC,SAAU,IAAIxP,IAAM9hB,KAAKoiC,eAAetgB,KAG3C9hB,KAAKmxB,SAAS,CACXC,QAASW,EACTV,UAAW,SACXC,SAAWo7F,IACW36F,EAAGjG,aAENlrB,KAAO8rH,EAAW9rH,IAC/BZ,KAAKoiC,YAAYsqF,EAAW,IAIrC1sH,KAAKmxB,SAAS,CACXC,QAASW,EACTV,UAAW,SACXC,SAAWq7F,IACW56F,EAAGjG,aAENlrB,KAAO+rH,EAAW/rH,IAC/BZ,KAAKoiC,YAAYuqF,EAAW,GAGxC,CAEA7sH,MAAM0K,QACT,CAEA43B,YAAY9U,EAAU,CAAC,IACLttB,KAAKU,KAAK+lB,SAAW,IAAI9Y,MAAK,CAACC,EAAGC,IACzCD,GAAGhI,OAAUiI,GAAGjI,MAID,YAAhBgI,EAAEhI,MAAMvB,KAAqC,cAAhBwJ,EAAEjI,MAAMvB,KAC9B,EACc,cAAhBuJ,EAAEhI,MAAMvB,KAAuC,YAAhBwJ,EAAEjI,MAAMvB,IACtC,EAEH,EAT4B,IAYhCJ,SAAS+C,IACZ,IAAIgP,EAEJ,GAAIhP,EAAEpB,MAAO,CACV,MAAMA,EAAQoB,EAAEpB,QAEhB,IAAKA,EAAO,OAGZ,OAAQA,EAAMvB,KACX,IAAK,gBA+DL,IAAK,OACF2R,EAAMpQ,EAAMwxC,mBAAmB9pB,GAE/B,MA7DH,IAAK,OAGF,GAFAtX,EAAMsX,EAAQ1nB,EAAMkB,aAEfkP,EAAK,CACPA,EAAM,GAEN,KACH,CAEA,GAAkC,IAA9BpQ,EAAMQ,SAAS03C,WAAkB,CAClC,IAAI8uE,EAAQ,GAMZ,GAJAhnH,EAAMQ,SAASjE,QAAQ8B,SAAS9B,IACzBA,EAAQvB,KAAOoV,IAAK42G,EAAQzqH,EAAQkM,KAAI,IAG3CzI,EAAMQ,SAAS23C,UAAW,CAC3B,IAAI6sC,EAAQ,SACR3E,EAAiB,GAErBrgF,EAAMQ,SAASjE,QAAQ8B,SAASyrE,IACzBA,EAAErhE,OAASu+G,IACZhiC,EAAQlb,EAAEtxB,IACV6nC,EAAiB,iBACpB,IAGH2mC,EAAQ,uCAAuC3mC,+BAA4C2E,wBAA4BgiC,iBAC1H,CAEA52G,EAAM42G,CACT,KAAO,CACJ,MAAMvlC,EAAQ,GAEd,IAAIulC,EAAQ,GAEZ52G,EAAI/R,SAAStB,IACV,IAAIsjF,EAAiB,GACjBC,EAAY,GAEZtgF,EAAMQ,SAAS23C,WAAap7C,EAAMy7C,MACnC6nC,EAAiB,iBACjBC,EAAY,eAAevjF,EAAMy7C,QAGpCx4C,EAAMQ,SAASjE,QAAQ8B,SAAS9B,IACzBA,EAAQvB,KAAO+B,EAAM/B,KAAIgsH,EAAQzqH,EAAQkM,KAAI,IAEpDg5E,EAAM/iF,KACH,uCAAuC2hF,aAA0BC,gBAAwBvjF,EAAM/B,aAAagsH,kBAC9G,IAGJ52G,EAAMqxE,EAAM/4E,KAAK,GACpB,CAEA,MAOH,IAAK,OACF0H,EAAMsX,EAAQ1nB,EAAMkB,YAEpB,MAEH,IAAK,UACF,GAAIwmB,EAAS,CACV,MAAMyE,EAAK/xB,KAAKkrB,eACV+O,EAAKlI,EAAKA,EAAG9G,WAAa,KAC1B4hG,KACF5yF,GAAMA,aAAcvL,GAExB1Y,EAAMpQ,EAAM0a,OAAOgN,EAASu/F,EAC/B,CAEA,MAEH,QACG72G,EAAMpQ,EAAM0a,OAAOgN,GAG5B,CAGA,MAAMg6E,EAAatgG,EAAE7G,UAAU,KAAMH,KAAKE,IAAIusH,YAI9CnlB,GAAYziG,WAAWmR,GACvBsxF,GAAYvhC,cAAcz4C,EAAQ,GAExC,oBCvMH,MAAMi4E,EAA4B,EAAQ,OAE1C9lG,EAAOC,QAAU,cAA2C,EAGzDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,uBAAuB48F,EAAS77F,KAAMV,EACnE,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACb2B,GAAI,CAED0zE,cAAe,KACZ,MAGMsR,EAAS,oBAFZqV,EAAS72F,OAAO49G,GAAQA,EAAI5iH,KAAOwF,EAASsE,WACvC5D,YAAc,MAEnBV,EAASsE,WACR+xF,EAAS/kC,yBAAyB92D,IAAM67F,EAAS1nF,OAAOnU,KAE5D+C,GAAG3D,KAAKE,IAAIusH,aAAa/+G,MAAMkzE,aAAa,UAAWwG,EAAO,IAI1E,CAEAviF,SAASmR,GACN,MAAMvQ,EAAO,GAET0H,MAAMC,QAAQ4I,GACfA,EAAI/R,SAASgpB,IACVxnB,EAAKnB,KACF,wCAAwC2oB,EAAO5e,cACjD,IAEF5I,EAAKnB,KAAK,wCAAwC0R,EAAI3H,eAE3DvO,MAAM+E,SAASY,EAAK6I,KAAK,IAC5B,mBC1CH,MAAMi3F,EAA4B,EAAQ,OAE1C9lG,EAAOC,QAAU,cAA0C,EAGxDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,sBAAsB48F,EAAS77F,KAAMV,EAClE,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QACjBk1D,EAAa2hC,EAASjiC,kBAE5B,IAAIsyD,EAAgB,GAEhBhyD,GAAY10D,UAAU6rD,YAEpB66D,EADuC,QAAtChyD,EAAW10D,SAAS0tD,cAElB,8FAGA,2GAGT,MAAMuN,GAAYyrD,EAAgB,YAE9B95G,QAAQ,WAAY8nD,EAAW10D,SAAStE,YACxCkR,QAAQ,WAAYpN,EAAQA,EAAMxE,MAAQ,IAC1C4R,QAAQ,YAAapN,EAAQA,EAAM8oE,eAAerN,SAAS,CAAC,GAAK,IAErE,OAAOvhE,MAAMW,GAAG,CACbsgH,UAAW,GACXhgH,OAAQ,GACRsgE,WACAj/D,GAAI,CAED0zE,cAAe,KACZ,MAAMsR,EAAS,iBAAiBxhF,GAAOkB,cACpClB,GAAOhF,MACN67F,EAAS/kC,yBAAyB92D,IAAM67F,EAAS1nF,OAAOnU,KAE5D+C,GAAG3D,KAAKE,IAAIusH,aAAa/+G,MAAMkzE,aAAa,UAAWwG,EAAO,IAI1E,CAEA58E,SACG1K,MAAM0K,OAEN,MAAMiyF,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QAEvB,IAAKA,EAAO,OAEZ,MAAMmnH,EAAcppH,GAAG3D,KAAKE,IAAIusH,YAEhC,IAAKM,EAAa,OAElB,MACGz/F,EADemvE,EAASjiC,kBACJtvC,eAAeY,aAAe,CAAC,EACnDvpB,EAAOwqH,EAAYr/G,MAEtB9H,EAAMwpE,cAAc9hD,EAAS,KAAM/qB,EAAM,CACtCsiD,UAAU,GAEhB,CAEAhgD,SAASmR,GACN,MAAMpQ,EAAQ5F,KAAKU,KAAKkF,QAExB,IAAKA,EAAO,OAEZ,MAAMmnH,EAAcppH,GAAG3D,KAAKE,IAAIusH,YAEhC,IAAKM,EAAa,OAElB,MAAMz/F,EAAU,CAAC,EAEjBA,EAAQ1nB,EAAMkB,YAAckP,EAE5BpQ,EAAMf,SAASkoH,EAAaz/F,EAC/B,oBCnFH,MAAMi4E,EAA4B,EAAQ,OAE1C9lG,EAAOC,QAAU,cAAyC,EAGvDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,qBAAqB48F,EAAS77F,KAAMV,EACjE,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QACjBy3F,EAAM,CACTj7F,GAAI,CAED0zE,cAAe,KACZ,MAAMsR,EAAS,gBAAgBxhF,GAAOkB,cAAclB,GAAOhF,MACxD67F,EAAS/kC,yBAAyB92D,IAAM67F,EAAS1nF,OAAOnU,KAG3D+C,GAAG3D,KAAKE,IAAIusH,aAAa/+G,MAAMkzE,aAAa,UAAWwG,EAAO,IAIjEhhF,EAAWpG,KAAKoG,SAItB,OAFIA,EAASrF,SAAQs8F,EAAIt8F,OAASqF,EAASrF,QAEpCjB,MAAMW,GAAG48F,EACnB,CAEAx4F,SAASmR,GACN,MAAMpQ,EAAQ5F,KAAKU,KAAKkF,QAExB,IAAKA,EAGF,YAFA9F,MAAM+E,SAAS,IAKlB,MAAMmoH,EAAiBh3G,GAAOpQ,EAAMQ,SAASu3C,gBAE7C,IAAKqvE,EAGF,YAFAltH,MAAM+E,SAAS,IAKlB,MAAMooH,EAAWrnH,EAAMugE,SAAS6mD,GAC1B5mH,EAAWpG,KAAKoG,SAOhB+9E,EAAgB,CACnB,oCACA,8GAA8G8oC,gBARnG7mH,EAASpF,OAAS4E,EAAMQ,SAASm3C,YAAc,kBAC9Cn3C,EAASrF,OACnB,GAAGqF,EAASrF,WACZ6E,EAAMQ,SAASq3C,YACf,GAAG73C,EAAMQ,SAASq3C,gBAClB,+BAIF,YAAYwvE,uFACZ,gBACD3+G,KAAK,IAEPxO,MAAM+E,SAASs/E,EAClB,oBChEH,MAAM2X,EAAkB,WAExBr8F,EAAOC,QAAU,cAAwCo8F,EACtDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,oBAAoB48F,EAAS77F,KACvCuT,OAAOsmC,OACJ,CACGgyE,WAAY,IAEfvsH,GAGT,CAEAO,GAAGysH,EAAwB,CAAC,GACzB,MAAMzwB,EAAWz8F,KAAKU,KAGhB0F,EAAWq2F,EAASjiC,mBAAmBp0D,UAAY,CAAC,EAE1D,IAAI0mH,EAAgB,GAIdA,EAFF1mH,EAAS6rD,UACqB,QAA3B7rD,EAAS0tD,cAEP,uGAGA,iMAGY,YAErB,MAAMluD,EAAQ62F,EAAS72F,QACjBy7D,EAAWyrD,EACb95G,QAAQ,WAAY5M,EAAStE,YAC7BkR,QAAQ,WAAYpN,GAAOxE,OAAS,IAExC,IAAIL,EAAS,GAEkB,QAA3BqF,EAAS0tD,gBAAyB/yD,GAAkB,GAErB,IAA/B6E,GAAOQ,UAAUo3C,YAClBz8C,EAAS8jB,SAASjf,EAAMQ,SAASq3C,cAAgB18C,GAEpD,MAAMs8F,EAAMv9F,MAAMW,GAAG,CAClB0T,OAAOsmC,OACJ,CACG75C,GAAIZ,KAAKE,IAAIusH,WACb/rH,KAAM,WACNiB,YAAY,EACZZ,OAAQA,EACR2mF,QAAwB,SAAf9hF,GAAOvB,IAChBg9D,SAAUA,EACVx3D,KAAM,CAAE+3E,QAAS,KAEpBsrC,KAMN,cAFO7vB,EAAIz7F,KAEJy7F,CACV,CAMAx4F,SAASmR,EAAKm3G,GACX,MAAMJ,EAAcppH,GAAGwpH,GAAYntH,KAAKE,IAAIusH,YAE5C,IAAKM,EAAa,OAElB,MAAMnnH,EAAQ5F,KAAKU,KAAKkF,QAEL,WAAfA,GAAOvB,KAAmC,aAAfuB,GAAOvB,IAMtC0oH,EAAYjhC,UAAU,CAAElK,QAAS5rE,IAL9B+2G,EAAYjhC,UAAU,CAAElK,QAAS5rE,EAAIhD,QAAQ,OAAQ,SAM3D,oBCrFH,MAAMuyF,EAA4B,EAAQ,OAE1C9lG,EAAOC,QAAU,cAAwC,EAGtDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,oBAAoB48F,EAAS77F,KAAMV,EAChE,CAEAO,KACG,MAAMmF,EAAQ5F,KAAKU,KAAKkF,QAClBy3F,EAAM,CACTn8F,IAAK,UACLkB,GAAI,CAED0zE,cAAe,KACZ,MAAMsR,EAAS,eAAexhF,GAAOkB,cAAclB,GAAOhF,MACvDZ,KAAKU,KAAKg3D,yBAAyB92D,IAAMZ,KAAKU,KAAKqU,OAAOnU,KAG7D+C,GAAG3D,KAAKE,IAAIusH,aAAa/+G,MAAMkzE,aAAa,UAAWwG,EAAO,IAIjEhhF,EAAWpG,KAAKoG,SAItB,OAFIA,EAASrF,SAAQs8F,EAAIt8F,OAASqF,EAASrF,QAEpCjB,MAAMW,GAAG48F,EACnB,mBC7BH,MAAMkI,EAA4B,EAAQ,OAE1C9lG,EAAOC,QAAU,cAAwC,EAGtDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,oBAAoB48F,EAAS77F,KAAMV,EAChE,CAEIgpD,gBACD,MAAO,gBACV,CAEA/jD,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAGjB/B,KAAK6E,SAAS,eAAe7E,KAAKkpD,oBACrC,CAEAkkE,aACG,MAAML,EAAcppH,GAAG3D,KAAKE,IAAIusH,YAEhC,GAAKM,EAEL,OAAOA,EAAYr/G,MAAMs7E,uBAAuBhpF,KAAKkpD,WAAW,EACnE,CAEArkD,SAASmR,GAEN,MAAMvQ,EAAO,GAETuQ,IAAQ7I,MAAMC,QAAQ4I,IAAMvQ,EAAKnB,KAAK0R,GAE1CrB,YAAW,KAER,MAAM04G,EAAUrtH,KAAKotH,aAErB,IAAKC,EAAS,OAAO,EAErB,MAAMznH,EAAQ5F,KAAKU,KAAKkF,QAClB0kF,EAAW,QAE0B,IAAhC1kF,EAAMQ,SAASjE,QAAQ0H,OAC/BjE,EAAMQ,SAASjE,QAAU,IAAInC,KAAK+B,GAAG0Y,MAAM2wD,eAAe,CACvDvhE,KAAMjE,EAAMQ,SAASjE,WAG3ByD,EAAMQ,SAASjE,QAAQ0H,KAAK42E,MAAK,SAAU3oE,GACxC,IAA8B,IAA1BrS,EAAK4H,QAAQyK,EAAIlX,IAAY,CAC9B,IAAIgkF,EAAO,GACP4F,EAAS1yE,EAAIlX,GAEjB,KAAOZ,KAAKyqF,YAAYD,IACrB5kF,EAAMQ,SAASjE,QAAQ0H,KAAK42E,MAAK,SAAUiK,GAErC9kF,EAAMQ,SAASjE,QAAQ0H,KAAK4gF,YAAYD,KACxCE,EAAI9pF,KAEJgkF,EAAO,GAAG8F,EAAIr8E,SAASu2E,IAE7B,IAEA4F,EAASxqF,KAAKyqF,YAAYD,GAG7B5F,GAAQ9sE,EAAIzJ,KACZi8E,EAAShmF,KAAKsgF,EACjB,CACH,IAIA,IAAI+F,EAAW,iCAEfL,EAASrmF,SAAQ,SAAUmK,GACxBu8E,GAAY,2GAA4Gv8E,UAC3H,IAEAu8E,GAAY,SACZ0iC,EAAQ5jF,UAAYkhD,EAEpB,IAAI5pF,EAAS,GAETssH,EAAQxhC,aAAe,KAAI9qF,EAASssH,EAAQxhC,cAEhD,MAAMkhC,EAAcppH,GAAG3D,KAAKE,IAAIusH,YAEhCM,EAAY9qH,OAAOlB,OAASA,EAC5BgsH,EAAYlsH,QAAQ,GACpB,GACN,kEC3FH,MAAMysH,cAAgB,oBAAQ,OACxBC,YAAc,oBAAQ,OACtBC,WAAa,oBAAQ,OACrBC,MAAQ,oBAAQ,OAEhB/oE,eAAiB,oBAAQ,OACzBgpE,aAAe,oBAAQ,OACvBh/F,cAAgB,oBAAQ,OAExBotE,gBAAkB,6BAExBr8F,OAAOC,QAAU,MAAMmmG,mCAAmC/J,gBACvDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,qBAAqB48F,EAAS77F,KACxCuT,OAAOsmC,OACJ,CACGkzE,eAAgB,GAChBC,YAAa,IAEhB1tH,GAGT,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChBwgF,EAAkB6V,EAAS98F,YAAYmiC,gBAG7C,IAAIxgC,GAAY,EAEI,KAJA8E,EAASpF,OAAS4lF,EAAgB5lF,SAI/BM,GAAY,GAEnC,IAAIusH,EAAa,CACdjsH,KAAM,SACNZ,MAAO,GAEN8sH,EAAc,CACflsH,KAAM,SACNZ,MAAO,GAGV,OAAQoF,EAASo1D,gBAAkBorB,EAAgBprB,gBAChD,IAAK,OACF,MACH,IAAK,SACFqyD,EAAa,CACVjsH,KAAM,UAETksH,EAAc,CACXlsH,KAAM,UAET,MACH,IAAK,QACFisH,EAAa,CACVjsH,KAAM,UAKf,MAAMmsH,EACHtxB,EAASphC,aACTj1D,EAASi1D,aACTurB,EAAgBvrB,YACbn7D,EAAMF,KAAKE,IACXm9F,EAAMv9F,MAAMW,GAAG,CAClB,CACGC,KAAM,UACNQ,IACGkF,EAASm1D,mBAAqBqrB,EAAgBrrB,kBACjDp6D,KAAM,CACH0sH,EACA,CACGjtH,GAAIV,EAAIytH,eACRjtH,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,oBACNnK,MAAO2sH,EACP/sH,MAAOoF,EAASpF,OAAS4lF,EAAgB5lF,MACzCM,UAAWA,EACXC,MAAO,KACJvB,KAAKguH,YAAY,EAEpB5rH,GAAI,CAED0zE,cAAe,KACZ,MACMsR,EAAS,iBADFqV,EAASt1F,KAAK6L,QAAQ,eAAgB,OACXypF,EAAS77F,KACjD+C,GAAGzD,EAAIytH,iBACFjgH,MAAMizE,cAAc,UACrBC,aAAa,UAAWwG,EAAO,IAI5C,CACGxmF,GAAIV,EAAI0tH,YACRltH,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,qBAErB,CACGQ,KAAM,UAETksH,MAOT,cAFOzwB,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACX+tH,EAAkBtqH,GAAGzD,EAAIytH,gBACzBO,EAAevqH,GAAGzD,EAAI0tH,aAExB5tH,KAAKU,KAAK0F,SAAS41C,UACpBiyE,EAAgBrpH,OAChBspH,EAAavpH,SAEbspH,EAAgBtpH,OAChBupH,EAAatpH,OAEnB,CAEAO,eACGrF,MAAM0K,OAEN,MAAM47C,EAAQ,GAEdpmD,KAAKU,KAAK0kB,gBAAgBnhB,SAASioB,IAC5BA,EAAGT,aAAeS,EAAGpC,eAAeC,YAErCq8B,EAAM9hD,KAAK4nB,EAAGsF,WAAW,IAI3B40B,EAAMjgD,OAAS,GAAGnG,KAAK27E,aAErBlsE,QAAQ4R,IAAI+kC,GAGlBpmD,KAAK+7E,OACR,CAEAJ,OACG,MAAMsyC,EAAkBtqH,GAAG3D,KAAKE,IAAIytH,gBAE/BM,IAELA,EAAgB7oH,UAChB6oH,EAAgBxpH,OAAO,OAAQ,yBAC/BwpH,EAAgBvpH,UACnB,CAEAq3E,QACG,MAAMkyC,EAAkBtqH,GAAG3D,KAAKE,IAAIytH,gBAE/BM,IAELA,EAAgBvmH,SAChBumH,EAAgBxpH,OAAO,OAAQ,qBAC/BwpH,EAAgBvpH,UACnB,CAEAS,mBACGnF,KAAK27E,OAEL,MAAMwyC,EAAenuH,KAAKouH,gBAE1B5lH,QAAQ2O,IAAI,cAAeg3G,GAG3B,MAAM7vB,QAAet+F,KAAKquH,iBAGpBC,QAA4BtuH,KAAKuuH,uBAGjCC,EAAWxuH,KAAKyuH,iBACnBH,EACAH,EACA7vB,GAGG7B,EAAWz8F,KAAKU,KAGtB+7F,EAASqJ,gBAAgB0oB,EAAU/xB,EAASnhC,WAG5Ct7D,KAAK+7E,OACR,CAEAqyC,gBACG,MAAMtgH,EAAS,CAAC,EAGVsX,EAAkBplB,KAAKU,KAAK0kB,gBAC5BspG,EAAiBtpG,EAAgBjf,OAAS,EAyFhD,OAvFAif,EACItc,QAAQojB,GAAOA,GAAIjB,aACnBhnB,SAASioB,IACP,MAAMpU,EAAMoU,EAAGjB,WACT0jG,EAAWziG,EAAGJ,YACd8iG,EAAW,GACX5F,EAAW,GAGjB,GAAI2F,EAAU,CACX,MAAMniG,EAAaN,EAAGJ,WAAU,GAEhCk9F,EAAS1kH,KAAKtE,KAAK+B,GAAGugB,MAAM,CAAC,EAAGqsG,EAAUniG,GAC7C,MAAOw8F,EAAS1kH,QAAQtE,KAAK+B,GAAG2D,UAAUwmB,EAAGyG,YAG7C,MAAM8I,EAAW3jB,EAAIklB,qBAErBgsF,EAAS/kH,SAAS4F,IACf,IAAIq8G,EAGJpuG,EAAI/Q,SAAS9C,SAAS+C,IACnB,MAAM6nH,EAAc,GAGhB/2G,aAAe4W,eACqB,iBAA1B1nB,EAAE/B,OAAOyf,eACjB1d,EAAE/B,OAAOyf,aAAe7Q,KAAK0D,MAC1BvQ,EAAE/B,OAAOyf,eAGe,iBAAnB1d,EAAE0d,eACV1d,EAAE0d,aAAe7Q,KAAK0D,MAAMvQ,EAAE0d,gBAEhC1d,EAAE/B,OAAOyf,cAAgB,IAAIzgB,SAAS6qH,IACpC,MAAMC,GAAa/nH,EAAE0d,cAAgB,IAAI5b,QACrCimH,GACEA,EAAUnzF,gBAAkBkzF,EAAQlzF,gBACxC,GAEF,IAAKmzF,EAAW,OAEhB,MAAMC,EAAcF,EAAQ1tH,MACtB6tH,EAAaF,EAAU3tH,MAG7BytH,EAAYvqH,KAAK,GAAG0qH,KAAeC,IAAa,KAInB,iBAAnBjoH,EAAE0d,eACf1d,EAAE0d,aAAe7Q,KAAK0D,MAAMvQ,EAAE0d,eAEjC1d,EAAE0d,aAAazgB,SAASiwB,IACrB26F,EAAYvqH,KAAK4vB,EAAK9yB,MAAM,IAG/B8kH,EAAalmH,KAAKkvH,gBACfrlH,EACA7C,EACA6nH,EACApzF,GAIHyqF,EAAWpgD,QAAUhuD,CAAG,IAG3B82G,EAAStqH,KAAK4hH,EAAW,IAI5B,MAAMiJ,EACHP,EAASzoH,OAAS,EAAIyoH,EAAWA,EAAS,GAG1CF,GACCvhH,MAAMC,QAAQ+hH,IACZA,EAAmBhpH,OAAS,GAE9B+lB,EAAGxH,cAAgB,IAAIzgB,SAASiwB,IAC9BpmB,EAAOomB,EAAK9yB,OAAS+tH,CAAkB,IAExCh7G,OAAOsmC,OAAO3sC,EAAQqhH,EAAmB,IAG7CrhH,CACV,CAEAohH,gBAAgBrlH,EAAMjE,EAAOipH,EAAc,GAAIO,GAC5C,MAAMthH,EAAS,CAAC,EAEhB,IAAIkI,EAAM,KAEVlI,EAAOlN,GAAKiJ,EAAKjJ,GACjBkN,EAAO,GAAGlI,EAAMkB,qBAAuB+C,EAAKjE,EAAMkB,YAElD,MAAM21F,EAAWz8F,KAAKU,KAGtB,GAAI0uH,EAAoBjpH,OAAQ,CAC7B,MAAMkpH,GAAeD,GAAuB,IAAItmH,QAC5CgxB,GAAiC,MAAnBjwB,EAAKiwB,KAGvB2iE,EAAS/gE,UAAU7xB,EAAMA,EAAMwlH,EAAa5yB,EAAStsF,aACxD,CA2DA,OAxDIvK,aAAiB8+C,gBAKlB1uC,EAAMnM,EAAKjE,EAAMkB,YAEbkP,GAAK/R,SACN+R,EAAI/R,SAASmP,IACLA,IAGDxN,EAAMgB,gBACPhB,EAAMgB,eACFG,QAAQC,IAAOA,EAAEg5B,eACjB/7B,SAAS+C,IACPoM,EAAE,GAAGpM,EAAEF,qBAAuBsM,EAAEpM,EAAEF,YAElCsM,EAAEpM,EAAEF,YAAcE,EAAEsZ,OAAOlN,EAAG,CAC3BjD,aAAcssF,EAAStsF,cACxB,IAKPiD,GAAkB,iBAANA,IAAgBA,EAAE0yD,QAAUlgE,EAAMgB,gBAAc,KAMtEoP,EAAMpQ,EAAM0a,OAAOzW,EAAM,CACtBsG,aAAcssF,EAAStsF,eAI7B0+G,EAAY5qH,SAAS7C,IACd4U,EAAKlI,EAAO1M,GAAS4U,EACflI,EAAO1M,KAAQ0M,EAAO1M,GAAS,GAAE,IAI1CyI,EAAKA,MAAM1D,SACZ2H,EAAOjE,KAAOiE,EAAOjE,MAAQ,IAE5BA,EAAKA,MAAQ,IAAI5F,SAAQ,CAACqrH,EAAWvjH,KAEnC+B,EAAOjE,KAAKkC,GAAS/L,KAAKkvH,gBACvBI,EACA1pH,EACAipH,EACAO,EACF,KAIAthH,CACV,CAEA3I,uBACG,MAAMm5F,EAAS,CAAC,EACVl4C,EAAQ,GACRmpE,EAAkB,CAACC,EAAY3lH,EAAO,MACzCA,EAAK5F,SAAS2rB,IACX,MAAM6/F,EAAWD,EAAWlvG,OAAOsP,GAE/B6/F,IAAanxB,EAAOmxB,IACrBrpE,EAAM9hD,KACH,IAAImL,SAAQ,CAACC,EAASiH,KACnB,MAAM+4G,EAASF,EAAWrpD,SAASspD,GAEnCjC,WAAWmC,iBAAiBD,GAAQ,CAACngH,EAAOu/D,KACzC,GAAIv/D,EAAO,OAAOoH,EAAOpH,GAGzB+uF,EAAOmxB,GAAY3gD,EAEnBp/D,GAAS,GACV,KAMX6/G,EAAgBC,EAAY5/F,EAAE/lB,MAAQ,GAAG,GAC1C,EAyBL,OAtBA7J,KAAKU,KAAK0kB,gBACNtc,QAAQojB,GAAOA,GAAIjB,aACnBhnB,SAASioB,IACP,MAAMpU,EAAMoU,EAAGjB,WAEf,IAAI2kG,EAAa1jG,EAAGJ,YAEpB,GAAI8jG,EAAY,CAEb,MAAMpjG,EAAaN,EAAGJ,WAAU,GAEhC8jG,EAAa,CAAC5vH,KAAK+B,GAAGugB,MAAM,CAAC,EAAGstG,EAAYpjG,GAC/C,MACKojG,EAAa1jG,EAAGyG,UAErB7a,EAAI/Q,QAAQC,GAAMA,aAAa0mH,eAAczpH,SAAS+C,IACnDuoH,EAAgBvoH,EAAG4oH,EAAW,GAC/B,UAGFngH,QAAQ4R,IAAI+kC,GAEXk4C,CACV,CAEAiwB,uBACG,MAAMj+G,EAAMtQ,KAAKU,KAAKg7D,cAEtB,OAAO,IAAIjsD,SAAQ,CAACC,EAASiH,KAC1B62G,WAAWmC,iBAAiBr/G,GAAK,CAACf,EAAOu/D,KACtC,GAAIv/D,EAAO,OAAOoH,EAAOpH,GAEzBG,EAAQo/D,EAAQ,GACjB,GAER,CAEA2/C,iBAAiBoB,YAAahmH,KAAMy0F,QACjC,MAAMwxB,UAAY,CAAC,EACbC,IAAM,IAAItC,MAAMoC,aAChBG,IAAM,IAAI1C,cACV2C,YAAc,IAAI1C,YAAY,CACjC2C,UAAU,EACVC,SAAU,CAACC,EAAUC,IAKX/xB,OAAO8xB,IAAa,GAE9BE,QAAS,CAACC,EAAWH,EAAUC,KAC5B,MAAMj4E,EAAa,CAAC,IAAK,KACnBqkD,EAAWz8F,KAAKU,KAChBwrB,EAAKuwE,EAASvxE,eAEpB,GAAKgB,EA6CE,CACJ,IAAIpU,EAAMoU,EAAGjB,WAEb,IAAKnT,EAAK,OAAOsgC,EAGjB,GAAIi4E,EAAQhjH,QAAQ,MAAQ,EAAG,CAC5B,MAAMmjH,EAAWH,EAAQ7oG,MAAM,KAI/B,GAFA1P,EAAMA,EAAI4N,SAASL,GAAMA,EAAEjkB,QAAUovH,EAAS,KAAI,IAE7C14G,EAAK,OAAOsgC,EAEjBi4E,EAAUG,EAAS,EACtB,CAEA,MAAM59D,EAAa96C,EAAI/Q,QACnBC,GAAMA,EAAEF,aAAeupH,IACzB,GAEF,OAAKz9D,GAAYxsD,UAGdwsD,EAAWxsD,SAASk3C,UACpBsV,EAAWxsD,SAASm3C,aAEpBnF,EAAW,GAAKwa,EAAWxsD,SAASm3C,YAGpCqV,EAAWxsD,SAASo3C,WACpBoV,EAAWxsD,SAASq3C,cAEpBrF,EAAW,GAAKwa,EAAWxsD,SAASq3C,aAEhCrF,GAd2BA,CAerC,CAhFS,CACN,MAAMq4E,EAAMh0B,EAASr3E,gBAErB,OAAIqrG,GACDA,EAAIxsH,SAASioB,IACV,IAAIpU,EAAMoU,EAAGjB,WAEb,IAAKnT,EAAK,OAAO,EAGjB,GAAIu4G,EAAQhjH,QAAQ,MAAQ,EAAG,CAC5B,IAAImjH,EAAWH,EAAQ7oG,MAAM,KAE7B,IAAK1P,EAAI4N,QAAS,OAAO,EAIzB,GAFA5N,EAAMA,EAAI4N,SAASL,GAAMA,EAAEjkB,QAAUovH,EAAS,KAAI,IAE7C14G,EAAK,OAAO,EAEjBu4G,EAAUG,EAAS,EACtB,CAEA,MAAM59D,EAAa96C,EAAI/Q,QACnBC,GAAMA,EAAEF,aAAeupH,IACzB,GAEF,QAAKz9D,GAAYxsD,WAGdwsD,EAAWxsD,SAASk3C,UACpBsV,EAAWxsD,SAASm3C,aAEpBnF,EAAW,GAAKwa,EAAWxsD,SAASm3C,YAGpCqV,EAAWxsD,SAASo3C,WACpBoV,EAAWxsD,SAASq3C,cAEpBrF,EAAW,GAAKwa,EAAWxsD,SAASq3C,cAEhC,EAAK,IAGRrF,GACIA,CACjB,CAmCA,IA0BN,IACG43E,IAAIU,aAAaT,aACbU,QAAQZ,KACRxmC,QAAQ1/E,MACR29E,WAAW,CACT3S,OAAQ,SAAU+7C,KACf,MAAO,CACJj7G,IAAK,SAAUk7G,MAAOvhH,SAEnB,GAA6B,IAAzBshH,IAAIvjH,QAAQ,SAAgB,CAC7B,MAAM80B,GAAQyuF,IAAIppG,MAAM,KAAK,IAAM,IAAIgb,OAEvC,OAAQquF,MAAY,MAAK,IAAI/nH,QAAO,SAAUsF,GAC3C,QAAOA,EAAK+zB,EACf,GACH,CAEK,GAAIyuF,IAAIvjH,QAAQ,WAAa,EAAG,CAClC,MAAM80B,EAAOyuF,IAAIppG,MAAM,UAAU,GAC3BspG,EAAUF,IAAIppG,MAAM,UAAU,GAEpC,IAAI1G,EAAS+vG,MAAM1uF,GAYnB,MAVsB,iBAAXrhB,IACRA,EAASA,EAAO9N,QACb,UACA,KAGD88G,UAAUgB,KAAUhB,UAAUgB,GAAW,GAE9ChB,UAAUgB,IAAYj7E,WAAW/0B,GAE1B+vG,MAAM1uF,EAChB,CAEK,GAA6B,IAAzByuF,IAAIvjH,QAAQ,SAAgB,CAClC,MAAMyjH,EAAUF,IAAI59G,QAAQ,QAAS,IAErC,OAAO88G,UAAUgB,IAAY,CAChC,CAyCK,GAAyB,IAArBF,IAAIvjH,QAAQ,KAAY,CAC9B,MAAMsqF,EAAQi5B,IAAI59G,QAAQ,IAAK,IAAIwU,MAAM,KACnCupG,EAAap5B,EAAM,GAAGn1D,OACtBwuF,EAAar5B,EAAM,GAAGn1D,OAE5B,IAAKuuF,IAAeC,EAAY,MAAO,GAGvC,IAAIC,EAEJ,MAAMn5G,EAAM+4G,MAAM/qD,QAElB,GAAIhuD,EAAK,CACN,MAAMo5G,EAAiBp5G,EAAI/Q,QACvBC,GAAMA,EAAEF,aAAekqH,IACzB,GAEF,GAAIE,EAAgB,CACjB,MAAM7pH,EAAa6pH,EAAe7pH,WAElC4pH,EAAe5pH,EACVA,EAAWP,WACX,IACR,CACH,CAEA,IAAIqqH,EAAatnH,KAAKknH,GAElBI,IAAehkH,MAAMC,QAAQ+jH,KAC9BA,EAAa,CAACA,IAEjB,MAAMC,EAAUvnH,GACbA,EAAK,GAAGonH,aACRpnH,EAAKonH,IACLpnH,EAAKjJ,IACLiJ,EAEH,OAAQsnH,GAAc,IAAIroH,QAAO,SAAUsF,GAExC,IAAIijH,EAAWR,MAAMG,GAErB,OAAI7jH,MAAMC,QAAQikH,GAEZA,EAASvoH,QACLvF,GAAM6tH,EAAO7tH,KAAO6tH,EAAOhjH,KAC7BjI,OAAS,EAELirH,EAAOhjH,KAAUgjH,EAAOC,EACvC,GACH,CAEK,GAAIT,IAAIvjH,QAAQ,MAAQ,EAAG,CAC7B,MAAMS,OAAS+iH,MACT1uF,KAAOyuF,IAAIppG,MAAM,KAAK,GACtB0hB,UAAY0nF,IAAIppG,MAAM,KAAK,GAEjC,GAAI2a,MAAQ+G,UAAW,CACpB,IAAIr/B,KAAOgnH,MAAM1uF,MAEjB,GAAIt4B,KAGD,OAFKsD,MAAMC,QAAQvD,QAAOA,KAAO,CAACA,OAE3BA,KAAKf,QAAQ8mB,GACjB4mB,KAAKtN,UAAUl2B,QAAQ,MAAO,QAGvC,CACA,OAAOlF,MACV,CAAO,MAAY,MAAR8iH,IAAoBC,MACnBA,MAAMD,IACrB,EAEN,IAEFllD,QAGP,CAFE,MAAOn8D,GACN,OAAOA,CACV,CAGA,MAAM+hH,SAAWtB,IAAIuB,SAASC,SAAS,CACpC5vH,KAAM,OACN6vH,SACG,4EAGN,OAAOH,QACV,oBC/tBH,MAAMjnB,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAA+B2qG,EAC7C1qG,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,oBAAoB48F,EAAS77F,KAAMV,EAChE,CAEAO,KACG,MAAMk6E,EAAO36E,KACPy8F,EAAWz8F,KAAKU,KAChBwJ,EAAOuyF,EAAShlC,sBAChBrxD,EAAWq2F,EAASr2F,UAAY,CAAC,EAEjCg2D,EACHh2D,EAASg2D,WAAaqgC,EAAS98F,YAAYmiC,gBAAgBs6B,UAExDihC,EAAM,CACTl8F,KAAM,IAmFT,MA/EkB,WAAdi7D,GAAwC,UAAdA,GAC3BihC,EAAIl8F,KAAKmD,KAAK,CAAC,GAId8B,EAAS21D,eACVshC,EAAIl8F,KAAKmD,KACN,CACG5D,KAAM,SACNY,WAAW,EACXqB,MAAOyD,EAAS41D,aAAeh8D,KAAKoB,MAAM,UAC1CG,MAAO,WACJo5E,EAAKpyE,SAASvI,KACjB,EACAoC,GAAI,CACD0zE,cAAe,WACZ91E,KAAKqjG,eAAeziB,aACjB,UACA,iBAAiB12E,EAAKtJ,KAE5B,IAGN,CACGI,MAAO,KAMZoF,EAAS61D,cACVohC,EAAIl8F,KAAKmD,KACN,CACG5D,KAAM,SACNY,WAAW,EACXqB,MAAOyD,EAAS81D,YAAcl8D,KAAKoB,MAAM,SACzCG,MAAO,WACJo5E,EAAK+2C,QAAQ1xH,KAChB,EACAoC,GAAI,CACD0zE,cAAe,WACZ91E,KAAKqjG,eAAeziB,aACjB,UACA,gBAAgB12E,EAAKtJ,KAE3B,IAGN,CACGI,MAAO,KAMZoF,EAASy1D,aACVwhC,EAAIl8F,KAAKmD,KAAK,CACX5D,KAAM,SACNkB,KAAM,OACNV,IAAK,gBACLI,WAAW,EACXqB,MAAOyD,EAAS01D,WAAa97D,KAAKoB,MAAM,QACxCG,MAAO,WACJo5E,EAAK7yE,OAAO9H,KACf,EACAoC,GAAI,CACD0zE,cAAe,WACZ91E,KAAKqjG,eAAeziB,aACjB,UACA,eAAe12E,EAAKtJ,KAE1B,KAMS,WAAdw7D,GAAwC,SAAdA,GAAsBihC,EAAIl8F,KAAKmD,KAAK,CAAC,GAE5DxE,MAAMW,GAAG48F,EACnB,CAEA90F,SAASopH,GACN,MAAMl1B,EAAWz8F,KAAKU,KAChB0F,EAAWq2F,EAASr2F,UAAY,CAAC,EAGjC8D,EAAOuyF,EAAShlC,sBAUtB,GAPWvtD,EAAKghB,gBAGZQ,UAAU,MAEdimG,GAAch5C,gBAAgBzzE,QAE1BkB,EAAS+1D,YAAajyD,EAAK8xF,WAAW51F,EAAS+1D,iBAE9C,CACF,MAAMy1D,EAAiB9vG,GAAMA,EAAE1b,UAA+B,SAAnB0b,EAAE1b,SAASxE,KAEhDiwH,EAAW7xH,KAAK43D,aACtB,GAAIi6D,EAAU,CACX,MAAMj6D,EAAai6D,EAASj6D,WAAWg6D,IAAkBC,EAErDj6D,GAAY1tD,EAAK8xF,WAAWpkC,EAAWh3D,GAC9C,CACH,CACH,CAEA8wH,QAAQI,GAEL,MAGM5lG,EAHOlsB,KAAKU,KAAK+2D,sBAGPvsC,eAGZgB,GACDA,EAAGR,UAAU,MAGhBomG,GAAan5C,gBAAgBzzE,OAChC,CAEA4C,OAAOsgG,GACJ,IAAKA,EAEF,YADA5/F,QAAQ+G,MAAM,8BAIjB,MAAMrF,EAAOlK,KAAKU,KAAK+2D,sBACjB2C,EAAWguC,EAAWzvB,cAG5ByvB,EAAWhjG,YAGX8E,EACIu/G,SAASrvD,GACT5lD,MAAK,KACH4zF,EAAW1gG,WAGXwC,EAAK4+F,cAAc,IAErBr0F,OAAOtM,IACLK,QAAQ+G,MAAMpH,GACdigG,EAAW1gG,UAAU,GAE9B,oBC5KH,MAAM2iG,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAA0C,EAGxDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,sBAAsB48F,EAAS77F,KAAMV,EAClE,CAEAO,KACG,OAAOX,MAAMW,GAAG,CACbC,KAAM,YAEZ,oBCbH,MAAMo7F,EAAkB,WAClBjmE,EAAiB,EAAQ,OACzB0wE,EAAoB,EAAQ,OAC5BloC,EAAmB,EAAQ,OAC3B0zD,EAAoB,EAAQ,OAM5B/Y,EAAmB,GAEzBv5G,EAAOC,QAAU,cAAkCo8F,EAChDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,cAAc48F,EAAS77F,KACjCuT,OAAOsmC,OACJ,CACGvwC,KAAM,GAEN4xE,OAAQ,GACRU,cAAe,GACfw1C,WAAY,GACTnyH,GAAU,cAAc48F,EAAS77F,wBAGvCV,IAINF,KAAKiyH,QAAU,KAEfjyH,KAAKkyH,SAAU,CAClB,CAEAzxH,KACG,MAAMg8F,EAAWz8F,KAAKU,KAEhBmB,EADiB46F,EAASkK,iBACJlmG,KAAKoB,MAAQ,GACnCswH,EAAyBnyH,KAAKoyH,qBAC9B/0B,EAAMv9F,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAIgK,KACbxJ,KAAM,OACN2xH,KAAM51B,EAAS77F,GACfiB,KAAMA,EAAKilB,OAAOqrG,MAMxB,cAFO90B,EAAIz7F,KAEJy7F,CACV,CAEA+0B,qBACG,MAAMtkH,EAAS,CACZ,CACGwlE,QAAQ,EACRzxE,KAAM,KAKN46F,EAAWz8F,KAAKU,KAChBuE,EAASjF,KAAKkrB,gBAAgBD,YAAcwxE,EAASv5F,eAE3D,IAAK+B,EAAQ,OAAO6I,EAEpB,MAAMorG,EAAe,GACfoZ,EAAe71B,EAASp/B,kBA6C9B,OA3CAp4D,EAEI8B,QAAQC,GAAMA,GAAGZ,UAAUuoE,kBAC3B1qE,SAAS+C,IACMsrH,EAAajmG,MACtBkmG,GAAQvrH,EAAEpG,KAAO2xH,EAAInsH,SAASsE,YAMQ,iBAA/B1D,EAAEZ,SAASuoE,kBACnB3nE,EAAEZ,SAASuoE,gBAAkB96D,KAAK0D,MAC/BvQ,EAAEZ,SAASuoE,kBAKjB3nE,EAAEZ,SAASuoE,gBAAgB1qE,SAAQ,CAAC+qB,EAAMq+E,KACvC,MAAMnwB,EAASl9E,KAAK+B,GAAGoxB,iBACpB,GAAGnsB,EAAEF,cAAcumG,KAGG,mBAAdnwB,EAAOz8E,GACfy4G,EAAa50G,KAAK44E,EAAOz8E,MAGzBy4G,EAAa50G,KAAK44E,EAAOz8E,IAI5Bu4G,EAAiB10G,KAAK,CACnBwE,OAAQo0E,EACRx8E,KAAMw8E,EAAOh9E,IAAIkzE,aACjBtsE,WAAYE,EAAEF,WACd6nE,gBAAiB3/C,EAAK7N,MACtB8nD,eAAgBj6C,EAAKi6C,gBACtB,IACH,IAGRn7D,EAAOjM,KAAOq3G,EAEPprG,CACV,CAEA3I,WAAWpD,EAAIu1D,EAAan1D,EAAU,CAAC,SAC9BrC,MAAMwD,KAAKvB,GAEjB/B,KAAKU,KAAKimG,iBAAiBrjG,KAAKvB,EAAIu1D,EAAan1D,GAEjDnC,KAAKwyH,cAAcrwH,GACnBnC,KAAKyyH,aACLzyH,KAAK0yH,sBACL1yH,KAAK2yH,0BAEL,MAAMj0B,EAAU1+F,KAAK+B,GAAG0Y,MAClBygE,EAAQv3E,GAAG3D,KAAKE,IAAIgK,MAEtBgxE,GACDwjB,EAAQh7F,OAAOw3E,EAAOwjB,EAAQ96F,aAG7B0zD,EAAc,GAAG4jB,EAAM91E,SAC9B,CAEAotH,cAAcrwH,EAAU,CAAC,GAElBA,GAAS66D,cAEVh9D,KAAKU,KAAK0F,SAAS42D,YAAc76D,EAAQ66D,eAG5C,MAAMy/B,EAAWz8F,KAAKU,KAElByB,EAAQukG,iBACTjK,EAASgK,WAAWC,iBAAmBvkG,EAAQukG,iBAC7CjK,EAASgK,WAAWC,iBAAmB,KAAM,CACrD,CAEA+rB,aAEG,MAAMvmG,EAAKlsB,KAAKkrB,eAEhB,IAAKgB,EAAI,OAGTlsB,KAAKmxB,SAAS,CACXC,QAASlF,EACTmF,UAAW,eACXC,SAAWhE,IACSttB,KAAKU,KACgB28D,iBAClClR,GAASA,aAAgBo6C,IAIRtiG,SAAS+C,IAC3B,MAAMpB,EAAQoB,EAAEpB,QAChB,GACmC,OAAhCA,GAAOQ,UAAUc,aACjBtB,GAAOu5E,0BAEAv5E,EAAMu5E,iBACT7xD,EAAQ1nB,EAAMkB,aACf,GAAIqG,MAAMC,QAAQkgB,EAAQ1nB,EAAMkB,aAAc,CAC3C,IAAI8rH,EAAW,GACftlG,EAAQ1nB,EAAMkB,YAAY7C,SAASmP,IAChCw/G,EAAStuH,KAAK8O,EAAExN,EAAMX,OAAOqpB,MAAM,IAEtC1oB,EAAMu5E,iBAAmByzC,EAAStkH,MACrC,MACG1I,EAAMu5E,iBAAmB7xD,EAAQ1nB,EAAMkB,WAGhD,IAGH9G,KAAKoiC,YAAY9U,EAAQ,IAI/B,MAAMptB,EAAMF,KAAKE,IAEjBF,KAAKmxB,SAAS,CACXC,QAASlF,EACTmF,UAAW,mBACXC,SAAU,KACP,MAAM4pD,EAAQv3E,GAAGzD,EAAIgK,MAEjBgxE,IACDA,EAAM91E,UAEN81E,EAAM71E,eAAe,CAAEzD,KAAM,SAChC,IAIN5B,KAAKmxB,SAAS,CACXC,QAASlF,EACTmF,UAAW,kBACXC,SAAU,KACP,MAAM4pD,EAAQv3E,GAAGzD,EAAIgK,MAEjBgxE,IACDA,EAAMxzE,SAENwzE,EAAMvzE,iBACT,IAIN3H,KAAKmxB,SAAS,CACXC,QAASlF,EACTmF,UAAW,2BACXC,SAAU,CAACvS,EAAKlV,KACb,IAAKA,GAAMmO,SAAU,OAErB,MAAM/S,EAASinB,EAAGjB,WAElB,GAAKhmB,IAGFA,EAAOrE,KAAOiJ,EAAKmO,UACnB/S,EAAO8B,QAAQC,GAAMA,EAAEZ,SAASO,aAAekD,EAAKmO,WAChD7R,OAAS,GACd,CACC,MAAMgoB,EAAWjC,EAAGJ,YAEhBqC,GAAUnuB,KAAKoiC,YAAYjU,EAClC,KAKN,MAAM+C,EAAShF,EAAGd,mBAEd8F,GAEDlxB,KAAKmxB,SAAS,CACXC,QAASF,EACTG,UAAW,eACXC,SAAWhE,IACRttB,KAAK6yH,kBAAkBvlG,EAAQ,GAG3C,CAEAolG,sBACG,MAAMxmG,EAAKlsB,KAAKkrB,eAEhB,IAAKgB,EAAI,OAET,IAAK8sF,EAAiB7yG,OAAQ,OAG9B,MAAMmzG,EAAqB,GAE3BN,EAAiB/0G,SAAS+C,IAEvBA,EAAE8B,OAAOhE,gBAAgBonB,EAAGjB,WAAWlmB,aACvCiC,EAAE8B,OAAOsqB,WAAWlH,EAAGjB,WAAWlkB,UAElCC,EAAE8B,OAAOjE,SAASmC,EAAE2nE,iBAIfxhE,MAAMC,QAAQksG,EAAmBtyG,EAAEF,eACrCwyG,EAAmBtyG,EAAEF,YAAc,IAGtCwyG,EAAmBtyG,EAAEF,YAAYxC,KAAK,CACnCowB,QAAS/wB,GAAGqD,EAAEtG,MAAM64G,kBAEpBtwC,eAAgBjiE,EAAEiiE,gBACnB,IAGL,MAAM/oE,EAAMF,KAAKE,IAGjBiU,OAAOC,KAAKklG,GAAoBr1G,SAASI,IAEtC,MAAMyuH,EAAYnvH,GAAGzD,EAAIgK,MAAM6rE,UAAU,CACtC5uE,KAAM9C,IAITyuH,EAAUplH,MAAM4rG,mBAAqBA,EAAmBj1G,GAExDyuH,EAAUruH,OAAO,YAAY,SAAUsuH,EAAMC,EAAMptH,GAEhD,MAAMqtH,EAAkBtvH,GAAGzD,EAAIgK,MAAM6rE,UAAU,CAC5C5uE,KAAMvB,IAIT,IAAIL,GAAU,EA+Bd,OA5BA0tH,EAAgBvlH,MAAM4rG,mBAAmBr1G,SAAS6E,IAC/C,MAAM7D,EAASinB,EAAGjB,WACZphB,EAAO7J,KAAKmrF,YAGZsuB,EAAU,CAAC,GAEhBx0G,EAAO8B,UAAY,IAAI9C,SAAS2B,IAC9B6zG,EAAQ7zG,EAAMhF,IAAMiJ,EAAKjE,EAAMkB,WAAW,IAIzC+C,EAAKgG,OAAM4pG,EAAqB,YAAI5vG,EAAKgG,MAG3B/G,EAAO4rB,QAAQ+kF,KAI9Bl0G,GAAU,EAEV0tH,EAAgBxuH,OACb,iBACAqE,EAAOmgE,gBAEb,IAGI1jE,CACV,IAEAutH,EAAUpuH,SAAS,GAEzB,CAEAiuH,2BACI3yH,KAAKoG,UAAUmrD,aAAe,IAAIttD,SAAS+qB,KACxCA,GAAMkkG,gBAAgBC,YAAYC,iBAAmB,IAAInvH,SACtDqlB,IACE,GAAqB,UAAjBA,EAAG+pG,UAAuB,OAE9B,MAAMC,EAAatzH,KAAK+B,GAAGqjB,iBACvB8G,GAAOA,EAAGtrB,KAAO0oB,EAAG3mB,QACtB,GAGC2wH,GACAA,EAAW7nG,aAAe6nG,EAAWxpG,eAAeC,YAEpDupG,EAAW9hG,UAAU,GAE7B,GAEP,CAEArsB,aAAa0E,GACV7J,KAAKkyH,SAAU,EAEf,MAGMvrB,EAHW3mG,KAAKU,KAGUimG,uBAE1BA,EAAen8F,SAErB,MAAMtK,EAAMF,KAAKE,IACXg7E,EAAQv3E,GAAG3D,KAAKE,IAAIgK,MACpBgiB,EAAKlsB,KAAKkrB,eAEhB,GAAIgB,EAAI,CAGL,MAAM9lB,EAAWpG,KAAKoG,SAElBA,EAAS42D,aACV9wC,EAAGR,UAAU,OAKZtlB,EAAS42D,aAAe52D,EAAS62D,cAClCt5D,GAAGzD,EAAI8xH,aAAavmH,iBAAiBD,WAAWtL,EAAI8xH,YAGvD,MAAM1kG,EAAUpB,EAAGJ,kBAGb9rB,KAAKoiC,YAAY9U,GAEnB4tD,GAAOhvD,EAAG4G,KAAKooD,EACtB,YAEWl7E,KAAKoiC,YAAYv4B,GAAQ,CAAC,GAGrC7J,KAAK8oG,eAED5tB,GAAOA,EAAMtM,QACpB,CAEAzpE,kBAAkBmoB,GAEf,GAAIttB,KAAKiyH,QAAS,OACbjyH,KAAKiyH,cAzZhB9sH,eAAuBouH,GACpB,OAAO,IAAI9jH,SAASC,GAAYiF,WAAWjF,EAwZN,KAvZxC,CAuZgCwC,GAE1B,MAAMuqF,EAAWz8F,KAAKU,KAChB8yH,EAAe/2B,EAASp/B,iBAC1BlR,GACEA,aAAgBkS,GAEflS,aAAgB4lE,GAA4C,SAAvB5lE,EAAK/lD,SAASxE,OAI1D,GAAK0rB,EA6DFkmG,EAAavvH,SAAS+C,IACnB,MAAMmlD,EAAOswC,EAAS8K,eAAevgG,EAAEpG,IAElCurD,IAEDnsD,KAAKkyH,SAAS/lE,GAAM3hD,WAGxBxD,GAAGpB,SAASf,SAASlB,GAAGwoD,EAAKjsD,IAAIuzH,UAAWnmG,GAE5C6+B,GAAMznD,UAAU4oB,GAAQ,QAvEhB,CACXkmG,EAAavvH,SAAS+C,IACnB,MAAMpB,EAAQoB,EAAEpB,QAEhB,IAAKA,EAAO,OAEZ,MAAMumD,EAAOswC,EAAS8K,eAAevgG,EAAEpG,IAEvC,IAAKurD,EAAM,OAGPnsD,KAAKkyH,SAAS/lE,GAAM3hD,WAGxB,MAAMkpH,EAAiB,CAAC,EAExB9tH,EAAMm8B,aAAa2xF,GACnB9tH,EAAMf,SAASlB,GAAGwoD,EAAKjsD,IAAIuzH,UAAWC,GAEtCvnE,GAAMznD,UAAUgvH,EAAe,IAGbj3B,EAASp/B,iBAC1BlR,GACEA,aAAgBt2B,KACds2B,aAAgBkS,KAGXp6D,SAAS+C,IACnB,MAAMpB,EAAQoB,EAAEpB,QAEhB,IAAKA,EAAO,OAEZ,MAAMumD,EAAOswC,EAAS8K,eAAevgG,EAAEpG,IAEvC,IAAKurD,EAAM,OAEX,GAAc,WAAVnlD,EAAE3C,IAAkB,OAExB,MAAMmyB,EAAU5wB,EAAMkB,WAGhBnB,EAAS,CAAC,EAEhBC,EAAMm8B,aAAap8B,GACnBhC,GAAGwoD,EAAKjsD,IAAIuzH,WAAW5uH,SAASc,EAAO6wB,IAAY,GAAG,IAIzD,MACMtF,EADKlxB,KAAKkrB,eACEE,mBAElB,GAAI8F,EAAQ,CACT,MAAMyiG,EAAaziG,EAAOpF,YAE1B9rB,KAAK6yH,kBAAkBc,EAC1B,CACH,CAiBA3zH,KAAKiyH,QAAU,IAClB,CAEAY,kBAAkBvlG,GACf,MAAMpB,EAAKlsB,KAAKkrB,eAKhB,GAFmBgB,EAAGJ,YAEN,OAEhB,MAAM8nG,EAAgB1nG,EAAGZ,UAEzB,IAAKsoG,EAAe,OAEpB,MAAMn3B,EAAWz8F,KAAKU,KAEhBmzH,EAAmBp3B,EAASp/B,iBAAiBlR,GAC1CA,aAAgBt2B,GAEfs2B,EAAKvmD,SAAWumD,EAAKvmD,QAAQhF,KAAOgzH,EAAchzH,KACzD,GAEH,IAAKizH,EAAkB,OAEvB,MAAMC,EAAoBr3B,EAAS8K,eAAessB,EAAiBjzH,IAEnE,IAAKkzH,EAAmB,OAExB,MAAMC,EAAqBpwH,GAAGmwH,EAAkB5zH,IAAIuzH,UAI9CO,EAAW,CAAC,EAElBA,EALkBJ,EAAc7jG,gBAKPzC,EAGzBsmG,EAAc/uH,SAASkvH,EAAoBC,EAC9C,CAEAl2B,UAEA,CAEAgL,eACG,MAAMrM,EAAWz8F,KAAKU,KAEtB,IAAIqoG,EAAc,EACdC,EAAgB,GAEpBvM,EAASh2E,QAAQxiB,SAASmK,IACN,YAAbA,EAAK/J,KAAkC,cAAb+J,EAAK/J,KAC5B+J,EAAKzN,SAAS21D,IAAMyyC,IACrBA,EAAc36F,EAAKzN,SAAS21D,EAC5B0yC,EAAgB56F,EAAKxN,GACxB,IAGN,MAAMqoG,EAAiBxM,EAAS8K,eAAeyB,GAE3CC,GAAkBtlG,GAAGslG,EAAe/oG,IAAIuzH,WACzC9vH,GAAGslG,EAAe/oG,IAAIuzH,UAAUx0G,OACtC,oBCnjBH,MAAMorF,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAAyC,EAGvDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,qBAAqB48F,EAAS77F,KACxCuT,OAAOsmC,OACJ,CACG04B,MAAO,GACP8gD,UAAW,IAEd/zH,IAINF,KAAKk0H,iBAAmB,KACxBl0H,KAAKm0H,kBAAoB,IAC5B,CAEIvuH,YACD,OAAO5F,KAAKU,KAAKkF,OACpB,CAEAnF,KACG,MAAMmF,EAAQ5F,KAAK4F,MACb62F,EAAWz8F,KAAKU,KAChBwJ,EAAOuyF,EAAShlC,sBAChBrxD,EAAWpG,KAAKoG,SAEtB,IAAKR,EAGF,OAFA4C,QAAQ+G,MAAM,gCAAgCnJ,EAASsE,WAEhD5K,MAAMW,GAAG,CACbC,KAAM,QACNU,MAAO,KAIb,MAAM08E,EAAyC,QAA3Bl4E,EAAMQ,SAASa,SAC7BmtH,EAAelqH,GAAM9D,UAAY,CAAC,EAClClG,EAAMF,KAAKE,IAEjB,IAAIm9F,EAAM,CACPz8F,GAAIV,EAAIuzH,SACR/yH,KAAMo9E,EAAc,aAAe,QACnC32E,KAAMvB,EAAMkB,WAGZq5E,YAAav6E,EAAMhF,GACnBwB,GAAI,CACDgI,YAAa,CAACxJ,EAAIyJ,KACf,GACGA,EAAE47C,OAAOm8B,UAAUzzC,SAAS,sBAC5BtkC,EAAE47C,OAAO28B,QAAQj3D,OAClB,CACC,MAAMkC,EAAQxjB,EAAE47C,OAAO28B,QAAQj3D,OAC/B,IAAKkC,EAAO,OACZ7tB,KAAKq0H,aAAaxmG,EACrB,GAEHxrB,SAAWwH,IACR,IAAIyqH,EACAnnH,MAAMC,QAAQvD,IACfyqH,EAAiB,GACjBzqH,EAAK5F,SAASgpB,IACXqnG,EAAehwH,KAAK2oB,EAAOrsB,IAAMqsB,EAAO,MAS3CqnG,EAAiBzqH,EACE,iBAARA,IAERyqH,EAAiB1uH,EAAM25E,eAAe11E,IAItCyqH,EADCA,GAAgB1zH,GACA0zH,EAAe1zH,GAEfiJ,GAMvB,MAAM0qH,EAAY5wH,GAAGzD,EAAIuzH,UAczB,GAT0C,OAAtCzzH,MAAM4F,OAAOQ,UAAUc,aACxBtB,EAAMy4E,sBACHk2C,EACA93B,EAASt6F,QACTyD,EACA62F,EAAShlC,uBAIX88D,EAAW,CACZA,EAAUp6C,aAEV,MAAMq6C,EAAaF,EAAehmH,KAC7BgmH,EAAehmH,OACfgmH,EAELC,EAAU1vH,SAAS2vH,GACnBD,EAAUn6C,cACb,KAKLg6C,EAAaniE,YACdorC,EAAIj8F,MAAQwE,EAAMxE,MAClBi8F,EAAIv7F,WAAasyH,EAAatyH,WAC9Bu7F,EAAIvpC,cAAgBsgE,EAAatgE,eAGpC9zD,KAAKy0H,kBAELp3B,EAAIrlB,QAAU,CACXkG,QAAQ,EACRw2C,YAAW52C,EACXr8E,KAAM,CACHoI,KAAM,GACNw3D,UACGo7B,GAAUr2F,UAAU+2D,SACf,kEACA,IAHE,WAMb/6D,GAAI,CACDoI,OAAQ,KACL5E,EAAM46E,sBAAsB78E,GAAGzD,EAAIuzH,UAAW7tH,EAAOsE,EAAK,GAIhEpB,OAAQ,EAAGnG,SAASoT,IACjBpT,EAAMwV,cAAc20B,SAAS/2B,EAAOoC,gBAG1CklF,EAAIsjB,QAAU,CACXgU,YAAa,CAAC/zH,EAAIyJ,EAAGuqH,KAClB,GAAyB,IAArBxuH,EAAShB,QAAe,OAE5B,MAAMkoB,EAAU,CAAC,EACXinG,EAAY5wH,GAAGzD,EAAIuzH,UAEzB,GAAIc,EAAW,CACZ,MAAMhyH,EAAOgyH,EAAU7mH,MAEvB9H,EAAMy3E,WAAW/vD,EAAmB/qB,EACvC,IAIN,IAAIsyH,EAAQ70H,KAAKk0H,kBAAkBzzH,GA8CnC,OA7CIo0H,GAEDx3B,EAAIj8F,MAAQ,GACZi8F,EAAIv7F,WAAa,EAGjB+yH,EAAMzyH,GAAK,CACRgI,YAAa,KAEVpK,KAAKk0H,kBAAkBvT,QAAQz2G,EAAKghB,iBAE7B,IAIbmyE,EAAM,CACHy3B,QAAS50H,EAAIuzH,SACb5xH,KAAM,CACH,CACGV,KAAM,CACH,CACGT,KAAM,QACNU,MAAOwE,EAAMxE,MACbJ,MAAOozH,EAAatyH,WACpBT,MAAO,QAEVwzH,EACAx3B,MAMZA,EAAMv9F,MAAMW,GAAG48F,KAEfA,EAAM,CACHy3B,QAAS50H,EAAIuzH,SACb5xH,KAAM,CAACw7F,IAGVA,EAAMv9F,MAAMW,GAAG48F,UAERA,EAAIx7F,KAAK,GAAGjB,IAGfy8F,CACV,CAEAl4F,WAAWpD,EAAII,SACNrC,MAAMwD,KAAKvB,GAEjB/B,KAAKy0H,iBACR,CAEAA,kBACG,MAAMh4B,EAAWz8F,KAAKU,KAGhBq0H,EAAYt4B,GAAUr2F,UAAUg0D,SAClC26D,GAAat4B,IAAaz8F,KAAKk0H,mBAChCl0H,KAAKk0H,iBAAmBz3B,EAASuI,YAAY7kG,UAC1CH,KAAK+B,GACL,GAAG06F,EAAS77F,MAAMm0H,KAErB/0H,KAAKk0H,iBAAiBpvH,gBAAgB23F,EAAS13F,aAC/C/E,KAAKk0H,iBAAiB5wH,KAAK,CACxB0xH,WAAYh1H,KAAKi1H,iBAAiBniG,KAAK9yB,MACvCk1H,cAAel1H,KAAKm1H,eAAeriG,KAAK9yB,MACxCg9D,YAAah9D,KAAKo1H,oBAAoBtiG,KAAK9yB,SAIjD,MAAMq1H,EAAa54B,GAAUr2F,UAAU+2D,SACnCk4D,GAAc54B,IAAaz8F,KAAKm0H,oBACjCn0H,KAAKm0H,kBAAoB13B,EAASkN,aAAaxpG,UAC5CH,KAAK+B,GACL,GAAG06F,EAAS77F,MAAMy0H,KAErBr1H,KAAKm0H,kBAAkBrvH,gBAAgB23F,EAAS13F,aAChD/E,KAAKm0H,kBAAkB7wH,KAAK,CACzB0xH,WAAYh1H,KAAKi1H,iBAAiBniG,KAAK9yB,MACvCk1H,cAAel1H,KAAKm1H,eAAeriG,KAAK9yB,MACxCg9D,YAAah9D,KAAKo1H,oBAAoBtiG,KAAK9yB,QAGpD,CAEAmF,uBAAuBskH,GACpB,MAAMvpH,EAAMF,KAAKE,IACX0F,EAAQ5F,KAAK4F,MAGb2uH,EAAY5wH,GAAGzD,EAAIuzH,UACzB,IAAKc,EAAW,OAGhB3uH,EAAM0vH,aAAat1H,KAAKU,KAAK0F,SAASyiB,kBACtC,MAAMhf,QAAajE,EAAMy4E,sBACtBk2C,EACAv0H,KAAKU,KAAKyB,QACVyD,EACA5F,KAAKU,KAAK+2D,uBAWb,GAPA5tD,EAAK5F,SAASmK,IACXA,EAAKzL,MAAQyL,EAAKC,IAAI,IAGzBkmH,EAAUj7C,UAAUx+D,WACpBy5G,EAAUj7C,UAAU70E,OAAO,OAAQoF,GAEH,SAA5BjE,EAAMQ,SAASa,SAAqB,CACrC,MAAMsuH,EAAchB,EAAUtoH,WAE9B,IAAIupH,GACsC,IAAtCD,EAAYloH,QAAQo8G,EAAS7oH,MAC9B40H,EAAiBD,EAAc,GAAGA,KAAe9L,EAAS7oH,KAAO6oH,EAAS7oH,IAE7E2zH,EAAU1vH,SAAS2wH,EACtB,MACGjB,EAAU1vH,SAAS4kH,EAAS7oH,GAYlC,CAEAu0H,iBAGG,OAFAxxH,GAAG3D,KAAKE,KAAKizE,QAAQpK,WAEd,CACV,CAEAqsD,sBACG,OAAO,CACV,CAEAnpH,SAASqhB,GACN,OAAOttB,KAAK4F,MAAMqG,SAAStI,GAAG3D,KAAKE,IAAIuzH,UAAWnmG,EACrD,CAEAmoG,SAASv6C,GACDA,IAELA,EAAM91E,YACN81E,EAAM71E,eAAe,CAAEzD,KAAM,SAChC,CAEA8mG,UAAUxtB,GACFA,IAELA,EAAMxzE,WACNwzE,EAAMvzE,iBACT,CAEA0sH,aAAaxmG,GACV,MAAMznB,EAAWpG,KAAKoG,SAEtB,IAAKA,EAAS+2D,SAAU,OAExB,MAAMA,EAAWn9D,KAAKU,KAAKqE,YAAYsiB,WAAWjhB,EAAS+2D,UAEtDA,IAESx5D,GAAG3D,KAAKE,IAAIuzH,UAAU96C,cAGpC34E,KAAKm0H,kBAAkBxT,UAAUnsG,MAAK,KACnC,MAAM0X,EAAKixC,EAASjyC,eAEhBgB,IACDA,EAAGR,UAAUmC,GAEb7tB,KAAK01H,kBACF11H,KAAK01H,mBACLxpG,EAAG9pB,GAAG,mBAAmB,KACtB8pB,EAAGR,UAAUmC,EAAM,IAE5B,IAEN,CAEArjB,SACG,MAAMtK,EAAMF,KAAKE,IACXq0H,EAAY5wH,GAAGzD,EAAIuzH,UAEzB,IAAKc,EAAW,OAEhB,MAAM3uH,EAAQ5F,KAAK4F,MAEnB,IAAKA,EAAO,OAEZ,MAAMrD,EAAOgyH,EAAU7mH,MAEvB,IAAKnL,EAAM,OAEX,MAAMozH,EAAQhyH,GAAGpB,GAEjB,IAAKozH,EAAO,OAEZ,MAAMvvH,EAAWpG,KAAKoG,SACtB,IAAIyiB,EAAmB,CACpBC,KAAM,MACN3H,MAAO,IAGN/a,GAAUyiB,kBAAkB1H,OAAOhb,OACpC0iB,EAAmB7oB,KAAKU,KAAK0F,SAASyiB,iBAC9BziB,GAAUwiB,iBAAiBC,kBAAkB1H,OAAOhb,SAC5D0iB,EAAmBziB,EAASwiB,gBAAgBC,kBAG/C,MAAM+sG,EAA2B,CAAC5pF,EAAY4zC,EAAQ,IAC5C,IACD5zC,EAAW7qB,MACVrY,QAAQuB,GAAiB,yBAAXA,EAAE2kB,OAChB7gB,KAAK9D,IACH,MAAMwrH,EAAuB1hH,OAAOsmC,OAAO,CAAC,EAAGpwC,GAI/C,OAFAwrH,EAAqBj2C,MAAQA,EAEtBi2C,CAAoB,KAElC/uG,UACIklB,EAAW7qB,MACVrY,QAAQuB,GAAMA,EAAEye,OAChB3a,KAAK9D,GAAMurH,EAAyBvrH,EAAGu1E,EAAQ,MAInD6c,EAAWz8F,KAAKU,KAChBg/E,EAAwBk2C,EAC3B/sG,GACD1a,KAAK9D,IACJ,IAAK,MAAMhG,KAAOo4F,EAAS1nF,OAAOwyF,eAAgB,CAC/C,KAEM9K,EAAS1nF,OAAOwyF,eAAeljG,aAC/BrE,KAAKL,aAGR,SAEH,MAAMm2H,EAAMnyH,GACT84F,EAAS1nF,OAAOwyF,eAAeljG,GAC3B5D,KACAoB,KAAKwqB,MAAM0pG,GAAOA,EAAGjB,WAAUA,SAGtC,GAAIgB,GAAK7zH,QAAQkF,OAASkD,EAAE1H,MAAO,CAGhC0H,EAAE21E,YAAc81C,EAEhB,KACH,CACH,CAEA,MAAMr3B,EAAKz+F,KAAK+B,GACV6D,EAAQ64F,EACV1mF,WAAW3R,EAAS4R,UACpBjK,UAAU3H,EAASsE,SAEjBsrH,EADev3B,EAAG1mF,WAAWnS,EAAMQ,SAASO,YACjBoH,UAAU1D,EAAEhG,KAc7C,OAZI2xH,EAAY5vH,SAASgB,WAGtBiD,EAAE61E,aAAeue,EACb1mF,WAAWi+G,EAAY5vH,SAASO,YAChCI,QACG+B,GACEA,EAAOlI,KAAOo1H,EAAY5vH,SAASiB,YACnC2uH,EAAY5vH,SAASkB,cACzB,GAAGR,WACJuD,EAAE61E,aAAe,KAEjB71E,CAAC,IAgBX,GAbAoyF,EAASt6F,QAAU,CAChBi4D,SAAUh0D,EAASg0D,SACnB1lC,QAAS7L,EACTlb,KAAMvH,EAASwiB,gBAAgBrc,WAC/Bs4C,SAA+B,IAArBz+C,EAAShB,QACnBotD,YACIpsD,EAAS+2D,UAAkC,SAAtB/2D,EAAS+2D,UAClCuiB,yBAMC+c,EAASt6F,QAAQ0iD,SAAU,CAC5B,MAAMoxE,EAAe,GAErBv2C,EAAsBz7E,SAASkzF,IAC5B,GAAIA,EAAGnX,aAAemX,EAAG9yF,IAAK,CAC3B,MAAM6xH,EAAqBvyH,GAAGwzF,EAAGnX,YAAY/9E,OAAOrB,IAEpD,IAAIu1H,EAAc,KAEbD,GAOYtwH,EAAMqG,SAASiqH,KAI1BC,EAAc,CACXv1H,GAAIu2F,EAAGnX,YAAY/9E,OAAOrB,GAC1BQ,MAAO80H,EAAmBj0H,OAAOb,QAIvC80H,EAAmBhoG,YAChB,YACC7jB,IACoB6rH,EAAmBjqH,YAGlC0pH,EAAMlxH,OAAO,YAAY,GACzBkxH,EAAMlxH,OACH,cACAzE,KAAKoB,MAAM,iBAEdwE,EAAMy4E,sBACHs3C,EACAl5B,EAASt6F,QACTyD,EACA62F,EAAShlC,yBAGZk+D,EAAMlxH,OAAO,YAAY,GACzBkxH,EAAMlxH,OACH,cACAzE,KAAKoB,MAAM,qCAAsC,CAC9C80H,EAAmBj0H,OAAOb,UAKnCu0H,EAAM9wH,SAAS,IACf8wH,EAAMjxH,SAAS,IAElB,IA7CHyxH,EAAc,CACXv1H,GAAI,gBACJQ,MAAOpB,KAAKoB,MAAM,mBAgDrB+0H,GACAF,EAAa7gE,WAAW/qD,GAAMA,EAAEzJ,KAAOu1H,EAAYv1H,KAAM,GAEzDq1H,EAAa3xH,KAAK6xH,EACxB,KAGCF,EAAa9vH,SAAWwvH,EAAM1pH,YAC/B0pH,EAAMlxH,OAAO,YAAY,GACzBkxH,EAAMlxH,OACH,cACAzE,KAAKoB,MAAM,qCAAsC,CAC9C60H,EAAa9nH,KAAK9D,GAAMA,EAAEjJ,QAAOkN,KAAK,WAI5CqnH,EAAMlxH,OAAO,YAAY,GACzBkxH,EAAMlxH,OAAO,cAAezE,KAAKoB,MAAM,iBAE7C,MACGu0H,EAAMlxH,OAAO,cAAe,IAC5BkxH,EAAMlxH,OAAO,YAAY,GAG5BkxH,EAAMjxH,UAENkB,EAAMy4E,sBAEH16E,GAAGzD,EAAIuzH,UACPh3B,EAASt6F,QACTyD,EACA62F,EAAShlC,uBAIZ,MAAM2vB,EAAS,GAAGxhF,EAAMvB,OAAOuB,EAAMkB,cAAclB,EAAMhF,MAAM67F,EAAS1nF,OAAOnU,KAE/E2B,EAAKq+E,aAAa,UAAWwG,EAChC,oBCrjBH,MAAMijB,EAA0B,EAAQ,OAClCqjB,EAAe,EAAQ,OACvB0I,EAAoB,EAAQ,OAIlC32H,EAAOC,QAAU,cAAwC,EAGtDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,oBAAoB48F,EAAS77F,KAAMV,EAChE,CAEIm2H,gBACD,MAAM55B,EAAWz8F,KAAKU,KAEhB0zH,EADO33B,EAAShlC,uBACKrxD,UAAY,CAAC,EAClCA,EAAWq2F,EAASr2F,UAAY,CAAC,EAEvC,IAAIioE,EAAW+lD,EAAatyH,WAM5B,OAJIsE,EAASg0D,SAAUiU,GAAY,GAC1B+lD,EAAaniE,WAA4C,QAA/BmiE,EAAatgE,gBAC7Cua,EAAW,GAEPA,CACV,CAEA5tE,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QAEjBwuH,EADO33B,EAAShlC,uBACKrxD,UAAY,CAAC,EAClCA,EAAWR,GAAOQ,UAAYq2F,EAASr2F,UAAY,CAAC,EAEpDkwH,EACH1wH,GAAOQ,UAAUkyC,UAAYlyC,EAASkyC,SAAW,iBAAmB,GAEvE,IAAIw0E,EAAgB,GAEhBsH,EAAaniE,YAEX66D,EADgC,QAA/BsH,EAAatgE,cACE,+KAA+KwiE,qBAE/K,mMAAmMA,sBAGzN,IAAIv1H,EAAS,GAET6E,aAAiB8nH,EACdtnH,EAASo3C,UACyB,QAA/B42E,EAAatgE,eACd/yD,EAAS8jB,SAASze,EAASq3C,cAhDnB,GAiDR18C,GAAU,IAEVA,EAAS8jB,SAASze,EAASq3C,cAnDnB,GAsDX18C,EADuC,QAA/BqzH,EAAatgE,cACZyiE,IAtDE,GA4DNnC,EAAaniE,WAA4C,QAA/BmiE,EAAatgE,gBAC/C/yD,EA7Dc,IA+DjB,MAAMsgE,EACH,2BAA2B+yD,EAAatgE,kBAAkBg5D,oBACtD95G,QAAQ,WAAYohH,EAAatyH,YACjCkR,QACE,WACA,GAAiC,OAA9BohH,EAAatgE,cAAyB,GAAKluD,EAAMxE,SAEtD4R,QACE,cACApN,GACK8oE,aAAa,CACZ1tE,MAAOhB,KAAKq2H,UACZt1H,OAAQA,EACR8jD,UAAU,IAEZwc,SAAS,CAAC,IAAM,IAG7B,OAAOvhE,MAAMW,GAAG,CACbC,KAAM,YACNoB,WAAY,EACZwpH,SAAU,EACVD,SAAU,EACVnqH,IAAK,kBAILO,KAAM,CACHf,KAAM,IAAI01H,EAAkBp2H,KAAK+B,GAAGw3B,MAAMl1B,IAC1CnD,IAAK,iBACLS,YAAY,EACZ0/D,SAAUA,EACVtgE,OAAQA,EACR4/G,QAAS,CACNgU,YAAa,CAAChgG,EAAKtqB,EAAGuqH,KACnB,GAAyB,IAArBxuH,EAAShB,QAAe,OAE5B,IAAIkoB,EAAU,CAAC,EAEf,MAAM8sC,EACHp6D,MAAMy3D,yBACNz3D,KAAKU,MAAM+2D,wBAEd,GAAI2C,EAAU,CACX,MAAMroC,EAAKqoC,EAASlvC,eAChB6G,IAAIzE,EAAUyE,EAAGjG,aAAe,CAAC,EACxC,CAGA,IAAIvpB,EAAOoB,GAAGixH,GAAKnpH,gBAAgBiC,MACnC9H,GAAOy3E,WACJ/vD,EACAttB,KAAKw2H,OACLj0H,EACAvC,KAAKE,IAAIuzH,SACT9+F,EACF,KAKhB,CAEAnqB,SACG,MAAMtK,EAAMF,KAAKE,IACXq0H,EAAY5wH,GAAGzD,EAAIuzH,UAEzB,IAAKc,EAAW,OAEhB,MAAM93B,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QAEpBrD,EAAOgyH,EAAU7mH,MAGd05E,EAAS,GAAGqV,EAASp4F,OAAOuB,EAAMvB,OAAOuB,EAAMkB,cAAc21F,EAAS77F,MAAM67F,EAAS1nF,OAAOnU,KAClG2B,EAAKq+E,aAAa,UAAWwG,GAE7B,MAAMjlF,EAAU,CACb4hF,OAAQ7jF,EAAIuzH,SACZ5uE,SAAwC,IAA9B43C,EAASr2F,SAAShB,SAG3BQ,aAAiB8nH,IAClBvrH,EAAQpB,OAAS6E,EAAMQ,SAASo3C,WAC3B34B,SAASjf,EAAMQ,SAASq3C,cApJf,GAsJdt7C,EAAQnB,MAAQ4E,EAAMQ,SAASk3C,UAC1Bz4B,SAASjf,EAAMQ,SAASm3C,aACxBv9C,KAAKq2H,WAGbzwH,EAAMwpE,cArBO,CAAC,EAqBepvE,KAAK+B,GAAGw3B,KAAMh3B,EAAMJ,EACpD,CAEA8J,SAASqhB,GACN,MAAM1nB,EAAQ5F,KAAKU,KAAKkF,QAClB2uH,EAAY5wH,GAAG3D,KAAKE,IAAIuzH,UAE9B,OAAO7tH,EAAMqG,SAASsoH,EAAWjnG,EACpC,oBCvKH,MAAM+8E,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAA4C,EAG1DC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,wBAAwB48F,EAAS77F,KAAMV,EACpE,CAEAO,KACG,MAAMmF,EAAQ5F,KAAKU,KAAKkF,QAElBy3F,EAAM,CACT38F,KAAM,cAGT,OAAKkF,GAG8B,IAA/BA,EAAMQ,UAAUqyC,aAAkB4kD,EAAIz7F,KAAO,QAG/B,aAAdgE,EAAMvB,KAAqD,IAA/BuB,EAAMQ,UAAUi0C,aAC7CgjD,EAAIt/B,YAAa,GAGpBs/B,EAAIx4C,UAAW,GAGXw4C,EAAI16F,OAAW06F,EAAI16F,iBAAiB4d,OACrC88E,EAAI16F,MAAQ,IAAI4d,KAAK88E,EAAI16F,QAGd,OAAViD,GAAmBoT,OAAO+nE,cAAasc,EAAI/8E,OAAS1a,EAAMm0C,aAEvDj6C,MAAMW,GAAG48F,IAnBGA,CAoBtB,oBCpCH,MAAMvB,EAAkB,WAExBr8F,EAAOC,QAAU,cAAsCo8F,EACpDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,kBAAkB48F,EAAS77F,KACrCuT,OAAOsmC,OAAO,CAAEg5E,SAAU,IAAMvzH,GAEtC,CAEAO,GAAGg2H,EAAsB,CAAC,GAEvB,MAAMh6B,EAAWz8F,KAAKU,KAChBwJ,EAAOuyF,EAAShlC,sBACnB7xD,EAAQ62F,EAAS72F,WAAa,KAE3BQ,EAAW8D,GAAM9D,UAAY,CAAC,EAC9BswH,EAAc,CACjB91H,GAAIZ,KAAKE,IAAIuzH,SACb3/D,cAAe1tD,EAAS0tD,cACxBhyD,WAAYsE,EAAStE,WACrBV,MANQ,IASX,GAAIwE,EAAO,CACR8wH,EAAYvvH,KAAOvB,EAAMkB,WAGzB,MAAM+C,EAAO,CAAC,EAEdjE,EAAMm8B,aAAal4B,GAEfA,EAAKjE,EAAMkB,cAAa4vH,EAAY/zH,MAAQkH,EAAKjE,EAAMkB,aAEvDV,EAAS6rD,YAAWykE,EAAYt1H,MAAQwE,EAAMxE,QAE9CwE,EAAMQ,SAASkyC,UAAYmkD,EAASr2F,SAASkyC,YAC9Co+E,EAAYp+E,SAAW,GAED,IAArBlyC,EAAShB,UAAesxH,EAAYvxF,UAAW,GAGnDuxF,EAAYt0H,GAAK,CACd0zE,gBACG,GAAI91E,KAAKs5E,QAAS,CACf,MAAMnG,EAAQnzE,KAAK65E,WAEnB,IAAK1G,EAAO,OAEZnzE,KAAKs5E,UAAUzvE,KAAK42E,MAAMC,IACvB,IAAKA,EAAQ,OAGb,MAAMn+E,EAAO4wE,EAAMzlE,MAAMizE,cACtB,iBAAiBD,GAAQ9/E,IAAM,IAC3B8T,WACAnB,WAAW,IAAK,YAGlBhR,GAELA,EAAKq+E,aACF,UACA,GAAGh7E,EAAMvB,eAAeq8E,EAAO9/E,MAAMgF,EAAMhF,MACxCsJ,GAAMtJ,IAAM,OAEjB,GAEP,CAEAZ,KAAKqjG,iBAAiBziB,eACnB,UACA,GAAGh7E,EAAMvB,OAAOuB,EAAMkB,cAAclB,EAAMhF,MACvCsJ,GAAMtJ,IAAM,OAGrB,GAMH81H,EAAYn+C,SAAW,CAACviE,EAAKnM,EAAM2sB,KAChC,MAAMjvB,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAIrC,OAFA3B,EAAMwpB,YAAYvlB,EAAMtC,GAEjBA,EAAUiW,MAAM,CAE7B,CAEA,MAAM6/E,EAAMv9F,MAAMW,GAAG,CAClB0T,OAAOsmC,OAAO,CAAC,EAAGi8E,EAAaD,KAKlC,cAFOp5B,EAAIz7F,KAEJy7F,CACV,oBCnGH,MAAMgN,EAA0B,EAAQ,OAClCssB,EAAkB,EAAQ,OAEhCl3H,EAAOC,QAAU,cAAwC,EAGtDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,oBAAoB48F,EAAS77F,KAAMV,GAE7DF,KAAK42H,oBAAsB,IAC9B,CAEIC,yBACD,OAAQ72H,KAAK42H,oBACV52H,KAAK42H,qBAAuB,IAAID,EAAgB32H,KAAK+B,GAAGw3B,MAAMl1B,GACpE,CAEA5D,KACG,OAAOX,MAAMW,GAAG,CACbC,KAAMV,KAAKoG,SAAS+3D,UAAY,UAAYn+D,KAAK62H,mBACjDj1H,KAAM,SACN22E,SAAWviE,IAASqpC,MAAY,EAANrpC,IAEhC,oBCvBH,MAAMq0F,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAA0C,EAGxDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,sBAAsB48F,EAAS77F,KACzCuT,OAAOsmC,OACJ,CACG4mB,SAAU,IAEbnhE,GAGT,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QAEjBy3F,EAAM,CACT38F,KAAM,YACNoB,WAAY,EACZwpH,SAAU,EACVD,SAAU,EACVvM,UAAU,EACV59G,IAAK,oBAKLO,KAAM,CACHb,GAAIZ,KAAKE,IAAImhE,SACb3gE,KAAM,QACNiB,YAAY,EACZT,IAAK,CAAE,mBAAoB,QAC3BE,MAAO,KAIPgF,EAAWq2F,EAAShlC,sBAAsBrxD,UAAY,CAAC,EAQ7D,OAN0B,GAAtBA,EAAS6rD,WAA+C,OAA1B7rD,EAAS0tD,cACxCupC,EAAI57F,KAAKV,OAAS,GACV6E,EAAMQ,SAASo3C,UACvB6/C,EAAI57F,KAAKV,OAAS8jB,SAASjf,EAAMQ,SAASq3C,cAAgB,GACtD4/C,EAAI57F,KAAKV,OAAS,GAElBjB,MAAMW,GAAG48F,EACnB,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMwyH,EAAY5wH,GAAG3D,KAAKE,IAAIuzH,UAE9B,IAAKc,EAAW,OAEhB,MAAMr5C,EAAQq5C,EAAU57C,cAClBrrD,EAAU4tD,GAAOiQ,aAAe,CAAC,EAEvCnrF,KAAK0E,QAAQ4oB,GACb4tD,GAAOhtD,YAAY,YAAY,CAAC7iB,EAAMC,KACnC,MAAMgiB,EAAU4tD,GAAOiQ,aAAe,CAAC,EAEvCnrF,KAAK0E,QAAQ4oB,EAAQ,GAE3B,CAEA9iB,SACG,MAAM+pH,EAAY5wH,GAAG3D,KAAKE,IAAIuzH,UAE9B,IAAKc,EAAW,OAEhB,MACMjnG,EADQinG,EAAU57C,eACDwS,aAAe,CAAC,EAEvCnrF,KAAK0E,QAAQ4oB,EAChB,CAEArhB,SAASqhB,GACN,MAAM1nB,EAAQ5F,KAAKU,KAAKkF,QAExB,OAAKA,EAEE0nB,EAAQ1nB,EAAMkB,YAFF,IAGtB,CAEApC,QAAQ4oB,GACL,MAAMmvE,EAAWz8F,KAAKU,KAChBwJ,EAAOuyF,EAAShlC,sBACnB7xD,EAAQ62F,EAAS72F,QAEdwuH,EAAelqH,EAAK9D,UAAY,CAAC,EAEvC,IAAI0mH,EAAgB,GAEhBsH,EAAaniE,YAEX66D,EADgC,QAA/BsH,EAAatgE,cACE,gLAAgLluD,EAAMxE,gBAEtL,wBAAwBgzH,EAAatyH,0KAA0K8D,EAAMxE,iBAG3O,IAAIitE,EAAW+lD,EAAatyH,WAExB9B,KAAKoG,SAASg0D,SAAUiU,GAAY,GAC/B+lD,EAAaniE,WAA4C,QAA/BmiE,EAAatgE,gBAC7Cua,EAAW,GAEd,MAAMhN,EACH,8BAA8ByrD,oBAAgC95G,QAC3D,cACApN,EACI8oE,aAAa,CACX1tE,MAAOqtE,EACPxpB,UAAU,IAEZwc,SAAS/zC,IAInB3pB,GAAG3D,KAAKE,IAAImhE,WAAWy1D,QAAQz1D,EAClC,oBC7HH,MAAMgpC,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAAyD,EAGvEC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,4BAA4B48F,EAAS77F,KAAMV,EACxE,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QACpBQ,EAAWpG,KAAKoG,SACbjE,EAAU,GAEG,SAAfyD,GAAOvB,IAAgBlC,EAAQmC,QAAQsB,EAAMsvD,YACxCtvD,GACNzD,EAAQmC,QAASsB,EAAMQ,SAASjE,SAAWiE,EAASjE,SAAW,IAElE,MAAMjC,EAAMF,KAAKE,IACXm9F,EAAM,CACTz8F,GAAIV,EAAIuzH,SACR/yH,KAAM0F,EAASxE,MAAQ66F,EAAS98F,YAAYmiC,gBAAgBlgC,KAC5DO,QAASA,EAAQgM,KAAK+vC,IACZ,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,KACX+vC,IAAKF,EAAIE,SAKlB,OAAQi/C,EAAI38F,MACT,IAAK,aACF28F,EAAI05B,SAAU,EACd15B,EAAIn8F,IAAM,yBACVm8F,EAAI25B,YAAerxH,IAChB,MAAMsxH,EAAkB,GAClB1C,EAAY5wH,GAAGzD,EAAIuzH,WAAa9vH,GAAG05F,EAAIz8F,IAE7C+E,EAAO1B,SAAS+R,IACbihH,EAAgB3yH,KAAKiwH,EAAUj7C,UAAUttD,QAAQhW,GAAK,IAGzD,IAAIvQ,EAAOwxH,EAEPrxH,EAAM0gF,qBACP7gF,EAAOG,EAAM0gF,mBAAmB1gF,EAAOqxH,IAE1C,MAAM5vC,EAAQ,GAkBd,OAhBA5hF,EAAKxB,SAAS+R,IACX,IAAIiwE,EAAiB,GACjBC,EAAY,GAEZtgF,EAAMQ,SAAS23C,WAAa/nC,EAAIooC,MACjC6nC,EAAiB,iBACjBC,EAAY,eAAelwE,EAAIooC,QAGlC,MAAM/vC,EAAO2H,EAAI3H,KAAO2H,EAAI3H,KAAO2H,EAAIrT,MAEvC0kF,EAAM/iF,KACH,uCAAuC2hF,aAA0BC,gBAAwBlwE,EAAIpV,aAAayN,sGAC5G,IAGGg5E,EAAM/4E,KAAK,GAAG,EAGxB,MAEH,IAAK,WAEF+uF,EAAIl7F,QAAQmC,KAAK,CACd1D,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,YAM3B,OAAOtB,MAAMW,GAAG48F,EACnB,CAEApxF,SAASqhB,GACN,MAAM1nB,EAAQ5F,KAAKU,KAAKkF,QACrB2uH,EAAY5wH,GAAG3D,KAAKE,IAAIuzH,UAE3B,OAAO7tH,EAAMqG,SAASsoH,EAAWjnG,EACpC,oBC1FH,MAAM+8E,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAAuD,EAGrEC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,0BAA0B48F,EAAS77F,KAAMV,EACtE,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QACpBQ,EAAWq2F,EAASr2F,SACjBjE,EAAU,GAEG,SAAfyD,GAAOvB,IAAgBlC,EAAQmC,QAAQsB,EAAMsvD,YACxCtvD,EACNzD,EAAQmC,QAASsB,EAAMQ,SAASjE,SAAWiE,EAASjE,SAAW,IAC7DA,EAAQmC,QAAS8B,EAASjE,SAAW,IAE1C,MAAMk7F,EAAM,CACT38F,KAAM0F,EAASxE,MAAQ66F,EAAS98F,YAAYmiC,gBAAgBlgC,MAkD/D,OA/CIgE,GAAOQ,SAAS23C,WACjBs/C,EAAIn8F,IAAM,kBACVm8F,EAAIl7F,QAAU,CACXzB,KAAM,UACNe,KAAM,CACHf,KAAM,OACNmJ,KAAM1H,EAAQgM,KAAK+vC,IACT,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,MAAQ6vC,EAAIv7C,MACvBy7C,IAAKx4C,EAAMQ,SAAS23C,UAAYG,EAAIE,IAAM,OAGhDijB,SAAU,SAAU1+D,GACjB,MAAM0kF,EAAQ,GAEd,IAAIpB,EAAiB,GACjBC,EAAY,GAWhB,OATIvjF,EAAMy7C,MACP6nC,EAAiB,iBACjBC,EAAY,eAAevjF,EAAMy7C,QAGpCipC,EAAM/iF,KACH,uCAAuC2hF,aAA0BC,gBAAwBvjF,EAAM/B,aAAa+B,EAAMA,uBAG9G0kF,EAAM/4E,KAAK,GACrB,KAIN+uF,EAAIl7F,QAAUA,EAAQgM,KAAK+vC,IACjB,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,MAAQ6vC,EAAIv7C,UAKf,UAAb06F,EAAI38F,MAAoB28F,EAAIl7F,QAAQgE,OAAS,GAC9Ck3F,EAAIl7F,QAAQmC,KAAK,CACd1D,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,YAGjBtB,MAAMW,GAAG48F,EACnB,oBCxEH,MAAMgN,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAAyC,EAGvDC,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,qBAAqB48F,EAAS77F,KAAMV,EACjE,CAEAO,KACG,MAAM48F,EAAM,CAAC,EAEb,OACGr9F,KAAKoG,SAASxE,MACd5B,KAAKU,KAAK0F,SAASxE,MACnB5B,KAAKU,KAAKf,YAAYmiC,gBAAgBlgC,MAEtC,IAAK,SACFy7F,EAAI38F,KAAO,OACX,MACH,IAAK,WACF28F,EAAI38F,KAAO,WACX28F,EAAIt8F,OAAS,IACb,MACH,IAAK,OACFs8F,EAAI38F,KAAO,YACX28F,EAAIt8F,OAAS,IACbs8F,EAAIn8F,IAAM,eACVm8F,EAAI57F,KAAO,CACRf,KAAM,iBACNiC,MAAO,GACP+yG,IAAK,2BACLzzG,OAAQ,CACL2f,QAAS,OACTs1G,QAAS,cACTtlB,QACG,mJAMf,OAAO9xG,MAAMW,GAAG48F,EACnB,CAEA7yF,SACG,MAAMpE,EAAWpG,KAAKU,KAAK0F,UAAY,CAAC,EAElCswH,EADM12H,KAAKS,KACOoB,KAAK,GAC7B,IAAI0yH,EAAY5wH,GAAG+yH,EAAY91H,IAI/B,GAAsB,SAAlBwF,EAASxE,MAAmB2yH,EAAW,CAExCA,EAAYv0H,KAAK+B,GAAG0Y,MAAMha,GAAGi2H,EAAanC,GAG1C,MAAM93B,EAAWz8F,KAAKU,KAEtB6zH,EACIzpH,gBAAgB,GAChBqsH,WAAU,GACV3iH,MAAMlP,IACJ,MAAM8hF,EAAS,GAAGqV,EAASp4F,YAAYqyH,EAAYvvH,QAChDs1F,EAAS77F,IAAM,MACd67F,EAAS1nF,QAAQnU,IAAM,KAE3B0E,EAAO8xH,qBAAqBx2C,aAAa,UAAWwG,EAAO,GAEpE,CACH,mBCvEH,MAAMijB,EAA0B,EAAQ,OAExC5qG,EAAOC,QAAU,cAAsC2qG,EACpD1qG,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,kBAAkB48F,EAAS77F,KAAMV,EAC9D,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAChBkF,EAAQ62F,EAAS72F,QAEjBy3F,EAAM,CAAC,EAGb,IAAKz3F,EAAO,OAAO9F,MAAMW,GAAG48F,GAE5B,MAAM+2B,EAAe33B,EAAShlC,sBAAsBrxD,UAAY,CAAC,EAE3DkwH,EACyB,IAA5B1wH,EAAMQ,SAASkyC,SAAiB,iBAAmB,GAEtD,IAAIw0E,EAAgB,GAEhBsH,EAAaniE,YAEX66D,EADgC,QAA/BsH,EAAatgE,cACE,+KAA+KwiE,qBAE/K,mMAAmMA,sBAGzN,IAAIjoD,EAAW+lD,EAAatyH,WAExB9B,KAAKoG,SAASg0D,WAAUiU,GAAY,IAExC,MAAMhN,EAAW,GAAGyrD,cAChB95G,QAAQ,WAAYohH,EAAatyH,YACjCkR,QAAQ,WAAYpN,EAAMxE,OAC1B4R,QACE,cACApN,EAAM8oE,aAAa,CAChB1tE,MAAOqtE,IACPhN,UAuBT,OApBAg8B,EAAI38F,KAAO,WACX28F,EAAIn8F,IAAM,eACVm8F,EAAIt8F,OAC4B,IAA7B6E,EAAMQ,SAASo3C,UACV34B,SAASjf,EAAMQ,SAASq3C,aACxB,GACR4/C,EAAI17F,YAAa,EAEjB07F,EAAIh8B,SAAW,4BAA4BA,UAE3Cg8B,EAAIsjB,QAAU,CACXgU,YAAa,CAAC/zH,EAAIyJ,EAAGuqH,KAClB,MAAMtnG,EAAU,CAAC,EACd/qB,EAAOoB,GAAG3D,KAAKE,IAAIuzH,UAAU/lH,MAEhC4f,EAAQ1nB,EAAMkB,YAAc9G,KAAKiM,WACjCrG,EAAMy3E,WAAW/vD,EAASttB,KAAK+B,GAAGw3B,KAAMh3B,EAAMvC,KAAK,GAIlDF,MAAMW,GAAG48F,EACnB,CAEApxF,SAASqhB,GACN,IAAI7nB,EAAO9B,GAAG3D,KAAKE,IAAIuzH,UAAUtoC,YAKjC,OAFIh+E,MAAMC,QAAQ3H,IAAyB,IAAhBA,EAAKU,SAAcV,EAAO,IAE9CA,CACV,oBC1EH,MAAMq2F,EAAkB,WAExBr8F,EAAOC,QAAU,cAAmCo8F,EACjDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,eAAe48F,EAAS77F,KAClCuT,OAAOsmC,OAAO,CAAE4a,MAAO,IAAMn1D,GAEnC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBi3F,EAAMv9F,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CACGP,GAAIZ,KAAKE,IAAIm1D,MACb30D,KAAM,WACN2gE,SAAU,GACVtgE,OAAQqF,EAASrF,OACjBC,MAAOoF,EAASpF,OAEnB,CAAC,MAOV,cAFOq8F,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMs1H,EAAS1zH,GAAG3D,KAAKE,IAAIm1D,OAE3B,IAAKgiE,EAAQ,OAEb,MAAMjxH,EAAWpG,KAAKoG,SAElBA,EAAS41C,SACVq7E,EAAO5yH,OACJ,WACA,mBAAmB2B,EAAS41C,qBAAqB51C,EAASrF,kBAAkBqF,EAASpF,WAEtFq2H,EAAO5yH,OAAO,WAAY,IAE/B4yH,EAAO3yH,SACV,oBClDH,MAAMo3F,EAAkB,WAClBw7B,EAAkB,EAAQ,OAEhC73H,EAAOC,QAAU,cAAoCo8F,EAClDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,gBAAgB48F,EAAS77F,KACnCuT,OAAOsmC,OACJ,CACG88E,WAAY,GAEZC,OAAQ,GACRC,QAAS,GACTC,cAAe,IAElBx3H,IAINF,KAAK23H,SAAW,IAAIL,EACjBt3H,KACAA,KAAKE,IAAIw3H,cACT13H,KAAKoG,SAAS66D,YAGjBjhE,KAAK43H,qBAAuB,KAC5B53H,KAAK63H,uBAAyB,KAC9B73H,KAAK83H,kBAAoB,KAEzB93H,KAAKuhE,aAAek7B,EAASl7B,aAE7BvhE,KAAK+3H,oBAAsB,KAC3B/3H,KAAKg4H,gBAAkB,KACvBh4H,KAAKi4H,aAAe,KACpBj4H,KAAKk4H,aAAe,IACvB,CAEIxzE,qBACD,OAAQ1kD,KAAKg4H,gBACVh4H,KAAKg4H,iBACLh4H,KAAK+B,GAAGwc,MAAM/e,eAAe24H,WAAW,gBAC9C,CAEIC,kBACD,OAAQp4H,KAAKi4H,aACVj4H,KAAKi4H,cAAgBj4H,KAAK+B,GAAGwc,MAAM/e,eAAe24H,WAAW,OACnE,CAEIzsE,kBACD,OAAQ1rD,KAAKk4H,aACVl4H,KAAKk4H,cAAgBl4H,KAAK+B,GAAGwc,MAAM/e,eAAe24H,WAAW,OACnE,CAEA13H,KACG,MAAMP,EAAMF,KAAKE,IACXy6E,EAAO36E,KACPq9F,EAAMv9F,MAAMW,GAAG,CAClB,CACGG,GAAIV,EAAIq3H,WACRp2H,KAAM,CACH,CACGP,GAAIV,EAAIs3H,OACR92H,KAAM,SACNS,KAAM,GACN0P,SAAU,CACPnQ,KAAM,OAGN2gE,SAAU,qCACVrgE,MAAO,IACPoB,GAAI,CACDi2H,eAAgB,KAEb,IAAK19C,EAAKo9C,oBAAqB,OAE/B,MAAMO,EAASt4H,KAAKu4H,eAAc,GAE7BD,GAEL39C,EAAK69C,YAAY79C,EAAKo9C,oBAAqBO,EAAO,IAI3DhzH,QAAQ,EACR8J,MAAO,GACPqpH,KAAM,GACN5uH,KAAM,GACNzH,GAAI,CACDs2H,kBAAmB,CAAC/sG,EAAQ1hB,KACzBjK,KAAKotG,uBAAuB1hF,UAAUC,GACtC3rB,KAAKwP,KAAK,SAAUmc,GAEpB,MAAMgtG,EAAWh1H,GAAGzD,EAAIu3H,SAExB,GAAI9rG,EAAQ,CACT,MAAM9hB,EAAOlG,GAAGzD,EAAIs3H,QAAQxrG,QAAQL,GAEpC3rB,KAAK23H,SAAS/yH,KAAKiF,GAEnB8uH,GAAU/zH,MACb,MACG5E,KAAK23H,SAAShzH,OAEdg0H,GAAUh0H,MACb,EAEHi0H,oBAAqB,CAAC/qG,EAAOxW,KAC1BrX,KAAK64H,aAAahrG,EAAOxW,EAAO,EAEnCyhH,cAAgBjrG,IAEb7tB,KAAK+3H,oBAAsBlqG,CAAK,IAIzC,CACGjtB,GAAIV,EAAIu3H,QACR/2H,KAAM,UACNQ,IAAK,UACLF,MAAO,GACPsyE,QAAQ,GAEXtzE,KAAK23H,SAASl3H,SAOvB,cAFO48F,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM28F,EAAU1+F,KAAK+B,GAAG0Y,MAEpBza,KAAK+4H,KAAKr6B,EAAQh7F,OAAO1D,KAAK+4H,IAAKr6B,EAAQ96F,aAE/C5D,KAAK23H,SAASr0H,KAAKvB,GACnB/B,KAAK23H,SAASv1H,GAAG,OAAQo7G,IACtBx9G,KAAKypH,SAASjM,EAAQ,IAEzBx9G,KAAK23H,SAASv1H,GAAG,UAAWm7G,IACzBv9G,KAAKypH,SAASlM,EAAW,GAE/B,CAEIwb,UACD,OAAQ/4H,KAAKg5H,IAAMh5H,KAAKg5H,KAAOr1H,GAAG3D,KAAKE,IAAIs3H,OAC9C,CAEAyB,qBACG,MAAO,CACJ77G,MAAO,CAEJ,CACG7R,KAAM,gBACNhK,MAAQssB,IACL7tB,KAAKk5H,WAAWrrG,EAAM,IAK/BsrG,eAAiBrhH,GAEX9X,KAAK83H,mBACLhgH,EAAI9X,KAAK83H,kBAAkBhxH,YAEpB9G,KAAK83H,kBAAkBx3G,OAAOxI,GAC5B,8CAIfshH,aAAevvH,GACP7J,KAAKoG,SAASi7D,SAIZrhE,KAAKuhE,aAAawE,YAAYl8D,GAH3B7J,KAAKyK,eAAe23B,YAAYv4B,GAMnD,CAOAlF,OACGhB,GAAG3D,KAAKE,IAAIq3H,aAAa5yH,MAC5B,CAMAQ,aACG,MAAMjF,EAAMF,KAAKE,IAEjByD,GAAGzD,EAAIq3H,aAAa3yH,OAEpB5E,KAAK23H,SAAShzH,OAEdhB,GAAGzD,EAAIu3H,UAAU9yH,OAEjB,MAAM8F,EAAgBzK,KAAKyK,cAE3B,IAAKA,EAAe,OAIpB,MAAMmtH,EAAuBntH,EAAcsD,UACxC/N,KAAKoG,SAAS86D,uBAGjB,IAAK02D,EAAsB,OAE3B53H,KAAK43H,qBAAuBA,EAE5B,IAAIyB,EAAoB,GAExB,MAAMxB,EAAyBptH,EAAcsD,UAC1C/N,KAAKoG,SAAS+6D,yBAGjBnhE,KAAK63H,uBAAyBA,EAG3BA,GACAA,aAAkC73H,KAAKg4H,kBAGvCqB,QAA0BxB,EAAuBj8C,cAGpD,MAAM09C,GAAmB1B,EAAqBxxH,SAASjE,SAAW,IAAIgM,KAClE+vC,IAEE,GAAI05E,GAAwBC,EAAwB,CACjD,IAAIh2H,EAAO,GAKR03H,EAAiB,GAmDpB,OAhDI1B,aAAkC73H,KAAKk4H,aAExCqB,GACG1B,EAAuBzxH,SAASjE,SAAW,IAC5CgM,KAAKkX,GAAMA,IACLwyG,aAAkC73H,KAAKi4H,aAC/CsB,EAAiB1B,EAAuB3iE,WAAW/mD,KAC/CgoE,IACS,CACJv1E,GAAIu1E,EAAEv1E,GACNyN,KAAM8nE,EAAE9nE,MAAQ8nE,EAAExzE,UAK3Bk1H,aAAkC73H,KAAKg4H,kBAEvCuB,EAAiBF,EAAkBlrH,KAAI,EAAGvN,KAAIyN,WAAW,CACtDzN,KACAyN,YAGNkrH,EAAej1H,KAAK,CACjB1D,GAAI,KACJyN,KAAMrO,KAAKoB,MAAM,WAGpBm4H,EAAet1H,SAAS+R,IACrB,MAAMwjH,EAAY,CAAC,EAEnBA,EAAU5B,EAAqB9wH,YAAco3C,EAAIt9C,GACjD44H,EAAU3B,EAAuB/wH,YAAckP,EAAIpV,GAGnDiB,EAAKyC,KAAK,CACP+8D,SAAUrrD,EAAI3H,KACdtN,OAAQ,GACRG,IAAK,oBAIRW,EAAKyC,KAAK,CACP5D,KAAM,aACN2W,OAAQmiH,EACR53H,KAAM5B,KAAKi5H,sBACZ,IAGE,CACJxqD,OAAQvwB,EAAI7vC,KACZ5M,KAAM,CACHuzE,OAAQ,EACRnzE,KAAMA,GAGf,CAEK,GAAI+1H,EAAsB,CAC5B,MAAM4B,EAAY,CAAC,EAInB,OAFAA,EAAU5B,EAAqB9wH,YAAco3C,EAAIt9C,GAE1C,CACJ6tE,OAAQvwB,EAAI7vC,KACZ5M,KAAM,CACHf,KAAM,aACN2W,OAAQmiH,EACR53H,KAAM5B,KAAKi5H,sBAGpB,KAIAx6B,EAAKz+F,KAAK+B,GACA08F,EAAGhkF,MAIXha,GAAG64H,EAAiB31H,GAAGzD,EAAIs3H,SACnC7zH,GAAGzD,EAAIs3H,QAAQiC,cAGf,MAAM3B,EAAoBrtH,EAAcsD,UACrC/N,KAAKoG,SAASg7D,YAKjB,GAFAphE,KAAK83H,kBAAoBA,EAErBA,EAAmB,CACpB,MAAM4B,EAAY/1H,GAAGzD,EAAIs3H,QAAQmC,cAIjC,GAFAD,EAAU5+G,WAENg9G,aAA6B93H,KAAKi4H,aAAc,CACjD,MAAM7oH,EAAQqvF,EAAG7rF,QAAQ/B,WAAW1C,KAAKgoE,IAC/B,CACJv1E,GAAIu1E,EAAEvlE,SACNjO,MAAOwzE,EAAEvlE,aAIf8oH,EAAUniH,MAAMnI,EACnB,MAAO,GAAI0oH,aAA6B93H,KAAKg4H,gBAAiB,CAC3D,MAAM71H,QAAgB21H,EAAkBl8C,aAExC89C,EAAUniH,MACPpV,EAAQgM,KAAK+vC,IACH,CACJt9C,GAAIs9C,EAAIt9C,GACR+B,MAAOu7C,EAAI7vC,SAIvB,CACH,CACH,CAEAstE,OACG37E,KAAK+4H,KAAK1zH,eAAe,CAAEzD,KAAM,QACpC,CAEAm6E,QACG/7E,KAAK+4H,KAAKpxH,gBACb,CAEA3C,WAAWC,GACRnF,MAAMkF,WAAWC,GAEjBjF,KAAKuhE,aAAav8D,WAAWC,GAC7BjF,KAAK23H,SAAS3yH,WAAWC,EAC5B,CAOA6oG,mBAAmB5iF,GAChBprB,MAAMguG,mBAAmB5iF,GAEzB,MAAMsE,EAAKxvB,KAAKotG,uBAAyBliF,EAEzC,GAAIsE,EAAJ,CACGA,EAAGsD,KAAK9yB,KAAK+4H,KAEb,MAAMjhH,EAAM0X,EAAGvE,WAEXnT,GAAK9X,KAAKgF,WAAW8S,EAG5B,MAEA9X,KAAK+4H,IAAIhmG,QACZ,CAEA5tB,mBAAmB0oB,EAAOxW,GACvB,IAAKrX,KAAK43H,qBAAsB,OAGhC53H,KAAK27E,OAEL,IAAIkyB,EAAQ,CAAC,EAGTx2F,aAAkBlD,OAAQ05F,EAAQx2F,EAEjCw2F,EAAM7tG,KAAK43H,qBAAqB9wH,YAAcuQ,EAGnD,IAAIuiH,GAAc,EAElB,IAAK,MAAMv1H,KAAOwpG,EACVA,EAAMxpG,KACRwpG,EAAMxpG,GAAO,GAIbu1H,GAAc,GAGpB,IAQG,SAPM55H,KAAKyK,eAAezC,QAAQ0lE,OAAO7/C,EAAOggF,IAEhD7tG,KAAK+7E,QAED69C,GAAa55H,KAAK4E,OAGlB5E,KAAK23H,SAASp8C,YAAa,CAC5B,MAAM1xE,EAAOlG,GAAG3D,KAAKE,IAAIs3H,QAAQxrG,QAAQ6B,GAEzC7tB,KAAK23H,SAASjzH,QAAQmF,EACzB,CAOH,CANE,MAAO1B,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kDACTue,QACAggF,SAEN,CACH,CAEA1oG,kBAAkB0oB,EAAO7X,GACtB,IAAKhW,KAAK83H,kBAAmB,OAG7B93H,KAAK27E,OAEL,MAAMkyB,EAAQ,CAAC,EAEfA,EAAM7tG,KAAK83H,kBAAkBhxH,YAAckP,EAE3C,IACG,MAAM22G,QAAmB3sH,KAAKyK,eAAezC,QAAQ0lE,OAClD7/C,EACAggF,IAOH,GAHA7tG,KAAK+4H,KAAK7oG,WAAWrC,EAAO8+F,GAGxB3sH,KAAK23H,SAASp8C,YAAa,CAC5B,MAAM1xE,EAAO7J,KAAK+4H,IAAI/sG,QAAQ6B,GAE9B7tB,KAAK23H,SAASjzH,QAAQmF,EACzB,CAEA7J,KAAK+7E,OASR,CARE,MAAO5zE,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,iDACTue,QACA7X,QAGHhW,KAAK+7E,OACR,CACH,CAEA0tC,SAAS5/G,GAEFA,EAAKjJ,IAAMZ,KAAK+4H,IAAI5sG,OAAOtiB,EAAKjJ,IACjCZ,KAAK+4H,IAAI7oG,WAAWrmB,EAAKjJ,GAAIiJ,GAE3B7J,KAAK+4H,IAAI73G,IAAIrX,EACrB,CAEAowG,WACOj6G,KAAK+4H,KACN/4H,KAAK+4H,IAAIc,UAAU5vH,IAChBA,GAAMgwG,YAAY,GAE3B,CAEA6f,UACG95H,KAAKi6G,WAGLj6G,KAAK23H,SAAS/yH,OACdjB,GAAG3D,KAAKE,IAAIu3H,SAAS7yH,MACxB,CAEAO,iBAAiB0oB,GACd,MAAM4wE,EAAKz+F,KAAK+B,GACV28F,EAAUD,EAAGhkF,MAEnBikF,EAAQ9sF,QAAQ,CACbR,MAAOpR,KAAKoB,MAAM,eAClBiN,KAAMrO,KAAKoB,MAAM,oCACjByQ,SAAU1M,MAAO2I,IACd,GAAKA,EAAL,CAEA9N,KAAK27E,OAEL,WAC0B37E,KAAKyK,eAAezC,QAAQoO,OAAOyX,KAE7C4oF,QAAU,EACpBz2G,KAAK+4H,IAAIl+G,OAAOgT,GAEhB6wE,EAAQvtF,MAAM,CACX9C,KAAMrO,KAAKoB,MACR,qDASZ,CALE,MAAO+G,GACNs2F,EAAGr2F,OAAOC,UAAUF,EAAK,CACtBmJ,QAAS,kDACTuc,SAEN,CAEA7tB,KAAK+7E,OAvBc,CAuBP,GAGrB,CAWAg+C,UAAU53H,GACPnC,KAAK43H,qBAAuBz1H,EAAQ63H,iBACpCh6H,KAAK63H,uBAAyB11H,EAAQ83H,mBACtCj6H,KAAK83H,kBAAoB31H,EAAQi/D,UACpC,oBCljBH,MAAM06B,EAAkB,WAExBr8F,EAAOC,QAAU,cAAmCo8F,EACjDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,eAAe48F,EAAS77F,KAAMV,EAC3D,CAEAO,KACG,MAAMg8F,EAAWz8F,KAAKU,KAEhB28F,EAAMv9F,MAAMW,GAAG,CAClBT,KAAKk6H,aAAa,CACfx5H,KAAM,QAENU,MAAOq7F,EAASpuF,MAAQ,IACxBhN,MAAOrB,KAAKoG,SAASg2D,UACrBx6D,KAAM,CACHb,OAAQ,YAOjB,cAFOs8F,EAAIz7F,KAEJy7F,CACV,CASA68B,aAAaz5H,GAGV,OAAQokB,SAAS7kB,KAAKoG,SAASka,SAE5B,KAAK,EACF7f,EAAGS,IAAM,sCACT,MAGH,KAAK,EACFT,EAAGS,IAAM,uCACT,MAGH,KAAK,EACFT,EAAGS,IAAM,4CAIf,OAAOT,CACV,CAEA0E,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,oBC3DH,MAAM+5F,EAAkB,WAExBr8F,EAAOC,QAAU,cAAoCo8F,EAClDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MAAM28F,EAAU58F,GAAU,gBAAgB48F,EAAS77F,KAAMV,GAEzD,MAAMqnG,EAAiBvnG,KAAKunG,gBAAkB,CAAC,EAE/C9K,EAASh2E,QAAQxiB,SAASmP,IACvB,IACGm0F,EAAen0F,EAAExS,IAAMwS,EAAEjT,WAO5B,CANE,MAAOgI,GAENK,QAAQ+G,MACL,UAAU6D,EAAE/O,+CACZ8D,EAEN,KAGHnI,KAAKunG,eAAiBA,CACzB,CAEA9mG,KACG,MAAM8mG,EAAiBvnG,KAAKunG,eACtBqiB,EAAez1G,OAAOC,KAAKmzF,GAC7Bp5F,KAAKgsH,GAAQ5yB,EAAe4yB,GAAK15H,OACjCqI,QAAQrI,GAAOA,IACb48F,EAAMv9F,MAAMW,GAAG,CAClB,CACGC,KAAM,SACNS,KAAMyoH,KAMZ,cAFOvsB,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,EAAIu1D,SACNx3D,MAAMwD,KAAKvB,GAEjB,MAAM06F,EAAWz8F,KAAKU,KAGtB+7F,EAASh2E,QAAQxiB,SAASmP,IACLpT,KAAKunG,eAAen0F,EAAExS,KAG7B0C,KAAKvB,EAAIu1D,GAGpBmlC,EAAStrE,SAAS,CACfC,QAAShe,EACTie,UAAW,aACXC,SAAW0xC,IACRy5B,EAAST,WAAWh5B,EAAO,GAE/B,GAER,CAEAx4D,SAEGxK,KAAKU,KAAK+lB,QAAQxiB,SAASmP,IACNpT,KAAKunG,eAAen0F,EAAExS,KAC7B4J,QAAQ,GAEzB,oBCrEH,MAAMsxF,EAAkB,WAExBr8F,EAAOC,QAAU,cAAkCo8F,EAChDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,cAAc48F,EAAS77F,KACjCuT,OAAOsmC,OAAO,CAAExwC,KAAM,IAAM/J,GAElC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBg0H,EAAU,CACbx5H,GAAIZ,KAAKE,IAAI+J,KACbvJ,KAAM,WACNkB,KAAM,CACHZ,MAAO,IACPD,OAAQ,IAEXsgE,SAAWjzD,IACR,MAAMxI,EAAQ5F,KAAKU,KAAKkF,QAExB,OAAKA,EAEEA,EAAM0a,OAAOlS,GAFD,EAEM,GAKP,IAApBhI,EAASrF,OAAcq5H,EAAQr5H,OAASqF,EAASrF,OAChDq5H,EAAQC,YAAa,EAE1B,MAAMh9B,EAAMv9F,MAAMW,GAAG,CAAC25H,IAItB,cAFO/8B,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMmqB,EAAKlsB,KAAKkrB,eAEXgB,GAGLA,EAAG4G,KAAKnvB,GAAG3D,KAAKE,IAAI+J,MAEvB,oBClDH,MAAM6xF,EAAkB,WAExBr8F,EAAOC,QAAU,cAAkCo8F,EAChDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,cAAc48F,EAAS77F,KACjCuT,OAAOsmC,OACJ,CACG6wD,KAAM,IAETprG,GAGT,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBi3F,EAAMv9F,MAAMW,GAAG,CAClBokB,SAASze,EAASi8D,eAAiBriE,KAAKk1G,YAAcl1G,KAAKs6H,WAK9D,cAFOj9B,EAAIz7F,KAEJy7F,CACV,CAEAi9B,SACG,MAAM79B,EAAWz8F,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChBwgF,EAAkB6V,EAAS98F,YAAYmiC,gBACvC5gC,EAAM,GAAGkF,EAAS+7D,aAAeykB,EAAgBzkB,eACpD/7D,EAASg8D,eAAiBwkB,EAAgBxkB,iBAG7C,MAAO,CACJxhE,GAAIZ,KAAKE,IAAIorG,KACb5qG,KAAM,OACNqvG,YAAY,EACZzuG,WAAW,EACXi5H,SAAU,OACVr5H,IAAKA,EACL46E,OAAQ11E,EAAS87D,aAAe0kB,EAAgB1kB,YAChD9/D,GAAI,CACDo4H,gBAAiB,CAAC55H,EAAIyJ,EAAG9H,KACtBvC,KAAK2gH,QAAQ//G,EAAG,EAEnBk1E,cAAe,KACZ91E,KAAKy6H,eAAe,GAG1B74H,KAAM,CACH84H,SAAS,GAGlB,CAEAxlB,YACG,MAAM9uG,EAAWpG,KAAKoG,SAChBq2F,EAAWz8F,KAAKU,KAChBkmF,EAAkB6V,EAAS98F,YAAYmiC,gBACvC64F,EAAU36H,KAAKs6H,SAErB,IAAIM,EAAQ,GACRC,GAAe,EAGnB,MAAMp4D,EAAeg6B,EAASh6B,cAAgBr8D,EAASq8D,aACjDE,EAAiB85B,EAAS95B,gBAAkBv8D,EAASu8D,eACrDD,EAAgB+5B,EAAS/5B,eAAiBt8D,EAASs8D,cAEzD,GAA8B,SAA1Bt8D,EAASo8D,aACVq4D,GAAe,EACfD,EAAMt2H,KAAKq2H,QACP,GAAIl4D,GAAct8D,OAAQ,CAC9B,MAAMnF,EAA8B,GAAtByhE,EAAat8D,OAE3By0H,EAAMt2H,KAAK,CACR5D,KAAM,QACNU,MAAOqhE,EACPphE,MAAO,OACPL,MAAOA,GAEb,MACG45H,EAAMt2H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAGjB,GAA+B,WAA3B8E,GAAUo8D,aACXq4D,GAAe,EAEfD,EAAMt2H,KAAKq2H,QACP,GAAIh4D,GAAgBx8D,OAAQ,CAChC,MAAMnF,EAA8B,GAAtByhE,EAAat8D,OAE3By0H,EAAMt2H,KACH,CAAC,EACD,CACG5D,KAAM,QACNU,MAAOuhE,EACPthE,MAAO,SACPL,MAAOA,GAEV,CAAC,EAEP,MACG45H,EAAMt2H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAGjB,GAA+B,UAA3B8E,GAAUo8D,aACXq4D,GAAe,EAEfD,EAAMt2H,KAAKq2H,QACP,GAAIj4D,GAAev8D,OAAQ,CAC/B,MAAMnF,EAA8B,GAAtByhE,EAAat8D,OAE3By0H,EAAMt2H,KAAK,CACR5D,KAAM,QACNU,MAAOshE,EACPrhE,MAAO,QACPL,MAAOA,GAEb,MACG45H,EAAMt2H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAKjB,OAFqB,IAAjBu5H,IAAwBD,EAAQ,CAACD,IAE9B,CACJj6H,KAAM,UACNQ,IAAKkF,EAASm8D,WAAaqkB,EAAgBrkB,UAC3C//D,QAAS4D,EAASk8D,YACbz9C,SAASze,EAASk8D,aAClBskB,EAAgBtkB,YACrBp5D,SAAU0xH,EAEhB,CAEAz1H,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM2rG,EAAQ/pG,GAAG3D,KAAKE,IAAIorG,MACpB7O,EAAWz8F,KAAKU,KAEtB,GAAIgtG,EAAO,CACR,MAAMtnG,EAAWpG,KAAKoG,SAEtBq2F,EAASx5B,iBAAiByqC,GAEtBtnG,EAASw8D,OAAOz8D,SACjBs2F,EAASv5B,eAAewqC,EAAOtnG,EAASw8D,OAExC8qC,EAAMhpG,UAEZ,CACH,CAEAi8G,QAAQh1F,GACL,MACMmvG,EADQn3H,GAAG3D,KAAKE,IAAIorG,MACN7nC,YAAY93C,GAC1B8wE,EAAWz8F,KAAKU,KAGtB,GAAmB,QAAfo6H,EAAMl5H,KAAgB,CACvB66F,EAAST,WAAW8+B,EAAM93D,QAE1B,MAAM+3D,EAAet+B,EAAS13F,YAAYigB,OACtClD,GAAMA,EAAElhB,KAAOk6H,EAAM93D,SACtB,GACD,GAEF,IAAK+3D,EAAc,OAEnB,MAAMh3D,EAAUg3D,EAAat0G,OAAOrT,GAAMA,EAAExS,KAAOk6H,EAAMl6H,KAAI,GAAM,GAEnE,IAAKmjE,EAAS,OAEd,MAAMq2C,EAAMr2C,EAAQhvD,OAEpB,IAAKqlG,EAAK,OAEVp6G,KAAKg7H,aAAa5gB,GAGlB,MAAM6gB,EAASC,aAAY,KACpBv3H,GAAGogE,EAAQnjE,KAAO+C,GAAGogE,EAAQnjE,IAAI26E,YAClC4/C,cAAcF,GAKjB7gB,EAAI5qG,KAAK,YAAau0D,EAAQnjE,GAAG,GACjC,IAEN,MAEK67F,EAAST,WAAWrwE,EAC5B,CAEAqvG,aAAahiG,GACV,IAAKA,EAAQjkB,OAAQ,OAAO,EAE5B,MAAMqmH,EAAapiG,EAAQjkB,OAE3B,IAAKqmH,GAAYrmH,OAAQ,OAAO,EAEhCqmH,EAAWrmH,OAAOvF,KAAK,YAAa4rH,EAAWx6H,IAC/CZ,KAAKg7H,aAAaI,EAAWrmH,OAChC,CAEA0lH,gBACG,MAAM/sB,EAAQ/pG,GAAG3D,KAAKE,IAAIorG,MAErBoC,GAELA,EAAM7jG,KAAK42E,MAAMryE,IACd,MAAM7L,EAAOmrG,EAAMx+B,YAAY9gE,EAAKxN,IAEpC,IAAK2B,EAAM,OAGX,MAAM84H,EAAWr7H,KAAK+B,GAAG6hB,eAAexV,EAAKxN,IAE7C2B,EAAKq+E,aACF,UACA,aAAay6C,GAAUl0H,QAAQiH,EAAKxN,MAAMZ,KAAKU,KAAKE,KACtD,GAEP,mBC5OH,MAAMk7F,EAAkB,WAClBw/B,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAgB,EAAQ,OACxB9sG,EAAgB,EAAQ,OAE9BjvB,EAAOC,QAAU,cAAmCo8F,EACjDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,eAAe48F,EAAS77F,KAClCuT,OAAOsmC,OAAO,CAAEghF,MAAO,IAAMv7H,GAEnC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBi3F,EAAMv9F,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAIu7H,MACb/6H,KAAM,QACNo+G,UAAU,EACVl6C,aAAcx+D,EAASw+D,aACvBC,YAAaz+D,EAASy+D,YACtBC,cAAe1+D,EAAS0+D,cACxB3nB,IAAK/2C,EAAS+2C,IACdD,IAAK92C,EAAS82C,IACd58B,OAAS3d,IACN,MAAMszC,EAAgB7vC,EAAS6vC,eAAiB,EAEhD,MAAiB,MAAVtzC,EACFkzC,WAAWlzC,GAAO8zC,QAAQR,GAAiB,GAC3CtzC,CAAK,KAOnB,cAFO06F,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IAEXgsB,EAAKlsB,KAAKkrB,eAEhB,IAAKgB,EAAI,OAET,MAAMjnB,EAASinB,EAAGjB,WAElB,IAAKhmB,EAAQ,OAEb,MAAMy2H,EAAS/3H,GAAGzD,EAAIu7H,OAEtB,GAAIC,GAAUz2H,aAAkBypB,EAAe,CAC5C,MAAMitG,EAAe,CAAC,EAEtB12H,EAAO8B,SAAS9C,SAAS+C,IACtB20H,EAAa30H,EAAEF,YAAcE,EAAE5F,KAAK,IAGvCs6H,EAAOj3H,OAAO,WAAYk3H,EAC7B,CAEA,MAAMC,EAAe,KAClB,MACMC,EADO3vG,EAAGyG,UACQxkB,KAAKyhB,IAC1B,MAAM9hB,EAAS,CAAC,EAYhB,OAVA7I,EAAO8B,SAAS9C,SAAS+C,IAMnB8G,EAAO9G,EAAEF,YAJTE,aAAas0H,GACbt0H,aAAau0H,GACbv0H,aAAaw0H,EAEU5rG,EAAE5oB,EAAEF,YACFE,EAAEsZ,OAAOsP,EAAE,IAGnC9hB,CAAM,IAGhB4tH,EAAOnkH,MAAMskH,GAEb,MAAMz1H,EAAWpG,KAAKoG,SAGlBA,EAAS2+D,WAAW22D,EAAOI,aAAa11H,EAAS2+D,UAAU,EAWlE,OARA/kE,KAAKU,KAAKywB,SAAS,CAChBC,QAASlF,EACTmF,UAAW,kBACXC,SAAU,KACPsqG,GAAc,IAIZ1vG,EAAGT,YACR,KAAKS,EAAGpC,eAAeC,WACpBmC,EAAGsF,WAEH,MAEH,KAAKtF,EAAGpC,eAAe0B,YACpBowG,IAIT,oBChHH,MAAM9/B,EAAkB,WAExBr8F,EAAOC,QAAU,cAA4Co8F,EAC1Dn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,uBAAuB48F,EAAS77F,KAC1CuT,OAAOsmC,OAAO,CAAEshF,cAAe,IAAM77H,GAE3C,CAEAO,KACG,MAAMk6E,EAAO36E,KACPy8F,EAAWz8F,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChBq4F,EAAKz+F,KAAK+B,GACV28F,EAAUD,EAAGhkF,MAEbuhH,EAAmB,CACtBp7H,GAAIZ,KAAKE,IAAI67H,cACbr7H,KAAM,UACNkxG,SAAS,EACT5E,SAAU,IAAIC,IAAI,CACf,CACGgvB,QAAQ/uB,SAASC,QACjB,cAAwB8uB,QAAQ/uB,SAASC,QACtChoG,mBACG,OAAOiB,EAAS6+D,YAAc,EACjC,CAEAi3D,WAAWt7H,EAAK89F,EAAQxzF,MAAOrB,GAC5BzD,EAAS6+D,WAAa7+D,EAAS6+D,YAAc,GAE7C,IAAIk3D,EAAgB,KAepB,OAbe/1H,EAAS6+D,WAAWn8D,QAAO,CAACszH,EAAGrwH,KAC3C,MAAMqkB,EAAWgsG,EAAEx7H,KAAOA,EAI1B,OAFIwvB,IAAU+rG,EAAgBpwH,GAEvBqkB,CAAQ,IACf,GAGShqB,EAAS6+D,WAAWk3D,GAAiBtyH,EAE5CzD,EAAS6+D,WAAW3gE,KAAKuF,GAEvB,IAAI4F,SAAQ,CAACC,EAASiH,KACTxR,WACd,UACSs3F,EAAS70F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACNwO,EAAOxO,EACV,GAGHk0H,EAAU,GAEhB,CAEAC,aAAa17H,GAOV,OANAwF,EAAS6+D,WAAa7+D,EAAS6+D,YAAc,GAE7C7+D,EAAS6+D,WAAa7+D,EAAS6+D,WAAWn8D,QACtCszH,GAAMA,EAAEx7H,KAAOA,IAGZ,IAAI6O,SAAQ,CAACC,EAASiH,KACTxR,WACd,UACSs3F,EAAS70F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACNwO,EAAOxO,EACV,GAGHk0H,EAAU,GAEhB,CAEAl3H,kBACG,MAAMo3H,EAAe,CAAC,EA8CtB,OA5CC99B,EAAGr5E,mBAAqB,IAAInhB,SAASioB,IAGnC,IAFYA,EAAGjB,WAEL,OAEV,MAAMuxG,EAAe7hD,EAAK8hD,gBAAgBvwG,GA+B1CqwG,EAAarwG,EAAGtrB,IAAM,CACnBA,GAAIsrB,EAAGtrB,GACPuG,KAAM+kB,EAAG9qB,MACTyI,KAAM2yH,EACNE,KAAM,GACR,IAGGH,CACV,CAEAp3H,mBACG,OAAOiB,EAAS8+D,WAAa,EAChC,CAEAy3D,UAAU/7H,EAAK89F,EAAQxzF,MAAOrB,GAC3BzD,EAAS8+D,UAAY9+D,EAAS8+D,WAAa,GAE3C,IAAI03D,EAAe,KAenB,OAbcx2H,EAAS8+D,UAAUp8D,QAAO,CAACszH,EAAGrwH,KACzC,MAAMqkB,EAAWgsG,EAAEx7H,KAAOA,EAI1B,OAFIwvB,IAAUwsG,EAAe7wH,GAEtBqkB,CAAQ,IACf,GAGQhqB,EAAS8+D,UAAU03D,GAAgB/yH,EAEzCzD,EAAS8+D,UAAU5gE,KAAKuF,GAEtB,IAAI4F,SAAQ,CAACC,EAASiH,KACTxR,WACd,UACSs3F,EAAS70F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACNwO,EAAOxO,EACV,GAGHk0H,EAAU,GAEhB,CAEAQ,YAAYj8H,GAMT,OALAwF,EAAS8+D,UAAY9+D,EAAS8+D,WAAa,GAC3C9+D,EAAS8+D,UAAY9+D,EAAS8+D,UAAUp8D,QACpCszH,GAAMA,EAAEx7H,KAAOA,IAGZ,IAAI6O,SAAQ,CAACC,EAASiH,KACTxR,WACd,UACSs3F,EAAS70F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACNwO,EAAOxO,EACV,GAGHk0H,EAAU,GAEhB,CAEAl3H,cAAclD,GACX,IAAI6L,EAAS,GACTgvH,EAAgB,GAChBC,EAAQ,GACRC,EAAS,CAAC,EACVR,EAAe,GAGnBO,EAAMz4H,KAAKrC,EAAO4H,OACjB5H,EAAOghC,OAAS,IAAIh/B,SAASy8B,IAC3Bq8F,EAAMz4H,KAAKo8B,EAAEu8F,KACbF,EAAMz4H,KAAKo8B,EAAEqnB,IAAI,IAEpBg1E,EAAQt+B,EAAGj8E,KAAKu6G,GAChBA,EAAM94H,SAASi6G,IACZ4e,EAAcx4H,KACX,IAAImL,SAAQ,CAACC,EAASiH,KACHxR,WACb,IACG63H,EAAO9e,SACGvjC,EAAKhoD,QAAQurF,IAAU,GAEjCxuG,GAGH,CAFE,MAAOvH,GACNwO,EAAOxO,EACV,GAGHwqB,EAAS,IAEd,IAGJoqG,EAAM94H,SAASi6G,IACZ,MAAMgf,EAAUz+B,EAAGpzE,mBAAmB6yF,GAEjCgf,IAELV,EAAeA,EAAa11G,OACzB6zD,EAAK8hD,gBAAgBS,GAAS/uH,KAAKnH,IAEhCA,EAAEpG,GAAK,GAAGs9G,KAAQl3G,EAAEpG,KACboG,MAEZ,UAGEyI,QAAQ4R,IAAIy7G,GAGlBhvH,EAASkvH,EAAO/6H,EAAO4H,OAAS,GAE5B5H,EAAOghC,OAAO98B,SACdlE,EAAOghC,OAAS,IAAIh/B,SAASy8B,IAC3B,MAAMy8F,EAAW1+B,EAAGpzE,mBAAmBqV,EAAEu8F,KAEzC,IAAKE,EAAU,OAEf,MAAMC,EAAYD,EAASlyG,WAE3B,IAAKmyG,EAAW,OAEhB,MAAMC,EAAW5+B,EAAGpzE,mBAAmBqV,EAAEqnB,KAEzC,IAAKs1E,EAAU,OAEf,MAAMC,EAAYD,EAASpyG,WAE3B,IAAKqyG,EAAW,OAEhB,MAAMC,EAAkBH,EAAUrvH,UAAU2yB,EAAE88F,IACxCC,EAAkBH,EAAUvvH,UAAU2yB,EAAEg9F,IAE9C,IAAKH,IAAoBE,EAAiB,OAE1C,MAAME,EAAaX,EAAOt8F,EAAEu8F,MAAQ,GAC9BW,EAAaZ,EAAOt8F,EAAEqnB,MAAQ,GAEpC41E,EAAW15H,SAAS45H,IACjBD,EAAW35H,SAAS65H,IACjB,IAAIC,EACDF,EACGN,EACK,GAAG78F,EAAEu8F,OAAOM,EAAgBz2H,gBAC5B,GAAG45B,EAAEu8F,WACR,GAEJe,EACDF,EACGL,EACK,GAAG/8F,EAAEqnB,OAAO01E,EAAgB32H,gBAC5B,GAAG45B,EAAEqnB,WACR,GAWR,GATK56C,MAAMC,QAAQ2wH,KAAOA,EAAO,CAACA,IAE7B5wH,MAAMC,QAAQ4wH,KAAOA,EAAO,CAACA,IAGfD,EAAKj1H,QACpBkN,GAAQgoH,EAAK3wH,QAAQ2I,IAAQ,KAGjB7P,OAAQ,CACrB,MAAM83H,EACHnwH,EAAOhF,QACH8G,GACEA,EAAE,GAAG8wB,EAAEu8F,YACJY,EAAM,GAAGn9F,EAAEu8F,YACbrtH,EAAE,GAAG8wB,EAAEqnB,aACT,GAEJk2E,GAAY93H,QACZ83H,GAAc,IAAIh6H,SAAS2L,IACzB,IAAK,MAAMvL,KAAOy5H,EACH,OAARz5H,IACDuL,EAAEvL,GAAOy5H,EAAMz5H,GAAI,IAG5ByJ,EAAOxJ,KACJ6P,OAAOsmC,OACJgkD,EAAG/4F,UAAUm4H,GACbp/B,EAAG/4F,UAAUo4H,IAGzB,IACD,GACH,IAIR,MAAMI,EAAWrqH,KAAK0D,MAAMtV,EAAOumB,OAAS,MAExC01G,GAAU/8G,OAAOhb,QAClB+3H,EAAS/8G,MAAMld,SAAS2L,IACrB,GAAKA,GAAMA,EAAEhO,MAASgO,EAAEs5B,UAExB,OAAQt5B,EAAEhO,MACP,IAAK,OACL,IAAK,WAEEgO,EAAEs5B,UAAUpgC,SACT21F,EAAG37E,SAASlT,EAAEs5B,UAAUpgC,UACzB8G,EAAEs5B,UAAUpgC,OAAS21F,EAAGt9E,MAAMhB,OAC3BvQ,EAAEs5B,UAAUpgC,SAIf8G,EAAEs5B,UAAUpgC,OAAO2oB,OACnBgtE,EAAG37E,SAASlT,EAAEs5B,UAAUpgC,OAAO2oB,SAE/B7hB,EAAEs5B,UAAUpgC,OAAO2oB,MAChBgtE,EAAGt9E,MAAMhB,OACNvQ,EAAEs5B,UAAUpgC,OAAO2oB,QAIzB7hB,EAAEs5B,UAAUpgC,OAAOk7C,KACnBy6C,EAAG37E,SAASlT,EAAEs5B,UAAUpgC,OAAOk7C,OAE/Bp0C,EAAEs5B,UAAUpgC,OAAOk7C,IAAMy6C,EAAGt9E,MAAMhB,OAC/BvQ,EAAEs5B,UAAUpgC,OAAOk7C,OAKlC,IAIN,MAAMm6E,EAAaz/B,EAAQj+F,GAAG,CAC3BC,KAAM,QACNqG,OAAQy1H,EACR75H,MAAOu7H,IAIJE,EAAS,IAAI1/B,EAAQzzB,eAK3B,IAAIpT,EAHJumE,EAAO7mH,MAAMzJ,GAKb,IACG+pD,EAAWsmE,EAAWlqD,mBAGzB,CAFE,MAAO1kE,GAET,CA8EA,OA5EIsoD,GAAUumE,EAAOt1H,OAAO+uD,IAG3B51D,EAAO0L,MAAQ,IAAI1J,SAAS0J,IACtBA,EAAK/M,IACNw9H,EAAOzwH,KAAK,CACT0wH,GAAI,SACJ1zH,IAAKgD,EAAK2wH,KAAO,MACjBtwH,GAAI,IAAIL,EAAK/M,OACd,IAGRkN,EAASswH,EAAOxxG,YAGhBuxG,EAAWzkB,aACX0kB,EAAO1kB,aAGHz3G,GAAQo2G,OAAOlyG,UACflE,EAAOo2G,OAAS,IAAIp0G,SAASs6H,IAC3BzwH,EAAS0wH,EAAE1wH,GAAQyyD,QAAQg+D,EAAU,IAGxCzwH,EAASA,EACLK,KAAI,CAACswH,EAAa79H,KAChB,MAAM89H,EAAgB,CAAC,EA6CvB,OA3CCz8H,EAAOi0D,SAAW,IAAIjyD,SAASi2E,IAC7B,MAAMykD,EAAMzkD,EAAI1yD,MAAM,KAAK,GACrBo3G,EAAS1kD,EAAIlnE,QAChB,8BACA,IAGH,OAAQ2rH,GACL,IAAK,MACFD,EAAcxkD,GAAOukB,EAAG/7E,MACrB+7G,EACAG,GAEH,MACH,IAAK,MACFF,EAAcxkD,GAAOukB,EAAG97E,OACrB87G,EACAG,GAEH,MACH,IAAK,QACFF,EAAcxkD,IACXukD,GAAe,IAChBt4H,OACF,MACH,IAAK,MACFu4H,EAAcxkD,IACVukB,EAAG77E,MAAM67G,EAAaG,IAAW,CAAC,GAChCA,IACE,GACR,MACH,IAAK,MACFF,EAAcxkD,IACVukB,EAAG57E,MAAM47G,EAAaG,IAAW,CAAC,GAChCA,IACE,GACR,MACH,QACGF,EAAcxkD,GAAOukD,EAAY,GAAGvkD,GAE1C,IAGIwkD,CAAa,IAEtB/7H,SAGAmL,CACV,CACA8tE,WAAW70E,GACR,OAAO0I,QAAQC,QAAQ,GAC1B,CACAmvH,aAAan0H,GACV,OAAO+E,QAAQC,QAAQ,GAC1B,IAGN,CACGusH,QAAQx1G,MAAMkrF,MACd,cAAsBsqB,QAAQx1G,MAAMkrF,MAEjCmtB,gBAAgBlxH,GACb,MAAe,SAAXA,EAAEhM,KACI,CACJhB,GAAIgN,EAAEhN,GACN6tE,OACI7gE,EAAEmxH,KAAKtwD,QAA4B,SAAlB7gE,EAAEmxH,KAAKtwD,OAEpB,CACG7gE,EAAEmxH,KAAK53H,MAAQyG,EAAEzG,KACjB,CACG2nE,QACgB,SAAblhE,EAAE6gE,OACG,aACA,qBAPd7gE,EAAEmxH,KAAK53H,MAAQyG,EAAEzG,KAUzBvF,KAAMgM,EAAEhM,KACR+L,KAAM,OACN3M,MAAO4M,EAAE5M,OAAS,IAClBsf,OAAStK,GAEFA,GAAKo/B,UAAYiK,MAAMrpC,EAAIo/B,WACrBspD,EAAQ5pB,KAAKC,cAAc/+D,GACzB,IAGPlW,MAAMg/H,gBAAgBlxH,EACvC,OAMNyvF,EAAMv9F,MAAMW,GAAG,CAACu7H,IAKtB,cAHO3+B,EAAIz7F,YACJy7F,EAAIt8F,OAEJs8F,CACV,CAEAo/B,gBAAgBvwG,GACb,IAAKA,EAAI,MAAO,GAEhB,MAAMjnB,EAASinB,EAAGjB,WAElB,IAAKhmB,EAAQ,MAAO,GAEpB,MAAM8B,EAAS,GAqCf,OAnCA9B,EAAO8B,SAAS9C,SAAS+C,IACtB,MAAMg4H,EAAeh4H,EAAE0nE,eAEvB3nE,EAAOzC,KAAK,CACT1D,GAAIoG,EAAEF,WACNK,KAAMH,EAAE5F,MACR0H,OAAQ9B,EAAE4kC,oBACV28B,MAAM,EACN3mE,KAAMo9H,EAAa15H,QAAU,OAC7Bgb,OAAQ0+G,EAAa1+G,OACrBne,QAAS68H,EAAa78H,QACtB88H,IAAK,GACL56H,KAAK,EACLO,MAAM,EACNs6H,QAASl4H,IAGRA,EAAEg5B,cAAgBh5B,EAAEZ,SAASM,WACZ1G,KAAK+B,GAAGspB,mBAAmBrkB,EAAEZ,SAASO,aAE1C,IAAI1C,SAAS4tB,IACxB9qB,EAAOzC,KAAK,CACT1D,GAAIoG,EAAEpG,GACNuG,KAAMH,EAAE5F,MACR0H,QAAQ,EACRy/D,MAAM,EACN3mE,KAAM,YACNq9H,IAAKptG,EAAOjxB,GACZyD,KAAK,EACLO,MAAM,GACP,GAER,IAGImC,CACV,CAEA5B,cAAcklE,GACX,MAAMn/C,EAAiBlrB,KAAK+B,GAAGspB,mBAAmBg/C,GAElD,IAAKn/C,EAAgB,MAAO,GAE5B,MAAMjmB,EAASimB,EAAeD,WAE9B,IAAKhmB,EAAQ,MAAO,GAGjBimB,EAAeO,aAAeP,EAAepB,eAAeC,kBAEtDmB,EAAesG,WAExB,MAAMgrG,EAAex8H,KAAKy8H,gBAAgBvxG,GACpCi0G,EAAa,GA6DnB,OA5DgBj0G,EAAeyH,WAEnB,IAAI1uB,SAASib,IACtB,MAAMkgH,EAAY,CAAEx+H,GAAIse,EAAIte,IAE5Bw+H,EAAU,GAAGl0G,EAAetqB,SAAWse,EAAIte,GAE3CqE,EAAO8B,SAAS9C,SAAS2B,IACtB,MAAMkB,EAAalB,EAAMkB,WACnBozE,EAAM,GAAGhvD,EAAetqB,MAAMkG,IAEpCs4H,EAAUllD,GAAOt0E,EAAQA,EAAM0a,OAAOpB,GAAOA,EAAIpY,GAG7ClB,GAASA,EAAMo6B,eACZ7yB,MAAMC,QAAQ8R,EAAIpY,IACnBs4H,EAAU,GAAGllD,QAAYh7D,EAAIpY,GAAYqH,KACrCw2B,GACEA,EAAK/+B,EAAMgB,eAAe0nB,OAASqW,EAAK/jC,IAAM+jC,IAE9CzlB,EAAIpY,KACVs4H,EAAU,GAAGllD,QACVh7D,EAAIpY,GAAYlB,EAAMgB,eAAe0nB,OACrCpP,EAAIpY,GAAYlG,IAChBse,EAAIpY,KAGb,MAAMu4H,EAAS7C,EAAa1zH,QAAQ9B,GAAMA,EAAEpG,KAAOkG,IAAY,GAE/D,GAAKu4H,EAEL,OAAQA,EAAOz9H,MACZ,IAAK,OACL,IAAK,YACFw9H,EAAUllD,IAAQklD,EAAUllD,IAAQ,IAAIxlE,WAExC,MAEH,IAAK,SACF0qH,EAAUllD,GAAOrkC,YACbupF,EAAUllD,IAAQ,GAAGxlE,WAAW1B,QAAQ,WAAY,KAGxD,MAEH,IAAK,OACL,IAAK,WACFosH,EAAUllD,GAAOh7D,EAAIpY,GACjBs4H,EAAUllD,GACLklD,EAAUllD,aAAgB35D,OAC7B6+G,EAAUllD,GAAOl6E,KAAK+B,GAAGof,MAAMhB,OAAOjB,EAAIpY,KACzCs4H,EAAUllD,GAAO,GAG9B,IAGHilD,EAAW76H,KAAK86H,EAAU,IAGtBD,CACV,oBC9nBH,MAAMrjC,EAAkB,WAExBr8F,EAAOC,QAAU,cAAiCo8F,EAC/Cn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,aAAa48F,EAAS77F,KAChCuT,OAAOsmC,OACJ,CACG2/D,IAAK,GAELklB,QAAS,GACTC,WAAY,GACZC,aAAc,GAEdC,gBAAiB,GACjBC,oBAAqB,GACrBC,0BAA2B,IAE9Bz/H,IAINF,KAAKunG,eACFvnG,KAAKunG,gBACL9K,EACIh2E,OAAOrT,GAAMA,EAAEikD,kBACflpD,KAAKiF,IACI,CACJ1S,KAAM0S,KAIrB,CAEA3S,KACG,MAAMP,EAAMF,KAAKE,IACXu8F,EAAWz8F,KAAKU,KAChB+9F,EAAKz+F,KAAK+B,GACV28F,EAAUD,EAAGhkF,MAEnB,IAAI4iF,EAAM,KAIVqB,EAAQ98F,KAAK88F,EAAQj+F,GAAGgrF,KAAM,CAC3Bm0C,SAAU,UACVz4H,KAAM,cACNoE,KAAM,CAACuM,EAAKixB,IACLjxB,EAAIvM,KAAKpF,OACH,CACJ,0DACA2R,EAAIvM,KACJ,aACD+C,KAAK,IAEH,CACJ,iEACAwJ,EAAInV,MAAMihD,OAAO,GAAGD,cACpB,WACDr1C,KAAK,MAIb,MAAMi5F,EAAiBvnG,KAAKunG,eACtBnhG,EAAWpG,KAAKoG,SAEtB,GAAImhG,EAAephG,OAAS,EACzB,GAAIC,EAASi/D,UAAW,CAErB,MAAMw6D,EAAYt4B,EAAep5F,KAAK4nH,IACnC,MAAMr1H,EAAOq1H,EAAGr1H,KAEhB,MAAO,CACJE,GAAI,GAAGF,EAAKE,UACZ+B,MAAOjC,EAAKU,MACZmK,KAAM7K,EAAK61D,QAAU71D,EAAK61D,QAAU,GACtC,IAGJ,GAAIspE,EAAU15H,OAAQ,CAEnB,MAAMq5H,EAAe,CAClB5+H,GAAIV,EAAIs/H,aACR78H,MAAO3C,KAAKoB,MAAM,iBAClBmK,KAAM,uBAIHg0H,EAAa,CAChB3+H,GAAIV,EAAIq/H,WACR58H,MAAO3C,KAAKoB,MAAM,eAClBmK,KAAM,uBACN+nE,QAAQ,GAIX,IAAIwsD,EAAe,GAAGv4B,EAAe,GAAG7mG,KAAKE,UAE7C,MAAMm/H,EAAYthC,EAAG7kF,QACf0lH,EAAU,CACb5+H,KAAM,UACNkB,KAAM,cACNhB,GAAIV,EAAIo/H,QACRt+H,MAAOoF,EAASm/D,aAAen/D,EAASm/D,aAAe,EACvD7jE,QAAQ,EACRf,SAAUyF,EAASo/D,WAAap/D,EAASo/D,WAAa,OACtDtkE,IAAKkF,EAASk/D,UAAY,aAAe,GACzCz7D,KAAMg2H,EAAU/4G,OAAO04G,GACvBp9H,GAAI,CACDgI,YAAcxJ,IAEX,GAAIA,IAAOV,EAAIs/H,aAEZ7qH,YAAW,KACR,MAAMqrH,EAAWr8H,GAAGzD,EAAIo/H,SAGxBU,EAASnlH,OAAO3a,EAAIs/H,cAEpBQ,EAAS9+G,IAAIq+G,GAEbS,EAASC,SAGTD,EAASnnC,OAAOinC,GAGhBC,EAAUlmH,IACP,GAAG3Z,EAAIk6G,YACP4lB,EAASpsD,WACX,GACD,QACC,GAAIhzE,IAAOV,EAAIq/H,WACnB5qH,YAAW,KACR,MAAMqrH,EAAWr8H,GAAGzD,EAAIo/H,SAGxBU,EAASnlH,OAAO3a,EAAIq/H,YAEpBS,EAAS9+G,IAAIs+G,GAEbQ,EAASC,SAGTD,EAASnnC,OAAOinC,GAGhBC,EAAUlmH,IACP,GAAG3Z,EAAIk6G,YACP4lB,EAASpsD,WACX,GACD,OACC,CAEJksD,EAAel/H,EAIfA,EAAKA,EAAGoS,QAAQ,QAAS,IACzB,IAAIzQ,EAAOoB,GAAG/C,GACd,GAAI2B,EACDA,EAAKqC,MAAK,GAAO,OACb,CAEJ,IAAIma,EAAM,sBAAsB/e,KAAKmH,SAASnH,KAAKY,qDAAqDk/H,MACxG9/H,KAAK+B,GAAGqG,OAAO,YAAa2W,EAAK,CAAC,EACrC,CAIH,GAEH+2D,cAAe,KACZ,MAAMkqD,EAAWr8H,GAAGzD,EAAIo/H,SAGlBY,EAAeF,EAAStyH,MAAMizE,cACjC,iBAAiBzgF,EAAIs/H,kBAGpBU,GACDA,EAAat/C,aACV,UACA,oBAAoB1gF,EAAIs/H,gBAG9B,MAAMW,EAAaH,EAAStyH,MAAMizE,cAC/B,iBAAiBzgF,EAAIq/H,gBAGpBY,GACDA,EAAWv/C,aACR,UACA,kBAAkB1gF,EAAIq/H,cAG5B9iC,EAASh2E,OAAO/lB,IACb,MAAM6B,EAAOy9H,EAAStyH,MAAMizE,cACzB,iBAAiBjgF,EAAKE,aAGpB2B,GAELA,EAAKq+E,aACF,UACA,OAAOlgF,EAAKU,MAAM4R,QAAQ,IAAK,OAAOtS,EAAKE,MACxC67F,EAAS77F,KAEd,GACF,IAKLw/H,EAAY,CACf1/H,KAAM,YACNE,GAAIV,EAAIk6G,IACRimB,WAAW,EACXj7D,SAAUh/D,EAASg/D,SACnB3iE,MAAO8kG,EAAep5F,KAAKzN,IACV,CACXE,GAAIF,EAAKA,KAAKE,GAEdF,KAAM,SACNmB,KAAM,OAKZO,GAAI,CACDk+H,aAAc,CAACC,EAAQC,KACpBxgI,KAAKwK,OAAOg2H,EAAO,IAK5B,IAAItqE,EAAU,CAACopE,EAASc,GAEI,UAAxBh6H,EAASo/D,aACVtP,EAAU,CAACkqE,EAAWd,IAGzBjiC,EAAM,CACHl8F,KAAM+0D,EAEZ,MACGmnC,EAAM,CACH38F,KAAM,SAEf,KAAO,CACJ,MAAM+B,EAAQg6F,EACVh2E,OAAO/lB,IAGL,GAFoBA,EAAK22D,gBAEP,EACf,OAAO32D,CACV,IAEFyN,KAAKzN,IACH,MAAM+/H,EAAQ,CACX7/H,GAAIF,EAAKE,GAETF,KAAM,SACNmB,KAAM,IAGT,IAAI6+H,EAAc,GAwBlB,OAnBMA,EAFFhgI,EAAK61D,QACFnwD,EAASq/D,UACI,CACX,mEACA/kE,EAAK61D,QACL,iBACA71D,EAAKU,MACL,UACDkN,KAAK,IAEO,CACX,kCACA5N,EAAK61D,QACL,aACA71D,EAAKU,OACNkN,KAAK,IAIM5N,EAAKU,MAEjB,CACJqtE,OAAQiyD,EACRj/H,KAAMg/H,EACR,IAKJpjC,EADC56F,EAAM0D,OACD,CACHtE,KAAM,CACH,CACGnB,KAAM,UACNE,GAAIV,EAAIk6G,IACRh1C,SAAUh/D,EAASg/D,SACnBk1C,OAAQ,CACLv5G,OAAQ,GACRa,KAAM,SACNV,IAAKkF,EAASk/D,UAAY,aAAe,GACzCljE,GAAI,CACD0zE,cAAe,KACZ2mB,EAASh2E,OAAO/lB,IACb,MAAM6B,EAAOoB,GACVzD,EAAIk6G,KACL1sG,MAAMizE,cACL,eAAejgF,EAAKE,QAGlB2B,GAELA,EAAKq+E,aACF,UACA,OAAOlgF,EAAKyG,QAAQzG,EAAKE,MAAM67F,EAAS77F,KAC1C,GACF,IAIXw/H,UAAW,CACRh+H,GAAI,CACDk+H,aAAc,CAACC,EAAQC,KACpBxgI,KAAKwK,OAAOg2H,EAAO,IAI5B/9H,MAAOA,KAOV,CACH/B,KAAM,SAEf,MAEA28F,EAAM,CACH38F,KAAM,UAOZ,OAJA28F,EAAMv9F,MAAMW,GAAG,CAAC48F,WAETA,EAAIz7F,KAEJy7F,CACV,CAEAl4F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACXygI,EAAOh9H,GAAGzD,EAAIk6G,KACd3b,EAAKz+F,KAAK+B,GACV28F,EAAUD,EAAGhkF,MAEfkmH,GAAMjiC,EAAQh7F,OAAOi9H,EAAMjiC,EAAQ96F,aAEvC,MAAM64F,EAAWz8F,KAAKU,KACCV,KAAKunG,eAEbtjG,SAAS8xH,IAIrB/1H,KAAKmxB,SAAS,CACXC,QAAS2kG,EAAGr1H,KACZ2wB,UAAW,aACXC,SAAU,IAAIxP,IAAM9hB,KAAKg8F,cAAcl6E,IACxC,IAIL9hB,KAAKmxB,SAAS,CACXC,QAASqrE,EACTprE,UAAW,YACXC,SAAU,IAAIxP,IAAM9hB,KAAK4gI,aAAa9+G,KAIzC,MAAMk+G,EAAWr8H,GAAGzD,EAAIo/H,SAExB,IAAKU,EAAU,OAEf,MAAMr5E,QAAc83C,EAAG7kF,QAAQjE,IAAI,GAAGzV,EAAIk6G,aAE1C,IAAKzzD,EAAO,OAGZ,MAAM64E,EAAe,CAClB5+H,GAAIV,EAAIs/H,aACR78H,MAAO3C,KAAKoB,MAAM,iBAClBmK,KAAM,uBAIHg0H,EAAa,CAChB3+H,GAAIV,EAAIq/H,WACR58H,MAAO3C,KAAKoB,MAAM,eAClBmK,KAAM,uBACN+nE,QAAQ,GAIX0sD,EAASa,SAASl6E,GAElB,MAAMm6E,EAAoBd,EAASh0G,QAAQ9rB,EAAIs/H,eAAiB,KAC1DuB,EAAkBf,EAASh0G,QAAQ9rB,EAAIq/H,aAAe,KAGxD54E,EAAMq6E,UACHF,GAAqBC,GAEtBf,EAAS9+G,IAAIq+G,GACRuB,GAAqBC,GAE7Bf,EAAS9+G,IAAIs+G,EACnB,CAEAxjC,WAAWh5B,GACR,MAAM9iE,EAAMF,KAAKE,IACXygI,EAAOh9H,GAAGzD,EAAIk6G,KAEpBumB,EAAKxmD,aACLn6E,KAAKU,KAAKs7F,WAAWh5B,GACrB29D,EAAKvmD,cACR,CAEAwmD,UAAUK,GACP,MAAM/gI,EAAMF,KAAKE,IACXu8F,EAAWz8F,KAAKU,KAChBwgI,EAAav9H,GAAGs9H,GAKtB,GAFAjhI,KAAKg7H,aAAav+B,EAAS1nF,QAEvB/U,KAAKoG,SAASi/D,UACf,GAAK67D,EAAW3lD,YAMT53E,GAAGzD,EAAIk6G,KAAKv1G,SAASo8H,OANC,CAC1B,MAAMhG,EAASC,aAAY,KACpBgG,EAAW3lD,aAAa4/C,cAAcF,GAE1CiG,EAAWt8H,MAAK,GAAO,EAAM,GAC7B,IACN,CACN,CAEAo2H,aAAat6H,GACV,MAAMygI,EAAUx9H,GAAGjD,EAAKE,IAGP,QAAbF,EAAK2D,KAA8B,kBAAb3D,EAAK2D,MAC5B88H,GAASv8H,MAETu8H,EAAQv8H,MAAK,GAAO,GAEnBlE,EAAKqU,QACN/U,KAAKg7H,aAAat6H,EAAKqU,OAE7B,CAEAvK,OAAOkuD,GACJ,MAAMx4D,EAAMF,KAAKE,IAEjB,IAAIkhI,GAAmB,EAEvB,MAAMpB,EAAWr8H,GAAGzD,EAAIo/H,UAGnB5mE,GAAUsnE,IACZtnE,EAASsnE,EAASzH,gBAAgBvlH,QAAQ,QAAS,KAEtD,MAAMypF,EAAWz8F,KAAKU,KACCV,KAAKunG,eAEbtjG,SAAS8xH,IAErB,MAAMv0F,EAAWi7D,EAASh2E,OAAO/lB,GACvBA,EAAKE,KAAOm1H,EAAGr1H,KAAKE,KAG9B,IAAI02D,EAAc,EAEd91B,EAASr7B,SAAQmxD,EAAc91B,EAAS,GAAG61B,kBAG1CqB,IAAW0oE,GAAoB9pE,EAAc,IAC/CoB,EAASq9D,EAAGr1H,KAAKE,GAEjBwgI,GAAmB,GAItB,MAAMT,EAAOh9H,GAAGzD,EAAIk6G,KACdh0G,EAAWpG,KAAKoG,SAEtB,IAAK2vH,GAAI51H,WAAa41H,GAAIr1H,MAAME,KAAO83D,EAAQ,CAExCioE,GAAMt7H,cAAcs7H,EAAKt7H,aAAa,CAAEzD,KAAM,SAElDm0H,EAAG51H,UAAY41H,EAAGr1H,KAAKP,YAEvB,MAAMghI,EAAUx9H,GAAGoyH,EAAGr1H,KAAKE,IACrB69F,EAAKz+F,KAAK+B,GACV28F,EAAUD,EAAGhkF,MAEfrU,EAASi/D,UAEVq5B,EAAQj+F,GACL,CAEGG,GAAIm1H,EAAGr1H,KAAKE,GACZF,KAAM,aACNQ,IAAK,0BACLO,KAAMs0H,EAAG51H,UAAUM,MAEtB0gI,GAIHziC,EAAQj+F,GACL,CAEGG,GAAIm1H,EAAGr1H,KAAKE,GACZF,KAAM,aACNQ,IAAK,wBACLO,KAAMs0H,EAAG51H,UAAUM,MAEtB0gI,GAKN7pE,EAAcy+D,EAAGr1H,KAAK22D,gBAEtB0+D,EAAG51H,UAAUmD,KAAKm7F,EAAInnC,GAGtB3iD,YAAW,KAGRgsH,GAAMh5H,gBAAgB,GACtB,GACN,CAGIouH,GAAIr1H,MAAME,KAAO83D,GAAUq9D,GAAI51H,WAAWqK,QAC3CurH,EAAG51H,UAAUqK,SAEZpE,EAASi/D,WAAa0wD,GAAIr1H,MAAME,KAAO83D,IACxC/0D,GAAG+0D,GAAQ9zD,MAAK,GAAO,GACvBo7H,EAASnnC,OAAO,GAAGngC,UACtB,GAEN,oBCnjBH,MAAMojC,EAAkB,WAExBr8F,EAAOC,QAAU,cAAkCo8F,EAChDn8F,YAAY88F,EAAU58F,EAAQK,GAC3BJ,MACG28F,EACA58F,GAAU,cAAc48F,EAAS77F,KACjCuT,OAAOsmC,OACJ,CACGpsC,KAAM,IAETnO,GAGT,CAEAO,KACG,MAAMP,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAEhBi7H,EAAU,CACbzgI,GAAIV,EAAImO,KACR3N,KAAM,WACNqgH,UAAW,GACX7/G,IAAK,qBACLS,YAAY,GAGXyE,EAASrF,OAAQsgI,EAAQtgI,OAASqF,EAASrF,OAC1CsgI,EAAQtxB,YAAa,EAE1B,MAAM1S,EAAMv9F,MAAMW,GAAG,CAAC4gI,IAItB,cAFOhkC,EAAIz7F,KAEJy7F,CACV,CAEAt3B,YAAYpjE,GACT,MAAMzC,EAAMF,KAAKE,IACX4N,EAAS9N,KAAKU,KAAKqlE,YAAYpjE,EAAOzC,EAAImO,MAE1CizH,EAAQ39H,GAAGzD,EAAImO,MAEhBizH,IAELA,EAAM78H,OAAO,WAAYqJ,GACzBwzH,EAAM58H,UACT,CAEA8F,SACG1K,MAAM0K,SAGN,MAAMwvD,EAAWh6D,KAAKkrB,eAChBuxE,EAAWz8F,KAAKU,KAElBs5D,GAAoC,aAAxByiC,EAAS1nF,OAAO1Q,KAC7Bo4F,EAAStrE,SAAS,CACfC,QAAS4oC,EACT3oC,UAAW,eACXC,SAAU,IAAIxP,IAAM9hB,KAAK+lE,eAAejkD,KAG9C9hB,KAAK+lE,aACR,iEC/DY,MAAMw7D,UAAuB,IAS9Bz4F,qBACR,MAAO,CAAC,CACX,CAaA7e,2BACG,IAYIgwD,EAAQ,CACTz2E,UAAW,CAAC,GAGf,MAAO,CACJ/C,GAjBM,CACNC,KAAM,WACN2gE,SAAU,SAgBV/9D,KAbSnB,IAET,IAAK,IAAIoB,KAAK02E,EAAMz2E,UACjBy2E,EAAMz2E,UAAUD,GAAKpB,EAAQoB,IAAM02E,EAAMz2E,UAAUD,EACtD,EAUA02E,MAAOA,EAEb,CAEAtoB,aAAavrD,GACVpG,KAAKoG,SAAWA,CACnB,CAEAo7H,aACG,OAAOxhI,KAAKoG,UAAY,CAAC,CAC5B,CAiBAjG,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEd,IAYIo6E,EAAQ,CACTz2E,UAAW,CAAC,GAGf,MAAO,CACJ/C,GAjBM,CACNC,KAAM,WACN2gE,SAAU,SAgBV/9D,KAbSnB,IAET,IAAK,IAAIoB,KAAK02E,EAAMz2E,UACjBy2E,EAAMz2E,UAAUD,GAAKpB,EAAQoB,IAAM02E,EAAMz2E,UAAUD,EACtD,EAUA02E,MAAOA,EAEb,qFC/FH,IAAIl6E,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEjC,MAAMkvF,UAA8B,IAOrCh8D,qBACR,MAAO,CACJsxB,SAAU,OAEhB,CAEAnwC,yBAAyBrqB,EAAKC,GAC3B,IAAIK,EAAM,CACPk6D,SAAU,GAAGv6D,cAGZY,EAAK,CACNG,GAAIV,EAAIk6D,SACRjzD,KAAM,WACNzG,KAAM,aACNU,MAAOrB,EAAE,gBACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,iBACxC1a,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KACZD,GAAU93E,EAAE,sBACb4D,GAAGzD,EAAIk6D,UAAUv1D,SAAS,IAG7BrD,EAAOgC,UAAUsE,QAAQ,IAW9BtG,EAAS,CACVgC,UAAW,CACRsE,OAAQ,WACLU,QAAQC,KAAK,eAChB,GAGH2D,YAAa,CAAC1L,EAAM0F,EAAW,CAAC,KAC7B,GAAY,MAAR1F,EAAc,OAGlB,IAAI+gI,EAAY,CACb,CACG7gI,GAAI,OACJ+B,MAAO5C,EAAE,uBAIX2hI,EAAehhI,EACfq3D,WACA/yC,OAAOlD,GACEA,EAAE2E,OAAOrT,GAEVA,GACS,QAATA,EAAE/O,KACF+O,EAAE8X,gBACF9X,EAAE8X,eAAeD,YACjB7X,EAAE8X,eAAeD,WAAWrqB,IACzBF,EAAKkF,QAAQQ,SAASO,aAE5B,GAAMR,SACT,GACFgI,KAAK2T,IACI,CACJlhB,GAAIkhB,EAAElhB,GACN+B,MAAOmf,EAAE1gB,UAIlBqgI,EAAYA,EAAU36G,OAAO46G,GAE7B,IAAItd,EAAYzgH,GAAGzD,EAAIk6D,UACnBgqD,IACDA,EAAU3/G,OAAO,UAAWg9H,GAC5Brd,EAAU3/G,OACP,QACA2B,EAASg0D,UAAYp6D,KAAK8oC,QAAQsxB,UAErCgqD,EAAU1/G,UACb,EAGH4H,YAAc5L,IACX,IAAI0F,EAAW1F,EAAK0F,UAAY,CAAC,EAIjC,OAFAA,EAASg0D,SAAWz2D,GAAGzD,EAAIk6D,UAAUnuD,WAE9B7F,CAAQ,GAIrB,MAAO,CACJ3F,GAAIA,EACJ6C,KArEUnB,IACV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAmEA6I,YAAa5K,EAAO4K,YACpBE,YAAa9K,EAAO8K,YAE1B,CAEAqlD,aAAavrD,EAAW,CAAC,GACtBpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAClCpG,KAAKoG,SAASg0D,SACXh0D,EAASg0D,UAAYp6D,KAAKL,YAAYmpC,QAAQsxB,QACpD,CAEAunE,OAAO9hI,EAAQD,GACZ,MAAO,CACJuzE,MAAOvzE,EAAI25B,KAAKn5B,OAAO,GAAGP,mBAC1B+F,MAAO/F,EAAO2nB,MAAM,KAAK,GACzB02D,OAAQt+E,EAAI25B,KAAKn5B,OAAO,GAAGP,0BAEjC,CAEAM,UAAUP,EAAKC,GAEZ,IAAIK,EAAMF,KAAK2hI,OAAO9hI,EAAQD,GAE1Ba,EAAK,GAET,GACGT,KAAKoG,SAASg0D,UACdp6D,KAAKoG,SAASg0D,UAAYp6D,KAAKL,YAAYmpC,QAAQsxB,SACpD,CAGC,MAAMgtB,EAAS,qBAAqBpnF,KAAKoG,SAASg0D,YAAYl6D,EAAI0F,QAIlEnF,EAAK,CACFG,GAAIV,EAAIg+E,OACRx9E,KAAM,SACNkB,KAAM,OACN2J,KAAM,aACNvK,MAAO,GACPD,OAAQ,GACRG,IAAK,wCACLkB,GAAI,CACD0zE,cAAe,KACZnyE,GAAGzD,EAAIg+E,SACFxwE,MAAMizE,cAAc,UACrBC,aAAa,UAAWwG,EAAO,GAI/C,CAEA,IAAI5lF,EAAS,CACVgC,UAAW,CACRwxH,WAAavL,IACN9lH,GAAGzD,EAAIizE,QAAQxvE,GAAGzD,EAAIizE,OAAOpK,OAAO,EAE3CxgE,SAAU,KACH5E,GAAGzD,EAAIizE,QAAQxvE,GAAGzD,EAAIizE,OAAOpK,SAE1B,GAEV64D,cAAe,KACL,EAEV5kE,YAAa,KACH,GAIbl4D,gBAAkBC,IACf/E,KAAK6hI,aAAe98H,CAAW,EAGlC47G,QAAUz0F,IACP,IAAI82C,EAAShjE,KAAKoG,SAASg0D,SACvB0I,EAAO9iE,KAAK6hI,aAAa78G,OAAOlD,GAAMA,EAAElhB,IAAMoiE,IAAQ,GAAM,GAEhE,OAAOxhE,EAAOsgI,cAAch/D,EAAM52C,EAAG,EASxC41G,cAAe,CAACh/D,EAAM52C,IACZ,IAAIzc,SAAQ,CAACC,EAASiH,KAC1B,GAAyB,MAArB3W,KAAK6hI,aAAsB,OAAOnyH,IAEtC,GAAI/L,GAAGzD,EAAIizE,OAER,OADAxvE,GAAGzD,EAAIizE,OAAOvuE,OACP8K,IAIV,IAAIqyH,EAAYj/D,EAAKzuC,MAAM,KAAM,KAAM,CAAE0kC,gBAAgB,IACzDgpE,EAAUnhI,GAAKZ,KAAK6hI,aAAa9/H,GAAG8N,OAEpC,IAAImyH,EAAYD,EAAU5hI,YACtBM,EAAKuhI,EAAUvhI,KAGnB,MAAMy9E,EAAS6jD,EAAUt7G,OACrBrT,GAAMA,aAAa,MACpB,GACD,GACE8qE,GACDA,EAAOnpE,OAAO3S,GAAG,SAAU6/H,IACxBzgI,GAAQgC,WAAWwxH,WAAWiN,GAI1Bt+H,GAAGzD,EAAIizE,OACRxvE,GAAGzD,EAAIizE,OAAOpK,QAEF/oE,KAAKq6G,mBACXtxC,OACT,IAIN,IAAIm5D,EAAgB,CACjBxhI,KAAM,SACNE,GAAIV,EAAIizE,MACRryE,OAAO,EACPH,SAAU,SAKVE,QAAQ,EACRG,MAAO6jB,SAAS7kB,KAAKoG,SAASs2D,aAAe,IAC7C37D,OAAQ8jB,SAAS7kB,KAAKoG,SAASu2D,aAAe,IAAM,IACpDz7D,IAAK,oBACLD,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAO0hE,EAAK1hE,MACZF,IAAK,cACLG,MAAO,UAEV,CACGX,KAAM,SACNU,MAAOrB,EAAE,SACTuB,WAAW,EACXD,MAAO,SACPE,MAAO,WACQvB,KAAKq6G,mBACXtxC,OACT,KAITtnE,KAAM,CACHf,KAAM,aACNgB,QAAQ,EACRD,KAAMhB,IAKZgD,MAAMhD,GAAGyhI,GAAet9H,OAIxBo9H,EAAU1+H,KAAKtD,KAAK6hI,aAAa9/H,GADb,EAC8B,CAC/CizH,WAAYxzH,EAAOgC,UAAUwxH,WAC7BE,cAAe1zH,EAAOgC,UAAU+E,SAChCy0D,YAAax7D,EAAOgC,UAAUw5D,YAC9B4kE,cAAepgI,EAAOgC,UAAUo+H,gBAGnCI,EAAUx3H,SAEVmK,YAAWxP,UACR3D,EAAO2gI,gBAAgBj2G,EAAI61G,GAE3BryH,GAAS,GACT,IAAI,IAIbyyH,gBAAiB,CAACj2G,EAAI42C,KACnB,IAAK52C,EAAI,OAET,IAAIpU,EAAMoU,EAAGjB,WACb,IAAKnT,EAAK,OAEV,IAAIsqH,EAAal2G,EAAGJ,YACfs2G,GAELt/D,EAAKr8C,QAAQxiB,SAASmP,IACdA,GAAc,QAATA,EAAE/O,KAEZ+O,EAAEqT,QAAQxiB,SAASo+H,IAChB,GAAiB,WAAbA,EAAMh+H,KAAsC,MAAlBg+H,EAAMj8H,SAAkB,OAEtD,IAAIR,EAAQy8H,EAAMz8H,QAClB,GAAa,MAATA,EAAe,OAEnB,IAAI08H,EAAU18H,EAAMgB,eACpB,GAAe,MAAX07H,GAAmBA,EAAQ1hI,IAAMkX,EAAIlX,GAAI,OAE7C,IAAIiJ,EAAO,CAAC,EACRkmB,EAAenqB,EAAMmqB,eAezB,GAdAlmB,EAAKkmB,GAAgB,CAClBnvB,GAAIwhI,EAAWxhI,KAIJkX,EAAI+nB,WAAa,IACvB57B,SAASg9B,KACbA,EAAIl6B,QAAU,IAAI9C,SAAS+C,IACzB6C,EAAKkmB,GAAc/oB,EAAEF,YAClBs7H,EAAWp7H,EAAEF,WAAW,GAC5B,IAIDs7H,EAAW/zH,KACZxE,EAAKkmB,GAAc1hB,KAAO+zH,EAAW/zH,KACrCxE,EAAKkmB,GAAcptB,MAAQkH,EAAKkmB,GAAc1hB,SAC1C,CACJ,IAAIk0H,EAAU,CAAC,EACfA,EAAQxyG,GAAgBqyG,EACxBv4H,EAAKkmB,GAAc1hB,KAAOzI,EAAM0a,OAAOiiH,GACvC14H,EAAKkmB,GAAcptB,MAAQkH,EAAKkmB,GAAc1hB,IACjD,CAEA,IAAI89C,EAAO/4C,EAAEm0F,eAAe86B,EAAMzhI,IAClC,IAAKurD,EAAM,OAEX,MAAM1rD,EAAuB,mBAAX0rD,EAAK1rD,GAAmB0rD,EAAK1rD,KAAO0rD,EAAK1rD,GACrDq0H,EAAUr0H,GAAIq0H,SAAWr0H,GAAIoB,OAAO,IAAIizH,QAE1CA,GAASlvH,EAAMf,SAASlB,GAAGmxH,GAAUjrH,EAAK,GAC/C,GACH,GAeR,MAAO,CACJpJ,GAAIA,EACJ6C,KAbSnB,IACT,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAExD,GAAI9C,EACD,IAAK,IAAI8C,KAAKpB,EACX1B,EAAG2B,GAAGmB,GAAKpB,EAAQoB,EAEzB,EAOAuB,gBAAiBtD,EAAOsD,gBACxB67G,QAASn/G,EAAOm/G,QAChBmhB,cAAetgI,EAAOsgI,cAE5B,iECtXH,IAAI/hI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEjC,MAAM4zF,UAA+B,IAOtC1gE,qBACR,MAAO,CACJq0B,SAAU,OAEhB,CAEAlzC,yBAAyBrqB,EAAKC,GAC3B,IAAIK,EAAM,CACPsiI,SAAU,GAAG3iI,cAGZY,EAAK,CACNG,GAAIV,EAAIsiI,SACRr7H,KAAM,WACNzG,KAAM,aACNU,MAAOrB,EAAE,aACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,iBACxC1a,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KACZD,GAAU93E,EAAE,sBACb4D,GAAGzD,EAAIsiI,UAAU39H,SAAS,IAG7BrD,EAAOgC,UAAUsE,QAAQ,IAW9BtG,EAAS,CACVgC,UAAW,CACRsE,OAAQ,WACLU,QAAQC,KAAK,eAChB,EACAu0D,YAAa,KACH,GAIb5wD,YAAa,CAAC1L,EAAM0F,EAAW,CAAC,KAC7B,GAAY,MAAR1F,EAAc,OAClB0F,EAAS42D,aAAc,EAGvB,IAAIykE,EAAY,CACb,CACG7gI,GAAI,OAEJ+B,MAAO5C,EAAE,wBAIdW,EAAKq3D,WAAW/yC,OAAM,KAAM,IAAM,IAAS,IAAI/gB,SAAS6d,IACjDA,GAELA,EAAE2E,OAAM,KAAM,IAAM,GAAMxiB,SAASmP,IAE7BA,GACS,QAATA,EAAE/O,KACF+O,EAAE8X,gBACF9X,EAAE8X,eAAeD,YACjB7X,EAAE8X,eAAeD,WAAWrqB,IACzBF,EAAKkF,QAAQQ,SAASO,YAEzB86H,EAAUn9H,KAAK,CACZ1D,GAAIwS,EAAEuU,aACNhlB,MAAO,GAAGmf,EAAE1gB,WAAWgS,EAAEhS,SAE/B,GACD,IAGL,IAAIgjH,EAAYzgH,GAAGzD,EAAIsiI,UACnBpe,IACDA,EAAU3/G,OAAO,UAAWg9H,GAC5Brd,EAAU3/G,OACP,QACA2B,EAAS+2D,UAAYn9D,KAAK8oC,QAAQq0B,UAErCinD,EAAU1/G,UACb,EAGH4H,YAAc5L,IACX,IAAI0F,EAAW1F,EAAK0F,UAAY,CAAC,EAE7Bg+G,EAAYzgH,GAAGzD,EAAIsiI,UAEnB1C,GADe1b,EAAUvqC,WACI53E,OAAOR,KAAKoI,MAAQ,IAAIf,QACrDo1C,GAAQA,EAAIt9C,IAAMwjH,EAAUn4G,aAC9B,GAKF,OAJI6zH,IACD15H,EAAS+2D,SAAW2iE,EAAal/H,IAG7BwF,CAAQ,GAIrB,MAAO,CACJ3F,GAAIA,EACJ6C,KA9EUnB,IACV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EA4EA6I,YAAa5K,EAAO4K,YACpBE,YAAa9K,EAAO8K,YAE1B,CAEAqlD,aAAavrD,EAAW,CAAC,GACtBpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAClCpG,KAAKoG,SAAS+2D,SACX/2D,EAAS+2D,UAAYn9D,KAAKL,YAAYmpC,QAAQq0B,QACpD,CAEAh9D,UAAUP,EAAKC,GAQZG,KAAK2hI,OANL,SAAgB9hI,EAAQD,GACrB,MAAO,CACJuzE,MAAOvzE,EAAI25B,KAAKn5B,OAAO,GAAGP,qBAC1B+F,MAAO/F,EAAO2nB,MAAM,KAAK,GAE/B,EAIA,IAAI2kC,EAAOrsD,MAAMK,UAAUP,EAAKC,GAmBhC,OAjBAssD,EAAKw0D,QAAU,KACZ,IACI3gH,KAAK6hI,eACL7hI,KAAKoG,SAAS+2D,UACfn9D,KAAKoG,SAAS+2D,UAAYn9D,KAAKL,YAAYmpC,QAAQq0B,SAEnD,OAAO1tD,QAAQC,UAElB,IAAIxF,EAAOlK,KAAK6hI,aAAax6G,WAAWrnB,KAAKoG,SAAS+2D,UACtD,IAAKjzD,EAAM,OAAOuF,QAAQC,UAE1B,IAAIozD,EAAO54D,EAAK0tD,aAChB,OAAKkL,EAEE3W,EAAK21E,cAAch/D,GAFRrzD,QAAQC,SAEK,EAG3By8C,CACV,iEChJH,MAAMppC,EAAY,EAAQ,OAM1B,IAAIhjB,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhD,MAAM6sH,UAA2B1/G,EAC9BpjB,cACGG,MAAM,CAAC,SAAUiC,GACpB,CAEA4vD,aAAavrD,GACVtG,MAAMmG,WAAWG,GACjBpG,KAAK00B,QAAUtuB,EAASsuB,OAC3B,CAEA8sG,aACG,IAAI1pH,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI4c,QAAU10B,KAAK00B,QACZ5c,CACV,EAUY,MAAMsnF,UAAiC,IACnDz/F,YAAYoC,EAAIlC,GACbC,MAAMD,EAAQ,CACX6iI,gBAAiB,GACjBC,YAAa,GACbC,0BAA2B,GAC3BC,iBAAkB,GAClBC,kBAAmB,GACnBC,kBAAmB,KAGtB/iI,KAAK+B,GAAKA,EACV/B,KAAKH,OAASA,EACdG,KAAKiF,OAAS,KAGdjF,KAAKgjI,qBAAuB,KAI5BhjI,KAAKijI,UAAYjjI,KAAK+B,GAAGoxB,iBAAiB,GAAGnzB,KAAKE,IAAIC,oBAKtDH,KAAKkjI,cAAgBljI,KAAK+B,GAAGoxB,iBAC1B,GAAGnzB,KAAKE,IAAIC,yBAMfH,KAAKmjI,0BAA6BxgI,IAC/B,IAAIo6F,EAAcp6F,EAAMwe,OAAS,GAQjCnhB,KAAKojI,iBAAiB91G,GACZttB,KAAKijI,UAAU19H,QAAQ+nB,IAC9ByvE,EAAY,EAGlB/8F,KAAKqjI,8BAAgC,KAClCrjI,KAAKojI,iBAAiB,EAGzBpjI,KAAKwrB,aAAc,CAGtB,CAQWsd,qBACR,MAAO,CACJm3B,aAAc,EAQdC,mBAAoB,UAOpBC,gBAAiB,EAmBvB,CAOAxO,aAAavrD,IACVA,EAAWA,GAAY,CAAC,GAEf65D,kBAC0B,IAAzB75D,EAAS65D,aACX75D,EAAS65D,aACTm/B,EAAyBt2D,QAAQm3B,aAEzC75D,EAAS+5D,qBAC6B,IAA5B/5D,EAAS+5D,gBACX/5D,EAAS+5D,gBACTi/B,EAAyBt2D,QAAQq3B,gBAEzCngE,KAAKoG,SAAWA,CACnB,CASApB,WAAWC,GACRjF,KAAKiF,OAASA,EAEVjF,KAAKijI,WAENjjI,KAAKijI,UAAU7vG,WAAWnuB,EAAO8B,UAGhC/G,KAAKkjI,eAENljI,KAAKkjI,cAAc9vG,WAAWnuB,EAAO8B,SAE3C,CAEA42F,SAASj9F,GACNV,KAAKU,KAAOA,CACf,CAGAD,KACG,IAAIk6E,EAAO36E,KACPE,EAAMF,KAAKE,IAEf,MAAO,CACJU,GAAIV,EAAIyiI,YACR/gI,KAAM,QACND,YAAY,EACZa,QAAS,EACT8wE,QAAQ,EACRzxE,KAAM,CACH,CACGjB,GAAIV,EAAI0iI,0BACRtvD,QAAQ,EACRnyE,KAAM,CACH,CACGP,GAAIV,EAAI2iI,iBACRniI,KAAM,OACN21E,YAAat2E,EAAE,2CACfqC,GAAI,CACDq2E,gBAAiB,KACdz4E,KAAKojI,iBAAiB,IAI/B,CACG1iI,KAAM,SACNQ,IAAK,gBACLF,MAAO,GACPY,KAAM,OACN2J,KAAM,cACNhK,MAAO,WACJ,IAAI25E,EAAQv3E,GAAGzD,EAAI2iI,kBACnB3nD,EAAMr2E,SAAS,IACfq2E,EAAMj8D,QACNi8D,EAAMooD,UAAU,kBACnB,KAIT,CACG1iI,GAAIV,EAAIwiI,gBACRhiI,KAAM,SACNQ,IAAK,gBACLyB,MAAO5C,EAAE,cACTwB,MAAO,KACJvB,KAAKkjI,cAAczsD,MAAM9yE,GAAGzD,EAAIwiI,iBAAiB9jC,UAAW,CACzDrvE,IAAK,UACN,GAGR,CACG7uB,KAAM,UACNE,GAAIV,EAAI4iI,kBACR5hI,IAAK,kBACLoyE,QAAQ,EACRnyE,KAAM,CACH,CACGT,KAAM,SACNQ,IAAK,gBACLN,GAAIV,EAAI6iI,kBACR3hI,MAAOrB,EAAE,gBACTwL,KAAM,YACN3J,KAAM,OAENN,WAAW,EACXC,MAAO,WACJo5E,EAAK4oD,aACR,MAMlB,CAEAp+H,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAGb,IAAI7B,EAAMF,KAAKE,IA+Bf,OArBAF,KAAKijI,UAAU3/H,OACftD,KAAKijI,UAAUnuG,eAAe,UAAW90B,KAAKmjI,2BAC9CnjI,KAAKijI,UAAU7gI,GAAG,UAAWpC,KAAKmjI,2BAElCnjI,KAAKkjI,cAAc5/H,OACnBtD,KAAKkjI,cAAcpuG,eAChB,UACA90B,KAAKqjI,+BAERrjI,KAAKkjI,cAAc9gI,GAAG,UAAWpC,KAAKqjI,+BACtCrjI,KAAKkjI,cAAcpuG,eAChB,OACA90B,KAAKqjI,+BAERrjI,KAAKkjI,cAAc9gI,GAAG,OAAQpC,KAAKqjI,+BAEnC1/H,GAAGzD,EAAIyiI,cAAch+H,OACrBhB,GAAGzD,EAAIwiI,kBAAkB/9H,OACzBhB,GAAGzD,EAAI4iI,oBAAoBn+H,OAC3BhB,GAAGzD,EAAI0iI,4BAA4Bj+H,OAE3B3E,KAAKoG,SAAS65D,cACnB,KAAK,EACF,MACH,KAAK,EACF,OAAQjgE,KAAKoG,SAAS85D,oBACnB,IAAK,OACFv8D,GAAGzD,EAAIwiI,kBAAkB99H,OACzBjB,GAAGzD,EAAIyiI,cAAc/9H,OACrB,MACH,IAAK,UACFjB,GAAGzD,EAAIyiI,cAAch+H,OAG3B,MACH,KAAK,EACFhB,GAAGzD,EAAIyiI,cAAc/9H,OACrB,IAAI4+H,EAAqB7/H,GAAGzD,EAAI4iI,mBAC5BU,IACDA,EAAmB5+H,OAGf5E,KAAKoG,UAAUq9H,aACfzjI,KAAKoG,SAASq9H,YAAc,IAAIx/H,SAASy/H,IACvC,IAAIC,EAAO,IAAIlB,EACfkB,EAAKhyE,aAAa+xE,GAClB,IAAIE,EAAmB,CACpBljI,KAAM,SACNQ,IAAK,gBACLE,MAAOuiI,EAAKviI,MACZmK,KAAM,eACN3J,KAAM,OAENN,WAAW,EACXC,MAAO,KACJvB,KAAKwP,KAAK,cAAe,KAAMm0H,EAAKjvG,QAAQ,GAIlD8uG,EAAmBv4H,QAAQ24H,EAAiB,KAIrD,MACH,KAAK,EACFjgI,GAAGzD,EAAI0iI,4BAA4Bh+H,OACnCjB,GAAGzD,EAAIyiI,cAAc/9H,OAG9B,CAEAm4F,cACG,IAAI8mC,EAAiB,KAErB,OAAQ7jI,KAAKoG,SAAS85D,oBACnB,IAAK,OACF2jE,EAAiB7jI,KAAKkjI,cAAcj3H,WACpC,MACH,IAAK,UACF43H,EAAiB7jI,KAAKijI,UAAUh3H,WAItC,OAAO43H,CACV,CAOAzlC,YAkBG,OAhB4B,MAAxBp+F,KAAK8jI,kBAG2B,GAA9B9jI,KAAKoG,SAAS65D,cACwB,UAAtCjgE,KAAKoG,SAASuwG,qBAEd32G,KAAK8jI,gBAAkB,KACb,EAIV9jI,KAAK8jI,gBAAkB,KACb,GAIT9jI,KAAK8jI,eACf,CAOAV,kBACG,IAAIW,EAAc/jI,KAAKukB,WAAWvkB,KAAKgjI,sBACnCa,EAAiB7jI,KAAK+8F,cAEtBinC,EAAa,EACbH,GAAgB1iH,OAAOhb,QACxB69H,EAAaH,GAAgB1iH,OAAOhb,OAChC49H,IACDC,IACAH,EAAiB,CACd/6G,KAAM,MACN3H,MAAO,CAAC0iH,EAAgBE,MAI9BF,EAAiBE,EAGpB/jI,KAAKwP,KAAK,cAAe,KAAMq0H,GAEb,GAAdG,IAAiBA,GAAa,GAClC,MAAMC,EAAUtgI,GAAG3D,KAAKE,IAAIwiI,iBACxBuB,IACDA,EAAQhiI,OAAOynF,MAAQs6C,EACvBC,EAAQv/H,UAEd,CAEA6+H,cACGvjI,KAAKojI,iBAAgB,KAAM,GAAM,GACpC,CAUA7/B,mBAAmBxtF,EAAS,MACzB/V,KAAKgjI,qBAAuBjtH,EAC5B/V,KAAKojI,iBACR,CAUA7+G,WAAW2/G,GACR,IAAInuH,EAMJ,KAJGA,EADCmuH,IAGSvgI,GAAG3D,KAAKE,IAAI2iI,mBAAmB52H,YAAc,IAAIu2B,QAEjD,OAAO,KAGpB,IAAI2hG,EAAQpuH,EAAOysB,OAAOrqB,cAAcqP,MAAM,KAG9C,IAAI48G,EAAW,GAEXtgI,EAAY9D,KAAKiF,QAAQ8B,UAAY,GA6CzC,OA3CAo9H,EAAMlgI,SAASg4B,IACZ,IAAIooG,EAAa,GAIjBvgI,EAAUG,SAAS+C,IAChB,GAAIA,EAAE4kC,oBACH,OAAQ5kC,EAAE3C,KACP,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,QACFggI,EAAW//H,KAAK,CACbD,IAAK2C,EAAEpG,GACPouB,KAAM,WACNrsB,MAAOs5B,IAEV,MAEH,IAAK,OACYj1B,EAAE7E,UACR8B,SAASohB,IACVA,EAAEhX,KAAKhB,QAAQ4uB,IAAM,GACtBooG,EAAW//H,KAAK,CACbD,IAAK2C,EAAEpG,GACPouB,KAAM,SACNrsB,MAAO0iB,EAAEzkB,IAEf,IAIZ,IAGCyjI,EAAWl+H,OAAS,GACrBi+H,EAAS9/H,KAAK,CACXwkB,KAAM,KACN3H,MAAOkjH,GAEb,IAGCD,EAASj+H,OAAS,EACD,CACf2iB,KAAM,MACN3H,MAAOijH,GAIH,IAEb,CAEAplC,UAAUtxF,GAEP1N,KAAKijI,UAAUxsD,MAAM/oE,EAAO,KAAM,CAAE6hB,IAAK,UAC5C,4EC5gBH,MAAM+0G,UAAwC,IAC3C3kI,YAAYy9F,EAAgBv9F,GAEzBC,MADWD,GAAU,6BACT,CAAC,GAEbG,KAAKo9F,eAAiBA,EACtBp9F,KAAK+B,GAAKq7F,EAAer7F,GAEzB/B,KAAKU,KAAO,KAIZV,KAAKkrB,eAAiB,IAKzB,CAEAzqB,KACG,MAAO,CAAC,CACX,CAEA6C,KAAKnB,GACEA,EAAQzB,OAAMV,KAAKU,KAAOyB,EAAQzB,MAElCyB,EAAQ+oB,iBAAgBlrB,KAAKkrB,eAAiB/oB,EAAQ+oB,eAC7D,CAEA8wE,WAAWh5B,EAAQn1C,GACZ7tB,KAAKkrB,gBAAgBlrB,KAAKkrB,eAAeQ,UAAUmC,GAEnD7tB,KAAKU,MAAMV,KAAKU,KAAKs7F,WAAWh5B,EACvC,EAGY,MAAMs8B,UAA+B,IAYjDn/F,UAAUg8F,GAAQ,GACf,IAAIh8F,EAAY,IAAImkI,EAAgCtkI,MAGpD,GAAIm8F,EAAO,CACR,IAAIE,EAAel8F,EACnBA,EAAY,CACTM,GAAI47F,EAAa57F,KACjB6C,KAAM,IAAIsS,IACAymF,EAAa/4F,QAAQsS,GAE/BpL,OAAQ,IAAIoL,IACFymF,EAAa7xF,YAAYoL,GAEnComF,WAAY,IAAIpmF,IACNymF,EAAaL,cAAcpmF,GAG3C,CAEA,OAAOzV,CACV,cCtEHV,EAAOC,QAAU,MACdC,YAAYqjB,EAAY/d,EAAQs/H,GAC7BvkI,KAAKukI,aAAeA,GAAgB,eASpCvkI,KAAKiF,OAASA,EAEdjF,KAAK+tE,QAAQ/qD,GAAc,CAAC,GAG5BhjB,KAAKiF,OAAOy2B,UAAU17B,KAAMA,KAAM,CAAC,SAItC,CAMAiqB,cACG,MAAO,MACV,CAQA8jD,QAAQlkE,GACL7J,KAAKY,GAAKiJ,EAAKjJ,IAAMZ,KAAKiF,OAAOlD,GAAG8N,OACpC7P,KAAKwkI,cAAgB3wH,KAAK0D,MAAM1N,EAAK26H,gBAAiB,GACtDxkI,KAAK0kB,aACF7a,EAAK6a,cACL1kB,KAAKiF,OAAO02B,oBAAoB,CAAC,SAAU,CACxCv6B,MAAOpB,KAAKukI,cAErB,CAOAz+H,QAEG,OADA9F,KAAKiF,OAAO62B,YAAY97B,KAAMA,KAAM,CAAC,UAC9B,CACJY,GAAIZ,KAAKY,GACT8jB,aAAc1kB,KAAK0kB,aACnB8/G,cAAexkI,KAAKwkI,cAE1B,CAEA92D,OAAOhtE,GACJ,IAAK,IAAI2D,KAAO3D,EACbV,KAAKqE,GAAO3D,EAAK2D,EAEvB,oBChEH,MAAMogI,EAA4B,EAAQ,OACpCC,EAA8B,EAAQ,OACtCC,EAA6B,EAAQ,OAE3C,IAAIC,EAAY,CAAC,EACjBA,EAAUH,EAA0B7iI,QAAU6iI,EAC9CG,EAAUF,EAA4B9iI,QAAU8iI,EAChDE,EAAUD,EAA2B/iI,QAAU+iI,EAE/C,MAAME,EAAoB,CACvBC,mBAAe56G,EACfjgB,KAAM,IAGTxK,EAAOC,QAAU,MACdC,YAAYqjB,EAAY/d,EAAQlD,GAE7B/B,KAAKiF,OAASA,EACdjF,KAAK+B,GAAKA,EAEV/B,KAAK+tE,QAAQ/qD,EAChB,CAQA+qD,QAAQlkE,GAUL,GARAA,EAAKu5B,qBACFv5B,EAAKu5B,sBAAwBv5B,EAAKu5B,qBAAqBn5B,KAClDJ,EAAKu5B,qBACLyhG,EAOU,IADfh7H,EAAKu5B,qBAAqBn5B,KAAKnB,QAAQsK,GAAMA,EAAEoxH,gBAC3Cr+H,OACL,MAKoC,IAAxB0D,EAAK+e,uBACiC,IAAnC/e,EAAK+e,gBAAgBrc,aAC7B1C,EAAK+e,gBAAgBrc,WAAa,SACe,IAAzC1C,EAAK+e,gBAAgBC,mBAC7Bhf,EAAK+e,gBAAgBC,iBAAmB,SACO,IAAvChf,EAAK+e,gBAAgB2W,iBAC7B11B,EAAK+e,gBAAgB2W,eAAiB,SACO,IAArC11B,EAAK+e,gBAAgB4W,eAC7B31B,EAAK+e,gBAAgB4W,aAAe,KAI1C,IAAIulG,EAAiBl7H,EAAK+e,iBAAmB,CAC1Crc,WAAY,GACZsc,iBAAkB,GAClB0W,eAAgB,GAChBC,aAAc,IAEjBulG,EAAeP,eAAgB,EAE/B,IAAIQ,EAAc,IAAIP,EACnBM,EACA/kI,KAAKiF,QAER4E,EAAKu5B,qBAAqBn5B,KAAK6hC,QAAQk5F,EAC1C,CAEAhlI,KAAKilI,YAAYp7H,EAAKu5B,sBAEtBpjC,KAAK8kI,cAAgBj7H,EAAKu5B,qBAAqB0hG,cAC1C9kI,KAAK8kI,gBACP9kI,KAAK8kI,cAAgB9kI,KAAKiK,OAAO,GAAGrJ,GAE1C,CAaAkF,QACG,MAAO,CACJg/H,cAAe9kI,KAAK8kI,cACpB76H,KAAMjK,KAAKklI,cAEjB,CAEAj7H,KAAKyG,EAAK,MAAM,IACb,OAAO1Q,KAAK0mB,OAAO5d,OAAO4H,EAC7B,CAEAu0H,YAAYE,GACTnlI,KAAK0mB,OAAS,GACdy+G,EAAal7H,KAAKhG,SAASvD,IACxBV,KAAKiL,QAAQvK,GAAM,EAAM,GAE/B,CAEAwkI,cACG,IAAIz+G,EAAQ,GAKZ,OAJAzmB,KAAK0mB,OAAOziB,SAASvD,IAClB+lB,EAAMniB,KAAK5D,EAAKoF,QAAQ,IAGpB2gB,CACV,CAEA2+G,eAAevqG,GACZ76B,KAAK8kI,cAAgBjqG,CACxB,CAEA4G,iBACG,OAAOzhC,KAAKiK,MAAMmJ,GACRA,EAAExS,IAAMZ,KAAK8kI,gBACpB,EACN,CAEA75H,QAAQvK,EAAMkH,GAAO,GAClB,IAAIwgB,EAAU,IAAIw8G,EAAUlkI,EAAKkB,MAAMlB,EAAMV,KAAKiF,QAKlD,OAJAjF,KAAK0mB,OAAOpiB,KAAK8jB,GACbxgB,GACD5H,KAAKiF,OAAO2C,OAERwgB,CACV,CAEA5c,WAAW9K,GACR,IAAI2kI,EAAgBrlI,KAAK0mB,OAAOrZ,QAAQ3M,GACxCV,KAAK0mB,OAAOva,OAAOk5H,EAAe,GAC9B3kI,EAAKE,KAAOZ,KAAK8kI,gBAClB9kI,KAAK8kI,cAAgB9kI,KAAK0mB,OAAO,GAAG9lB,IAEvCZ,KAAKiF,OAAO2C,MACf,CAEA09H,WAAWC,EAAc7kI,GACtB,IAAI0nB,EACJ,GAAI1nB,EAAKkB,OAAS2jI,EAAa3jI,KAC5B2jI,EAAa73D,OAAOhtE,GACpB0nB,EAAUm9G,MACN,CACJn9G,EAAU,IAAIw8G,EAAUlkI,EAAKkB,MAAMlB,EAAMV,KAAKiF,QAC9C,IAAIogI,EAAgBrlI,KAAK0mB,OAAOrZ,QAAQk4H,GACxCvlI,KAAK0mB,OAAOva,OAAOk5H,EAAe,EAAGj9G,GACjCpoB,KAAK8kI,gBAAkBS,EAAa3kI,KACrCZ,KAAK8kI,cAAgB18G,EAAQxnB,GAEnC,CAEA,OADAZ,KAAKiF,OAAO2C,OACLwgB,CACV,cCpKH3oB,EAAOC,QAAU,MACdC,YAAYwC,GACTnC,KAAKkJ,SACF/G,EAAQ+G,UACR,WACG,MAAO,EACV,EACHlJ,KAAKsD,KAAOnB,EAAQmB,MAAQ,WAAa,EACzCtD,KAAKu4E,SACFp2E,EAAQo2E,UACR,WACG,OAAO,CACV,EACHv4E,KAAK2F,OACFxD,EAAQwD,QACR,WACG,MAAO,CAAC,CACX,EACH3F,KAAKi6E,MAAQ93E,EAAQ83E,OAAS,CAAC,CAClC,oBClBH,MAAMurD,EAAwB,EAAQ,OAChCC,EAAiC,EAAQ,OAEzCC,EAAsB,EAAQ,OAE9BC,EAAc,EAAQ,OACtBnK,EAAgB,EAAQ,OACxBoK,EAAgB,EAAQ,OACxBC,EAAkB,EAAQ,OAEhC,IAAI9lI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhD,IAAIksB,EAAgB,CACjB36B,KAAM,gBACN0hB,iBAAkB,GAClBtc,WAAY,GACZ6E,MAAO,OACPkoC,UAAW,KACXC,QAAS,OACTusF,SAAU,OACVC,SAAU,OACVC,MAAO,QAGVvmI,EAAOC,QAAU,MAAMilI,UAAmC,EAGvDhlI,YAAYqjB,EAAY/d,GACrBnF,MAAMkjB,EAAY/d,EAAQ,QAU7B,CAMAglB,cACG,MAAO,OACV,CAKAA,cACG,MAAO,aACV,CAEAA,iBAAiBrqB,EAAKC,GACnB,IAAIK,EAAM,CACPkR,MAAOxR,EAAIQ,OAAO,GAAGP,qBACrBy5C,UAAW15C,EAAIQ,OAAO,GAAGP,yBACzB05C,QAAS35C,EAAIQ,OAAO,GAAGP,uBACvBimI,SAAUlmI,EAAIQ,OAAO,GAAGP,wBACxBkmI,SAAUnmI,EAAIQ,OAAO,GAAGP,wBACxBmmI,MAAOpmI,EAAIQ,OAAO,GAAGP,sBAGpBomI,EAAiB,CAAChhI,EAAQvE,KAC3B,IAAI49B,EAAar5B,EACb8B,QAAQC,GAAMA,aAAa2+H,IAC3Bx3H,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzCuC,GAAGzD,EAAIo5C,WAAW70C,OAAO,UAAW65B,GAGpCA,EAAWwN,QAAQ,CAChBlrC,GAAI,OACJ+B,MAAO5C,EAAE,yBAIZ4D,GAAGzD,EAAIq5C,SAAS90C,OAAO,UAAW65B,GAGlC,IAAI4nG,EAAejhI,EACf8B,QAAQC,GAAMA,aAAaw0H,IAC3BrtH,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzC8kI,EAAap6F,QAAQ,CAClBlrC,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAI4lI,UAAUrhI,OAAO,UAAWyhI,GAGnC,IAAIC,EAAgBlhI,EAChB8B,QAAQC,GAAMA,aAAaw0H,IAC3BrtH,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzC+kI,EAAcr6F,QAAQ,CACnBlrC,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAI6lI,UAAUthI,OAAO,UAAW0hI,GAGnC,IAAIC,EAAenhI,EACf8B,QACGC,GAAMA,aAAa4+H,GAAiB5+H,aAAa6+H,IAEpD13H,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzCglI,EAAat6F,QAAQ,CAClBlrC,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAIkR,OAAO3M,OAAO,UAAW2hI,GAChCziI,GAAGzD,EAAI8lI,OAAOvhI,OAAO,UAAW2hI,GAG5B1lI,GAAQA,EAAK0Q,QACdzN,GAAGzD,EAAIkR,OAAO3M,OAAO,QAAS/D,EAAK0Q,OACnCzN,GAAGzD,EAAIkR,OAAO1M,WAGbhE,GAAQA,EAAK44C,YACd31C,GAAGzD,EAAIo5C,WAAW70C,OAAO,QAAS/D,EAAK44C,WACvC31C,GAAGzD,EAAIo5C,WAAW50C,WAGjBhE,GAAQA,EAAK64C,UACd51C,GAAGzD,EAAIq5C,SAAS90C,OACb,QACA/D,EAAK64C,SAAWzX,EAAcyX,SAEjC51C,GAAGzD,EAAIq5C,SAAS70C,WAGfhE,GAAQA,EAAKolI,WACdniI,GAAGzD,EAAI4lI,UAAUrhI,OACd,QACA/D,EAAKolI,UAAYhkG,EAAcgkG,UAElCniI,GAAGzD,EAAI4lI,UAAUphI,WAGhBhE,GAAQA,EAAKqlI,WACdpiI,GAAGzD,EAAI6lI,UAAUthI,OAAO,QAAS/D,EAAKqlI,UACtCpiI,GAAGzD,EAAI6lI,UAAUrhI,WAGhBhE,GAAQA,EAAKslI,QACdriI,GAAGzD,EAAI8lI,OAAOvhI,OAAO,QAAS/D,EAAKslI,OACnCriI,GAAGzD,EAAI8lI,OAAOthI,UACjB,EAGH,IAAI2hI,EAA6B,IAAIX,EAClC9lI,EACA,GAAGC,WAkPN,OA/OoB,IAAI4lI,EAA+B,CACpDv8H,SAAU,KACA,CACJslC,MAAO,QACP3sC,KAAM,CACH,CACGV,KAAM,CACH,CACGP,GAAIV,EAAIkR,MACR1Q,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,WAEHs2E,YAAat2E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,QACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACAghI,EAAcxhI,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAIo5C,UACR54C,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,gBAEHs2E,YAAat2E,EAAE,uBACf+B,WAAY,IACZqF,KAAM,YACNmxC,UAAU,EACVn2C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACA+gI,EAAYvhI,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAIq5C,QACR74C,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,cAEHs2E,YAAat2E,EAAE,uBACf+B,WAAY,IACZqF,KAAM,UACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACA+gI,EAAYvhI,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAI4lI,SACRplI,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,cAEHs2E,YAAat2E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,WACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACA42H,EAAcp3H,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAI6lI,SACRrlI,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,cAEHs2E,YAAat2E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,WACNmxC,UAAU,EACVn2C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACA42H,EAAcp3H,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAI8lI,MACRtlI,KAAM,aACNU,MAAO,sDAAsDrB,EAC1D,WAEHs2E,YAAat2E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,QACNmxC,UAAU,EACVn2C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACAihI,EAAgBzhI,WAAWC,IAC7B,QAStBf,KAAM,CAAC2B,EAAQvE,KACPuE,IAELghI,EAAehhI,EAAQvE,GAEvB2lI,EAA2BvhI,gBAAgBG,EAAOF,aAClDshI,EAA2BrhI,WAAWC,GACtCohI,EAA2B/iI,KAAK,CAC7BwE,OAAQ,KAGLm+H,EAAehhI,EAAQvE,EAAK,IAEhC,EAGL63E,SAAU,SAAU2C,GACjB,IAAI3hC,EAAU51C,GAAGzD,EAAIq5C,SAASttC,YAAc61B,EAAcyX,QACvDusF,EAAWniI,GAAGzD,EAAI4lI,UAAU75H,YAAc61B,EAAcgkG,SAE3D,OACGvsF,GAAWzX,EAAcyX,SACzBusF,GAAYhkG,EAAcgkG,WAE1B5qD,EAAMl8D,YAAY,UAAW,YAC7Bk8D,EAAMl8D,YAAY,WAAY,aAEvB,EAIb,EAEArZ,OAAQ,WACL,IAAImI,EAAS,CAAC,EAad,OAXAA,EAAOsD,MAAQzN,GAAGzD,EAAIkR,OAAOnF,YAAc61B,EAAc1wB,MACzDtD,EAAOwrC,UACJ31C,GAAGzD,EAAIo5C,WAAWrtC,YAAc61B,EAAcwX,UACjDxrC,EAAOyrC,QACJ51C,GAAGzD,EAAIq5C,SAASttC,YAAc61B,EAAcyX,QAC/CzrC,EAAOg4H,SACJniI,GAAGzD,EAAI4lI,UAAU75H,YAAc61B,EAAcgkG,SAChDh4H,EAAOi4H,SACJpiI,GAAGzD,EAAI6lI,UAAU95H,YAAc61B,EAAcikG,SAChDj4H,EAAOk4H,MAAQriI,GAAGzD,EAAI8lI,OAAO/5H,YAAc61B,EAAckkG,MAElDl4H,CACV,EAEAmsE,MAAO,CAAC,GAId,CAQAlM,QAAQlkE,GAGL,IAAK,IAAIuJ,KAFTtT,MAAMiuE,QAAQlkE,GAEAi4B,EACX9hC,KAAKoT,GAAKvJ,EAAKuJ,IAAM0uB,EAAc1uB,GAGtCpT,KAAK4B,KAAO+iI,EAA2B/iI,MAC1C,CAOAkE,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,IAAK,IAAIsN,KAAK0uB,EACXhqB,EAAI1E,GAAKpT,KAAKoT,GAIjB,OADA0E,EAAIlW,KAAO+iI,EAA2B/iI,OAC/BkW,CACV,CAEIwuH,iBAID,OAHqBtmI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKoR,MAChC,CAEIm1H,qBAID,OAHqBvmI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKs5C,UAChC,CAEIktF,mBAID,OAHqBxmI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKu5C,QAChC,CAEIktF,oBAID,OAHqBzmI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAK8lI,SAChC,CAEIY,oBAID,OAHqB1mI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAK+lI,SAChC,CAEIY,iBAID,OAHqB3mI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKgmI,MAChC,oBC9dH,MAAMR,EAAwB,EAAQ,OAEtC,IAAI1jG,EAAgB,CACjB36B,KAAM,eACNoF,WAAY,GACZsc,iBAAkB,GAClB0W,eAAgB,GAChBC,aAAc,IAGjB//B,EAAOC,QAAU,MAAM+kI,UAAkCe,EACtD7lI,YAAYqjB,EAAY/d,GACrBnF,MAAMkjB,EAAY/d,EAAQ,OAa7B,CAMAglB,cACG,MAAO,MACV,CAKAA,cACG,MAAO,aACV,CAQA8jD,QAAQlkE,GAGL,IAAK,IAAIuJ,KAFTtT,MAAMiuE,QAAQlkE,GAEAi4B,EACX9hC,KAAKoT,GAAKvJ,EAAKuJ,IAAM0uB,EAAc1uB,GAGtCpT,KAAK4B,KAAO6iI,EAA0B7iI,MACzC,CAOAkE,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,IAAK,IAAIsN,KAAK0uB,EACXhqB,EAAI1E,GAAKpT,KAAKoT,GAIjB,OADA0E,EAAIlW,KAAO,OACJkW,CACV,oBCxEH,MAAM0tH,EAAwB,EAAQ,OAChCC,EAAiC,EAAQ,OAEzCC,EAAsB,EAAQ,OAE9BhhF,EAAiB,EAAQ,OACzBgH,EAAc,EAAQ,OACtB0sE,EAAc,EAAQ,OAE5B,IAAIt2F,EAAgB,CACjB36B,KAAM,iBACN0hB,iBAAkB,GAClBtc,WAAY,GACZ20D,sBAAuB,KACvBC,wBAAyB,KACzBC,WAAY,MAGf,IAAIrhE,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,MAAMglI,UAAoC,EAGxD/kI,YAAYqjB,EAAY/d,GACrBnF,MAAMkjB,EAAY/d,EAAQ,SAU7B,CAMAglB,cACG,MAAO,QACV,CAKAA,cACG,MAAO,eACV,CAEAA,iBAAiBloB,EAAIlC,GAClB,IAAIK,EAAM,CACP0mI,YAAa,GAAG/mI,uBAChBgnI,YAAa,GAAGhnI,uBAChBinI,WAAY,GAAGjnI,uBAqBdomI,EAAiB,CAAChhI,EAAQvE,EAAMyB,EAAU,CAAC,KAE5C,MAAM4kI,EAAa,CAChBC,EACA5hF,EACAt8C,EAAS,CAAC9B,GAAMA,EAAE3C,MAAQqnD,EAAYtnD,WAAWC,KACjD04E,KAEA,GAAe,MAAXiqD,GAA6B,MAAV/hI,EAAvB,CAGA,IAAI9C,EAAU8C,EACV8B,SACA+B,OAAOA,GACPqF,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,OACpC27E,GAAc56E,EAAQgE,QACxBhE,EAAQ2pC,QAAQ,CACblrC,GAAI,EACJ+B,MAAO5C,EAAE,UAGfinI,EAAQviI,OAAO,UAAWtC,GAGtBzB,EACGA,EAAK0kD,GACN4hF,EAAQviI,OAAO,QAAS/D,EAAK0kD,KACpB23B,GAAc56E,EAAQ,IAC/B6kI,EAAQviI,OAAO,QAAStC,EAAQ,GAAGvB,IAES,IAAvCuB,EAAQ2G,QAAQuc,GAAMA,EAAEzkB,KAAIuF,QAEpC6gI,EAAQviI,OAAO,QAAStC,EAAQ,GAAGvB,IAGtComI,EAAQtiI,SA3BqC,CA2B5B,EAepBqiI,EACG5kI,EAAQykI,aAAejjI,GAAGzD,EAAI0mI,aAC9B,yBAdkChhI,GAClC,CAAC8lD,EAAYtnD,WAAWC,IAAK+zH,EAAYh0H,WAAWC,KAAKyoC,SACtDlnC,EAAMvB,OAcT,GAEH0iI,EACG5kI,EAAQ0kI,aAAeljI,GAAGzD,EAAI2mI,aAC9B,2BAfoCjhI,GACpC,CACG8+C,EAAetgD,WAAWC,IAC1BqnD,EAAYtnD,WAAWC,IACvB+zH,EAAYh0H,WAAWC,KACxByoC,SAASlnC,EAAMvB,OAYjB,GAEH0iI,EACG5kI,EAAQ2kI,YAAcnjI,GAAGzD,EAAI4mI,YAC7B,cACC9/H,GAGKA,EAAE3C,MAAQ+zH,EAAYh0H,WAAWC,KAEhC2C,EAAE3C,MAAQqgD,EAAetgD,WAAWC,KACX,OAAvB2C,EAAEZ,SAASa,UACe,QAA1BD,EAAEZ,SAASc,cAGpB,EACF,EAGJ,IAAIm/H,EAA6B,IAAIX,EAClC3jI,EACA,GAAGlC,YAGN,OAAO,IAAI4lI,EAA+B,CACvCv8H,SAAU,KACA,CACJslC,MAAO,SACP3sC,KAAM,CACH,CACGV,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,uBAEHa,GAAIV,EAAI0mI,YACRvwD,YAAat2E,EAAE,kBACf+B,WAAY,IACZqF,KAAM,SACNmxC,UAAU,EACVn2C,QAAS,GACTC,GAAI,CACDC,SAAU,SAAUzB,GACjB+C,GAAGzD,EAAI0mI,aAAaruD,WACpB50E,GAAGzD,EAAI2mI,aAAatuD,UACvB,GAEHtP,eAAgBlpE,EAAE,aAErB,CACGW,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACA8mD,EAAYtnD,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,+CAA+CrB,EACnD,yBAEHa,GAAIV,EAAI2mI,YACRxwD,YAAat2E,EAAE,kBACf+B,WAAY,IACZqF,KAAM,SACNmxC,UAAU,EACVn2C,QAAS,GACT8mE,eAAgBlpE,EACb,iDAEHw4E,SAAW51E,IACR,IAAIskI,EAActjI,GAAGzD,EAAI0mI,aAAa36H,WACtC,OACIg7H,IAAgBtkI,GAASskI,IAAgBtkI,CAC5C,EAEJP,GAAI,CACDC,SAAU,SAAUzB,GACjB+C,GAAGzD,EAAI2mI,aAAatuD,UACvB,IAGN,CACG73E,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACA8mD,EAAYtnD,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,sDAAsDrB,EAC1D,gBAEHs2E,YAAat2E,EAAE,uBACfa,GAAIV,EAAI4mI,WACRhlI,WAAY,IACZqF,KAAM,QACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ8kI,EAA2BzhI,KACxB,KACA8/C,EAAetgD,WAAWC,IAC5B,QAStBf,KAAM,CAAC2B,EAAQvE,KACZulI,EAAehhI,EAAQvE,GAEvB2lI,EAA2BvhI,gBAAgBG,EAAOF,aAClDshI,EAA2BrhI,WAAWC,GACtCohI,EAA2B/iI,KAAK,CAC7BwE,OAAQ,KAGLm+H,EAAehhI,EAAQvE,EAAK,GAEhC,EAGLiF,OAAQ,WACL,IAAImI,EAAS,CAAC,EAQd,OANAA,EAAOozD,sBACJv9D,GAAGzD,EAAI0mI,aAAa36H,YAAc,KACrC6B,EAAOqzD,wBACJx9D,GAAGzD,EAAI2mI,aAAa56H,YAAc,KACrC6B,EAAOszD,WAAaz9D,GAAGzD,EAAI4mI,YAAY76H,YAAc,KAE9C6B,CACV,EAEAmsE,MAAO,CACJgsD,eAAgBA,IAGzB,CAQAl4D,QAAQlkE,GAGL,IAAK,IAAIuJ,KAFTtT,MAAMiuE,QAAQlkE,GAEAi4B,EACX9hC,KAAKoT,GAAKvJ,EAAKuJ,IAAM0uB,EAAc1uB,GAGtCpT,KAAK4B,KAAO8iI,EAA4B9iI,MAC3C,CAOAkE,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,IAAK,IAAIsN,KAAK0uB,EACXhqB,EAAI1E,GAAKpT,KAAKoT,GAIjB,OADA0E,EAAIlW,KAAO8iI,EAA4B9iI,OAChCkW,CACV,CAEAovH,6BAIG,OAHqBlnI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKmhE,wBAChC,CAEAgmE,2BAIG,OAHqBnnI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKkhE,sBAChC,CAEAkmE,gBAIG,OAHqBpnI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKohE,WAChC,cCrWH3hE,EAAOC,QAAU,MAOdC,YAAYyB,GACTpB,KAAKoB,MAAQA,EACbpB,KAAKS,GAAK,IACb,CAUA4mI,WAAWlmH,EAAOpa,EAAQmzC,QACI,IAAhBA,IAA6BA,GAAe,GAIvD,SAASotF,EAAiBt4G,GAEvB,GAAIA,EACD,GAAIA,EAAKlG,MAAQkG,EAAK7N,MACnB6N,EAAK7N,MAAMld,SAAS2L,IACjB03H,EAAiB13H,EAAE,QAElB,CAGJ,IAAIhK,EAAQmB,EAAO+B,QAAQ9B,GACjBA,EAAEpG,IAAMouB,EAAK3qB,MACpB,GACH,GAAIuB,EACD,OAAQA,EAAMhE,MACX,IAAK,SACL,IAAK,UAIuB,iBAAdotB,EAAKrsB,SACmB,GAA5BqsB,EAAKrsB,MAAM0K,QAAQ,KACpB2hB,EAAKrsB,MAAQkiB,SAASmK,EAAKrsB,OAE3BqsB,EAAKrsB,MAAQkzC,WAAW7mB,EAAKrsB,QAGnC,MACH,IAAK,OAGEu3C,EAGGlrB,EAAKrsB,iBAAiB4d,OACvByO,EAAKrsB,MAAQc,MAAMqxE,KAAKC,cAAc/lD,EAAKrsB,QAKrB,iBAAdqsB,EAAKrsB,QACbqsB,EAAKrsB,MAAQ,IAAI4d,KAAKyO,EAAKrsB,QAO7C,CAEN,CACA2kI,CAAiBnmH,EACpB,CAIAhhB,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEd,IAAIE,EAAIH,EAAIK,MAERuqG,EAAmB/mG,MAAMyH,MACzBq8H,EAAYljI,GAEN,GAAGxE,KAAUwE,KAAOmmG,IAI1BtqG,EAAOF,KAAKE,IAAM,CACnBC,UAAWonI,EAAS,2BACpBC,aAAcD,EAAS,YACvBE,sBAAuBF,EAAS,qBAChCG,mBAAoBH,EAAS,kBAC7BI,aAAcJ,EAAS,iBAI1BvnI,KAAKS,GAAK,CACPC,KAAM,SACNE,GAAIV,EAAIwnI,mBACRp0D,QAAQ,EACR1xE,KAAM,OACNC,KAAM,CACH,CACGjB,GAAIV,EAAIynI,aACRxmI,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNQ,IAAK,gBACLiG,KAAM,QACNxE,MAAO5C,EAAE,yBACTuB,WAAW,EACXC,MAAO,WACJoC,GAAGzD,EAAIunI,uBAAuB7iI,OAC9BjB,GAAGzD,EAAIynI,cAAchjI,MAExB,GAEH,CAAEjC,WAAW,KAGnB,CACG4wE,QAAQ,EACR1yE,GAAIV,EAAIunI,sBACRtmI,KAAM,CACH,CACGT,KAAM,eACNE,GAAIV,EAAIsnI,aACRzgI,OAAQ/G,KAAK4nI,uBAQxB5nI,KAAKoB,OACNpB,KAAKS,GAAGoB,KAAK,GAAGV,KAAK2qC,QAAQ,CAC1BprC,KAAM,QACNQ,IAAK,eACLE,MAAOpB,KAAKoB,MACZJ,MAAOhB,KAAK+B,GAAGC,WAAWC,SAASC,kBAKzClC,KAAKsD,KAAQnB,IAIV,IAAK,IAAIoB,KAHTpB,EAAUA,GAAW,CAAC,EAGRX,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAIH,IAAI/B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACR+E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAWH4+H,WAAY,CAAClmH,EAAOpa,EAAQmzC,KACzBl6C,KAAKqnI,WAAWlmH,EAAOpa,EAAQmzC,EAAa,EAG/CjuC,SAAU,KACP,IAAItG,EAAS,KACTkiI,EAAKlkI,GAAGzD,EAAIsnI,cAahB,OAZIK,IACDliI,EAASkiI,EAAG57H,YAOXtG,GACDnE,EAAO6lI,WAAW1hI,EAAO,GAAIA,EAAO,IAAI,GAGpCA,CAAM,EAGhBd,SAAWc,IACRA,EAASA,GAAU,GACdwH,MAAMC,QAAQzH,KAASA,EAAS,CAACA,IACjB,GAAjBA,EAAOQ,QACRR,EAAOrB,KAAK,CAAC,GAEZqB,EAAOQ,OAAS,GACjBR,EAAOrB,KAAKtE,KAAK4nI,mBAKpBpmI,EAAO6lI,WAAW1hI,EAAO,GAAIA,EAAO,IAAI,GAExC,IAAIkiI,EAAKlkI,GAAGzD,EAAIsnI,cACZK,GACGliI,EAAO,IAAMA,EAAO,GAAGwb,OAASxb,EAAO,GAAGwb,MAAMhb,SACjD0hI,EAAGhjI,SAASc,EAAO,IACnBhC,GAAGzD,EAAIunI,uBAAuB7iI,OAC9BjB,GAAGzD,EAAIynI,cAAchjI,OAE3B,GAIN3E,KAAKiM,SAAWzK,EAAOyK,SACvBjM,KAAK4E,KAAOpD,EAAOoD,KACnB5E,KAAK6E,SAAWrD,EAAOqD,QAC1B,CAEAG,WAAWC,GACRjF,KAAKuiH,cAAgBt9G,CACxB,CAWA2iI,kBACG,IAAIE,EAAa,CACd,SACA,WACA,SACA,OACA,QACA,UACA,aAGC7jG,EAAa,GA2BjB,OAzBIjkC,KAAKuiH,eACNviH,KAAKuiH,cAAcx7G,SAAS9C,SAAS+C,IAClC,IAAkC,GAA9B8gI,EAAWz6H,QAAQrG,EAAE3C,KAAY,CAUlC,IAAIzC,EAAOoF,EAAE3C,IACA,WAAT2C,EAAE3C,KAA6B,aAAT2C,EAAE3C,IAAoBzC,EAAO,SACrC,YAAToF,EAAE3C,MAAmBzC,EAAO,UAErCqiC,EAAW3/B,KAAK,CACb1D,GAAIoG,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMA,GAEZ,KAICqiC,CACV,CAMAzd,QAAQrkB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIkvE,EAAU,EACVkiD,EAAS,OACVliD,GACe7lF,KAAKgoI,UAAU7hI,QAC3BuJ,GACH,EAGH1P,KAAKgoI,UAAU/jI,SAAS+qB,IACrBA,EACIxI,QAAQrkB,GACRqS,MAAK,WACHuzH,GACH,IACCtzH,OAAOtM,IACLwO,EAAOxO,EAAI,GACZ,IAGqB,GAAzBnI,KAAKgoI,UAAU7hI,QAChBuJ,GACH,GAEN,CAEAu4H,4BACGtkI,GAAG3D,KAAKE,IAAIwnI,oBAAoB9iI,OAChCjB,GAAG3D,KAAKE,IAAIunI,uBAAuB7iI,OACnCjB,GAAG3D,KAAKE,IAAIynI,cAAchjI,MAC7B,oBCrTH,MAAMujI,EAAqB,EAAQ,OAEnC,IAAInoI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,MAOdC,YAAYwoI,GACTnoI,KAAKmoI,YAAcA,GAAe,GAElCnoI,KAAKooI,eAAiB,GACtBpoI,KAAKmoI,YAAYlkI,SAAS2J,IACvB5N,KAAKooI,eAAe9jI,KAAK,CAAE1D,GAAIgN,EAAEvJ,IAAK1B,MAAOiL,EAAExM,OAAQ,IAG1DpB,KAAKqoI,eAAiB,KAClBroI,KAAKooI,eAAejiI,OAAS,IAC9BnG,KAAKqoI,eAAiBroI,KAAKooI,eAAe,GAAGxnI,IAGhDZ,KAAK61D,WAAY,EAEjB71D,KAAKuiH,cAAgB,KAGrBviH,KAAKsoI,SAAW,KAEhBtoI,KAAKuoI,YAAc,IACtB,CAEApoI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAId,IAAI2qG,EAAmB/mG,MAAMyH,MACzBq8H,EAAYljI,GAEN,GAAGxE,KAAUwE,KAAOmmG,IAI1BtqG,EAAOF,KAAKE,IAAM,CAEnBC,UAAWonI,EAAS,aAEpBiB,aAAcjB,EAAS,gBAEvBC,aAAcD,EAAS,gBAEvBkB,aAAclB,EAAS,cAG1BvnI,KAAKsoI,SAASlnI,MAAQrB,EAAE,QACxBC,KAAKsoI,SAASnoI,UAAUH,KAAKJ,IAAKI,KAAKH,QACvCG,KAAKS,GAAKT,KAAK0oI,cAGf1oI,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDvD,KAAKsoI,SAAShlI,OAGd,IAAIqlI,EAAS3oI,KAAK4oI,gBAClB,GAAID,EAAQ,CACTA,EAAOxoI,UAAUH,KAAKJ,IAAKI,KAAKH,QAChC,IAAIssD,EAAOw8E,EAAOF,aAAavoI,EAAIuoI,cAEnCjnI,EAAOqnI,oBAAoB18E,GAG3BA,EAAK7oD,MACR,GAIH,IAAI9B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRslI,SAAU,WACPtgI,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGHogI,oBAAsB1oI,IAEnB,IAAI4oI,EAAgBplI,GAAG3D,KAAKE,IAAIuoI,cAChC,GAAKM,EAAL,CAEA,IAAIv8C,EAAWu8C,EAAcj+H,gBACzBk+H,EAAgB,GACpBx8C,EAASvoF,SAASV,IACfylI,EAAc1kI,KAAKf,EAAE,IAExBylI,EAAc/kI,SAASV,IACpBwlI,EAAcv9H,WAAWjI,EAAE,IAG9BwlI,EAAc99H,QAAQ9K,EAAUM,GAXN,CAWS,EAGtC+nI,aAAc,CAACjvC,EAAUzhB,KAClByhB,GACD51F,GAAG3D,KAAKE,IAAIC,WACR2K,gBACA7G,SAASwiB,IACPA,EAAM7hB,MAAM,IAIrB,IAAIqkI,EAAajpI,KAAKkpI,UAAUpxD,GAC5BmxD,GACDA,EAAWE,eAAenpI,KAAKsoI,SAASr8H,YAI3CjM,KAAKqoI,eAAiB9uC,EACtB,IAAI6vC,EAAappI,KAAK4oI,gBACtB,GAAIQ,EAAY,CAEbppI,KAAKsoI,SAASzjI,SAASukI,EAAWlgG,aAGlCkgG,EAAWjpI,UAAUH,KAAKJ,IAAKI,KAAKH,QACpC,IAAIM,EAAYipI,EAAWX,aAAavoI,EAAIuoI,cAC5CjnI,EAAOqnI,oBAAoB1oI,GAC3BA,EAAUmD,MAEb,GAGT,CAGAolI,cACG,MAAO,CACJ9nI,GAAIZ,KAAKE,IAAIC,UACbO,KAAM,SACNQ,IAAK,0BACLsB,QAAS,GAKTZ,KAAM,OACNC,KAAM,CACH,CACGnB,KAAM,WACNQ,IAAK,iCACLmgE,SAAU,kDACVtgE,OAAQ,GACRY,YAAY,EACZ0nI,iBAAoC,GAAlBrpI,KAAK61D,UACvB8qD,QAAS,CACN,sBAAuB,CAACt2G,EAAGzJ,EAAIg0H,KAC5B50H,KAAKwB,OAAOgC,UAAUslI,SAAS9oI,KAAK,IAK7C,CACGY,GAAIZ,KAAKE,IAAIsoI,aACb9nI,KAAM,aACNU,MAAOrB,EAAE,UACTs2E,YAAat2E,EAAE,oBACf+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCC,QAASnC,KAAKooI,eACdhmI,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KAChB93E,KAAKwB,OAAOgnI,aAAa3wD,EAAQC,EAAO,IAMjD,CACGwxD,IAAK,SACLh2D,QAAQ,EACR7wE,MAAO,CACJ,CACG/B,KAAM,SACNS,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,UACTmB,IAAK,eACLF,MAAOhB,KAAK+B,GAAGC,WAAWC,SAASC,iBAEtC,CACGtB,GAAIZ,KAAKE,IAAIuoI,aACb/nI,KAAM,SACNmB,KAAM,CACH,CACGT,MAAOrB,EACJ,4CAEHmB,IAAK,eACLH,OAAQ,UAU7Bf,KAAKsoI,SAAS7nI,IAGvB,CAGAmnI,kBACG,IAAI7gI,EAAS,GAETshI,EAAiBroI,KAAK4oI,gBAK1B,OAJIP,IACDthI,EAASshI,EAAeT,mBAGpB7gI,CACV,CAEA6hI,gBACG,OAAO5oI,KAAKkpI,UAAUlpI,KAAKqoI,eAC9B,CAEAa,UAAU7kI,GACP,OAAOrE,KAAKmoI,YAAYr/H,QAAQ8E,GACtBA,EAAEvJ,KAAOA,IAChB,EACN,CAEAW,WAAWC,GACRjF,KAAKuiH,cAAgBt9G,EACrBjF,KAAKmoI,YAAYlkI,SAAS2J,IACvBA,EAAE5I,WAAWC,EAAO,IAGvB,IAAI7D,EAAQrB,EAAE,QAEdC,KAAKsoI,SAAW,IAAIJ,EAAmB9mI,GACvCpB,KAAKsoI,SAAStjI,WAAWC,GAGrBjF,KAAKE,MACNF,KAAKS,GAAKT,KAAK0oI,cAErB,CAEAh3E,SAASxnD,GACNlK,KAAKuoI,YAAcr+H,EACnBlK,KAAKmoI,YAAYlkI,SAAS2J,IACvBA,EAAE8jD,SAASxnD,EAAK,GAEtB,CAEA4nD,WAAW3vD,EAAU,CAAC,GAEnB,IADcnC,KAAKuF,QAAQpD,EAAQ0H,MACrB,OAEd,IAAI++H,EAAgB5oI,KAAK4oI,gBACpBA,GAELA,EAAcW,oBAAoB,CAAC,EAAGpnI,EAAQ0H,KACjD,CAMA2c,QAAQrkB,GACL,IAAIymI,EAAgB5oI,KAAK4oI,gBACzB,OAAKA,EAES5oI,KAAKuF,QAAQpD,EAAQ0H,MAEzB++H,EAAcpiH,QAAQrkB,GAGtB,IAAIsN,SAAQ,CAACC,EAASiH,KAC1BjH,GAAS,IARYD,QAAQC,SAWtC,CAEAiiD,aAAavrD,GAGV,IAFAA,EAAWA,GAAY,CAAC,GAEXiiI,eAAgB,CAE1BroI,KAAKqoI,eAAiBjiI,EAASiiI,eAC/B,IAAIA,EAAiBroI,KAAK4oI,gBAC1B,IAAKP,EAAgB,OACrBA,EAAec,eAAe/iI,EAASq9H,YAAc,CAAC,GAGlDzjI,KAAKE,KAGNyD,GAAG3D,KAAKE,IAAIsoI,cAAc3jI,SAAS7E,KAAKqoI,gBAK3CA,EAAe12E,aAAavrD,EAAS8sH,eACxC,CACH,CAEAsO,aACG,IAAIp7H,EAAW,CAAC,EAEhB,GAAIpG,KAAKqoI,eAAgB,CACtBjiI,EAASiiI,eAAiBroI,KAAKqoI,eAC/BjiI,EAASq9H,WAAazjI,KAAKsoI,SAASr8H,WACpC,IAAI28H,EAAgB5oI,KAAK4oI,gBACrBA,IACDxiI,EAAS8sH,eAAiB0V,EAAcpH,aAE9C,CAEA,OAAOp7H,CACV,CAOAojI,iBACG,IAAIJ,EAAappI,KAAK4oI,gBAClBQ,GAAcppI,KAAKsoI,WACpBtoI,KAAKsoI,SAASzjI,SAASukI,EAAWlgG,aAClCkgG,EAAWI,iBAEjB,CAOArkI,gBACG,IAAIyjI,EAAgB5oI,KAAK4oI,gBACzB,OAAIA,EACMA,EAAca,UAEjBh6H,QAAQC,SAClB,CAEAnK,QAAQsE,EAAO,CAAC,GACb,IAGIpJ,EAAK,CACNG,GAJM,YAAc6C,MAAMyH,MAK1BooE,QAAQ,EACR5yE,KAAM,gBAELgpI,EAAWjmI,MAAMhD,GAAGA,GAGpBkpI,EADgB3pI,KAAK4oI,gBACO1/F,YAE5BlpC,KAAKsoI,UACNtoI,KAAKsoI,SAASjB,WAAWsC,EAAY,GAAIA,EAAY,IAAI,GAG5D,IAAInhH,EAAQmhH,EAAY,IAAM,CAAC,EAC5B5iI,EAAS4iI,EAAY,IAAM,GAE1BC,EAAkB,CAACv7H,EAAO,KAER,iBAARA,EAAyBA,EAE7BwnC,WAAWxnC,EAAK2E,QAAQ,YAAa,KAK/CjM,EACI+B,QACG9B,GACY,UAAVA,EAAEpF,MACQ,aAAVoF,EAAEpF,MACQ,WAAVoF,EAAEpF,OAEPqC,SAAS+C,IACP,IAEOwhB,GAASA,EAAMrH,OAAShU,MAAMC,QAAQob,EAAMrH,QAC7CqH,EAAMrH,MAAMld,SAAS2L,IACdA,EAAEvL,KAAO2C,EAAEpG,KAEfgP,EAAEjN,MAAQinI,EAAgBh6H,EAAEjN,OAAM,IAKpCkH,EAAK7C,EAAEpG,KAA6B,iBAAfiJ,EAAK7C,EAAEpG,MAC7BiJ,EAAK7C,EAAEpG,IAAMgpI,EAAgB//H,EAAK7C,EAAEpG,KAI1C,CAFE,MAAOyJ,GAET,KAINq/H,EAAS7kI,SAAS,CACf2jB,MAAOA,EACPzhB,OAAQA,IAGX,IACIxB,EADWmkI,EAASnwB,iBACVswB,CAAShgI,GAIvB,OAFA6/H,EAAShwB,aAEFn0G,CACV,CAEIukI,mBAED,OADoB9pI,KAAK4oI,gBACJkB,eAAgB,CACxC,cCnbHrqI,EAAOC,QAAU,MAQdC,YAAYC,EAAKC,EAAQ0oI,GACtBvoI,KAAKqE,IAAM,mBAEXrE,KAAK+pI,YAAc,KAEnB/pI,KAAKuoI,YAAc,KAEnBvoI,KAAKyjI,WAAa,CAAC,EAEnBzjI,KAAKmzH,WAAa,CAAC,EAGnBnzH,KAAKuoI,YAAcA,CACtB,CAEApoI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEdG,KAAKoB,MA7BH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GA6B7B7V,CAAE,4BAOJC,KAAKE,IAAM,CAEnBC,UAAW,GAAY,YANhBP,EAAIQ,OAAO,GAAGP,kBAMkB4D,MAAMyH,SAGhDlL,KAAKq9F,IAAM,KAGXr9F,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAIH,IAAI/B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRslI,SAAU,WACPtgI,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGT,CASAygC,YACG,MAAO,CAAClpC,KAAKgqI,iBAAkBhqI,KAAK4nI,kBACvC,CAWAuB,eAAehoH,GAGRhU,MAAMC,QAAQ+T,KACfA,EAAQA,EAAM,IAIbA,IAEiB,MAAdA,EAAM2H,OAAc3H,EAAM2H,KAAO,OAErC9oB,KAAKyjI,WAAatiH,EAExB,CAWAymH,kBACG,IAAIE,EAAa,CAAC,SAAU,SAAU,OAAQ,UAAW,aAErD7jG,EAAa,GAsBjB,OApBIjkC,KAAK+pI,aACN/pI,KAAK+pI,YAAYhjI,SAAS9C,SAAS+C,KACE,GAA9B8gI,EAAWz6H,QAAQrG,EAAE3C,MAStB4/B,EAAW3/B,KAAK,CACb1D,GAAIoG,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMoF,EAAE3C,KAEd,IAIC4/B,CACV,CAKA+lG,iBACG,OAAOhqI,KAAKyjI,UACf,CAIAz+H,WAAWC,GAERjF,KAAKiqI,gBAAgBhlI,EACxB,CAIAglI,gBAAgBhlI,GACbjF,KAAK+pI,YAAc9kI,CACtB,CAEAysD,SAASxnD,GACNlK,KAAKuoI,YAAcr+H,CACtB,CAMAsc,QAAQrkB,GAIL,OAHAqG,QAAQ+G,MACL,2EAEI,IAAIE,SAAQ,CAACC,EAASiH,KAC1BA,EACG,IAAIrO,MACD,uEAEL,GAEP,CAKAmgI,aAAayB,GACV,OAAOlqI,KAAKmqI,sBAAsBD,EACrC,CAKAC,sBAAsBtqI,GACnB,OAAQG,KAAKq9F,IAAM,CAChB58F,GAAI,CACD4gE,SAAU,0CAEb/9D,KAAOuG,IACJrB,QAAQ+G,MACL,sEAEH/G,QAAQC,KAAK,0BAAwBoB,EAAK,EAGnD,CAKA8nD,aAAavrD,GAIVA,EAAWA,GAAY,CAAC,EACxBpG,KAAKmzH,WAAa/sH,EAAS+sH,YAAc,CAAC,CAC7C,CAKAqO,aAIG,MAHe,CAAC,CAInB,CAOAiI,UACG,OAAOh6H,QAAQC,SAClB,CAOA85H,iBAGA,cCpOH,IAAIzpI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,MAOdC,YAAYyqI,GACTpqI,KAAKgoI,UAAY,GACjBhoI,KAAKuiH,cAAgB,MAGrB6nB,EAAgBA,GAAiB,CAAC,GACpB53H,OAAS43H,EAAc53H,QAAU,CAAC,EAChD43H,EAAc53H,OAAOi8D,OAClB27D,EAAc53H,OAAOi8D,QAAU,8BAClC27D,EAAc53H,OAAO63H,cAClBD,EAAc53H,OAAO63H,eAAiB,aACzCrqI,KAAKoqI,cAAgBA,CACxB,CAQAjqI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMI,KAAKJ,KAAOA,EACvBI,KAAKH,OAASA,EAEdD,EAAMA,GAAOI,KAAKJ,IAElBI,KAAKuoI,YAAc,KAGnB,IAAIroI,EAAOF,KAAKE,IAAM,CACnBC,UAAW,GAAGN,cACdshB,MAAO,GAAGthB,UACVyqI,gBAAiB,GAAGzqI,oBAEpBusD,OAAQ,GAAGvsD,WACX0qI,KAAM,GAAG1qI,SAET8F,OAAQ,GAAG9F,WACXga,IAAK,GAAGha,SAIXG,KAAKS,GAAK,CACPC,KAAM,SACNE,GAAIV,EAAIC,UACRW,OAAO,EACPH,SAAU,SACVE,QAAQ,EACRG,MAAO,IACPD,OAAQ,IACRG,IAAK,oBACLD,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAOpB,KAAKoqI,cAAc53H,OAAO63H,eAEpC,CACG3pI,KAAM,SACNQ,IAAK,gBACLqK,KAAM,aACN3J,KAAM,aACNR,MAAOrB,EAAE,gBACTiB,MAAO,IACPO,MAAO,KACJvB,KAAKwqI,UACLhiI,QAAQ2O,IAAIxT,GAAGzD,EAAIihB,OAAO8mF,SAC1BtkG,GAAGzD,EAAIoqI,iBAAiBjhB,SAAS,EAAG1lH,GAAGzD,EAAIihB,OAAO8mF,QAAQ,KAKtExmG,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGnB,KAAM,aACNE,GAAIV,EAAIoqI,gBACR5oI,OAAQ,KACRD,KAAM,CACHf,KAAM,SACNE,GAAIV,EAAIihB,MACR6zD,OAAQ,GACRxyE,QAAS,GACTX,KAAM,KAmBZ,CACGX,IAAK,CAAE,mBAAoB,QAC3BC,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNyG,KAAM,SACNxE,MAAO5C,EAAE,UACTmB,IAAK,mBACLI,WAAW,EACXC,MAAO,WACJC,EAAOhB,cACV,GAEH,CACGE,KAAM,SACNQ,IAAK,gBACLiG,KAAM,OACN/F,MAAOrB,EAAE,QACT6B,KAAM,OACNN,WAAW,EACXC,MAAO,WACJC,EAAOjB,YACV,GAEH,CAAEmC,WAAW,QAW5B1C,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDE,MAAMhD,GAAGT,KAAKS,GAAG,EAIpB,IAAIe,EAAUxB,KAAKwB,OAAS,CACzBhB,aAAc,WACXmD,GAAGzD,EAAIC,WAAWwE,MACrB,EAEApE,WAAY,KACT,IAAI29B,EAAUl+B,KAAKwhI,aAEnBhgI,EAAOgC,UAAUsE,OAAOo2B,GACxB18B,EAAOmD,MAAM,EAGhBnB,UAAW,CACR+E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGH9D,KAAM,WACHhB,GAAGzD,EAAIC,WAAWwE,MACrB,EAEAC,KAAM,WACHjB,GAAGzD,EAAIC,WAAWyE,MACrB,GAGH5E,KAAK4E,KAAOpD,EAAOoD,KACnB5E,KAAK6E,SAAWrD,EAAOqD,QAC1B,CAOA2lI,QAAQpkI,GACL,IAAIu9H,EAAO3jI,KAAKyqI,UAChB,GAAK9G,EAAL,CAKA,GAHA3jI,KAAKgoI,UAAU1jI,KAAKq/H,GAGhB3jI,KAAKE,IAAK,CAEX,IAAIwqI,EAAU/mI,GAAG3D,KAAKE,IAAIihB,OACtBupH,IAED/G,EAAKxjI,UAAUH,KAAKJ,IAAKI,KAAKH,QACjB6qI,EAAQz/H,QAAQ04H,EAAKljI,IAElCkjI,EAAKrgI,KAAK,CACPwlI,SAAW6B,IACRhnI,GAAG3D,KAAKE,IAAIihB,OAAO3V,WAAWm4H,EAAKzjI,IAAIC,WAEvC,IAAI4L,EAAQ/L,KAAKgoI,UAAU36H,QAAQs9H,IACpB,IAAX5+H,GACD/L,KAAKgoI,UAAU77H,OAAOJ,EAAO,EAChC,IAIZ,CAEI3F,GACDu9H,EAAKhyE,aAAavrD,EA3BJ,CA6BpB,CAOAurD,aAAavrD,GAOVpG,KAAKgoI,UAAU/jI,SAAS+qB,IAElBhvB,KAAKE,KACLF,KAAKE,IAAIihB,OACT6N,GACAA,EAAK9uB,KACL8uB,EAAK9uB,IAAIC,WAETwD,GAAG3D,KAAKE,IAAIihB,OAAO3V,WAAWwjB,EAAK9uB,IAAIC,UAC1C,IAEHH,KAAKgoI,UAAY,GAEb5hI,GACDA,EAASnC,SAAS2mI,IACf5qI,KAAKwqI,QAAQI,EAAa,GAGnC,CASA5lI,WAAWC,GACRjF,KAAKuiH,cAAgBt9G,EAGrBjF,KAAKgoI,UAAU/jI,SAAS2L,IACrBA,EAAE5K,WAAWC,EAAO,GAE1B,CAEA6sD,WAAW3vD,IACPnC,KAAKgoI,WAAa,IACfl/H,QAAQkmB,GAA8B,GAArBA,EAAK86G,eACtB7lI,SAAS+qB,IACPA,EAAK8iC,WAAW3vD,EAASA,EAAQ0H,KAAK,GAE/C,CAQA2c,QAAQrkB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIqxH,GAAahoI,KAAKgoI,WAAa,IAAIl/H,QACnCkmB,IAAUA,EAAK86G,eAGnB,IAAIjkD,EAAU,EAQdmiD,EAAU/jI,SAAS+qB,IAChBA,EACIxI,QAAQrkB,GACRqS,MAAK,aATTqxE,GACemiD,EAAU7hI,QACtBuJ,GASA,IACC+E,OAAOtM,IACLwO,EAAOxO,EAAI,GACZ,IAGgB,GAApB6/H,EAAU7hI,QACXuJ,GACH,GAEN,CAOA8xH,aACG,IAAIp7H,EAAW,GAIf,OAHApG,KAAKgoI,UAAU/jI,SAAS2L,IACrBxJ,EAAS9B,KAAKsL,EAAE4xH,aAAa,IAEzBp7H,CACV,CAEAqkI,UAIG,OAHAjiI,QAAQ+G,MACL,wEAEI,IACV,CAEAmiD,SAASxnD,GACNlK,KAAKuoI,YAAcr+H,EACnBlK,KAAKJ,IAAMI,KAAKJ,KAAOsK,EAAKtK,GAC/B,CAOAyoG,aAGG,OAAO54F,QAAQC,SAClB,CAOA85H,iBACGxpI,KAAKgoI,UAAU/jI,SAAS2L,IACrBA,EAAE45H,gBAAgB,GAExB,oBC7YH,MAAMqB,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,OAErBC,EAAqB,EAAQ,MAC7BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,MAEpCzrI,EAAOC,QAAU,cAA4CmrI,EAO1DlrI,cAOGG,MANe,CACZ0S,OAAQ,CACLi8D,OAAQ,iCACR47D,cAAe,kBAIxB,CAGAI,UACG,IAAItC,EAAc,CACf,IAAI4C,EACD/qI,KAAKJ,IACL,GAAGI,KAAKH,0BACRG,KAAKuoI,aAER,IAAIyC,EACDhrI,KAAKJ,IACL,GAAGI,KAAKH,0BACRG,KAAKuoI,aAER,IAAI0C,EACDjrI,KAAKJ,IACL,GAAGI,KAAKH,mCACRG,KAAKuoI,aAER,IAAI2C,EACDlrI,KAAKJ,IACL,GAAGI,KAAKH,mCACRG,KAAKuoI,cAIP5E,EAAO,IAAImH,EAAW3C,GAI1B,OAHInoI,KAAKuiH,eACNohB,EAAK3+H,WAAWhF,KAAKuiH,eAEjBohB,CACV,CAQAx+H,mBACG,IAAIgmI,GAAYnrI,KAAKgoI,WAAa,IAAI75H,KAAKyB,GAAMA,EAAE65H,kBAC7Ch6H,QAAQ4R,IAAI8pH,EACrB,oBClEH,MAAMN,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,OAErBM,EAAqB,EAAQ,OAC7BC,EAAgB,EAAQ,OACxBC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,OACtBC,EAAY,EAAQ,MAE1BhsI,EAAOC,QAAU,cAA4CmrI,EAO1DlrI,cAOGG,MANe,CACZ0S,OAAQ,CACLi8D,OAAQ,+BACR47D,cAAe,kBAIxB,CAGAI,UACG,IAAItC,EAAc,CACf,IAAIiD,EACDprI,KAAKJ,IACL,GAAGI,KAAKH,mCAEX,IAAIwrI,EAAcrrI,KAAKJ,IAAK,GAAGI,KAAKH,8BACpC,IAAIyrI,EAAetrI,KAAKJ,IAAK,GAAGI,KAAKH,+BACrC,IAAI0rI,EAAevrI,KAAKJ,IAAK,GAAGI,KAAKH,+BACrC,IAAI2rI,EAAYxrI,KAAKJ,IAAK,GAAGI,KAAKH,4BAClC,IAAI4rI,EAAUzrI,KAAKJ,IAAK,GAAGI,KAAKH,2BAG/B8jI,EAAO,IAAImH,EAAW3C,GAG1B,OAFAxE,EAAK3+H,WAAWhF,KAAKuiH,eACrBohB,EAAKjyE,SAAS1xD,KAAKuoI,aACZ5E,CACV,oBC1CH,MAAM+H,EAAkB,EAAQ,OAIhCjsI,EAAOC,QAAU,cAA4D,EAS1EC,YAAYC,EAAKC,EAAQ0oI,GACtBzoI,MAAMF,EAAKC,EAAQ0oI,GAEnBvoI,KAAKqE,IAAM,gDACXrE,KAAKoB,MAfH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAe7B7V,CAAE,0BAClB,CAQA4rI,oBAAoB9rI,GACjB,IAAI+rI,EAAY9rI,MAAM6rI,oBAAoB9rI,GAM1C,OAFA+rI,EAAUpqI,OAAOqqI,eAAiB,WAAa,EAExCD,CACV,CAOAE,sBACG,OAAO,IACV,CAUAtlH,QAAQrkB,GAEL,IAAI4pI,EAAU/rI,KAAKgsI,kBACfhkI,EAAQ+jI,EAAQ/jI,QAEhBikI,EAAkBjsI,KAAKksI,gBASvBC,EAAkB,CAAC,EAKvB,GAFAnsI,KAAKupI,oBAAoB,CAAC,EAAG4C,IAEzBA,EAAgBC,WAcb,CAEJ,IAAIC,EAAuBN,EAAQh+H,UAChCk+H,EAAgB7lI,SAAS6B,YAG5B,OAAKokI,GAGLF,EAAgBE,EAAqBvlI,YAAc3E,EAAQ0H,KAAKjJ,GAGzDoH,EAAMsgE,OAAO6jE,IALV18H,QAAQkH,OAAO,4BAM5B,CA3BgC,CAE7B,IAAI01H,EAAuBN,EAAQh+H,UAChCk+H,EAAgB7lI,SAAS6B,YAG5B,IAAKokI,EACF,OAAO58H,QAAQkH,OAAO,6BAEzBw1H,EAAgBC,WAAWnoI,SAAS2L,IACjCA,EAAEy8H,EAAqBvlI,YAAc3E,EAAQ0H,KAAKjJ,GAE3CoH,EAAMsgE,OAAO14D,KAE1B,CAcH,CAOA4xH,aAOG,IAAIp7H,EAAWtG,MAAM0hI,aAKrB,cAFOp7H,EAASkmI,YAETlmI,CACV,mBC1HH,MAAMmmI,EAAgD,EAAQ,OAI9D9sI,EAAOC,QAAU,cAA4D,EAG1EC,YAAYC,EAAKC,EAAQ0oI,GACtBzoI,MAAMF,EAAKC,EAAQ0oI,GAEnBvoI,KAAKqE,IAAM,gDACXrE,KAAKoB,MATH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAS7B7V,CAAE,2BAEfC,KAAKwsI,uBAAwB,CAChC,CAUAhmH,QAAQrkB,GACL,IAAI+pI,EAAgBlsI,KAAKksI,gBAGzB,OAFAlsI,KAAKysI,UAAYtqI,EAAQ0H,KAElB,IAAI4F,SAAQ,CAACC,EAASiH,KAE1B,IAAIuV,EAAK/pB,EAAQ+H,KAAKghB,eACtB,IAAKgB,EAAI,OAAOxc,IAEhB,IAAI1H,EAAQkkB,EAAGlkB,MACf,IAAKA,EAAO,OAAO0H,IAEnB,IAAI8e,EAAc,CAAC,EACnBA,EAAY09G,EAAcplI,YAAc,GAExCkB,EACI0lE,OAAOvrE,EAAQ0H,KAAKjJ,GAAI4tB,GACxBha,KAAK9E,GACL+E,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,oEACHzH,KAAM1H,EAAQ0H,OAEjB8M,EAAOxO,EAAI,GACZ,GAEX,mBCnDH,MAAMukI,EAAgC,EAAQ,OAI9CjtI,EAAOC,QAAU,cAAmD,EASjEC,YAAYC,EAAKC,EAAQ0oI,GACtBzoI,MAAMF,EAAKC,EAAQ0oI,GAEnBvoI,KAAKqE,IAAM,uCACXrE,KAAKoB,MAfH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAe7B7V,CAAE,gBAClB,CAEI+pI,mBACD,OAAO,CACV,oBCtBH,MAAM4C,EAAgC,EAAQ,OACxChoF,EAAiB,EAAQ,OACzBwjF,EAAqB,EAAQ,OAEnC,IAAInoI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA4D,EAG1EC,YAAYC,EAAKC,EAAQ0oI,GACtBzoI,MAAMF,EAAKC,EAAQ0oI,GAEnBvoI,KAAKqE,IAAM,gDACXrE,KAAKoB,MAAQrB,EAAE,2BAEfC,KAAK6kC,WAAa,KAGlB7kC,KAAK2sI,gBAAkB,KAGvB3sI,KAAK4sI,cAAgB,GAErB5sI,KAAKsoI,SAAW,KAChBtoI,KAAKssI,YAAc,IACtB,CAgBAtnI,WAAWC,GACRjF,KAAKiqI,gBAAgBhlI,GACrBjF,KAAK6kC,WAAa5/B,EAGKjF,KAAK6sI,qBACX5oI,SAAS6oI,IACvB9sI,KAAK4sI,cAActoI,KAAK,CACrB1D,GAAIksI,EAAGlsI,GACP+B,MAAOmqI,EAAG1rI,OACX,GAER,CAOAyrI,qBACG,IAAIE,EAAaroF,EAAetgD,WAAWC,IAC3C,OAAIrE,KAAK6kC,YAAc7kC,KAAK6kC,WAAW99B,OAC7B/G,KAAK6kC,WAAW99B,QAAQC,GACrBA,EAAE3C,KAAO0oI,IAGZ,EAEb,CAOAf,kBACG,GAAIhsI,KAAK2sI,gBAAiB,CACvB,IAAIT,EAAgBlsI,KAAKksI,gBACzB,GAAIA,EACD,OAAOA,EAActlI,cAE3B,CAEA,OAAO,IACV,CAOAslI,gBACG,OAAOlsI,KAAK6sI,qBAAqB/jI,QAAQ9B,GAC/BA,EAAEpG,IAAMZ,KAAK2sI,kBACpB,EACN,CAOAxC,sBAAsBtqI,GAKnB,OAJuB,MAAnBG,KAAKgtI,aACNhtI,KAAKgtI,WAAahtI,KAAK2rI,oBAAoB9rI,IAGvCG,KAAKgtI,UACf,CAQArB,oBAAoB9rI,GACjB,IAAI2qG,EAAmB/mG,MAAMyH,MACzBq8H,EAAYljI,GAENA,EAAM,IAAMmmG,EAGlBtqG,EAAM,CACPC,UAAWonI,EAAS,yBACpB9/H,WAAY8/H,EAAS,iBACrB0F,qBAAsB1F,EAAS,gBAC/B2F,iBAAkB3F,EAAS,eAG1BlqC,EAAM,CACPz8F,GAAIV,EAAIC,UACRO,KAAM,SACNQ,IAAK,yBACLW,KAAM,CACH,CACGjB,GAAIV,EAAI+sI,qBACRvsI,KAAM,aACNU,MAAOrB,EAAE,4CACT+B,WAAY,IACZa,MAAO3C,KAAKksI,cACZ/pI,QAASnC,KAAK4sI,cACdxqI,GAAI,CACDC,SAAU,CAACw1E,EAAQC,KAChBt2E,EAAOgnI,aAAa3wD,EAAQC,EAAO,MAmB9Ct2E,EAAUxB,KAAKwB,OAAS,CACzB2rI,WAAazsI,IACViD,GAAGzD,EAAIC,WAAW8K,QAAQvK,EAAK,EAMlC0sI,uBAAwB,KACrB,IAAIpmH,EAAWrjB,GAAGzD,EAAIC,WAAW2K,gBAC7BuiI,EAAgB,GACpBrmH,EAAS/iB,SAASmP,IACfi6H,EAAc/oI,KAAK8O,EAAE,IAExBi6H,EAAcppI,SAASmP,IAEhBA,EAAEnR,OAAOrB,IAAMV,EAAI+sI,sBACpBtpI,GAAGzD,EAAIC,WAAWqL,WAAW4H,EAChC,GACD,EAGLo1H,aAAc,CAAC3wD,EAAQC,KACpBt2E,EAAO4rI,yBAEPptI,KAAK2sI,gBAAkB90D,EACvB,IAAIm0D,EAAkBhsI,KAAKgsI,kBAE3B,GAAIA,GAcD,GAZAhsI,KAAKstI,iBAAiBtB,GAEtBhsI,KAAKutI,gBAAkBztI,MAAMqqI,sBAC1BjqI,EAAIgtI,kBAGP1rI,EAAOqqI,iBAGPrqI,EAAO2rI,WAAWntI,KAAKutI,gBAAgB9sI,IACvCT,KAAKutI,gBAAgBjqI,OAEjBtD,KAAKwsI,sBAAuB,CAC7B,IAAIgB,EAAc7pI,GAAG3D,KAAKutI,gBAAgB9sI,GAAGG,IACzC4sI,IACDA,EAAYpoI,UACZooI,EAAY7oI,OAElB,OAEA3E,KAAK+B,GAAGqG,OAAO2sB,QAAQ,IAAIzsB,MAAM,6BAA8B,CAC5DuxB,QAAS75B,KAAK2sI,iBAEpB,EAGHd,eAAgB,KAab,IAAI4B,EAAcztI,KAAK8rI,sBAEvB2B,EAAYttI,UAAUH,KAAKJ,IAAKI,KAAKH,QACrC2B,EAAO2rI,WAAWM,EAAYhtI,IAC9BgtI,EAAYnqI,KAAK,CAAC,EAAE,EAKvBquD,aAAevrD,IAMZzC,GAAGzD,EAAI+sI,sBAAsBpoI,SAASuB,EAASumI,iBAE3C3sI,KAAKsoI,UACNtoI,KAAKsoI,SAASzjI,SAAS7E,KAAKssI,aAG3BtsI,KAAKutI,iBACNvtI,KAAKutI,gBAAgB57E,aAAavrD,EACrC,EAGHo7H,WAAY,KAMT,IAAIp7H,EAAW,CAAEgtH,gBAAiB,IAUlC,OAPApzH,KAAK0tI,SAASzpI,SAAS0pI,IACpB,IAAIC,EAAcD,EAAGnM,aACjBoM,GACDxnI,EAASgtH,gBAAgB9uH,KAAKspI,EACjC,IAGIxnI,CAAQ,GAIrB,MAAO,CACJ3F,GAAI48F,EACJ/5F,KAjIS6vH,IAIT,GAHAA,EAAaA,GAAcnzH,KAAKmzH,WAG5BnzH,KAAK2sI,gBAAiB,CACvB,IAAI9zC,EAASl1F,GAAGzD,EAAI+sI,sBAChBp0C,GACDA,EAAOh0F,SAAS7E,KAAK2sI,gBAE3B,GAyHAh7E,aAAevrD,IACZ5E,EAAOmwD,aAAavrD,EAAS,EAEhCo7H,WAAY,IACFhgI,EAAOggI,aAEjBhgI,OAAQA,EAEd,CAQAsqI,sBACG,IAAK9rI,KAAKsoI,SAAU,CACjBtoI,KAAKsoI,SAAW,IAAIJ,EACjBnoI,EAAE,gCAGL,IAAIgsI,EAAU/rI,KAAKgsI,kBACfD,GAAS/rI,KAAKsoI,SAAStjI,WAAW+mI,EACzC,CACA,OAAO/rI,KAAKsoI,QACf,CAUA9hH,QAAQrkB,GACLnC,KAAKysI,UAAYtqI,EAAQ0H,KAGzB,IAAIkiI,EAAU/rI,KAAKgsI,kBACfhkI,EAAQ+jI,EAAQ/jI,QAEhBikI,EAAkBjsI,KAAKksI,gBAEvBhjG,EAAY,KAOZ2kG,EAAmB5zH,IAGJja,KAAK6kC,WAAW78B,QAE5Bg2B,cAAciuG,EAAgBnlI,WAAY3E,EAAQ0H,MAClD2K,MAAM6yE,IAGJ,GAAKA,GAAyB,GAAhBA,EAAMlhF,OAApB,CAQA,IAAIjG,EAAMmnF,EAAMl5E,KAAKkF,GACXA,EAAEzS,KAIZsoC,EAAY,CACTpgB,KAAM,MACN3H,MAAO,CACJ,CACG9c,IAAK0nI,EAAQz9G,KACbU,KAAM,KACNrsB,MAAOzC,KAOZiU,OAAOC,KAAKpU,KAAKssI,aAAanmI,OAAS,GACxC+iC,EAAU/nB,MAAM7c,KAAKtE,KAAKssI,aAG7BryH,GA3BA,MAFGA,GA6BC,IAENxF,MAAMwF,EAAG,EAIhB,OAAO,IAAIxK,SAAQ,CAACC,EAASiH,KAK1B,IAAIm3H,EAAW,CAAC1/H,EAAM6L,KACHja,KAAKupI,oBAAoB,CAAC,EAAGn7H,GAI1CpG,EACI0lE,OAAOt/D,EAAKxN,GAAIwN,GAChBoG,MAAK,KACHyF,GAAI,IAENxF,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,6EACHzH,KAAM1H,EAAQ0H,OAEjBoQ,EAAG9R,EAAI,IAbb8R,GAeH,EAKH4zH,GAAiB1lI,IACVA,EACDwO,EAAOxO,GAIQ,OAAd+gC,EAKDx5B,IAGA1H,EACIinB,QAAQ,CAAEL,MAAOsa,IACjB10B,MAAMvK,IACJ,IAAI8jI,EAAO,EAGP9jI,GAAQA,EAAKJ,OACdI,EAAOA,EAAKJ,MAIfI,EAAKhG,SAASmK,IACX0/H,EAAS1/H,GAAOjG,IACb,GAAIA,EACD,OAAOwO,EAAOxO,KAEjB4lI,GACY9jI,EAAK9D,QAEduJ,GACH,GACD,IAIc,GAAfzF,EAAK9D,QACNuJ,GACH,IAEF+E,MAAMkC,EACb,GACD,GAER,CAOAg7C,aAAavrD,GACVA,EAAWA,GAAY,CAAC,EAExBpG,KAAK2sI,gBAAkBvmI,EAASumI,iBAAmB,KACnD3sI,KAAKssI,YAAclmI,EAASkmI,aAAe,CAAC,EAE5CxsI,MAAM6xD,aAAavrD,GAGfpG,KAAKgtI,YACNhtI,KAAKwB,OAAOmwD,aAAavrD,EAE/B,CAOAo7H,aAQG,IAAIp7H,EAAWtG,MAAM0hI,aAErBp7H,EAASumI,gBAAkB3sI,KAAK2sI,gBAEhC,IAAIqB,EAAS,KAmBb,OAlBIhuI,KAAKsoI,WACN0F,EAAShuI,KAAKsoI,SAASr8H,WACnBkB,MAAMC,QAAQ4gI,KACfA,EAASA,EAAO,IAIfA,IACDA,EAAOllH,KAAOklH,EAAOllH,MAAQ,QAGnC1iB,EAASkmI,YAAc0B,EAGnBhuI,KAAKgtI,aACN5mI,EAAS+sH,WAAanzH,KAAKwB,OAAOggI,cAG9Bp7H,CACV,CAOAojI,iBACOxpI,KAAKsoI,UACNtoI,KAAKsoI,SAASzjI,SAAS7E,KAAKssI,YAElC,oBC7gBH,MAAM2B,EAAmB,EAAQ,OAIjCxuI,EAAOC,QAAU,cAAuD,EASrEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,2CACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,2BAEfC,KAAKuiH,cAAgB,KAErBviH,KAAK0tI,SAAW,EAInB,CAiCAvD,sBAAsBtqI,GAUnB,OATAG,KAAKq9F,IAAM,CACR58F,GAAI,CACDC,KAAM,SACNmB,KAAM,IAGTyB,KAAM,QAGFtD,KAAKq9F,GACf,CAKA72E,QAAQrkB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIzM,EAAO/H,EAAQ+H,KACnB,IAAKA,EAAM,OAEX,IAAIipE,EAAQjpE,EAAK0tD,YAAY91C,GAAyB,SAAnBA,EAAE1b,SAASxE,OAC9C,IAAKuxE,EAAO,OAQZ,IAAIywC,EAASjgH,GAAGwvE,EAAMvyE,IAClBgjH,GAAQA,EAAOj/G,OAGnBxC,EAAQ+H,KAAK8xF,WAAW,MAExBtsF,GAAS,GAEf,oBCjGH,MAAMu+H,EAAmB,EAAQ,OAIjCxuI,EAAOC,QAAU,cAA2D,EASzEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,+CACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,+BAEfC,KAAKuiH,cAAgB,KAErBviH,KAAK0tI,SAAW,EAInB,CAiCAvD,sBAAsBtqI,GACnB,IAAIK,EAAM,CACPoR,QAAS,GAAGzR,aAGfG,KAAKq9F,IAAM,CACR58F,GAAI,CACDG,GAAIV,EAAIoR,QACR5Q,KAAM,WAGNK,OAAQ,KAGXuC,KAAM,OAEN9B,OAAQA,EAERmwD,aAAewhE,IACZ3xH,EAAOmwD,aAAawhE,EAAW,EAElCqO,WAAY,IACFhgI,EAAOggI,cAIpB,IAAIhgI,EAAS,CACVmwD,aAAewhE,IACZA,EAAaA,GAAc,CAAC,EAE5BxvH,GAAGzD,EAAIoR,SAASzM,SAASsuH,EAAW7hH,SAAW,GAAG,EAGrDkwH,WAAY,KAEF,CACJlwH,QAAS3N,GAAGzD,EAAIoR,SAASrF,YAAc,MAKhD,OAAOjM,KAAKq9F,GACf,CAKA72E,QAAQrkB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIu3H,EAAiBluI,KAAKmzH,WAAW7hH,SAAW,GAEhD7N,MAAM6N,QAAQ,CACXjD,KAAM6/H,EACNtsI,KAAM,SAGT8N,GAAS,GAEf,CAKAiiD,aAAavrD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAM6xD,aAAavrD,GAGfpG,KAAKq9F,KAGNr9F,KAAKq9F,IAAI1rC,aAAavrD,EAAS+sH,WAErC,CAKAqO,aAMG,IAAIp7H,EAAWtG,MAAM0hI,aAIrB,OAFAp7H,EAAS+sH,WAAanzH,KAAKq9F,IAAImkC,aAExBp7H,CACV,mBCpJH,MAAM6nI,EAAmB,EAAQ,OAC3BvpF,EAAiB,EAAQ,OACzBypF,EAAe,EAAQ,OAE7B,IAAIpuI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAkD,EAShEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,sCACXrE,KAAKoB,MAAQrB,EAAE,uBAEfC,KAAK+pI,YAAc,KAEnB/pI,KAAK0tI,SAAW,EAInB,CAiCAvD,sBAAsBtqI,GACnB,IAAIK,EAAM,CACPgK,KAAM,GAAGrK,SACTszE,MAAO,GAAGtzE,UACVoK,KAAM,GAAGpK,cACTuuI,kBAAmB,GAAGvuI,sBACtBwuI,SAAU,GAAGxuI,aACbyR,QAAS,GAAGzR,aAGfG,KAAKq9F,IAAM,CACR58F,GAAI,CACDG,GAAIV,EAAIgK,KACRxJ,KAAM,OACNM,MAAO,IACP2xF,eAAgB,CACb7+B,cAAe,MACfhyD,WAAY,KAEfX,KAAM,CAEH,CACGH,MAAO,IACPa,KAAM,CACH,CACGnB,KAAM,OACNyG,KAAM,WACN/F,MAAOrB,EAAE,cAEZ,CACGW,KAAM,OACNyG,KAAM,YACN/F,MAAOrB,EAAE,cACTw4E,SAAU90E,MAAM0d,MAAMmtH,QACtBlsI,GAAI,CACDC,SAAU,SAAUw1E,EAAQC,GACrB93E,KAAKiM,aAAejM,KAAKu4E,WAC1B50E,GAAGzD,EAAIgK,MAAM8U,YACV,YACA,oBAGHrb,GAAGzD,EAAIgK,MAAM8U,YAAY,aAAa,EAE5C,IAGN,CACGpe,GAAIV,EAAIkuI,kBACR1tI,KAAM,YACNyG,KAAM,WACN/F,MAAOrB,EAAE,QACTmB,IAAK,eACLF,MAAO,IACPS,KAAM,CACHT,MAAO,IACPa,KAAM,CACH,CACGd,OAAQ,IAEX,CACGH,GAAIV,EAAImuI,SACRrtI,MAAO,IACPN,KAAM,SACNmB,KAAM,IAET,CACGnB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAOrB,EAAE,mBACTiB,MAAO,IACPO,MAAO,KACJC,EAAO+sI,YAAY,MAMlC,CACG7tI,KAAM,OACNyG,KAAM,UACN/F,MAAOrB,EAAE,YAEZ,CACGW,KAAM,WACNE,GAAIV,EAAIoR,QACRnK,KAAM,UACN/F,MAAOrB,EAAE,WACTiB,MAAO,IACPD,OAAQ,OAsBjB,CACGc,KAAM,CACH,CACGnB,KAAM,WACNkB,KAAM,SACNy/D,SAAU,UAEb,CACGzgE,GAAIV,EAAI+J,KACRvJ,KAAM,OACNM,MAAO,IACPE,IAAK,CAAE,mBAAoB,oBAC3BmgE,SAAU,SAAUvpD,EAAKixB,GACtB,OAAOvnC,EAAOgtI,cAAc12H,EAAKixB,EACpC,EACA3mC,GAAI,CACDgI,YAAa,SAAUxJ,EAAIyJ,EAAG9H,GAC3B,IAAIpC,EAAYH,KAAKgsB,QAAQprB,GAE7BY,EAAOitI,WAAWtuI,EACrB,QAQlBmD,KAAM,KACCtD,KAAK+pI,cACNpmI,GAAGzD,EAAI+J,MAAMsN,MACVvX,KAAK+pI,YAAYhjI,QAAQC,GAAMA,EAAEu7B,qBAEpC5+B,GAAGzD,EAAI+J,MAAMvF,WAGhBlD,EAAOktI,WAAW,EAGrBltI,OAAQA,EAERmwD,aAAewhE,IACZ3xH,EAAOmwD,aAAawhE,EAAW,EAElCqO,WAAY,IACFhgI,EAAOggI,cAIpB,IAAIhgI,EAAS,CACVmwD,aAAewhE,IACZA,EAAaA,GAAc,CAAC,EAE5BxvH,GAAGzD,EAAIgK,MAAM4hF,UAAUqnC,IAGNA,EAAWkb,UAAY,IAC7BpqI,SAAS2L,IACjBpO,EAAO+sI,WAAW,CACf3sI,KAAMgO,EAAEhO,KACR+sI,UAAW/+H,EAAE++H,UACbhsI,MAAOiN,EAAEjN,OACV,IAGLnB,EAAOktI,WAAW,EAGrBlN,WAAY,KACT,IAAIn6B,EAAW1jG,GAAGzD,EAAIgK,MAAMihF,aAAe,CAAC,EAGxCyjD,EAAa,GAiBjB,OAhBAjrI,GAAGzD,EAAImuI,UACHvjI,gBACA7G,SAASoG,IAEP,IACIskI,EAAYtkI,EAAE0rE,UAAU,CAAE5uE,KAAM,cAAe8E,WAC/CtJ,EAAQ0H,EAAE0rE,UAAU,CAAE5uE,KAAMwnI,IAAa1iI,WAE7C2iI,EAAWtqI,KAAK,CACb1C,KALQ,KAMR+sI,UAAWA,EACXhsI,MAAOA,GACR,IAID,CACJksI,SAAUxnC,EAAmB,SAC7BynC,UAAWznC,EAAoB,UAC/BgnC,SAAUO,EACVrlF,QAAS89C,EAAkB,QAC3B/1F,QAAS+1F,EAAkB,QAC7B,EAYJ0nC,gBAAkB3oI,IAGR,CACJpF,MAAO,IACPG,KAAM,CAcH,CACGT,KAAM,aACNyG,KAAM,YACNxE,OArBTyD,EAAWA,GAAY,CAAC,GAqBCuoI,WAAa,QAC7B3tI,MAAO,IACPmB,QAAS,CACN,CACGvB,GAAI,QACJ+B,MAAO5C,EAAE,2BAEZ,CAAEa,GAAI,QAAS+B,MAAO5C,EAAE,mBACxB,CAAEa,GAAI,QAAS+B,MAAO5C,EAAE,gBAE3BqC,GAAI,CACDC,SAAU,SAAUw1E,EAAQC,GACzBt2E,EAAOwtI,gBAAgBn3D,EAAQ73E,KAClC,IAGN,CACGgB,MAAO,IACPmG,KAAM,aACN8nI,aAAc7oI,EAASuoI,WAAa,QACpCxtI,KAAM,CACH,CACGT,KAAM,OACNyG,KAAM,QACNqnC,MAAO,QACP7rC,MACyB,SAAtByD,EAASuoI,UACJvoI,EAASzD,MACT,GACR41E,SAAU90E,MAAM0d,MAAMmtH,QACtBttI,MAAO,IACPoB,GAAI,CACDC,SAAU,SAAUw1E,EAAQC,GACzBt2E,EAAO0tI,iBACV,IAGN,CACGxuI,KAAM,aACNyG,KAAM,QACNqnC,MAAO,QACP7rC,MACyB,SAAtByD,EAASuoI,UACJvoI,EAASzD,MACT,GACR3B,MAAO,IACPg3E,QAAS,CACN51E,GAAI,CACD61E,aAAc,WACXj4E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAO2tI,sBAGnB,CACGzuI,KAAM,aACNyG,KAAM,QACNqnC,MAAO,QACP7rC,MACyB,SAAtByD,EAASuoI,UACJvoI,EAASzD,MACT,GACR3B,MAAO,IACPg3E,QAAS,CACN51E,GAAI,CACD61E,aAAc,WACXj4E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAO4tI,mBAKzB,CACG1uI,KAAM,SACNQ,IAAK,eACLU,KAAM,OACN2J,KAAM,gBACNvK,MAAO,GACPO,MAAO,WACJ,IAAI8tI,EAAUrvI,KAAKyL,gBAEnBjK,EAAO8tI,cAAcD,EACxB,MAMZd,WAAanoI,IACV,IAAIqqB,EAAQ9sB,GAAGzD,EAAImuI,UAAUvjI,gBAAgB3E,OAE7CxC,GAAGzD,EAAImuI,UAAUpjI,QAAQzJ,EAAOutI,gBAAgB3oI,GAAWqqB,GAE3DjvB,EAAOktI,WAAW,EAGrBM,gBAAiB,CAACptI,EAAMw4F,KACrB,IACIm1C,EADan1C,EAAQ3uF,gBACIsqE,UAAU,CAAE5uE,KAAM,eAE/C,OAAQvF,GACL,IAAK,QACF2tI,EAAYt2D,UAAU,SACtB,MACH,IAAK,QACFs2D,EAAYt2D,UAAU,SACtB,MACH,QACGs2D,EAAYt2D,UAAU,SAI5Bt1E,GAAGzD,EAAIkuI,mBAAmBx/D,QAAQ,EAGrC0gE,cAAgBD,IACb1rI,GAAGzD,EAAImuI,UAAU7iI,WAAW6jI,GAE5B7tI,EAAOktI,WAAW,EAGrBQ,gBAAiB,KACd,IAAIM,GAAa,EAEjB7rI,GAAGzD,EAAImuI,UACHvjI,gBACA7G,SAASmP,IACP,IAAIq8H,EAAYr8H,EAAE2iE,UAAU,CAAE5uE,KAAM,UAChCsoI,EAAUxjI,aAAewjI,EAAUl3D,aACpCi3D,GAAa,EAChB,IAGFA,EAAY7rI,GAAGzD,EAAIgK,MAAM8U,YAAY,YAAY,GAChDrb,GAAGzD,EAAIgK,MAAM8U,YAAY,WAAY,mBAAmB,EAGhEwvH,cAAe,CAAC5oI,EAAOmjC,IACb,mBAAmBnjC,EAAM2F,gDAAgD3F,EAAMxE,QAGzF+tI,kBAAmB,KAChB,IAAIO,EAAiB,GACjBvtI,EAAU,GAEVwtI,EAAe,CAACxiD,EAASyiD,KAC1B,IAAIC,EAAc1iD,EACdpmF,QAAQC,GAAMA,aAAamnI,IAC3BhgI,KAAKnH,IACH,IAAI8oI,EAAQ,GACTC,EAAW,GAUd,OARIH,GACDE,EAAQ,GAAGF,EAAMhvI,MAAMoG,EAAE2gB,eACzBooH,EAAW,GAAG5iD,EAAQ/rF,SAAS4F,EAAE5F,UAAUwuI,EAAMxuI,WAEjD0uI,EAAQ,IAAI9oI,EAAE2gB,eACdooH,EAAW,GAAG5iD,EAAQ/rF,SAAS4F,EAAE5F,SAG7B,CACJR,GAAIkvI,EACJntI,MAAOotI,EACT,IAKP5tI,EAAUA,EAAQ2kB,OAAO+oH,EAAY,EAsBxC,OAnBAF,EAAa3vI,KAAK+pI,aAElB/pI,KAAK+pI,YAAYjkH,gBAAgB7hB,SAAS+C,IAMpC0oI,EAAeriI,QAAQrG,EAAEpG,KAAO,IAKnC8uI,EAAeprI,KAAK0C,EAAEpG,IAGtB+uI,EAAa3oI,EAAEJ,eAAgBI,GAAE,IAG7B7E,CAAO,EAGjBitI,aAAc,KACX,IAAIjtI,EAAU,GAyBd,OAtBgBnC,KAAKuoI,YAAYxmI,GAAGqjB,iBAAiB8G,IAClD,IAAIpU,EAAMoU,EAAGjB,WACb,OACGiB,EAAG9lB,SAAS4iB,SACZlR,GACAA,EAAI/Q,QAAQC,GAAe,SAATA,EAAE3C,MAAgB8B,OAAS,CAC/C,IAGMlC,SAAS8tB,IACZA,EAAG9G,YACJ8G,EAAG9G,WACClkB,QAAQC,GAAe,SAATA,EAAE3C,MAChBJ,SAAS+C,IACP7E,EAAQmC,KAAK,CACV1D,GAAI,GAAGmxB,EAAGnxB,MAAMoG,EAAEpG,KAClB+B,MAAO,GAAGovB,EAAG3wB,SAAS4F,EAAE5F,SACzB,GAEX,IAGIe,CAAO,EAGjBssI,WAAa7oI,IACV,IAAIoqI,EAAYvsI,MAAMwsI,UAAUC,WAC5Bl6H,EAAM,GAGkB,QAAzBg6H,EAAU/tI,OAAOvB,MACQ,YAAzBsvI,EAAU/tI,OAAOvB,OAEbsvI,EAAU/jI,WAAU+J,EAAMg6H,EAAU/jI,YAEpC+jI,EAAUnrI,UACXmrI,EAAUnrI,SAAS,GAAGmR,IAAMpQ,EAAMxE,SAErCqC,MAAMwsI,UAAUE,SAASH,GAC5B,EAGHtB,UAAW,KACR/qI,GAAGzD,EAAIkuI,mBAAmBx/D,SAC1BjrE,GAAGzD,EAAIoR,SAASs9D,QAAQ,GAI9B,OAAO5uE,KAAKq9F,GACf,CAQA72E,QAAQrkB,GAEL,IAAKsB,MAAM0d,MAAMmtH,QAAQtuI,KAAKmzH,WAAW2b,WACtC,OAAOr/H,QAAQC,UAGlB,IAAIk/H,EAAa,GAEjB,OAAOn/H,QAAQC,UACX8E,MAAK,IAEI,IAAI/E,SAAQ,CAACC,EAASiH,KAC1B,IAAIyvC,EAAQ,GAEZpmD,KAAKmzH,WAAWkb,SAASpqI,SAASmsI,IAC/BhqF,EAAM9hD,KACH,IAAImL,SAAQ,CAACib,EAAMviB,KAIhB,GAAqB,SAAjBioI,EAAIzB,UAAsB,CAC3B,IAAI0B,EAAgBD,EAAIztI,MAAM6kB,MAAM,KAAK,GACrC8oH,EAAatwI,KAAK+pI,YAAYhlI,YAAYsiB,WAC3CgpH,GAEH,GAAIC,EAAY,CAEb,GAAIA,EAAWrrI,OAAOrE,IAAMZ,KAAK+pI,YAAYnpI,GAAI,CAC9C,IAAI2vI,EACDpuI,EAAQ0H,KAAKymI,EAAWxpI,YACvBypI,IACD3B,EAAaA,EAAW9nH,OAAOypH,GACrC,KAEK,CACF,IAAIC,EAAcJ,EAAIztI,MAAM6kB,MAAM,KAAK,GACtBxnB,KAAK+pI,YAAYhjI,QAC9BC,GACEA,aAAa09C,GACb19C,EAAEpG,IAAM4vI,IAEHvsI,SAAS+C,IACjB,IAAIo7H,EACDjgI,EAAQ0H,KAAK7C,EAAE+oB,iBAAmB,GAIlCqyG,IACCj1H,MAAMC,QAAQg1H,KAEfA,EAAa,CAACA,IAGjBA,EAAWn+H,SAAS2rB,IACjB,IAAI3f,EAAQ2f,EAAE0gH,EAAWxpI,YACrBmJ,IACD2+H,EAAaA,EAAW9nH,OAAO7W,GAAM,GACzC,GAER,CAEAya,GACH,MACGA,GAEN,MAGK,GAAqB,SAAjB0lH,EAAIzB,UAAsB,CAChC,IAAI8B,EAAiBL,EAAIztI,MACzB,IAAK8tI,EAAgB,OAAO/lH,IAE5B,IAAIwzF,EAAOuyB,EAAejpH,MAAM,KAAK,GACjC9c,EAAU+lI,EAAejpH,MAAM,KAAK,GAEpCkpH,EAAU1wI,KAAKuoI,YAAYxmI,GAAGspB,mBAC/B6yF,GAEH,IAAKwyB,EAAS,OAAOhmH,IAErB,IAAI9kB,EAAQ8qI,EAAQzlH,WAAWld,UAAUrD,GACzC,IAAK9E,EAAO,OAAO8kB,IAGnBgmH,EAAQ/9G,UAAU1uB,SAAS4F,IACxB,IAAI8mI,EAAY9mI,EAAKjE,EAAMkB,YACvB6pI,GAAW/B,EAAWtqI,KAAKqsI,EAAU,IAG5CjmH,GACH,MAIGkkH,EAAWtqI,KAAK8rI,EAAIztI,OACpB+nB,GACH,IAEL,IAGJjb,QAAQ4R,IAAI+kC,GAAO3xC,MAAMkC,GAAQnC,KAAK9E,EAAQ,MAGnD8E,MAAK,IAEI,IAAI/E,SAAQ,CAACC,EAASiH,KAG1B,KAFAi4H,EAAa5uI,KAAK+B,GAAGygB,KAAKosH,GAAY9lI,QAAQ8G,GAAMA,MAEjCg/H,EAAWzoI,OAAS,EAAG,OAAOuJ,IAGjD,IAAIm/H,EAAW7uI,KAAKmzH,WAAW0b,SAC5BtlF,EAAUvpD,KAAKmzH,WAAW5pE,QAC1Bj4C,EAAUtR,KAAKmzH,WAAW7hH,QAE7BtR,KAAK+pI,YACDhjI,QAAQC,GAAMA,EAAEu7B,oBAChBt+B,SAAS+C,IACP,IAAIq6D,EAAW,IAAIj/C,OAAO,IAAIpb,EAAE5F,SAAU,KACvCyI,EAAO7C,EAAEsZ,OAAOne,EAAQ0H,MAE3BglI,EAAWA,EAAS77H,QAAQquD,EAAUx3D,GACtC0/C,EAAUA,EAAQv2C,QAAQquD,EAAUx3D,GACpCyH,EAAUA,EAAQ0B,QAAQquD,EAAUx3D,EAAK,IAI/C7J,KAAK+B,GAAGsN,QAAQgB,KAAK,CAClBC,IAAK,qBACLsF,OAAQ,CACLi5H,SAAUA,EACVC,UAAW9uI,KAAKmzH,WAAW2b,UAC3BvlF,QAASA,EACTj4C,QAASA,EACTs9H,WAAY5uI,KAAK+B,GAAGygB,KAAKosH,MAG3Bp6H,MAAK,KACH9E,GAAS,IAEX+E,MAAMkC,EAAO,KAG7B,CAKAg7C,aAAavrD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAM6xD,aAAavrD,GAGfpG,KAAKq9F,KAGNr9F,KAAKq9F,IAAI1rC,aAAavrD,EAAS+sH,WAErC,CAKAqO,aAMG,IAAIp7H,EAAWtG,MAAM0hI,aAIrB,OAFAp7H,EAAS+sH,WAAanzH,KAAKq9F,IAAImkC,aAExBp7H,CACV,oBCjuBH,MAAM6nI,EAAmB,EAAQ,OAIjCxuI,EAAOC,QAAU,cAAsD,EASpEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,0CACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,gCAEfC,KAAKuiH,cAAgB,KAErBviH,KAAK0tI,SAAW,EAInB,CAiCAvD,sBAAsBtqI,GACnB,IAAIK,EAAM,CACP0wI,aAAc,GAAG/wI,kBAGpBG,KAAKq9F,IAAM,CACR58F,GAAI,CAAEG,GAAIV,EAAI0wI,aAAclwI,KAAM,aAAcyB,QAAS,IAEzDmB,KAAM,KACH9B,EAAO8+E,iBAAiB,EAG3B9+E,OAAQA,EAERmwD,aAAewhE,IACZ3xH,EAAOmwD,aAAawhE,EAAW,EAElCqO,WAAY,IACFhgI,EAAOggI,cAIpB,IAAIhgI,EAAS,CACV8+E,gBAAiB,KAEd,IAAIuwD,EAAe,GAQfC,EAAU,CAACC,EAAWC,EAAQpvI,EAAMohE,KACrCguE,EAASA,GAAU,GAEnB,IAAIzlI,EAAO,eACC,OAAR3J,IAAe2J,EAAO,yBAE1B,IAAIqsD,EAAam5E,EAAUn5E,aAE3Bi5E,EAAavsI,KAAK,CACf1D,GAAImwI,EAAUnwI,GACd+B,MAAOquI,EAASD,EAAU3vI,MAC1BQ,KAAMA,EACNohE,OAAQpL,EAAaA,EAAWh3D,GAAK,KAErC2K,KAAMA,IAGG,QAAR3J,GAA0B,OAARA,IACfmvI,EAAU/rH,OACX+rH,EAAU/rH,QAAQ/gB,SAAQ,SAAU6d,GACjCgvH,EAAQhvH,EAAGkvH,EAAS,IAAK,OAC5B,IAICD,EAAUtqH,OACXsqH,EACItqH,OAAOrT,GAAe,OAATA,EAAE/O,MACfJ,SAASm2G,IAEPA,EAAI3zF,QAAQxiB,SAAS8/D,IAClB+sE,EACG/sE,EACAitE,EAAS,IACT,MACAD,EAAUnwI,GACZ,GACF,IAGd,EAGHkwI,EAAQ9wI,KAAKuoI,YAAYxwE,WAAY,GAAI,QAEzCp0D,GAAGzD,EAAI0wI,cAAcnsI,OAAO,UAAWosI,GACvCltI,GAAGzD,EAAI0wI,cAAclsI,SAAS,EAGjCitD,aAAewhE,IACZA,EAAaA,GAAc,CAAC,EAE5BxvH,GAAGzD,EAAI0wI,cAAc/rI,SAClBsuH,EAAW9vD,OAAS8vD,EAAWnwD,QAAU,GAC3C,EAGJw+D,WAAY,KACT,IAAI1zH,EAAS,CAAC,EAEVmjI,EAAattI,GAAGzD,EAAI0wI,cAAc3kI,WAClC6zH,EAAen8H,GAAGzD,EAAI0wI,cACtB/2D,WACAP,UACAr3E,OAAO4H,KAAKf,QAAQo1C,GAAQA,EAAIt9C,IAAMqwI,IAAY,GAiBtD,OAhBInR,IAGEhyH,EAFsB,OAArBgyH,EAAal+H,KAEL,CACNohE,OAAQ88D,EAAa98D,OACrBK,MAAO4tE,GAID,CACNjuE,OAAQiuE,IAMVnjI,CAAM,GAInB,OAAO9N,KAAKq9F,GACf,CAKA72E,QAAQrkB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAE1B,GAAI3W,KAAKmzH,WAAWnwD,SACjB7gE,EAAQ+H,KAAK8xF,WAAWh8F,KAAKmzH,WAAWnwD,QAEpChjE,KAAKmzH,WAAW9vD,OAAO,CACxB,IAAI6tE,EAAU/uI,EAAQ+H,KAAKnF,YAAYigB,OACnClD,GAAMA,EAAElhB,IAAMZ,KAAKmzH,WAAWnwD,SAC/B,GACD,GACF,IAAKkuE,EAAS,OAAOxhI,IAGrB,IAAIq0D,EAAUmtE,EAAQzqH,OAClBrT,GAAMA,EAAExS,IAAMZ,KAAKmzH,WAAW9vD,QAC/B,GACD,GACF,IAAKU,EAAS,OAAOr0D,IAErB,IAAI0qG,EAAMr2C,EAAQhvD,OAClB,IAAKqlG,EAAK,OAAO1qG,IAEjB,IAAIsrH,EAAgBhiG,IACjB,IAAKA,EAAQjkB,OAAQ,OAAO,EAC5B,IAAIqmH,EAAapiG,EAAQjkB,OACzB,IAAKqmH,EAAWrmH,OAAQ,OAAO,EAC/BqmH,EAAWrmH,OAAOvF,KAAK,YAAa4rH,EAAWx6H,IAC/Co6H,EAAaI,EAAWrmH,OAAO,EAGlCimH,EAAa5gB,GACb,IAAI6gB,EAASC,aAAY,WAClBv3H,GAAGogE,EAAQnjE,KAAO+C,GAAGogE,EAAQnjE,IAAI26E,YAClC4/C,cAAcF,GAGjB7gB,EAAI5qG,KAAK,YAAau0D,EAAQnjE,GACjC,GAAG,IACN,CAGH8O,GAAS,GAEf,CAKAiiD,aAAavrD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAM6xD,aAAavrD,GAGfpG,KAAKq9F,KAGNr9F,KAAKq9F,IAAI1rC,aAAavrD,EAAS+sH,WAErC,CAKAqO,aAMG,IAAIp7H,EAAWtG,MAAM0hI,aAIrB,OAFAp7H,EAAS+sH,WAAanzH,KAAKq9F,IAAImkC,aAExBp7H,CACV,oBClQH,MAAM6nI,EAAmB,EAAQ,OAIjCxuI,EAAOC,QAAU,cAAuD,EASrEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,2CACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,+BAEfC,KAAKuiH,cAAgB,KAErBviH,KAAK0tI,SAAW,EAInB,CAiCAvD,sBAAsBtqI,GACnBG,KAAKq9F,IAAM,CACR58F,GAAI,CACDC,KAAM,QACNU,MAAOpB,KAAKoB,OAGfkC,KAAM,OAEN9B,OAAQA,GAGX,IAAIA,EAAS,CAAC,EAEd,OAAOxB,KAAKq9F,GACf,CAKA72E,QAAQrkB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IACIihD,EADcz1D,EAAQ+H,KAAK0tD,aACFA,aAG7Bz1D,EAAQ+H,KAAK8xF,WAAWpkC,EAAWh3D,IAEnC8O,GAAS,GAEf,oBCzFH,MAAMu+H,EAAmB,EAAQ,OAIjCxuI,EAAOC,QAAU,cAAoD,EASlEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,wCACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,mCAEfC,KAAKuiH,cAAgB,KAErBviH,KAAK0tI,SAAW,EAInB,CAiCAvD,sBAAsBtqI,GACnB,IAAIK,EAAM,CACPixI,QAAS,GAAGtxI,aAGfG,KAAKq9F,IAAM,CACR58F,GAAI,CACDG,GAAIV,EAAIixI,QACRzwI,KAAM,QAGT4C,KAAM,OAEN9B,OAAQA,EAERmwD,aAAewhE,IACZ3xH,EAAOmwD,aAAawhE,EAAW,EAElCqO,WAAY,IACFhgI,EAAOggI,cAIpB,IAAIhgI,EAAS,CACVmwD,aAAewhE,IACZA,EAAaA,GAAc,CAAC,EAE5BxvH,GAAGzD,EAAIixI,SAAStsI,SAASsuH,EAAWge,SAAW,GAAG,EAGrD3P,WAAY,KAEF,CACJ2P,QAASxtI,GAAGzD,EAAIixI,SAASllI,YAAc,MAKhD,OAAOjM,KAAKq9F,GACf,CAKA72E,QAAQrkB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAEtB3W,KAAKmzH,WAAWge,SACjBn4H,OAAO2mG,KACJ,UAAU3/G,KAAKmzH,WAAWge,QAAQn+H,QAAQ,UAAW,MACrD,UAGNtD,GAAS,GAEf,CAKAiiD,aAAavrD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAM6xD,aAAavrD,GAGfpG,KAAKq9F,KAGNr9F,KAAKq9F,IAAI1rC,aAAavrD,EAAS+sH,WAErC,CAKAqO,aAMG,IAAIp7H,EAAWtG,MAAM0hI,aAIrB,OAFAp7H,EAAS+sH,WAAanzH,KAAKq9F,IAAImkC,aAExBp7H,CACV,oBCjJH,MAAM6nI,EAAmB,EAAQ,OAEjC,IAAIluI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhD,IAAIw7H,EAAwC,CACzCvoH,iBAAkB,CAEfC,KAAM,MACN3H,MAAO,KAIb1hB,EAAOC,QAAU,cAA4CuuI,EAO1DtuI,YAAYC,EAAKC,EAAQ0oI,GACtBzoI,MAAMF,EAAKC,EAAQ0oI,GAEnBvoI,KAAKqE,IAAM,uCACXrE,KAAKoB,MAAQrB,EAAE,iBAEfC,KAAKqxI,aAAe,KAEpBrxI,KAAK0tI,SAAW,GAKhB1tI,KAAKsxI,WAAa,CAAC,CACtB,CAKAnH,sBAAsBtqI,GAKnB,OAJuB,MAAnBG,KAAKuxI,aACNvxI,KAAKuxI,WAAavxI,KAAKwxI,iBAAiB3xI,IAGpCG,KAAKuxI,UACf,CAKAC,iBAAiB3xI,GACd,IAAI2qG,EAAmB/mG,MAAMyH,MAKzBhL,EAAM,CACPuH,YAAqB,aAHd,GAAG5H,gBAAiB2qG,MAiB1BhpG,EAAS,CACViwI,aAAc,KAEX,IAAIC,EAAalwI,EAAOmwI,UACxB,GAAKD,EAAL,CAGA,IAEIE,EAFOF,EAAW5mI,gBAEJhC,QAAQ8G,GAChBA,EAAEmmE,WAAU,SAAUr1E,GAC1B,MAA2B,SAApBA,EAAKuB,OAAOkF,OAAoBzG,EAAKuL,UAC/C,MACA,GACE2lI,GAELF,EAAWlmI,WAAWomI,EAZC,CAYM,EAMhCA,OAAS/nI,IAEN,IAAI6nI,EAAalwI,EAAOmwI,UACxB,GAAKD,EAAL,CAGA,IAAI7vI,EAAO6vI,EAAW5mI,gBACtB,KACW,MAARjB,GACAhI,EAAKiH,QAAQ8G,GACHA,EAAEmmE,WAAU,SAAUr1E,GAC1B,MAA2B,SAApBA,EAAKuB,OAAOkF,OAAoBzG,EAAKuL,UAC/C,MACA9F,OAAS,GANf,CAWA,IAAI+Y,EAAMlf,KAAK6xI,gBAAgBhyI,GAG/B6xI,EAAWzmI,QAAQiU,EAAIze,IAGvBye,EAAI5b,KAAK,CACNwuI,MAAO,KAEJtwI,EAAOowI,QAAQ,EAElB9I,SAAWj7G,IAERrsB,EAAOuwI,OAAOlkH,EAAM,EAEvBhkB,KAAMA,IAIT7J,KAAK0tI,SAASppI,KAAK4a,EAtBV,CAZc,CAkCA,EAG1B6yH,OAASlkH,IAEN7tB,KAAK0tI,SAASzpI,SAAQ,CAAC2L,EAAG7D,KACnB6D,EAAEnP,GAAGG,IAAMitB,GAAO7tB,KAAK0tI,SAASvhI,OAAOJ,EAAO,EAAE,IAIvD,IAAI2lI,EAAalwI,EAAOmwI,UACnBD,GAGLA,EAAWlmI,WAAW7H,GAAGkqB,GAAO,EAGnC+zF,UAAW,KACR,IAAI8vB,EAAalwI,EAAOmwI,UACxB,GAAKD,EAAL,CAEA,IAAIllD,EAAWklD,EAAW5mI,gBAQtBk+H,EAAgB,GACpBx8C,EAASvoF,SAASV,IACfylI,EAAc1kI,KAAKf,EAAE,IAExBylI,EAAc/kI,SAASV,IACpBmuI,EAAWlmI,WAAWjI,EAAE,IAI3BvD,KAAK0tI,SAAW,EAnBO,CAmBL,EAGrBiE,QAAS,IACWhuI,GAAGzD,EAAIuH,cAGrBzH,KAAKuoI,YAAYxmI,GAAGqG,OAAOC,UACxB,IAAIC,MAAM,iBACV,CACGgH,QACG,mEACH1O,GAAIV,EAAIuH,aAGP,MAMbqkF,UAAYqnC,KAOTA,EAAaA,GAAc,CAAC,GACjBC,gBAAkBD,EAAWC,iBAAmB,GAG1C5xH,EAAOmwI,YAIxBnwI,EAAOogH,YAGHuR,EAAWC,gBAAgBjtH,OAAS,GACrCgtH,EAAWC,gBAAgBnvH,SAAS2L,IACjCpO,EAAOowI,OAAOhiI,EAAE,IAQtBpO,EAAOiwI,eAGPjwI,EAAOowI,SAAQ,EAGlBjgF,aAAevrD,IAEZ,IAAI4rI,EAAa5rI,EAAS+sH,YAAc/sH,EAExC5E,EAAOsqF,UAAUkmD,EAAW,EAG/BxQ,WAAY,KAMT,IAAIp7H,EAAW,CAAEgtH,gBAAiB,IAUlC,OAPApzH,KAAK0tI,SAASzpI,SAAS0pI,IACFA,EAAGnM,cAElBp7H,EAASgtH,gBAAgB9uH,KAAKqpI,EAAGnM,aACpC,IAGIp7H,CAAQ,GAIrB,MAAO,CACJ3F,GA/LO,CACPC,KAAM,OACNE,GAAIV,EAAIuH,WACRyB,SAAU,IA6LV5F,KA1LS6vH,IACTA,EAAaA,GAAcnzH,KAAKmzH,WAChC3xH,EAAOsqF,UAAUqnC,EAAW,EAyL5BxhE,aAAevrD,IACZ5E,EAAOmwD,aAAavrD,EAAS,EAEhCo7H,WAAY,IACFhgI,EAAOggI,aAEjBhgI,OAAQA,EAEd,CAEAqwI,gBAAgBhyI,GACb,IAmBIoyI,EAnBAznC,EAAmB/mG,MAAMyH,MACzBq8H,EAAYljI,GAENA,EAAM,IAAMmmG,EAGlBtqG,EAAM,CACPgf,IAAKqoH,EAAS,OACd9/H,WAAY8/H,EAAS,iBACrB3hI,MAAO2hI,EAAS,SAChB5kI,MAAO4kI,EAAS,SAChB2K,SAAU3K,EAAS,YACnB4K,SAAU5K,EAAS,YACnB6K,WAAY7K,EAAS,cACrBnH,UAAWmH,EAAS,aACpB8K,UAAW9K,EAAS,OACpB+K,aAAc/K,EAAS,WAKtB/lI,EAAS,CACVgC,UAAW,CACRsuI,MAAO,OACPhJ,SAAU,QAGbyJ,cAAe,KACZ5uI,GAAGzD,EAAIgf,KAAKpU,gBAAgB,GAAGA,gBAAgB,GAAGnG,OAClDhB,GAAGzD,EAAIgf,KAAKpU,gBAAgB,GAAGA,gBAAgB,GAAGlG,MAAM,EAG3DoG,aAAewnI,IACZ,IAAIrwI,EAAU,GACd,GAAInC,KAAKqxI,eACNlvI,GAAWnC,KAAKqxI,aAAatqI,UAAY,IAAIoH,KAAKnH,IACxC,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UA6BXoxI,GAAc,CAEf,IAAIC,EAAW,CAAC,EAChBzyI,KAAK0tI,SAASzpI,SAASib,IACpB,IAAIg8E,EAAUv3F,GAAGub,EAAIze,GAAGG,IACxB,GAAIs6F,EAAS,CACV,IAAIt1F,EAAQs1F,EACRpwF,gBAAgB,GAChBA,gBAAgB,GACpB2nI,EAAS7sI,EAAMqG,aAAc,CAChC,KAEH9J,EAAUA,EAAQ2G,QAAQuc,IACfotH,EAASptH,EAAEzkB,KAEzB,CAEH,OAAOuB,CAAO,EAGjBoD,QAAS,KACN,IAAIgC,EAAYvH,KAAKuoI,YAAYxmI,GAAG8b,WAAWtW,YAC3C6sD,EAAazwD,GAAGzD,EAAIgf,KAAKpU,gBAAgB,GAAGA,gBAAgB,GAC5D4nI,EAAWt+E,EAAW3oD,gBAAgBA,gBAEtC7F,EAAQ5F,KAAK2yI,qBAAqBhvI,GAAGzD,EAAI0F,OAAOqG,YACpD,GAAIrG,EAAO,CACR,IAAIjD,EAAQiD,EAAMqG,SAASmoD,EAAY,CAAC,GAWpCt8C,EAAM,CAAC,EAsBX,OArBAA,EAAIlS,EAAMkB,YAAcnE,EAExBiD,EAAMwpB,YAAYtX,EAAKvQ,IAIX,IAAT5E,GACS,MAATA,GACCwK,MAAMC,QAAQzK,IAA0B,GAAhBA,EAAMwD,SAE/BoB,EAAUgW,SACP3X,EAAMkB,WACN/G,EAAE,wBAMR2yI,EAASpqC,kBACT/gG,EAAUE,WAAWirI,GAEdnrI,EAAUiW,MACpB,CAMG,IAAIo1H,EAAajvI,GAAGzD,EAAIgf,KACpBpU,gBAAgB,GAChBA,gBAAgB,GAKpB,OAJA8nI,EAAWnuI,OAAO,iBAAkB1E,EAAE,wBACtC6yI,EAAWnuI,OAAO,WAAW,GAC7BmuI,EAAWluI,WAEJ,CACV,EAGHyzE,YAAc06D,IACX,IAAIjtI,EAAQ5F,KAAK2yI,qBAAqBE,GACtC,GAAKjtI,EAAL,CAEA,IAIGktI,EAFAr3D,EAFkB71E,EAAM63D,gBACAhD,YAAY70D,EAAMX,OAAOF,aACrB5E,UAAUH,KAAKJ,KAC3CmzI,EAAiBt3D,EAAmBh7E,GAGvCsyI,EAAenyI,GAAKV,EAAIyC,MAGxB,IAAIqwI,EAAchzI,KAAKuoI,YAAYxmI,GAAGqjB,iBAClC8G,GAAOA,EAAGjB,aAIVgoH,EAAqB,GACzBD,EAAY/uI,SAASioB,IAClB+mH,EAAmB3uI,KAAK,CAAE1D,GAAIsrB,EAAGtrB,GAAI+B,MAAOupB,EAAG9qB,OAAQ,IAI1D,IAAI8xI,EAAkB,CACnB,CAAEtyI,GAAI,aAAc+B,MAAO5C,EAAE,sBAC7B,CACGa,GAAI,oBACJ+B,MAAO5C,EAAE,qCAIXozI,EAAsB,CACvBvxI,KAAM,QACNC,KAAM,CACH,CACGV,KAAM,CACH,CACGP,GAAIV,EAAIgyI,SACRxxI,KAAM,QACNyB,QAAS8wI,EACT58D,YAAat2E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAACgJ,EAAMC,KACd,IAAI8nI,EAAapzI,KAAKuoI,YAAYxmI,GAAGspB,mBAClChgB,GAEH,IACG+nI,GAC0B,SAAzBA,EAAWjoH,YACRvlB,EAAMo6B,aAkBVr8B,GAAGzD,EAAIkyI,YAAYztI,WAjBpB,CACC,IAAI6yE,EAAoB,GACxB47D,EAAWnoH,WACPlkB,SACA9C,SAAS+C,IACPwwE,EAAkBlzE,KAAK,CACpB1D,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,OACV,IAERuC,GAAGzD,EAAIkyI,YAAY3tI,OAChB,UACA+yE,GAEH7zE,GAAGzD,EAAIkyI,YAAY1tI,UACnBf,GAAGzD,EAAIkyI,YAAYxtI,MACtB,CAEA,IAKT,CACGhE,GAAIV,EAAIkyI,WACR1xI,KAAM,QACN4yE,QAAQ,EACR+C,YAAat2E,EAAE,wBACfoC,QAAS,CAAC,CAAEvB,GAAI,EAAG+B,MAAO,uBAInC,CACG/B,GAAIV,EAAIiyI,SACRzxI,KAAM,QACNyB,QAAS+wI,EACT78D,YAAat2E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAACgJ,EAAMC,KACd,IAAI+nI,EAAO1vI,GAAGzD,EAAIgf,KAElB,GADAm0H,EAAK7nI,WAAW6nI,EAAKvoI,gBAAgB,IACzB,cAARO,EACDgoI,EAAKpoI,QAAQ,CAAC,EAAG,OACb,CACJ,IAAI9I,EAAUnC,KAAKuoI,YAAYr9G,eAAeD,WAC1ClkB,SACAoH,KAAI,SAAUnH,GACZ,MAAO,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,MAEf,KAEH6wI,EAAkBjyI,KAAK+B,GAAGoxB,iBACvB,GAAGtzB,aAKUyD,KAAK,CAClBmwE,cAAc,EACdC,aAAcvxE,IAEjB8vI,EAAgB7vI,GAAG,UAAW4T,IAC3BxU,EAAOi+G,eAAezpG,EAAI,IAG7Bq9H,EAAKpoI,QAAQgnI,EAAgBxxI,GAAI,GAEjC,IAAIy9G,EAAOv6G,GAAGzD,EAAIgyI,UAAUjmI,WACxBmrE,EAAiBp3E,KAAKuoI,YAAYxmI,GAAGspB,mBACtC6yF,GAEC9mC,GACD51E,EAAO8xI,gBAAgBl8D,EAE7B,OAsBf,GAdiB,QAAbxxE,EAAMvB,MACP0uI,EAAe5wI,QAAU4wI,EAAe5wI,SAAW,GACnD4wI,EAAe5wI,QAAQ2pC,QAAQ,CAC5BlrC,GAAI,kBACJ+B,MAAO5C,EAAE,qBAUX6F,EAAMo6B,aAAc,CAErB,IAAIgsG,EAAkBpmI,EAAMgB,eAI5BosI,EAAcA,EAAYlqI,QAAQojB,GACxBA,EAAGjB,WAAWrqB,IAAMorI,EAAgBprI,KAG9C,IAAI2yI,EAAYvzI,KAAKuoI,YAAYxmI,GAAGqjB,iBAAiB8G,GAE9B,SAAjBA,EAAGf,YACHe,EAAGjB,YACHiB,EAAGjB,WAAW+Z,gBAAgBgnG,KAKpCgH,EAAcA,EAAYlsH,OAAOysH,GAGjCN,EAAqB,GACrBD,EAAY/uI,SAASioB,IAClB+mH,EAAmB3uI,KAAK,CAAE1D,GAAIsrB,EAAGtrB,GAAI+B,MAAOupB,EAAG9qB,OAAQ,IAI1D8xI,EAAgB5uI,KAAK,CAClB1D,GAAI,oBACJ+B,MAAO5C,EAAE,mCAGZ+yI,EAAaK,EAIb13D,EAAqB,CAClBn4E,KAAM,WAAa,EAKzB,MACGwvI,EAAa,CACVlyI,GAAIV,EAAIkgI,UACR1/H,KAAM,YACN+B,MAAO,CACJ,CACG+rC,MAAO,SACP3sC,KAAM,CACHkxI,EACA,CACGryI,KAAM,QACNU,MAAO,MAAMrB,EAAE,yBACfqC,GAAI,CACDgI,YAAa,WACOpK,KAAKyL,gBACKA,gBAEhBwtE,UAAU,QACxB,MAKZ,CAEGzqC,MAAO,QACP3sC,KAAM,CACHsxI,EACA,CACGzyI,KAAM,QACNU,MAAO,MAAMrB,EAAE,yBACfqC,GAAI,CACDgI,YAAa,WACV,IACGopI,EADcxzI,KAAKyL,gBACKA,gBAG3B9H,GAAGzD,EAAIiyI,UAAUttI,SAAS,cAE1B2uI,EAAWv6D,UAAU,SACxB,QAUrB,IAAIo6D,EAAO1vI,GAAGzD,EAAIgf,KAAKpU,gBAAgB,GAOvC,GANAuoI,EAAK7nI,WAAW6nI,EAAKvoI,gBAAgB,IACrCuoI,EAAKpoI,QAAQ6nI,EAAY,GAEzBr3D,EAAmBn4E,QAGdsC,EAAMo6B,cAAgBp6B,EAAMwpE,cAAe,CAG7C,IAAIqkE,EAAe9vI,GAAGovI,EAAenyI,IAAI8M,MAGzCiH,YAAW,KACR/O,EAAMwpE,cAAcxpE,EAAO5F,KAAKJ,IAAK6zI,EAAc,CAChD5uF,UAAU,EAGVwlC,QAAQ,GACT,GACF,GACN,CAGoBgpD,EAAKvoI,gBAAgB,GAC3BlG,OAGViuI,GAAUrxI,EAAOgC,UAAUsuI,OA5Qb,CA4QoB,EAGzCjtI,SAAWgF,IACRlG,GAAGzD,EAAI0F,OAAOf,SAASgF,EAAKgwB,SAE5B,IAAIj0B,EAAQ5F,KAAK2yI,qBAAqB9oI,EAAKgwB,SAC3C,GAAIj0B,EAAO,CACR,IAAI8tI,EAAa,KACd/vI,GAAGzD,EAAIgyI,UAAUrtI,SAASgF,EAAKlH,OAC3BkH,EAAKuoI,YACNzuI,GAAGzD,EAAIkyI,YAAYvtI,SAASgF,EAAKuoI,YAEpC,IAAID,EAAWtoI,EAAKsoI,UAAY,aAGhC,GAFAxuI,GAAGzD,EAAIiyI,UAAUttI,SAASstI,GAEV,cAAZA,EAA0B,CAC3B,IAAIwB,EAAe9pI,EAAKlH,MACpBy0E,EAAiBp3E,KAAKuoI,YAAYxmI,GAAGspB,mBACtCsoH,GAECv8D,GAAkBvtE,EAAKgf,kBACxBrnB,EAAO8xI,gBACJl8D,EACAvtE,EAAKgf,iBAGd,GAICjjB,EAAMo6B,aACP0zG,IAEsB,SAAlB7pI,EAAKwpH,WACN1vH,GAAGzD,EAAIkgI,WAAWnnD,UAAU,SAE5By6D,MAEA/vI,GAAGzD,EAAIkgI,WAAWnnD,UAAU,UAG5BtkE,YAAW,WAER,IAAI2Y,EAAU,CAAC,EACfA,EAAQ1nB,EAAMkB,YAAc+C,EAAKlH,MACjCiD,EAAMf,SAASlB,GAAGzD,EAAIyC,OAAQ2qB,EACjC,GAAG,IAGZ,GAGHgmH,gBAAiB,CAAC9nB,EAAU3iG,KACzBA,EACGA,GACAuoH,EAAsCvoH,iBAIzCopH,EAAgB7+G,WACbo4F,EAASvgG,WAAaugG,EAASvgG,WAAWlkB,SAAW,IAExDkrI,EAAgBptI,SAASgkB,EAAiB,EAG7C24G,WAAY,KAGT,IAAI8Q,EAAe3uI,GAAGzD,EAAIoyI,cAC1B,GAAIA,GAAgBA,EAAa/2D,YAAa,CAC3C,IAAI1xE,EAAO,CAAC,EACZA,EAAKgwB,QAAUl2B,GAAGzD,EAAI0F,OAAOqG,WAE7B,IAAI2nI,EAAcjwI,GAAGzD,EAAIyC,OACrBiD,EAAQ5F,KAAK2yI,qBAAqB9oI,EAAKgwB,SA4B3C,OAbIj0B,EAAMo6B,cAGsC,SAAzCr8B,GAAGzD,EAAIkgI,WAAWn+H,OAAOgtI,cAf7BplI,EAAKlH,MAAQgB,GAAGzD,EAAIgyI,UAAUjmI,WAC9BpC,EAAKuoI,WAAazuI,GAAGzD,EAAIkyI,YAAYnmI,WACrCpC,EAAKyf,GAAK,MACVzf,EAAKjI,KAAOgE,EAAMvB,IAClBwF,EAAKsoI,SAAWxuI,GAAGzD,EAAIiyI,UAAUlmI,WACjCpC,EAAKwpH,UAAY,QACb4e,IACDpoI,EAAKgf,iBAAmBopH,EAAgBhmI,cAWxCpC,EAAKlH,MAAQiD,EAAMqG,SAAS2nI,EAAa,CAAC,GAC1C/pI,EAAKyf,GAAK,MACVzf,EAAKjI,KAAOgE,EAAMvB,IAClBwF,EAAKwpH,UAAY,UAIhBxpH,CACV,CACG,OAAO,IACV,GA0EN,MAAO,CACJpJ,GAvEO,CACPG,GAAIV,EAAIgf,IACRxe,KAAM,SACNmB,KAAM,CACH,CACGV,KAAM,CACH,CAEGT,KAAM,QACNM,MAAOhB,KAAKuoI,YAAYxmI,GAAG+M,OAAO8N,gBAClCxb,MAAOrB,EAAE,QAEZ,CAEGW,KAAM,QACNyG,KAAM,QACNkvE,YAAat2E,EAAE,kBACfa,GAAIV,EAAI0F,MACR7E,OAAQ,GACRoB,QAASX,EAAOwJ,cAAa,GAC7B5I,GAAI,CACDC,SAAU,SAAU8I,GACjB3J,EAAO22E,YAAYhtE,EACtB,IAGN,CAEGzK,KAAM,QACNM,MAAOhB,KAAKuoI,YAAYxmI,GAAG+M,OAAO8N,gBAClCxb,MAAOrB,EAAE,OAMZ,CAAC,EAED,CAEGW,KAAM,SACNQ,IAAK,eACLN,GAAIV,EAAIoyI,aACR/mI,KAAM,cACN3J,KAAM,OACNZ,MAAO,GACPsyE,QAAQ,EACR/xE,MAAO,WACJC,EAAOgC,UAAUslI,SAAS5oI,EAAIgf,IACjC,KAIT,CAAC,IAmBJ5b,KAfSnB,IACT,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGpDpB,EAAQ0H,MAETrI,EAAOqD,SAAS1C,EAAQ0H,KAG3B,EAMA23H,WAAY,IACFhgI,EAAOggI,aAEjBhgI,OAAQA,EAEd,CAEAmxI,qBAAqB94G,GAClB,OAAO75B,KAAKqxI,aAAerxI,KAAKqxI,aAAatjI,UAAU8rB,GAAW,IACrE,CASA0vG,oBAAoBpnI,EAAS0xI,GAC1B7zI,KAAKysI,UAAYoH,EAEjB,IAAIC,GAAY,EAoThB,OAlTA9zI,KAAKmzH,WAAanzH,KAAKmzH,YAAc,CAAC,EACtCnzH,KAAKmzH,WAAWC,gBAAkBpzH,KAAKmzH,WAAWC,iBAAmB,GAKrEpzH,KAAKmzH,WAAWC,gBAAgBnvH,SAASqlB,IAetC,IAAI1jB,EAAQ5F,KAAK2yI,qBAAqBrpH,EAAGuQ,SACzC,GAAKj0B,EAAL,CAEA,IAAIjD,EAAQ2mB,EAAG3mB,MAEf,GAAa,mBAATA,EACDA,EAAQ3C,KAAKuoI,YAAYxmI,GAAG6Q,QAAQhC,gBAIhC,GAAIhL,EAAMo6B,cAAgC,SAAhB1W,EAAG+pG,UAAsB,CAUvD,MAAMj8C,EAAiBp3E,KAAKuoI,YAAYxmI,GAAGspB,mBACxC/B,EAAG3mB,OAEN,IAAKy0E,EAAgB,OASrB,IAAIvuD,EAAmB7oB,KAAKuoI,YAAYxmI,GAAG2D,UACxC4jB,EAAGT,kBAEFA,GAAoBA,EAAiB1H,OACtC0H,EAAiB1H,MACbrY,QAAQ8G,GAEO,iBAAVA,EAAEof,MACQ,qBAAVpf,EAAEof,OAGP/qB,SAASmK,IACP,IAAIgmD,EACDp0D,KAAKuoI,YAAYr9G,eAAeD,WAAWld,UACxCK,EAAKzL,OAEPyxD,EAAWp0B,aACZ5xB,EAAKzL,MAAQyxD,EAAW9zC,OAAOtgB,KAAKysI,WAEpCr+H,EAAKzL,MAAQ3C,KAAKysI,UAAUr4E,EAAWttD,YAGzB,qBAAbsH,EAAK4gB,KACN5gB,EAAK4gB,KAAO,aAEZ5gB,EAAK4gB,KAAO,QACf,IAIT,IAAI+kH,EACD38D,EAAe3iD,cAAc5L,GAEhC,OAAQS,EAAG6oH,UAIR,IAAK,aACL,QAoBG,QAnBAxvI,EAAQoxI,EAAqBjoH,eAMN,SAAhBxC,EAAG+pG,WACA2gB,EAAiBD,EAAqB9oH,WAAWld,UAClDub,EAAG8oH,eAIHzvI,EAAQA,EAAMqxI,EAAeltI,aACxBnE,EAAM/B,KACd+B,EAAQA,EAAM/B,KAKZ0oB,EAAGA,IACR,IAAK,MACF,IAAK3mB,EAAO,MAERiD,EAAMo6B,cAGP6zG,EAAejuI,EAAMkB,YAAc,CAAC,EACpC+sI,EAAejuI,EAAMkB,YAAYlG,GAC9B+B,EAAMiD,EAAMgB,eAAe0nB,MAC9BulH,EAAejuI,EAAMkB,YAClBlB,EAAMgB,eAAe0nB,MACpB3rB,EAAMiD,EAAMgB,eAAe0nB,MAG3B1oB,EAAMQ,SAASgB,aACZxB,EAAMyB,aACPwsI,EAAejuI,EAAMkB,YAClBlB,EAAMyB,WAAWP,YAChBnE,EAAMiD,EAAMyB,WAAWP,aAE1BlB,EAAM0B,cACPusI,EAAejuI,EAAMkB,YAClBlB,EAAM0B,YAAYR,YACjBnE,EAAMiD,EAAM0B,YAAYR,cAIlClB,EAAMgB,eACFG,QACGC,GACW,YAATA,EAAE3C,KAA8B,aAAT2C,EAAE3C,MAE9BJ,SAAS+C,IACP6sI,EAAejuI,EAAMkB,YAClBE,EAAEF,YACDnE,EAAMqE,EAAEF,WAAW,KAG7B+sI,EAAejuI,EAAMkB,YAAcnE,EAK5C,MAGH,IAAK,oBAIF,IAHA,IAAIsxI,EAAY,GAEZC,EAAUH,EAAqBjnH,iBAC5BonH,GAAS,CAGb,OAAQH,EAAqB5oH,YAG1B,IAAK,SACF8oH,EAAU3vI,KAAK4vI,EAAQtzI,IACvB,MAKH,IAAK,QACF,IAAIozI,EAIAz6C,EAAW26C,GAJXF,EAAiBD,EAAqB9oH,WAAWld,UAClDub,EAAG8oH,aAGgCtrI,iBAEf,IAAZyyF,IACRA,EAAW26C,EAAQF,EAAejkH,gBAE9B5iB,MAAMC,QAAQmsF,GACfA,EAAWA,EAASprF,KAAKiF,GACfA,EAAExS,GAAKwS,EAAExS,GAAKwS,IAEhBmmF,EAAS34F,KACjB24F,EAAWA,EAAS34F,KAI1BqzI,EAAYj0I,KAAKuoI,YAAYxmI,GAAGygB,KAC7ByxH,EAAUntH,OAAOyyE,IAM1B26C,EAAUH,EAAqB/mH,cAAcknH,EAChD,CAGA,GACQ,QADA5qH,EAAGA,GAEL,GAAwB,OAApB1jB,EAAMqB,WAAqB,CAC5B,IAAIktI,EAAU,GACdF,EAAUhwI,SAASmP,IAChB,IAAIghI,EAAsBp0I,KAAKuoI,YAAYxmI,GAAG2D,UAC3CmuI,GAEHO,EAAoBxuI,EAAMkB,YAAcsM,EACxC+gI,EAAQ7vI,KAAK8vI,EAAoB,IAEpCP,EAAezH,WAAa+H,CAC/B,MACGN,EAAejuI,EAAMkB,YAAcmtI,EAI5C,MAEH,IAAK,oBAKF,GAJAA,EAAY,GAEZtxI,EAAQoxI,EAAqBjnH,iBAM1B,GACsC,SAAnCinH,EAAqB5oH,YACJ,SAAhB7B,EAAG+pG,WAAwB/pG,EAAG8oH,WAE/B4B,EAAiBD,EAAqB9oH,WAAWld,UAC9Cub,EAAG8oH,iBAKiB,KAFvB74C,EAAW52F,EAAMqxI,EAAeltI,eAG7ByyF,EAAW52F,EAAMqxI,EAAejkH,gBAC5B5iB,MAAMC,QAAQmsF,KACfA,EAAWA,EAAS,IAEnBA,EAAS34F,KAAI24F,EAAWA,EAAS34F,KAGxC+B,EAAQ42F,OAIN,GAAuC,UAAnCw6C,EAAqB5oH,WAAwB,CAMnD,IAAIkpH,EACAzuI,EAAMyB,WACPgtI,EAASzuI,EAAMyB,WAAWP,WAClBlB,EAAM0B,cACd+sI,EAASzuI,EAAM0B,YAAYR,YAE1ButI,GAAU1xI,EAAM0xI,GACjB1xI,EAAQA,EAAM0xI,GACN1xI,EAAM/B,KACd+B,EAAQA,EAAM/B,GAEpB,CAKK,QADA0oB,EAAGA,KAELuqH,EAAejuI,EAAMkB,YAAcnE,GAM/CmxI,GAAY,CAGf,KAGW,QADAxqH,EAAGA,KAELuqH,EAAejuI,EAAMkB,YAAcnE,GAIzCmxI,GAAY,CAjRG,CAyRlB,IAGIA,CAKV,CAMAttH,QAAQrkB,GAGL,OAFAnC,KAAKysI,UAAYtqI,EAAQ0H,KAElB,IAAI4F,SAAQ,CAACC,EAASiH,KAE1B,GADgB3W,KAAKupI,oBAAoB,CAAC,EAAGpnI,EAAQ0H,MAG9C,CAEJ,IAAIkoB,EAAK5vB,EAAQ+H,KAAKghB,eACtB,IAAK6G,EAAI,OAAOriB,IAEJqiB,EAAG/pB,MAEX0lE,OAAOvrE,EAAQ0H,KAAKjJ,GAAIuB,EAAQ0H,MAChC2K,KAAK9E,GACL+E,OAAOtM,IACLnI,KAAKuoI,YAAYxmI,GAAGqG,OAAOC,UAAUF,EAAK,CACvCmH,QACG,sDACH1O,GAAIuB,EAAQ0H,KAAKjJ,GACjBiJ,KAAM1H,EAAQ0H,OAEjB8M,EAAOxO,EAAI,GAEpB,MAnBGuH,GAmBH,GAEN,CAIA1K,WAAWC,GACRnF,MAAMkF,WAAWC,GACjBjF,KAAKstI,iBAAiBroI,EACzB,CAIAqoI,iBAAiBroI,GAEVjF,KAAKqxI,eACNrxI,KAAKsxI,WAAWtxI,KAAKqxI,aAAazwI,IAAMZ,KAAKmzH,YAGhDnzH,KAAKqxI,aAAepsI,EAGpBjF,KAAKuxI,WAAa,KAGlBvxI,KAAKmzH,WAAanzH,KAAKsxI,WAAWtxI,KAAKqxI,aAAazwI,KAAO,CAAC,CAC/D,CAKA+wD,aAAavrD,GAOV,GANAA,EAAWA,GAAY,CAAC,EAExBtG,MAAM6xD,aAAavrD,GAIfA,EAASkuI,gBAAiB,CAC3B,IAAIjD,EAAerxI,KAAKuoI,YAAYxjI,YAAYsiB,WAC7CjhB,EAASkuI,iBAEZt0I,KAAKqxI,aAAeA,CACvB,CAGIrxI,KAAKuxI,YAGNvxI,KAAKuxI,WAAW5/E,aAAavrD,EAEnC,CAKAo7H,aAMG,IAAIp7H,EAAWtG,MAAM0hI,aAKrB,OAHAp7H,EAAS+sH,WAAanzH,KAAKuxI,WAAW/P,aACtCp7H,EAASkuI,gBAAkBt0I,KAAKqxI,aAAa1pH,aAEtCvhB,CACV,CASAqjI,UACG,IAAI0B,EAAW,GAoBf,OAnBenrI,KAAKmzH,YAAYC,iBAAmB,IAC1CnvH,SAASqlB,IACf,IAAI1jB,EAAQ5F,KAAK2yI,qBAAqBrpH,EAAGuQ,SACzC,IAAKj0B,EAAO,OACZ,IAAKA,EAAMo6B,cAAiC,UAAjB1W,EAAG+pG,UAAuB,OAGrD,IAAI7jG,EAAKxvB,KAAKuoI,YAAYxmI,GAAGspB,mBAAmB/B,EAAG3mB,OAC/C6sB,GAAI/D,aAAe+D,GAAI1F,eAAe0B,aAG1C2/G,EAAS7mI,KACN,IAAImL,SAASC,IACV8f,EAAGptB,GAAG,mBAAmB,KACtBsN,GAAS,GACV,IAEP,IAEGD,QAAQ4R,IAAI8pH,EACtB,cClzCqE1rI,EAAOC,QAAkS,SAAS2K,EAAE4xB,EAAEmjB,EAAExvC,GAAG,SAAShD,EAAEyY,EAAE8wD,GAAG,IAAI/2B,EAAE/5B,GAAG,CAAC,IAAI4W,EAAE5W,GAAG,CAAmE,GAAGhS,EAAE,OAAOA,EAAEgS,GAAE,GAAI,IAAIre,EAAE,IAAIsB,MAAM,uBAAuB+c,EAAE,KAAK,MAAMre,EAAEyP,KAAK,mBAAmBzP,CAAC,CAAC,IAAIsN,EAAE8qC,EAAE/5B,GAAG,CAAC3lB,QAAQ,CAAC,GAAGu8B,EAAE5W,GAAG,GAAG+zB,KAAK9kC,EAAE5U,SAAQ,SAAS2K,GAAoB,OAAOuC,EAAlBqvB,EAAE5W,GAAG,GAAGhb,IAAgBA,EAAE,GAAEiK,EAAEA,EAAE5U,QAAQ2K,EAAE4xB,EAAEmjB,EAAExvC,EAAE,CAAC,OAAOwvC,EAAE/5B,GAAG3lB,OAAO,CAA2C,IAA1C,IAAI2T,OAAE,EAA4CgS,EAAE,EAAEA,EAAEzV,EAAEzJ,OAAOkf,IAAIzY,EAAEgD,EAAEyV,IAAI,OAAOzY,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAAS2nE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,iBAAiBggE,SAASA,EAASC,oBAAoB,SAASC,GAAO,OAAOluI,KAAKquC,MAAY,KAAN6/F,EAAW,EAAEh1I,EAAOC,QAAQ60I,CAAQ,EAAE,CAACG,cAAc,IAAI,EAAE,CAAC,SAASngE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAShgE,EAAQ,cAAkB8gE,EAAe,iBAAqBC,EAAK,CAACC,UAAU,SAAmB15F,GAAU,MAAkB,SAAXA,EAAkB,OAAO,KAAK,EAAE25F,gBAAgB,SAAyB35F,GAAU,MAAkB,SAAXA,EAAkB,WAAW,cAAc,EAAE45F,gBAAgB,SAAyBzkC,GAAU,OAAOA,EAASh+F,QAAQ,2BAA2B,MAAM,WAAW,EAAE0iI,gBAAgB,SAAyB1kC,EAASn1D,GAA2G,OAA3B,SAAXA,EAAkB,aAAa,QAAqB,UAA9Fy5F,EAAKG,gBAAgBzkC,EAA+F,GAAGvxG,EAAOC,QAAQ,WAAW,SAASi2I,EAAW5lB,EAAI/e,EAAS4kC,EAAa/5F,IAA3xB,SAAyBiL,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAspBC,CAAgB91I,KAAK21I,GAAY31I,KAAKgxG,SAASA,EAAShxG,KAAK2a,OAAO26H,EAAKC,UAAU15F,GAAU77C,KAAK+vH,IAAIA,EAAI/vH,KAAK41I,aAAaA,EAAa51I,KAAK+1I,aAAaT,EAAKE,gBAAgB35F,GAAU77C,KAAKg2I,YAAuB,SAAXn6F,EAAkB,WAAW,QAAQ,IAAIo6F,EAAaX,EAAKI,gBAAgB1kC,EAASn1D,GAAU77C,KAAKk2I,QAAQN,EAAaK,IAAej2I,KAAKm2I,mBAAmBP,EAAaK,EAAa,CAAqiF,OAApiFtB,EAAagB,EAAW,CAAC,CAACtxI,IAAI,qBAAqB1B,MAAM,SAA4BizI,EAAaQ,GAAc,IAAIC,EAASr2I,KAAK2a,OAAO,UAAU3a,KAAK+1I,aAAa,YAAgB/lB,EAAI4lB,EAAaS,GAAU,IAAIrmB,EAAI,CAAC,IAAI7nH,EAAI,IAAIG,MAAM,qCAAoI,MAA/FH,EAAIwlF,WAAW,CAAC0oD,SAASA,EAASD,aAAaA,EAAaE,MAAMniI,OAAOC,KAAKpU,KAAK+vH,IAAIumB,QAAcnuI,CAAG,CAAkM,IAAjM,IAAI+tI,EAAQ3B,EAASgC,QAAQhC,EAASiC,QAAQxmB,IAAUymB,EAAcP,EAAQjlE,qBAAqB,iBAAiB,GAAOylE,EAAmBD,EAAcxlE,qBAAqB,gBAAwB59D,EAAE,EAAEiB,EAAEoiI,EAAmBvwI,OAAOkN,EAAEiB,EAAEjB,IAAKojI,EAActtD,YAAYutD,EAAmBrjI,IAAuC,OAAnCuiI,EAAaQ,GAAcF,EAAeA,CAAO,GAAG,CAAC7xI,IAAI,gBAAgB1B,MAAM,WAAyB,IAAIg0I,EAAS32I,KAAKk2I,QAAQjlE,qBAAqB,gBAAgB,OAAO9jE,MAAMgsC,UAAUy9F,OAAOx9F,KAAKu9F,GAAS,SAASz5F,EAAI25F,GAAc,IAAIj2I,EAAGi2I,EAAaxzD,aAAa,MAAM,MAAG,cAAchhE,KAAKzhB,GAAY2F,KAAK22C,IAAIA,EAAIr4B,SAASjkB,EAAG2/C,OAAO,GAAG,KAAYrD,CAAG,GAAE,EAAE,GAAG,CAAC74C,IAAI,mBAAmB1B,MAAM,SAA0Bm0I,EAAYC,GAAW,IAAIC,EAAeh3I,KAAK41I,aAAa,uBAA2BqB,EAAYD,EAAe/lE,qBAAqB,WAA0I,IAAvG9jE,MAAMgsC,UAAU+9F,KAAK99F,KAAK69F,GAAY,SAASrmB,GAAK,OAAOA,EAAIvtC,aAAa,eAAe0zD,CAAS,IAAG,CAA+B,IAAI12I,EAAM22I,EAAe/lE,qBAAqB,SAAS,GAAOkmE,EAAOH,EAAextG,cAAc,WAAW2tG,EAAOC,aAAa,KAAKD,EAAOv2D,aAAa,cAAck2D,GAAaK,EAAOv2D,aAAa,YAAYm2D,GAAW12I,EAAMypF,YAAYqtD,EAAnP,CAA0P,GAAG,CAAC9yI,IAAI,eAAe1B,MAAM,SAAsB00I,EAAU7xD,EAAUnyE,GAAS,MAAHA,IAASA,EAAE,GAAE,IAAIikI,EAAkB,IAAJjkI,EAAMgkI,EAAUA,EAAW,IAAIhkI,EAAE,IAASkkI,EAAUv3I,KAAK2a,OAAO,UAAU28H,EAAc,GAA8B,MAA3Bt3I,KAAK+vH,IAAIumB,MAAMiB,GAAkB,OAAOv3I,KAAKw3I,aAAaH,EAAU7xD,EAAUnyE,EAAE,GAAG,IAAIgiD,EAAM,CAACluD,KAAKowI,EAAU1tI,KAAK27E,EAAUrjF,QAAQ,CAACs1I,QAAO,IAAOz3I,KAAK+vH,IAAIz+C,KAAKjc,EAAMluD,KAAKkuD,EAAMxrD,KAAKwrD,EAAMlzD,SAAS,IAAI40I,EAAUO,EAActkI,QAAQqiI,EAAe,MAAMr1I,KAAK03I,iBAAiB,SAASX,EAAUA,GAAW,IAAIN,EAAcz2I,KAAKk2I,QAAQjlE,qBAAqB,iBAAiB,GAAOkmE,EAAOn3I,KAAKk2I,QAAQ1sG,cAAc,gBAAgB2tG,EAAOC,aAAa,KAAK,IAAIO,EAAO33I,KAAK43I,gBAAgB,EAAoP,OAAlPT,EAAOv2D,aAAa,KAAK,MAAM+2D,GAAQR,EAAOv2D,aAAa,OAAO,6EAA6Eu2D,EAAOv2D,aAAa,SAAS5gF,KAAKg2I,YAAY,IAAIsB,GAAeb,EAAc3sD,YAAYqtD,GAAeQ,CAAM,KAAYhC,CAAU,CAA7/F,EAAggG,EAAE,CAAC,aAAa,IAAI,EAAE,CAAC,SAASphE,EAAQ90E,EAAOC,GAAS,aAAaD,EAAOC,QAAQ,CAACm4I,YAAY,SAAqBC,EAAIv1D,GAAM,OAAO,8FAA8FA,EAAK,GAAG,SAASA,EAAK,GAAG,m2BAAm2Bu1D,EAAI,6jBAA6jBv1D,EAAK,GAAG,SAASA,EAAK,GAAG,2WAA2WvvE,QAAQ,SAAS,GAAG,EAAE+kI,oBAAoB,SAA6BD,EAAIv1D,GAAM,OAAO,qNAAqNA,EAAK,GAAG,SAASA,EAAK,GAAG,yoBAAyoBu1D,EAAI,8PAA8Pv1D,EAAK,GAAG,SAASA,EAAK,GAAG,2gBAA2gBvvE,QAAQ,SAAS,GAAG,EAAEglI,gBAAgB,SAAyBF,EAAIv1D,EAAK01D,GAAQ,OAAO,kRAAkRH,EAAI,6cAA6cG,EAAO/qI,EAAE,QAAQ+qI,EAAO3hF,EAAE,6BAA6BisB,EAAK,GAAG,SAASA,EAAK,GAAG,86CAA86CvvE,QAAQ,SAAS,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,SAASuhE,EAAQ90E,EAAOC,GAAS,aAAgM,IAAIw4I,EAAQ3jE,EAAQ,aAAiB5D,EAAU4D,EAAQ,UAAU5D,UAAcwnE,EAAc5jE,EAAQ,UAAU4jE,cAAkBC,EAAO7jE,EAAQ,YAAgBggE,EAAS,CAAC,EAA0HA,EAASnwI,SAAS,CAACi0I,WAAW,SAAoBC,GAAM,OAAIA,EAAK74I,QAA6B64I,EAAK74I,OAAyB,IAA7C,WAAwD,EAAEo1E,OAAOqjE,GAAxQ,SAAgBtnB,GAAK,OAAnVjuH,EAAmX,SAAakuH,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvbvsH,EAAiX,SAArXyT,EAAkX,CAAC,GAArV3D,OAAO8gI,eAAen9H,EAAIzT,EAAI,CAAC1B,MAAMA,EAAMmyI,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAYl9H,EAAIzT,GAAK1B,EAAamV,EAA/K,IAAyBA,EAAIzT,EAAI1B,CAAqb,IAAiKk5C,SAAS,OAAO08F,WAAW,CAAC9mH,MAAM,IAAIuyB,IAAI,MAAMuwF,EAASiE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAM3gI,OAAI,EAAO1D,OAAK,EAAef,EAAE,EAAEA,EAAEN,UAAU5M,OAAOkN,GAAG,EAAE,CAACyE,EAAI/E,UAAUM,GAAGe,EAAKD,OAAOC,KAAK0D,GAAK,IAAI,IAAI4oB,EAAE,EAAEA,EAAEtsB,EAAKjO,OAAOu6B,GAAG,EAAG+3G,EAAOrkI,EAAKssB,IAAI5oB,EAAI1D,EAAKssB,GAAI,CAAC,OAAO+3G,CAAM,EAAElE,EAASiC,QAAQ,SAASkC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAEnE,EAASqE,WAAW,SAAShsI,GAAG,IAAI,QAAOsd,IAAJtd,EAAe,OAAiB,OAAOisI,mBAAmBC,OAAOvE,EAASwE,cAAcnsI,IAAmI,CAA9H,MAAMvC,GAAG,IAAIlC,EAAI,IAAIG,MAAM,OAA0F,MAAnFH,EAAIwlF,WAAW9jF,KAAK+C,EAAEzE,EAAIwlF,WAAWqrD,YAAY,kCAAwC7wI,CAAG,CAAC,EAAEosI,EAAS0E,WAAW,SAASrsI,GAAG,OAAOssI,SAASjjI,mBAAmBrJ,GAAG,EAAE2nI,EAASgC,QAAQ,SAASnkE,EAAI+mE,GAAoE,OAA3C,IAAIxoE,EAAU,CAACwoE,aAAaA,IAA6BtoE,gBAAgBuB,EAAI,WAAW,EAAEmiE,EAAS6E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC9E,EAAS+E,aAAa,SAASlnE,GAAK,OAAOA,EAAIp/D,QAAQqmI,EAAiB,OAAO,EAAE9E,EAASgF,eAAeplI,OAAOC,KAAKmgI,EAAS6E,SAASjrI,KAAI,SAASqrI,GAAS,IAAIC,EAAUlF,EAAS6E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAIt3H,OAAOmyH,EAAS+E,aAAaG,GAAW,KAAKE,KAAK,IAAIv3H,OAAOmyH,EAAS+E,aAAaE,GAAS,KAAK/nH,MAAMgoH,EAAUz1F,IAAIw1F,EAAQ,IAAGjF,EAASqF,WAAW,SAAS92F,GAAqB,IAAb,IAAIlzC,OAAE,EAAeyD,EAAE,EAAEiB,EAAEigI,EAASgF,eAAepzI,OAAOkN,EAAEiB,EAAEjB,IAAKzD,EAAE2kI,EAASgF,eAAelmI,GAAGyvC,EAAOA,EAAO9vC,QAAQpD,EAAE8pI,OAAO9pI,EAAEo0C,KAAK,OAAOlB,CAAM,EAAEyxF,EAASsF,WAAW,SAAS/2F,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOpuC,YAAwB,IAAb,IAAI9E,OAAE,EAAeyD,EAAE,EAAEiB,EAAEigI,EAASgF,eAAepzI,OAAOkN,EAAEiB,EAAEjB,IAAKzD,EAAE2kI,EAASgF,eAAelmI,GAAGyvC,EAAOA,EAAO9vC,QAAQpD,EAAE+pI,KAAK/pI,EAAE6hB,OAAO,OAAOqxB,CAAM,EAAEyxF,EAAS7uI,UAAU,SAASoS,GAAK,OAAOjE,KAAK0D,MAAM1D,KAAKC,UAAUgE,GAAK,EAAEy8H,EAASuF,aAAa,SAASC,GAAQ,OAAOA,EAAOnD,QAAO,SAAS9oI,EAAOksI,GAAgD,OAAzC7sI,MAAMgsC,UAAU70C,KAAKqkC,MAAM76B,EAAOksI,GAAclsI,CAAM,GAAE,GAAG,EAAE,IAAImsI,EAAY,IAAI73H,OAAOlH,OAAOg/H,aAAa,KAAK,KAA8U,SAASC,EAAoBh4I,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,WAAWj4I,EAAQ62B,QAAQ,sBAAsB72B,EAAQxB,UAAsN,MAA5MwH,EAAIwlF,WAAW,CAAC/sF,GAAG,uBAAuBuB,EAAQxB,SAASq4I,YAAY,WAAW72I,EAAQ62B,QAAQ,sBAAsB72B,EAAQxB,SAAS05I,OAAOl4I,EAAQk4I,OAAOtuI,MAAM5J,EAAQ4J,MAAMitB,QAAQ72B,EAAQ62B,SAAe7wB,CAAG,CAA1qBosI,EAASwE,cAAc,SAASnsI,GAAG,OAAOA,EAAEoG,QAAQinI,EAAY,IAAI,EAAE1F,EAAS+F,aAAa,SAASC,EAAMzrE,GAA4C,IAAnC,IAAI0rE,EAAW,GAAO73G,OAAM,EAA0C,OAA5BA,EAAM43G,EAAME,KAAK3rE,KAAiB0rE,EAAWl2I,KAAK,CAAC01I,MAAMr3G,EAAMs1G,OAAOt1G,EAAM52B,QAAQ,OAAOyuI,CAAU,EAAEjG,EAASmG,aAAa,SAAS5iI,GAAK,OAAO3D,OAAOC,KAAK0D,GAAK3R,MAAM,EAAoWouI,EAAS3yF,SAAS,SAASy4F,EAAOrhH,EAAQjtB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMuI,EAAE+lI,EAAOl0I,OAAOkN,EAAEiB,EAAEjB,IAAwB,GAAVgnI,EAAOhnI,GAAW1Q,QAAQ,KAAKq2B,EAAQ,IAAK,OAAO3lB,EAAG8mI,EAAoB,CAACx5I,SAAS,QAAQq4B,QAAQA,EAAQqhH,OAAOA,EAAOtuI,MAAMA,GAAO,EAAEwoI,EAAS5yF,QAAQ,SAAS04F,EAAOrhH,EAAQjtB,GAAuC,IAAhC,IAAIwb,EAAM8yH,EAAOnnI,MAAM,EAAEnH,GAAesH,EAAEkU,EAAMphB,OAAO,EAAEkN,GAAG,EAAEA,IAAI,CAAC,IAAIilI,EAAK/wH,EAAMlU,GAAG,GAAqC,IAAlCilI,EAAK31I,MAAM0K,QAAQ,IAAI2rB,KAAiE,IAAnD,CAAC,IAAI,KAAK3rB,QAAQirI,EAAK31I,MAAMq2B,EAAQ7yB,OAAO,IAAU,OAAOkN,CAAE,CAAC8mI,EAAoB,CAACx5I,SAAS,OAAOq4B,QAAQA,EAAQqhH,OAAOA,EAAOtuI,MAAMA,GAAO,EAAEtM,EAAOC,QAAQ60I,EAASA,EAASoG,OAAOpmE,EAAQ,YAAYggE,EAASqG,cAAcrmE,EAAQ,mBAAmB,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,mBAAmB,GAAG,WAAW,GAAGsmE,OAAO,KAAK,EAAE,CAAC,SAAStmE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0e,SAASY,EAAgBhvF,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAC,IAAItB,EAAShgE,EAAQ,eAAmBumE,EAAQvG,EAASqG,cAAkBttB,EAAc,WAAW,SAASA,IAAoD,GAApCwoB,EAAgB91I,KAAKstH,GAAkBv6G,UAAU5M,OAAO,EAAG,MAAM,IAAImC,MAAM,2GAA2GtI,KAAK+6I,SAAS,CAAC,EAAE/6I,KAAKg7I,QAAQ,GAAGh7I,KAAKwnF,WAAW,CAAC,EAAE,CAAkyG,OAAjyGmtD,EAAarnB,EAAc,CAAC,CAACjpH,IAAI,eAAe1B,MAAM,SAAsBlD,GAA2C,OAAnCO,KAAKg7I,QAAQ12I,KAAKw2I,EAAQr7I,IAAgBO,IAAI,GAAG,CAACqE,IAAI,aAAa1B,MAAM,SAAoBR,GAAS,IAAI84I,EAAMj7I,KAAkZ,OAA7YA,KAAKmC,QAAQA,EAAQgS,OAAOC,KAAKmgI,EAASnwI,UAAUH,SAAQ,SAASI,GAAK,IAAI09B,EAAawyG,EAASnwI,SAASC,GAAK42I,EAAM52I,GAAyB,MAApB42I,EAAM94I,QAAQkC,GAAW42I,EAAM94I,QAAQkC,GAAK09B,CAAY,IAAsB,SAAhB/hC,KAAK67C,UAAmC,SAAhB77C,KAAK67C,WAAmB77C,KAAKk7I,eAAe5tB,EAAc6tB,eAAen7I,KAAK67C,WAAU77C,KAAKk7I,eAAel7I,KAAKmC,QAAQ+4I,gBAAgBl7I,KAAKk7I,eAAel7I,KAAKmC,QAAQi5I,aAAa,GAAUp7I,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBotH,GAAK,GAAGA,EAAIsrB,UAAW,MAAM,IAAI/yI,MAAM,iEAA8E,OAAbtI,KAAK+vH,IAAIA,EAAW/vH,IAAI,GAAG,CAACqE,IAAI,cAAc1B,MAAM,SAAqBquG,GAAU,IAAIsqC,EAAYt7I,KAAKu7I,oBAAoBvqC,GAAUsqC,EAAY/jI,QAAQvX,KAAK+6I,SAAS/pC,GAAUsqC,CAAW,GAAG,CAACj3I,IAAI,UAAU1B,MAAM,WAAmB3C,KAAKw7I,eAAex7I,KAAKk7I,eAAeO,kBAAkBz7I,KAAK+vH,IAAI,GAAG,CAAC1rH,IAAI,SAAS1B,MAAM,WAAkB,IAAI+4I,EAAO17I,KAAyyC,OAApyCA,KAAKg7I,QAAQh7I,KAAKk7I,eAAeS,YAAYxtI,KAAI,SAASytI,GAAgB,OAAOA,GAAgB,IAAG90H,OAAO9mB,KAAKg7I,SAASh7I,KAAKmC,QAAQnC,KAAKg7I,QAAQpE,QAAO,SAASz0I,EAAQ1C,GAAQ,OAAOA,EAAOo8I,mBAAmB15I,EAAQu5I,EAAO,GAAE17I,KAAKmC,SAASnC,KAAK41I,aAAa51I,KAAKmC,QAAQi5I,aAAaxE,QAAO,SAAShB,EAAa5kC,GAAU,IAAIliC,EAAQ4sE,EAAO3rB,IAAIumB,MAAMtlC,GAAU8qC,SAA0D,OAAjDlG,EAAa5kC,GAAUujC,EAASgC,QAAQznE,GAAgB8mE,CAAY,GAAE,CAAC,GAAG51I,KAAKg7I,QAAQ/2I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI,CAACk2G,IAAI2rB,EAAO3rB,IAAI6lB,aAAa8F,EAAO9F,aAAa/rI,KAAK6xI,EAAO7xI,MAAM,IAAG7J,KAAK+7I,UAAU/7I,KAAKg7I,QAAQ/2I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI,CAACkhI,SAASW,EAAOX,UAAU,IAAG/6I,KAAKw7I,eAAev3I,SAAQ,SAAS+sG,GAAyC,MAA5B0qC,EAAO3rB,IAAIumB,MAAMtlC,IAAiB0qC,EAAOM,YAAYhrC,EAAU,IAAGhxG,KAAKi8I,OAAOj8I,KAAKg7I,QAAQpE,QAAO,SAASj0I,EAAMlD,GAAQ,OAAOA,EAAOy8I,eAAev5I,EAAM,GAAE,CAAC,GAAGwR,OAAOC,KAAKpU,KAAKi8I,QAAQh4I,SAAQ,SAASqiC,GAAI,IAAI61G,EAAOT,EAAOO,OAAO31G,GAAQE,EAAK21G,EAAO31G,KAAS80G,EAAYI,EAAOX,SAASv0G,GAAM80G,EAAYc,QAAQD,EAAOtyI,MAAMyxI,EAAY5vE,SAASgwE,EAAO3rB,IAAIz+C,KAAKhrC,EAAGg1G,EAAYxsE,QAAQ,IAAG36D,OAAOC,KAAKpU,KAAK41I,cAAc3xI,SAAQ,SAAS+sG,GAAU0qC,EAAO3rB,IAAIl1G,OAAOm2F,GAAU,IAAIliC,EAAQylE,EAAS0E,WAAW1E,EAASiC,QAAQkF,EAAO9F,aAAa5kC,KAAY,OAAO0qC,EAAO3rB,IAAIz+C,KAAK0/B,EAASliC,EAAQ,CAAC,EAAE,IAAU9uE,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBkH,GAAqB,OAAf7J,KAAK6J,KAAKA,EAAY7J,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,OAAO3C,KAAK+vH,GAAG,GAAG,CAAC1rH,IAAI,sBAAsB1B,MAAM,SAA6BspD,GAAM,IAAIowF,EAASr8I,KAAK+vH,IAAIumB,MAAMrqF,GAAM6vF,SAAS,OAAO97I,KAAKs8I,+BAA+BD,EAASpwF,EAAK,GAAG,CAAC5nD,IAAI,iCAAiC1B,MAAM,SAAwCmsE,EAAQytE,GAAU,IAAIC,EAAOx8I,KAASy8I,EAAY,CAACF,SAASA,GAA8K,OAApKpoI,OAAOC,KAAKmgI,EAASnwI,UAAUH,SAAQ,SAASI,GAAKo4I,EAAYp4I,GAAKm4I,EAAOn4I,EAAI,IAAGo4I,EAAYvB,eAAel7I,KAAKk7I,eAAeuB,EAAYzB,QAAQh7I,KAAKg7I,QAAe,IAAI1tB,EAAcovB,aAAa5tE,EAAQ2tE,EAAY,GAAG,CAACp4I,IAAI,cAAc1B,MAAM,SAAqBspD,GAAM,OAAOjsD,KAAKu7I,oBAAoBtvF,GAAMjsD,KAAKk7I,eAAeyB,UAAUC,aAAa,GAAG,CAACv4I,IAAI,oBAAoB1B,MAAM,WAA4C,OAAf3C,KAAK+7I,UAAiB/7I,KAAKw7I,cAAc,KAAYluB,CAAa,CAApkH,GAAwkHA,EAAcinB,SAAShgE,EAAQ,eAAe+4C,EAAc8qB,OAAO7jE,EAAQ,YAAY+4C,EAAcovB,aAAanoE,EAAQ,mBAAmB+4C,EAAc6tB,eAAe5mE,EAAQ,sBAAsB+4C,EAAcuvB,WAAWtoE,EAAQ,iBAAiB90E,EAAOC,QAAQ4tH,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,gBAAgB,GAAG,kBAAkB,KAAK,EAAE,CAAC,SAAS/4C,EAAQ90E,EAAOC,GAAS,aAAa,SAASo9I,EAAQxrI,GAAStR,KAAKmH,KAAK,eAAenH,KAAKsR,QAAQA,EAAQtR,KAAK+8I,MAAM,IAAIz0I,MAAMgJ,GAASyrI,KAAK,CAAmC,SAAS3C,EAAgB9oI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAKsR,QAAQA,EAAQtR,KAAK+8I,MAAM,IAAIz0I,MAAMgJ,GAASyrI,KAAK,CAAuC,SAASC,EAAmB1rI,GAAStR,KAAKmH,KAAK,mBAAmBnH,KAAKsR,QAAQA,EAAQtR,KAAK+8I,MAAM,IAAIz0I,MAAMgJ,GAASyrI,KAAK,CAA0C,SAASE,EAAgB3rI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAK2tF,WAAW,CAACqrD,YAAY,iBAAiBh5I,KAAKsR,QAAQA,EAAQtR,KAAK+8I,MAAM,IAAIz0I,MAAMgJ,GAASyrI,KAAK,CAAngBD,EAAQ3jG,UAAU7wC,MAAM6wC,UAA+HihG,EAAgBjhG,UAAU,IAAI2jG,EAAmIE,EAAmB7jG,UAAU,IAAI2jG,EAA2KG,EAAgB9jG,UAAU,IAAI2jG,EAAQr9I,EAAOC,QAAQ,CAACo9I,QAAQA,EAAQ1C,gBAAgBA,EAAgB6C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASzoE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIw9I,EAAW3oE,EAAQ,kBAAsB4oE,EAAoB5oE,EAAQ,4BAAgC6oE,EAAa7oE,EAAQ,oBAAwB8oE,EAAgB9oE,EAAQ,+BAAmC7I,EAAO6I,EAAQ,oBAAwB+oE,EAAmB,CAAC7B,kBAAkB,SAA2B1rB,GAAkI,OAA1GA,EAAIz+C,KAAK,2DAA2DnjE,KAAI,SAASmjE,GAAM,OAAOA,EAAKnqE,IAAI,IAAyB2f,OAAO,CAAC,wBAAwB,EAAE61H,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAACjwE,EAAO2xE,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2B1rB,GAAwG,OAAhFA,EAAIz+C,KAAK,iCAAiCnjE,KAAI,SAASmjE,GAAM,OAAOA,EAAKnqE,IAAI,IAAyB2f,OAAO,CAAC,qBAAqB,EAAE61H,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAACjwE,EAAOyxE,EAAoBE,EAAgBD,EAAaF,IAAaz9I,EAAOC,QAAQ,CAACk+I,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAAS/oE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI04I,EAAO7jE,EAAQ,YAAgBggE,EAAShgE,EAAQ,eAAe,SAASupE,EAAQC,EAAMp7G,GAAO,OAAOo7G,EAAM,IAAIp7G,EAAMs1G,QAAQt1G,EAAMs1G,OAAO8F,EAAM,EAAE,CAAC,SAASC,EAAgB1F,EAAK2F,GAAW,GAAe,QAAZ3F,EAAK12I,MAA8B,UAAhB02I,EAAK33I,UAAoB23I,EAAKjqI,KAAK,CAAC,GAAG4vI,EAAW,MAAM,IAAI31I,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZgwI,EAAK12I,MAA8B,QAAhB02I,EAAK33I,UAAkB23I,EAAKjqI,KAAK,CAAC,IAAI4vI,EAAW,MAAM,IAAI31I,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAO21I,CAAS,CAAC,SAASC,EAAWtwI,EAAEC,GAAG,OAAOD,EAAEqqI,OAAOpqI,EAAEoqI,MAAM,CAAC,SAASkG,EAAOvtB,GAAK,IAAIn/F,EAAM,EAAc,MAATm/F,EAAI,KAAUn/F,EAAM,GAAE,IAAI1lB,EAAM6kH,EAAIvjH,QAAQ,KAAS22C,GAAa,IAATj4C,EAAW6kH,EAAIzqH,OAAO,EAAE4F,EAAM,MAAM,CAAC6kH,IAAIA,EAAI19G,MAAMue,EAAMuyB,GAAKrjD,SAAiB,IAAR8wB,EAAU,QAAQ,MAAM,CAA6hC,SAAS2sH,EAA0Bj8I,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,gBAAmM,MAAnLjyI,EAAIwlF,WAAW,CAAC0wD,KAAKl8I,EAAQk8I,KAAK72H,MAAM,KAAK,GAAG+4B,OAAO,GAAG3/C,GAAG,eAAe0O,QAAQnN,EAAQk8I,KAAKrF,YAAY,2BAA2B72I,EAAQk8I,KAAK99F,OAAO,EAAE,IAAI,iBAAuBp4C,CAAG,CAAC,SAASm2I,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACzG,OAAO,GAAOoG,OAAK,EAAOE,EAAiBt6I,SAAQ,SAAS06I,GAAgBN,EAAKG,EAASj+F,OAAOm+F,EAAmBzG,OAAO0G,EAAe1G,OAAOyG,EAAmBzG,SAAqC,UAA1B0G,EAAeh+I,UAAoB89I,GAAuC,QAA1BE,EAAeh+I,WAAmB89I,KAA0C,UAA1BE,EAAeh+I,SAAoBy9I,EAA0B,CAACC,KAAKA,IAA3+B,SAAmCl8I,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,gBAAyL,MAAzKjyI,EAAIwlF,WAAW,CAAC0wD,KAAKl8I,EAAQk8I,KAAK72H,MAAM,KAAK,GAAG5mB,GAAG,eAAe0O,QAAQnN,EAAQk8I,KAAKrF,YAAY,2BAA2B72I,EAAQk8I,KAAK99F,OAAO,EAAE,IAAI,iBAAuBp4C,CAAG,CAAsuBy2I,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAASr4I,OAAQk4I,EAAKG,EAASj+F,OAAOm+F,EAAmBzG,OAAO0G,EAAsBD,EAAmBzG,QAAWwG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAI9oI,EAAIrV,GAAU,IAAIk/B,EAAQ,GAAOo4G,GAAQ,EAAE,IAAiD,KAA9CA,EAAO6G,EAAIzxI,QAAQ2I,EAAIiiI,EAAO,KAAmBp4G,EAAQv7B,KAAK,CAAC2zI,OAAOA,EAAOt3I,SAASA,WAA4B,IAAVs3I,GAAa,OAAOp4G,CAAO,CAAC,SAASk/G,EAAOC,GAAmB,IAAI/D,EAAMj7I,KAAKA,KAAKg/I,kBAAkBA,EAAkBh/I,KAAKi/I,KAAK,GAAGj/I,KAAKk/I,gBAAgB,SAAS3G,GAAY0C,EAAMgE,KAAKhE,EAAM+D,kBAAkB1wI,KAAK,IAAI,IAAI2pI,EAAO,EAAEgD,EAAMkE,OAAOlE,EAAM+D,kBAAkB7wI,KAAI,SAASmqI,GAA0B,OAApBL,GAAQK,EAAKnyI,QAAqBmyI,EAAKnyI,MAAM,IAAG,IAAIo4I,EAAiBhK,EAASuF,aAAa,CAAC+E,EAAc5D,EAAMgE,KAAK1G,EAAW9mH,MAAM,SAASotH,EAAc5D,EAAMgE,KAAK1G,EAAWv0F,IAAI,SAASr2C,KAAKuwI,GAAYI,EAAuBC,EAAiBtD,EAAMgE,MAAM,IAAIG,EAAgB,CAAC3tH,MAAM8mH,EAAW9mH,MAAMtrB,OAAO69C,IAAIu0F,EAAWv0F,IAAI79C,QAAYk5I,EAAQ,EAAMC,EAAe,EAAErE,EAAMZ,OAAOY,EAAMkE,OAAOhxI,KAAI,SAAS8pI,EAAO5kI,GAAkI,IAA/H,IAAI0qI,EAAM,CAAC9F,EAAOA,EAAOj4I,KAAKg/I,kBAAkB3rI,GAAGlN,QAAYo5I,EAAYv/I,KAAKg/I,kBAAkB3rI,GAAOmsI,EAAmB,GAASF,EAAef,EAAiBp4I,QAAQ23I,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmBl7I,KAAKi6I,EAAiBe,IAAiBA,IAAiB,IAAI/3H,EAAM,GAAO82E,EAAO,EAAKghD,EAAQ,IAAGhhD,EAAOghD,EAAQA,EAAQ,GAAEG,EAAmBv7I,SAAQ,SAASw7I,GAAmB,IAAI98I,EAAM48I,EAAYh/F,OAAO89C,EAAOohD,EAAkBxH,OAAOA,EAAO55C,GAAW17F,EAAMwD,OAAO,GAAGohB,EAAMjjB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQ4kB,EAAMjjB,KAAK,CAAC1C,KAAK,YAAYjB,SAAS8+I,EAAkB9+I,WAAW09F,EAAOohD,EAAkBxH,OAAOA,EAAOmH,EAAgBK,EAAkB9+I,SAAS,IAAG0+I,EAAQhhD,EAAOkhD,EAAYp5I,OAAO,IAAIxD,EAAM48I,EAAYh/F,OAAO89C,GAAoE,OAAzD17F,EAAMwD,OAAO,GAAGohB,EAAMjjB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe4kB,CAAK,GAAE0zH,EAAM,CAAC,CAACx7I,EAAOC,QAAQ,CAAC6X,MAAM,SAAemoI,EAAUnH,GAAY,IAAI0F,GAAU,EAAUe,EAAkB,GAAGU,EAAUz7I,SAAQ,SAASq0I,IAAM2F,EAAUD,EAAgB1F,EAAK2F,KAAqC,YAAZ3F,EAAK12I,MAAkBo9I,EAAkB16I,KAAKg0I,EAAK31I,MAAO,IAAG,IAAI+uE,EAAO,IAAIqtE,EAAOC,GAAmBttE,EAAOwtE,gBAAgB3G,GAAY,IAAIoH,EAAS,GAAO5zI,EAAM,EAAoW,OAAlW2zI,EAAUz7I,SAAQ,SAASq0I,GAAM2F,EAAUD,EAAgB1F,EAAK2F,GAA0B,YAAZ3F,EAAK12I,OAAkB02I,EAAK33I,SAASs9I,EAAU,YAAY,cAAgBA,GAAuB,YAAZ3F,EAAK12I,MAAkBuL,MAAMgsC,UAAU70C,KAAKqkC,MAAMg3G,EAASjuE,EAAO2oE,OAAOtuI,GAAOoC,KAAI,SAAS2T,GAAiD,MAAlC,YAATA,EAAElgB,OAAkBkgB,EAAEnhB,SAAS,aAAmBmhB,CAAC,KAAI/V,KAAa4zI,EAASr7I,KAAKg0I,EAAM,IAAUqH,CAAQ,EAAEC,SAAS,SAAkB9wE,EAAQ+wE,GAAS,IAAIC,EAApgJ,SAAoBhxE,EAAQixE,EAAeC,GAAuU,IAArT,IAAI3hD,EAAO,EAAM4hD,EAAcnxE,EAAQ3oE,OAAW+5I,EAAW3L,EAASuF,aAAa,CAACiG,EAAe5xI,KAAI,SAASyiH,GAAK,MAAM,CAACA,IAAIA,EAAIviH,MAAK,EAAK,IAAG2xI,EAAiB7xI,KAAI,SAASyiH,GAAK,MAAM,CAACA,IAAIA,EAAIviH,MAAK,EAAM,MAAKuoI,QAAO,SAASsJ,EAAWjkH,GAA4B,OAAzBikH,EAAWjkH,EAAE20F,KAAK30F,EAAE5tB,KAAY6xI,CAAU,GAAE,CAAC,GAAOC,EAAa,GAAS9hD,EAAO4hD,IAA+D,KAAhD5hD,EAAOvvB,EAAQzhE,QAAQ,IAAIgxF,KAA5B,CAA0D,IAAI45C,EAAO55C,EAAOA,EAAOvvB,EAAQzhE,QAAQ,IAAIgxF,GAAQ,IAAI+hD,EAAQtxE,EAAQ57D,MAAM+kI,EAAO55C,EAAO,GAAOgiD,EAAQlC,EAAOiC,GAASxvB,EAAIyvB,EAAQzvB,IAAIjwH,EAAS0/I,EAAQ1/I,SAAa0N,EAAK6xI,EAAWtvB,GAAc,MAANviH,GAAqB8xI,EAAa77I,KAAK,CAAC1C,KAAK,MAAMjB,SAASA,EAAS0N,KAAKA,EAAK4pI,OAAOA,EAAOt1I,MAAMy9I,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAWxxE,EAAQ+wE,EAAQxxI,KAAKwxI,EAAQU,OAAWliD,EAAO,EAAMg8C,EAAOyF,EAAQlJ,QAAO,SAASyD,EAAO13G,GAAO,IAAIhgC,EAAMmsE,EAAQvuB,OAAO89C,EAAO17D,EAAMs1G,OAAO55C,GAA4K,OAAjK17F,EAAMwD,OAAO,GAAGk0I,EAAO/1I,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQ07F,EAAO17D,EAAMs1G,OAAOt1G,EAAMhgC,MAAMwD,cAAcw8B,EAAMs1G,OAAUt1G,EAAMhgC,MAAMwD,OAAO,GAAGk0I,EAAO/1I,KAAKq+B,GAAc03G,CAAM,GAAE,IAAQ13I,EAAMmsE,EAAQvuB,OAAO89C,GAAqE,OAA1D17F,EAAMwD,OAAO,GAAGk0I,EAAO/1I,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe03I,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAAS9lE,EAAQ90E,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiB8gJ,GAAM,IAAIC,EAAc5sI,KAAKC,UAAU4sI,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAI3qH,EAAK0qH,EAAc1tI,WAAW,OAAOgjB,KAAQ2qH,EAAMA,EAAM3qH,GAAM2qH,EAAM3qH,GAAMyqH,EAAK73G,MAAM3oC,KAAK+S,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASwhE,EAAQ90E,EAAOC,GAAS,aAAa,SAASihJ,EAAiB5G,EAAOpzF,GAAuB,IAAhB,IAAIi6F,GAAU,EAAUvtI,EAAE,EAAEiB,EAAEylI,EAAO5zI,OAAOkN,EAAEiB,EAAEjB,IAAQszC,EAAMtzC,IAAI0mI,EAAO1mI,GAAGlN,UAAgC,IAAZy6I,GAAe7G,EAAO1mI,GAAGszC,EAAMtzC,IAAI4kI,OAAO8B,EAAO6G,GAAUj6F,EAAMi6F,IAAW3I,UAAQ2I,EAASvtI,GAAG,IAAe,IAAZutI,EAAe,MAAM,IAAIt4I,MAAM,qBAAqB,OAAOs4I,CAAQ,CAACnhJ,EAAOC,QAAQ,SAASq6I,GAAQ,IAAI8G,EAAY9G,EAAOnD,QAAO,SAAS35F,EAAI+8F,GAAO,OAAO/8F,EAAI+8F,EAAM7zI,MAAM,GAAE,GAAG4zI,EAAOA,EAAOjxI,QAAO,SAASkxI,GAAO,OAAOA,EAAM7zI,OAAO,CAAC,IAA6F,IAA1F,IAAI26I,EAAY,IAAI3zI,MAAM0zI,GAAiBl6F,EAAMozF,EAAO5rI,KAAI,WAAW,OAAO,CAAC,IAAOkF,EAAE,EAAQA,GAAGwtI,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiB5G,EAAOpzF,GAAOm6F,EAAYztI,GAAG0mI,EAAOgH,GAAYp6F,EAAMo6F,IAAap6F,EAAMo6F,KAAc1tI,GAAG,CAAC,OAAOytI,CAAW,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvsE,EAAQ90E,EAAOC,GAAS,aAAa,SAASshJ,IAAW,CAAC,SAASC,EAAS5tI,GAAG,OAAOA,CAAC,CAAC5T,EAAOC,QAAQ,SAASD,GAAQ,IAAI2E,EAAS,CAACyV,IAAImnI,EAASzpI,MAAMypI,EAASt1E,OAAOs1E,EAASE,UAAUF,EAASnF,mBAAmBoF,EAAS/E,eAAe+E,EAASE,UAAUF,GAAU,GAAG9sI,OAAOC,KAAKhQ,GAAUg9I,OAAM,SAAS/8I,GAAK,OAAO5E,EAAO4E,EAAI,IAAI,MAAM,IAAIiE,MAAM,2FAAgL,OAArF6L,OAAOC,KAAKhQ,GAAUH,SAAQ,SAASI,GAAK5E,EAAO4E,GAAK5E,EAAO4E,IAAMD,EAASC,EAAI,IAAU5E,CAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS80E,EAAQ90E,EAAOC,GAAS,aAAa,IAA+B2hJ,EAAU9sE,EAAQ,gBAAoBggE,EAAShgE,EAAQ,gBAAoBumE,EAAQvmE,EAAQ,qBAAuD+sE,EAArB/sE,EAAQ,aAAyC+sE,mBAAuBlJ,EAAO7jE,EAAQ,aAA+V,SAASgtE,EAAkCp/I,GAAS,IAAIs2H,EAAKt2H,EAAQs2H,KAAStwH,EAAI,IAAIiwI,EAAOgC,gBAAgB,0CAA4O,MAAlMjyI,EAAIwlF,WAAW,CAAC/sF,GAAG,yCAAyCo4I,YAAY,YAAYvgB,EAAK,GAAG91H,MAAM,2BAA2B81H,EAAK,GAAG91H,MAAM,IAAI6+I,WAAW/oB,EAAK,GAAG91H,MAAM8+I,WAAWhpB,EAAK,GAAG91H,OAAawF,CAAG,CAAC,SAASu5I,EAAmBpJ,GAAM,OAAOA,EAAKqJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAIr5I,MAAM,uDAAuDgwI,EAAKqJ,SAAS,KAAK,CAAC,SAASC,EAASjH,GAAQ,GAAmB,IAAhBA,EAAOx0I,OAAY,MAAM,GAA4C,IAAzC,IAAI07I,EAAU,EAAMC,EAAWnH,EAAO,GAAWtnI,EAAE,EAAEA,EAAEsnI,EAAOx0I,OAAOkN,IAAI,CAAC,IAAI0uI,EAAapH,EAAOtnI,GAAoD,GAAe,KAAhEwuI,GAAWH,EAAmBK,EAAazJ,OAAuB,CAAIyJ,EAAazJ,KAAK31I,QAAQm/I,EAAWxJ,KAAK31I,OAAiC,KAA1Bo/I,EAAazJ,KAAK31I,OAAY4+I,EAAkC,CAAC9oB,KAAK,CAACqpB,EAAWxJ,KAAKyJ,EAAazJ,QAAQ,IAAI0J,EAAMJ,EAASjH,EAAOznI,MAAMG,EAAE,IAC9v+B,MAAM,CAAC,CAACyuI,EAAWC,IAAej7H,OAAOk7H,EAAM,CAAC,CAAC,IAAI1J,EAAKwJ,EAAWxJ,MAD857B,SAAqCn2I,GAAS,IAAIw/I,EAASx/I,EAAQw/I,SAAa1lH,EAAa,UAAX0lH,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAex5I,EAAI,IAAIiwI,EAAOgC,gBAAgB6H,EAAE,SAAarxB,EAAIzuH,EAAQm2I,KAAK31I,MAA2F,MAArFwF,EAAIwlF,WAAW,CAAC/sF,GAAGq7B,EAAE,QAAQ+8G,YAAY,qBAAqBpoB,EAAI,OAAO30F,EAAEoiH,KAAKztB,GAAWzoH,CAAG,CAC1u8B+5I,CAA4B,CAAC5J,KAAKA,EAAKqJ,SAASrJ,EAAKqJ,UAAU,CAAC,IAAItE,EAAgB,CAACl2I,KAAK,kBAAkBg6I,UAAU,SAAmB9G,EAAO8H,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAAcxG,EAAOuG,EAD+86B,aAC376B7G,GAAQM,EAAOA,EAAOxsI,KAAI,SAASk0I,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnCjH,EAAO0G,EAAU1G,IAAuC4H,EAAcD,EAAMn0I,KAAI,SAASq0I,GAAM,IAAIC,EAASD,EAAK,GAAGlK,KAAKmK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmBjH,EAAOnnI,MAAMsvI,EAAK,GAAGvK,OAAOuK,EAAK,GAAGvK,UAAawK,EAA4K,CAAnHlO,EAAS5yF,QAAQ04F,EAAOoI,EAASD,EAAK,GAAGvK,QAAkB1D,EAAS3yF,SAASy4F,EAAOoI,EAASD,EAAK,GAAGvK,SAA9I,CAACuK,EAAK,GAAGvK,OAAOuK,EAAK,GAAGvK,OAAgJ,IAAOyK,EAAiB,EAAMC,OAAW,EAAO,OAAOtI,EAAOzD,QAAO,SAASgM,EAAUtK,EAAKjlI,GAAG,IAAIwvI,EAAOH,EAAiBJ,EAAMn8I,QAAQo8I,EAAcG,GAAkB,IAAIrvI,EAAMmvI,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAUt+I,KAAKg0I,GAAasK,EAAiH,GAApGE,EAAa,KAAKzvI,IAAGsvI,EAAW,IAAMH,EAAK,GAAGvK,SAAS5kI,GAAGmvI,EAAK,GAAGvK,SAAS5kI,GAAGsvI,EAAWr+I,KAAKg0I,GAASwK,EAAa,KAAKzvI,EAAE,CAAC,IAAI0vI,EAAS1I,EAAOmI,EAAK,GAAGvK,eAAe8K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAUt+I,KAAKy+I,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAGnjJ,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQuC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,GAAG,oBAAoB,GAAG,YAAY,KAAK,GAAG,CAAC,SAAS9oE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,gBAAoB0uE,EAAe,oBAAwBnI,EAAQvmE,EAAQ,qBAAyB2uE,EAAW,OAAWhG,EAAW,CAAC/1I,KAAK,aAAaoQ,MAAM,SAAe4rI,GAAoB,IAAI1jJ,EAAOyjJ,EAAethJ,EAAK,cAAc,MAA2B,MAAxBuhJ,EAAmB,GAAgB,CAACvhJ,KAAKA,EAAKe,MAAMwgJ,EAAmB5iG,OAAO,GAAGkiG,SAAS,OAAOhjJ,OAAOA,EAAOkiJ,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAACvhJ,KAAKA,EAAKe,MAAMwgJ,EAAmB5iG,OAAO,GAAGkiG,SAAS,OAAOhjJ,OAAOA,EAAOkiJ,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAACvhJ,KAAKA,EAAKe,MAAMwgJ,EAAmB5iG,OAAO,GAAG9gD,OAAOA,EAAOkiJ,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAACvhJ,KAAKA,EAAKe,MAA9HwgJ,EAAmBnwI,QAAQiwI,EAAe,MAAgGR,SAA7EU,EAAmBnwI,QAAQiwI,EAAe,MAAqDxjJ,OAAOA,EAAOkiJ,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAUhJ,GAAQ,GAAe,eAAZgJ,EAAiC,OAAOhJ,EAAOzD,QAAO,SAASne,EAAK6f,EAAKL,GAAqG,MAA9E,gBAAZK,EAAK12I,MAAsB02I,EAAK74I,SAASyjJ,GAAYzqB,EAAKn0H,KAAK,CAACg0I,KAAKA,EAAKL,OAAOA,IAAgBxf,CAAI,GAAE,GAAG,EAAE/sD,OAAO,SAAgB4sE,EAAKn2I,GAAS,GAAgB,iBAAZm2I,EAAK12I,MAAsB02I,EAAK74I,SAASyjJ,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjEnhJ,EAAQohJ,aAAaC,SAASlL,EAAK31I,OAAzQ,SAAkBkuH,GAAO,IAAI0yB,EAAaphJ,EAAQohJ,aAAaE,sBAAsB5yB,EAAMynB,EAAK31I,OAAO2gJ,EAAWh/I,KAAKnC,EAAQupE,OAAO6oE,EAASiE,aAAa,CAAC,EAAEr2I,EAAQ,CAAC44I,SAASzC,EAAK0K,UAAUvqB,KAAK,CAAC,EAAE8qB,aAAaA,KAAgB,GAAmDjL,EAAK8K,UAAgB,CAACzgJ,MAAM2gJ,EAAWh1I,KAAK,IAAI,GAAG7O,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQoC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAAS3oE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAShgE,EAAQ,gBAAoB6jE,EAAO7jE,EAAQ,aAAiB2uE,EAAW,SAAapI,EAAQvmE,EAAQ,qBAAkW,SAASmvE,EAASvB,GAAM,IAAI7J,EAAK6J,EAAK7J,KAAKlpC,EAAK+yC,EAAK/yC,KAAK1L,EAAMy+C,EAAKz+C,MAAMigD,EAAWxB,EAAKwB,WAAW53I,EAAMo2I,EAAKp2I,MAAU63I,EAAeD,EAAWzwI,MAAMk8F,EAAK,EAAE1L,GAAsO,OAA/NkgD,EAAe3/I,SAAQ,SAAS6d,EAAEzO,GAAMA,IAAItH,EAAMqjG,EAAK,IAAsB,gBAATttF,EAAElgB,MAA+B,YAATkgB,EAAElgB,MAA+B,cAAbkgB,EAAEnhB,WAAxmB,SAAgDwB,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,gDAAoDxpB,EAAIzuH,EAAQm2I,KAAK31I,MAAkK,MAA5JwF,EAAIwlF,WAAW,CAAC/sF,GAAG,+CAA+Co4I,YAAY,WAAWpoB,EAAIytB,KAAKl8I,EAAQm2I,KAAK31I,MAAMihJ,eAAezhJ,EAAQyhJ,gBAAsBz7I,CAAG,CAAoT07I,CAAuC,CAACD,eAAeA,EAAetL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIwL,EAAa,WAAW,SAASA,KAA5hC,SAAyBh9F,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgB91I,KAAK8jJ,GAAc9jJ,KAAKmH,KAAK,cAAc,CAAyvB,OAAxvBwtI,EAAamP,EAAa,CAAC,CAACz/I,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQuyI,GAAgE,OAAjD10I,KAAKk7I,eAAexG,EAAcwG,eAAsB/4I,CAAO,GAAG,CAACkC,IAAI,QAAQ1B,MAAM,SAAewgJ,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAACvhJ,KAAjE,cAA2Ee,MAAMwgJ,EAAmB5iG,OAAO,GAAG9gD,OAAOyjJ,EAAW,GAAG,CAAC7+I,IAAI,YAAY1B,MAAM,SAAmB03I,GAAQ,OAAO9F,EAASoG,OAAOoJ,YAAY1J,EAAO,CAAC6I,WAAWA,EAAWQ,SAASA,EAASjB,SAASziJ,KAAKk7I,eAAeuC,WAAW,GAAG,CAACp5I,IAAI,SAAS1B,MAAM,SAAgB21I,EAAKn2I,GAAS,GAAGm2I,EAAK74I,SAASyjJ,EAAY,OAAO,KAAK,IAAIvgJ,EAAMR,EAAQohJ,aAAat3I,SAASqsI,EAAK31I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQk2I,WAAWC,IAAY,CAAC31I,MAAMA,EAAM,KAAYmhJ,CAAY,CAA12B,GAA82BrkJ,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQ,IAAIgJ,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAASvvE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI4F,EAAQvmE,EAAQ,qBAAyByvE,EAAO,WAAW,SAASA,KAAxN,SAAyBl9F,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgB91I,KAAKgkJ,GAAQhkJ,KAAKmH,KAAK,QAAQ,CAA4V,OAA3VwtI,EAAaqP,EAAO,CAAC,CAAC3/I,IAAI,MAAM1B,MAAM,SAAamV,GAAQA,EAAIijI,WAAU/6I,KAAK+6I,SAASjjI,EAAIijI,UAAsB,MAAVjjI,EAAIjO,OAAY7J,KAAK6J,KAAKiO,EAAIjO,KAAK,GAAG,CAACxF,IAAI,iBAAiB1B,MAAM,SAAwBs5I,GAAQ,IAAIhB,EAAMj7I,KAAK,OAAOmU,OAAOC,KAAKpU,KAAK+6I,UAAUnE,QAAO,SAASqF,EAAOz1G,GAA+C,OAAzCy1G,EAAOz1G,GAAM,CAACA,KAAKA,EAAK38B,KAAKoxI,EAAMpxI,MAAaoyI,CAAM,GAAEA,EAAO,KAAY+H,CAAM,CAArb,GAAybvkJ,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQ,IAAIkJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAASzvE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIo7I,EAAQvmE,EAAQ,qBAAyB0vE,EAAc,CAAC98I,KAAK,sBAAsBg6I,UAAU,SAAmB9G,GAAQ,IAAIl2F,EAAM,GAAO+/F,GAAQ,EAAUp2I,EAAOusI,EAAOzD,QAAO,SAASyD,EAAO/B,GAA8X,MAAzW,QAAZA,EAAK12I,MAA8B,UAAhB02I,EAAK33I,UAAoB23I,EAAKjqI,MAAmB,UAAbiqI,EAAK31I,QAAiBuhJ,GAAQ,GAAQA,GAAwB,gBAAZ5L,EAAK12I,MAAuB02I,EAAK74I,SAAQ0kD,EAAM,GAAGxhD,MAAM,8BAA6BwhD,EAAM7/C,KAAKg0I,IAAW+B,EAAO/1I,KAAKg0I,GAAqB,QAAZA,EAAK12I,MAA8B,QAAhB02I,EAAK33I,UAAkB23I,EAAKjqI,MAAmB,WAAbiqI,EAAK31I,QAAkBwK,MAAMgsC,UAAU70C,KAAKqkC,MAAM0xG,EAAOl2F,GAAO+/F,GAAQ,EAAM//F,EAAM,IAAUk2F,CAAM,GAAE,IAA6C,OAAzCltI,MAAMgsC,UAAU70C,KAAKqkC,MAAM76B,EAAOq2C,GAAcr2C,CAAM,GAAGrO,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQmJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAAS1vE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,eAAmBM,EAAO,CAACssE,UAAU,SAAmB9G,EAAOW,GAAS,SAASkG,EAAUmC,EAAUhJ,GAAQ,OAAOW,EAAQ7sI,KAAI,SAAS1O,GAAQ,OAAOA,EAAOyhJ,UAAUmC,EAAUhJ,EAAO,GAAE,CAA6J,OAA5J,SAAS8G,EAAU9G,GAAQ,OAAOW,EAAQpE,QAAO,SAASyD,EAAO56I,GAAQ,OAAOA,EAAO0hJ,UAAU9G,EAAO,CAAC8G,UAAUA,EAAUD,UAAUA,GAAW,GAAE7G,EAAO,CAAQ8G,CAAU9G,EAAO,EAAE9iI,MAAM,SAAe4sI,EAAMnJ,GAAyQ,IAAIoJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMvN,QAAO,SAASyD,EAAOiK,GAAO,MAAgB,cAAbA,EAAM1iJ,MAAoBwiJ,EAA+B,UAAjBE,EAAM3jJ,SAAuC,QAAjB2jJ,EAAM3jJ,UAA/b,SAAqBwiJ,EAAmB9I,GAAgC,IAAxB,IAAIkK,OAAa,EAAelxI,EAAE,EAAEiB,EAAE0mI,EAAQ70I,OAAOkN,EAAEiB,EAAEjB,IAA2E,GAA/CkxI,EAAXvJ,EAAQ3nI,GAAwBkE,MAAM4rI,GAA+D,OAA1B9I,EAAO/1I,KAAKigJ,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmB5O,EAASqF,WAAWuJ,GAAuD9I,IAASA,EAAO/1I,KAAK,CAAC1C,KAAK,cAAce,MAAMwgJ,IAAqBh2I,MAAMgsC,UAAU70C,KAAKqkC,MAAM0xG,EAAOgK,GAAWA,EAAU,GAAUhK,IAAO8I,EAAmB,GAAU9I,IAAU+J,GAA+B,YAAbE,EAAM1iJ,MAAmC,cAAjB0iJ,EAAM3jJ,SAAwBwiJ,GAAoBmB,EAAM3hJ,MAAW0hJ,EAAU//I,KAAKggJ,GAAcjK,IAAOA,EAAO/1I,KAAKggJ,GAAcjK,EAAM,GAAE,GAAG,GAAG56I,EAAOC,QAAQm1E,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASN,EAAQ90E,EAAOC,GAAS,aAAa,IAAI+kJ,EAAalwE,EAAQ,mBAAuBggE,EAAShgE,EAAQ,eAAu1B90E,EAAOC,QAAjmB,SAASgsE,EAAOvpE,GAA2J,OAAlJA,EAAQupE,OAAOA,EAAOvpE,EAAQ64I,QAAQ74I,EAAQ64I,QAAY74I,EAAQohJ,eAAcphJ,EAAQohJ,aAAakB,EAAaC,uBAAuBviJ,IAAgBA,EAAQ44I,SAAS5sI,KAAI,SAASmqI,GAAM,IAAIqM,EAAxc,SAAsBrM,EAAKn2I,GAAmC,IAA1B,IAAIwiJ,OAAe,EAAetxI,EAAE,EAAEiB,EAAEnS,EAAQ64I,QAAQ70I,OAAOkN,EAAEiB,EAAEjB,IAAgF,GAA5CsxI,EAAnBxiJ,EAAQ64I,QAAQ3nI,GAA0Bq4D,OAAO4sE,EAAKn2I,GAA4B,OAAOwiJ,EAAgB,OAAO,CAAK,CAA0OC,CAAatM,EAAKn2I,GAAS,GAAGwiJ,EAAgB,OAAOA,EAAehiJ,MAAM,GAAe,gBAAZ21I,EAAK12I,KAAqB,CAAC,IAAIe,EAAMR,EAAQohJ,aAAat3I,SAASqsI,EAAK31I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQk2I,WAAWC,IAAa/D,EAASsF,WAAWl3I,EAAM,CAAC,GAAe,YAAZ21I,EAAK12I,MAA8B,QAAZ02I,EAAK12I,KAAc,OAAO02I,EAAK31I,MAAM,MAAM,IAAI2F,MAAM,2BAA2BgwI,EAAK12I,KAAK,IAAI,IAAG0M,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASimE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIkD,EAAO7jE,EAAQ,YAAgBkwE,EAAa,WAAW,SAASA,EAAatiJ,IAAjO,SAAyB2kD,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgB91I,KAAKykJ,GAAczkJ,KAAK6kJ,UAAU1iJ,EAAQ0iJ,UAAU7kJ,KAAKuzB,UAAUpxB,EAAQoxB,UAAUvzB,KAAK60E,OAAO1yE,EAAQ0yE,MAAM,CAAmmE,OAAlmE8/D,EAAa8P,EAAa,CAAC,CAACpgJ,IAAI,WAAW1B,MAAM,SAAkBiuH,EAAI/+G,EAASuxI,GAAmC,OAAzBA,EAASA,IAAU,EAAapjJ,KAAK8kJ,cAAc9kJ,KAAKiM,SAAS2kH,GAAK/+G,EAASuxI,EAAS,GAAG,CAAC/+I,IAAI,oBAAoB1B,MAAM,SAA2BygJ,EAAS2B,EAAQpiJ,GAAUygJ,GAAU2B,EAAQpiJ,EAAO,GAAG,CAAC0B,IAAI,eAAe1B,MAAM,SAAsBA,EAAMf,GAAM,OAAc,MAAPe,IAAcA,GAAc,mBAAPf,GAAwC,IAAfe,EAAMwD,MAAU,GAAG,CAAC9B,IAAI,gBAAgB1B,MAAM,SAAuBA,EAAMoiJ,EAAQ3B,GAAU,IAAIxhJ,EAAKuS,OAAOglC,UAAUzkC,SAAS0kC,KAAKz2C,GAAWqiJ,EAAahlJ,KAAKuzB,UAAUvzB,KAAKilJ,KAAK,GAAGjlJ,KAAKklJ,aAAaviJ,EAAMf,GAAO,OAAO5B,KAAKmlJ,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAPpjJ,EAAqI,MAAU,oBAAPA,EAAiC5B,KAAKmlJ,mBAAmB/B,EAAS2B,EAAQpiJ,IAAkB,IAARA,EAAqB3C,KAAKmlJ,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQn0B,EAAJx9G,EAAE,EAAQA,EAAE1Q,EAAMwD,OAAOkN,IAAKw9G,EAAMluH,EAAM0Q,GAAGrT,KAAKmlJ,mBAAmB/B,EAAS2B,EAAQl0B,EAAiL,GAAG,CAACxsH,IAAI,WAAW1B,MAAM,SAAkBiuH,EAAIq0B,GAAKjlJ,KAAKilJ,IAAS,MAALA,EAAUjlJ,KAAKuzB,UAAUptB,OAAO,EAAE8+I,EAAI,IAAI98I,OAAI,EAAW0sE,OAAO,EAAW/mE,OAAO,EAAW+iH,EAAM7wH,KAAKuzB,UAAUvzB,KAAKilJ,KAAK,IAAIpwE,EAAO70E,KAAK60E,OAAO+7C,EAAkP,CAA7O,MAAMrhH,GAA8N,MAAvNpH,EAAI,IAAIiwI,EAAO4E,mBAAmB,oCAAuCrvD,WAAW,CAAC/sF,GAAG,iCAAiCgwH,IAAIA,EAAIooB,YAAY,gCAAgCpoB,EAAI,qBAAqBw0B,UAAU71I,GAAapH,CAAG,CAAC,IAAI2F,EAAO+mE,EAAOl/D,IAAIk7G,EAAM,CAACo0B,IAAIjlJ,KAAKilJ,IAAI1xH,UAAUvzB,KAAKuzB,WAAiQ,CAArP,MAAMhkB,GAAsO,MAA/NpH,EAAI,IAAIiwI,EAAO4E,mBAAmB,kCAAqCrvD,WAAW,CAAC/sF,GAAG,+BAA+Bo4I,YAAY,gCAAgCpoB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAIw0B,UAAU71I,GAAapH,CAAG,CAAC,OAAW,MAAR2F,GAAc9N,KAAKilJ,IAAI,EAAUjlJ,KAAKiM,SAAS2kH,EAAI5wH,KAAKilJ,IAAI,GAAUn3I,CAAM,GAAG,CAACzJ,IAAI,wBAAwB1B,MAAM,SAA+BkuH,EAAMD,GAAK,IAAIzuH,EAAQ,CAAC0iJ,UAAU7kJ,KAAK6kJ,UAAU3xI,MAAM,GAAGqgB,UAAUvzB,KAAKuzB,UAAUrgB,MAAM,IAA2H,OAAvH/Q,EAAQ0yE,OAAO70E,KAAK60E,OAAO1yE,EAAQoxB,UAAUvzB,KAAKuzB,UAAUzM,OAAO+pG,GAAO1uH,EAAQ0iJ,UAAU7kJ,KAAK6kJ,UAAU/9H,OAAO8pG,GAAY,IAAI6zB,EAAatiJ,EAAQ,KAAYsiJ,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAIttE,EAAOstE,EAAKttE,OAAO4jD,EAAK0pB,EAAK1pB,KAASt2H,EAAQ,CAAC0yE,OAAOA,EAAO4jD,KAAKA,EAAMt2H,UAAkB,IAA4B,OAAzBA,EAAQoxB,UAAU,CAACklG,GAAa,IAAIgsB,EAAatiJ,EAAQ,EAAE1C,EAAOC,QAAQ+kJ,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAASlwE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,eAAmB6jE,EAAO7jE,EAAQ,YAAgR,SAAS8wE,EAAiBrL,EAAMppB,GAAK,GAAkB,IAAfopB,EAAM7zI,OAAY,OAAO,EAAM,IAAsCm/I,EAA1BtL,EAAMA,EAAM7zI,OAAO,GAA4ByqH,IAAIrwE,OAAO,GAAOglG,EAAgB30B,EAAIrwE,OAAO,EAAEqwE,EAAIzqH,OAAO,GAAG,OAA+C,IAAxCm/I,EAAaj4I,QAAQk4I,EAAoB,CAAC,SAASC,EAAOxL,EAAMppB,GAA2B,OAAtBopB,EAAM11I,KAAK,CAACssH,IAAIA,IAAaopB,CAAK,CAAqkB,SAASyL,EAAUnN,EAAKqL,EAAWxhJ,GAAS,IAAIsgJ,EAASnK,EAAKmK,UAAUtgJ,EAAQsgJ,SAAa12I,EAAM43I,EAAWt2I,QAAQirI,GAAM,IAAImK,EAAU,OAAOkB,EAAW,IAAIjgD,OAAM,EAAO0L,OAAK,EAAO,IAAI1L,EAAM6wC,EAAS3yF,SAAS+hG,EAAWlB,EAAS12I,GAAOqjG,EAAKmlC,EAAS5yF,QAAQgiG,EAAWlB,EAAS12I,EAAkF,CAA3E,MAAMq5I,IAA75C,SAAmCjjJ,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,4BAAgCxpB,EAAIzuH,EAAQm2I,KAAK31I,MAA0H,MAApHwF,EAAIwlF,WAAW,CAAC/sF,GAAG,2BAA2Bo4I,YAAY,YAAYpoB,EAAI,IAAIw0B,UAAUjjJ,EAAQijJ,UAAU/G,KAAKztB,GAAWzoH,CAAG,CAAqqCu9I,CAA0B,CAACpN,KAAKA,EAAK8M,UAAUA,GAAW,CAAC,IAAIO,EAAUhC,EAAWzwI,MAAMk8F,EAAKrjG,GAAW65I,EAAWjC,EAAWzwI,MAAMnH,EAAM,EAAE23F,EAAM,GAAOmiD,EAAM1jJ,EAAQuhJ,SAAS,CAAC33I,MAAMA,EAAMusI,KAAKA,EAAKqN,UAAUA,EAAUC,WAAWA,EAAWx2C,KAAKA,EAAK1L,MAAMA,EAAMigD,WAAWA,IAA2H,MAArD,mBAAhDxvI,OAAOglC,UAAUzkC,SAAS0kC,KAAKysG,KAAmCA,EAAMtR,EAASuF,aAAa+L,IAActR,EAASuF,aAAa,CAAC6J,EAAWzwI,MAAM,EAAEk8F,GAAM,CAACy2C,GAAOlC,EAAWzwI,MAAMwwF,EAAM,IAAI,CAA4TjkG,EAAOC,QAAQ,CAACqkJ,YAA3U,SAAqBJ,EAAWxhJ,GAAyQ,OAA3OwhJ,EAAW/M,QAAO,SAAS1tI,EAASovI,GAA0F,MAArE,gBAAZA,EAAK12I,MAAsB02I,EAAK74I,SAAS0C,EAAQ+gJ,YAAYh6I,EAAS5E,KAAKg0I,GAAapvI,CAAQ,GAAE,IAAqBjF,SAAQ,SAASq0I,GAAMqL,EAAW8B,EAAUnN,EAAKqL,EAAWxhJ,EAAQ,IAAUwhJ,CAAU,EAAyCrC,mBAAn1C,SAA4B/5H,GAAiD,IAA1C,IAAIu+H,EAAvZ,SAA4Bv+H,GAA4H,IAArH,IAAiIqpG,EAA7H6H,EAAKlxG,EAAMze,QAAO,SAASwvI,GAAM,MAAmB,QAAZA,EAAK12I,IAAY,IAAGuM,KAAI,SAASmqI,GAAM,OAAOA,EAAK31I,KAAK,IAAOmL,EAAO,GAAWuF,EAAE,EAAMA,EAAEolH,EAAKtyH,OAAOkN,IAA6B,OAAxBu9G,EAAI6H,EAAKplH,IAAU,GAAagyI,EAAiBv3I,EAAO8iH,GAAM9iH,EAAOk/B,MAAWl/B,EAAO03I,EAAO13I,EAAO8iH,GAAkC,MAApBA,EAAIA,EAAIzqH,OAAO,KAAU2H,EAAO03I,EAAO13I,EAAO8iH,IAAM,OAAO9iH,CAAM,CAAoDi4I,CAAmBx+H,GAAelU,EAAE,EAAEA,EAAEyyI,EAAY3/I,OAAOkN,IAAmC,GAAqC,IAApDyyI,EAAYzyI,GAAiBu9G,IAAIvjH,QAAQ,SAAc,MAAM,OAAQ,OAAO,CAAK,EAAsqC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASknE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,eAAo7C,IAAIyxE,EAA75CzxE,EAAQ,YAA85C2jE,EAAxe,SAAoBppE,EAAQm3E,GAAc,IAAI7rI,EAAI,CAAC,EAAEA,EAAI00D,QAAQA,EAAQ10D,EAAI6rI,aAAaA,EAAa7rI,EAAI8rI,mBAAmB9rI,EAAI6rI,aAAa33I,KAAK,KAAK,IAAIg1C,EAAO,IAAIlhC,OAAO,QAAQhI,EAAI8rI,mBAAmB,wBAAwB9rI,EAAI8rI,mBAAmB,KAAK,KAAyL,OAApL9rI,EAAI0lI,QAAQvL,EAAS+F,aAAah3F,EAAOlpC,EAAI00D,SAAS10D,EAAI+rI,0BAA0B/rI,EAAI0lI,QAAQ3xI,KAAI,WAAW,OAAO,CAAC,IAAGiM,EAAIgsI,gBAAgBhsI,EAAI0lI,QAAQ3xI,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6BiM,GAAK,SAASisI,IAAkB,IAAIC,EAAG,CAACtM,MAAM7sI,MAAMgsC,UAAUjmC,MAAMkmC,KAAKrmC,YAAYuzI,EAAGtM,MAAMzlI,QAAQ,IAAIouB,EAAM2jH,EAAGtM,MAAM,GAAGsM,EAAGtM,MAAM,GAAGsM,EAAGtM,MAAMluG,QAAQnJ,GAAO2jH,EAAGtM,MAAMhtG,MAAM,IAAIirG,EAAOqO,EAAGtM,MAAMhtG,MAA4F,OAAtFs5G,EAAGrO,OAAOA,EAAOqO,EAAGtqH,OAAM,EAAK5hB,EAAI0lI,QAAQh0G,QAAQw6G,GAAIlsI,EAAIgsI,gBAAgBt6G,QAAQ,GAAU1xB,EAAI+rI,0BAA0Br6G,QAAQ,EAAE,EAAgC,IAA5B1xB,EAAI00D,QAAQzhE,QAAQ,OAAuC,IAA5B+M,EAAI00D,QAAQzhE,QAAQ,MAAW+M,EAAI00D,QAAQ97D,QAAQ,eAAeqzI,GAAiB,IAAIz2I,EAAE,IAAIwS,OAAO,kBAAkBhI,EAAI8rI,mBAAmB,MAAmY,OAA7X9rI,EAAI00D,QAAQ97D,QAAQpD,EAAEy2I,GAAmQz2I,EAAE,IAAIwS,OAAO,QAAQhI,EAAI8rI,mBAAmB,oBAAoB9rI,EAAI00D,QAAQ97D,QAAQpD,GAAtU,WAAwB,IAAI02I,EAAG,CAACtM,MAAM7sI,MAAMgsC,UAAUjmC,MAAMkmC,KAAKrmC,YAAYuzI,EAAGtM,MAAMhtG,MAAM,IAAIirG,EAAOqO,EAAGtM,MAAMhtG,MAAqF,OAA/Es5G,EAAGrO,OAAOA,EAAOqO,EAAGC,MAAK,EAAKnsI,EAAI0lI,QAAQx7I,KAAKgiJ,GAAIlsI,EAAIgsI,gBAAgB9hJ,KAAK,GAAU8V,EAAI+rI,0BAA0B7hJ,KAAK,EAAE,IAA4G8V,CAAG,CAAmcosI,CAAoBpsI,EAAI,IAAkC3a,EAAOC,QAAQ,SAASovE,EAAQm3E,GAAc,OAAO1R,EAAS7uI,UAAUsgJ,EAASl3E,EAAQm3E,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAAS1xE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAShgE,EAAQ,eAAmBkwE,EAAalwE,EAAQ,mBAAuBkyE,EAAWlyE,EAAQ,iBAAqB6jE,EAAO7jE,EAAQ,YAAgBmyE,EAAMnyE,EAAQ,WAAeoyE,EAAOpyE,EAAQ,eAAmBqyE,EAAQryE,EAAQ,eAAmP90E,EAAOC,QAAQ,WAAW,SAASg9I,EAAa5tE,EAAQ3sE,IAArqB,SAAyB2kD,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgB91I,KAAK08I,GAAc18I,KAAK6mJ,SAAS1kJ,GAASnC,KAAK8mJ,WAAW,CAACC,QAAQ,CAACxK,SAASv8I,KAAKu8I,YAAYv8I,KAAKqyB,KAAKy8C,EAAQ,CAAwsD,OAAvsD6lE,EAAa+H,EAAa,CAAC,CAACr4I,IAAI,OAAO1B,MAAM,SAAcmsE,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAI3mE,EAAI,IAAIiwI,EAAO6E,gBAAgB,4BAAoF,MAAxD90I,EAAIwlF,WAAW/sF,GAAG,sCAA4CuH,CAAG,CAACnI,KAAK8uE,QAAQA,CAAO,GAAG,CAACzqE,IAAI,UAAU1B,MAAM,SAAiB81H,GAA8H,OAAxHz4H,KAAKy4H,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAEz4H,KAAKujJ,aAAakB,EAAaC,uBAAuB,CAACjsB,KAAKz4H,KAAKy4H,KAAK5jD,OAAO70E,KAAK60E,SAAgB70E,IAAI,GAAG,CAACqE,IAAI,WAAW1B,MAAM,SAAkBR,GAASnC,KAAKu8I,SAASp6I,EAAQo6I,SAASv8I,KAAKg7I,QAAQ74I,EAAQ64I,QAAQh7I,KAAKk7I,eAAe/4I,EAAQ+4I,eAAe/mI,OAAOC,KAAKmgI,EAASnwI,UAAU+J,KAAI,SAAS9J,GAAKrE,KAAKqE,GAAmB,MAAdlC,EAAQkC,GAAWlC,EAAQkC,GAAKkwI,EAASnwI,SAASC,EAAI,GAAErE,KAAK,GAAG,CAACqE,IAAI,cAAc1B,MAAM,WAAuB,OAA/nCmsE,EAAmpC9uE,KAAK8uE,QAAhpCm3E,EAAwpCjmJ,KAAKk7I,eAAeqC,iBAA7mCzvI,EAArC24I,EAAW33E,EAAQm3E,GAAiCnG,QAAQ3xI,KAAI,SAASw0B,GAAO,OAAOA,EAAMq3G,MAAM,EAAE,IAAUzF,EAASqF,WAAWrF,EAASwE,cAAcjrI,EAAOQ,KAAK,MAA9N,IAAsBwgE,EAAQm3E,EAA+Dn4I,CAA8nC,GAAG,CAACzJ,IAAI,aAAa1B,MAAM,SAAoBmV,GAAK9X,KAAKg7I,QAAQ/2I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI/B,EAAI,GAAE,GAAG,CAACzT,IAAI,QAAQ1B,MAAM,WAAyc,OAAxb3C,KAAKgnJ,SAASN,EAAM9G,SAAS5/I,KAAK8uE,QAAQ,CAACzgE,KAAKrO,KAAKk7I,eAAeqC,iBAAiBgD,MAAMvgJ,KAAKk7I,eAAesC,oBAAoBx9I,KAAK8mJ,WAAW,CAACC,QAAQ,CAACC,SAAShnJ,KAAKgnJ,YAAYhnJ,KAAKmkJ,MAAMuC,EAAMnvI,MAAMvX,KAAKgnJ,SAAShnJ,KAAKu4I,YAAYv4I,KAAK8mJ,WAAW,CAACC,QAAQ,CAAC5C,MAAMnkJ,KAAKmkJ,SAASnkJ,KAAKq6I,OAAOsM,EAAOpvI,MAAMvX,KAAKmkJ,MAAMnkJ,KAAKg7I,SAASh7I,KAAK8mJ,WAAW,CAACC,QAAQ,CAAC1M,OAAOr6I,KAAKq6I,UAAUr6I,KAAK2jJ,WAAWgD,EAAOxF,UAAUnhJ,KAAKq6I,OAAOr6I,KAAKg7I,SAAgBh7I,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAsR,OAApQ3C,KAAK8mJ,WAAW,CAACC,QAAQ,CAACpD,WAAW3jJ,KAAK2jJ,cAAc3jJ,KAAK8uE,QAAQ83E,EAAQ,CAAC7L,SAAS/6I,KAAK2jJ,WAAWlrB,KAAKz4H,KAAKy4H,KAAKuiB,QAAQh7I,KAAKg7I,QAAQnmE,OAAO70E,KAAK60E,OAAOwjE,WAAWr4I,KAAKq4I,WAAWkE,SAASv8I,KAAKu8I,WAAWv8I,KAAK8mJ,WAAW,CAACC,QAAQ,CAACj4E,QAAQ9uE,KAAK8uE,WAAkB9uE,IAAI,KAAY08I,CAAY,CAA74D,EAAg5D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAASnoE,EAAQ90E,EAAOC,GAAS,SAASixE,EAAUxuE,GAASnC,KAAKmC,QAAQA,GAAS,CAAC8kJ,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAalnJ,KAAKmnJ,OAAM,CAAK,CAAC,SAASxmJ,EAASsmJ,EAAQ1kJ,GAAMA,EAAK6kJ,WAAWH,EAAQG,WAAW7kJ,EAAK8kJ,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAAShzI,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAEizI,UAAU,IAAI,UAAUjzI,EAAE8yI,WAAW,QAAQ9yI,EAAE+yI,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMh2H,EAAMtrB,GAAQ,MAAiB,iBAAPshJ,EAAwBA,EAAMlnG,OAAO9uB,EAAMtrB,GAAgBshJ,EAAMthJ,QAAQsrB,EAAMtrB,GAAQsrB,EAAc,IAAIi2H,KAAK/jF,KAAKzoD,OAAOusI,EAAMh2H,EAAMtrB,GAAQ,GAAUshJ,CAAM,CAAiP,SAASE,EAAcC,EAAOrlJ,GAAUqlJ,EAAOC,eAAkDD,EAAOC,eAAe/9D,YAAYvnF,GAApEqlJ,EAAO53B,IAAIlmC,YAAYvnF,EAAmD,CAA3/IouE,EAAUx3B,UAAU03B,gBAAgB,SAASi3E,EAAOr2B,GAAU,IAAItvH,EAAQnC,KAAKmC,QAAY4lJ,EAAI,IAAIC,EAAcC,EAAW9lJ,EAAQ8lJ,YAAY,IAAIf,EAAe/N,EAAah3I,EAAQg3I,aAAiB8N,EAAQ9kJ,EAAQ8kJ,QAAYiB,EAAa/lJ,EAAQgmJ,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAI5O,aAA2a,SAA2BwP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI9O,EAAa,CAAC,EAAMyP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMzkJ,GAAK,IAAIqM,EAAGi4I,EAAUtkJ,IAASqM,GAAIk4I,IAAYl4I,EAAqB,GAAlBi4I,EAAUxiJ,OAAU,SAAS4Y,GAAK4pI,EAAUtkJ,EAAI0a,EAAI,EAAE4pI,GAAUxP,EAAa90I,GAAKqM,GAAI,SAASqO,GAAKrO,EAAG,WAAWrM,EAAI,MAAM0a,EAAIuoI,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqB3P,CAAY,CAAj7B4P,CAAkB5P,EAAa8O,EAAWhB,GAASc,EAAIE,WAAW9lJ,EAAQ8lJ,YAAYA,EAAc,aAAa5lI,KAAKovG,KAAW22B,EAAUY,KAAK,IAAIZ,EAAUjvF,KAAK,IAAI+uF,EAAa,IAAI,gCAA+BA,EAAahiH,IAAIgiH,EAAahiH,KAAK,uCAA0C4hH,EAAQC,EAAIxwI,MAAMuwI,EAAOI,EAAaE,GAAgBL,EAAI5O,aAAa5pI,MAAM,sBAA6B04I,EAAWj4B,GAAG,EAAuqBk3B,EAAW/tG,UAAU,CAAC8vG,cAAc,WAAWjpJ,KAAKgwH,KAAI,IAAKk5B,GAAmBC,eAAe,KAAK,KAAK,MAASnpJ,KAAKinJ,UAASjnJ,KAAKgwH,IAAIo5B,YAAYppJ,KAAKinJ,QAAQM,SAAS,EAAEp9F,aAAa,SAASitF,EAAaiS,EAAUC,EAAMzqI,GAAO,IAAImxG,EAAIhwH,KAAKgwH,IAAQxjH,EAAGwjH,EAAIu5B,gBAAgBnS,EAAakS,GAAOD,GAAeG,EAAI3qI,EAAM1Y,OAAOwhJ,EAAc3nJ,KAAKwM,GAAIxM,KAAK6nJ,eAAer7I,EAAGxM,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQz6I,GAAI,IAAI,IAAI6G,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAAI,CAAK+jI,EAAav4H,EAAM4qI,OAAOp2I,GAA9B,IAAqC1Q,EAAMkc,EAAM5S,SAASoH,GAAmCsK,GAA5B2rI,EAAMzqI,EAAM6qI,SAASr2I,GAAY28G,EAAI25B,kBAAkBvS,EAAakS,IAAOtpJ,KAAKinJ,SAAStmJ,EAASke,EAAM+qI,WAAWv2I,GAAGsK,GAAMA,EAAKhb,MAAMgb,EAAKksI,UAAUlnJ,EAAM6J,EAAGs9I,iBAAiBnsI,EAAK,CAAC,EAAEosI,WAAW,SAAS3S,EAAaiS,EAAUC,GAAO,IAAIU,EAAQhqJ,KAAK6nJ,eAA2BmC,EAAQ35B,QAAQrwH,KAAK6nJ,eAAemC,EAAQ9gE,UAAU,EAAE+gE,mBAAmB,SAAStvI,EAAOuvI,GAAK,EAAEC,iBAAiB,SAASxvI,GAAQ,EAAEyvI,sBAAsB,SAASnkG,EAAOp8C,GAAM,IAAIwgJ,EAAIrqJ,KAAKgwH,IAAIs6B,4BAA4BrkG,EAAOp8C,GAAM7J,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQoD,GAAK1C,EAAc3nJ,KAAKqqJ,EAAI,EAAEE,oBAAoB,SAASC,EAAG/4H,EAAMtrB,GAAQ,EAAEskJ,WAAW,SAAShD,EAAMh2H,EAAMtrB,GAA8C,GAAtCshJ,EAAMD,EAAU7+G,MAAM3oC,KAAK+S,WAAoB,CAAC,GAAG/S,KAAKmnJ,MAAO,IAAIuD,EAAS1qJ,KAAKgwH,IAAI26B,mBAAmBlD,QAAgBiD,EAAS1qJ,KAAKgwH,IAAInmC,eAAe49D,GAAUznJ,KAAK6nJ,eAAgB7nJ,KAAK6nJ,eAAe/9D,YAAY4gE,GAAkB,QAAQroI,KAAKolI,IAAQznJ,KAAKgwH,IAAIlmC,YAAY4gE,GAAU1qJ,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAASzjJ,GAAM,EAAE0jJ,YAAY,WAAW7qJ,KAAKgwH,IAAI86B,WAAW,EAAEpC,mBAAmB,SAASzB,IAAYjnJ,KAAKinJ,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAEx/B,QAAQ,SAAS6/B,EAAMh2H,EAAMtrB,GAAQshJ,EAAMD,EAAU7+G,MAAM3oC,KAAK+S,WAAW,IAAIg4I,EAAK/qJ,KAAKgwH,IAAIg7B,cAAcvD,GAAOznJ,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQ8D,GAAMpD,EAAc3nJ,KAAK+qJ,EAAK,EAAEE,WAAW,WAAWjrJ,KAAKmnJ,OAAM,CAAI,EAAE+D,SAAS,WAAWlrJ,KAAKmnJ,OAAM,CAAK,EAAEgE,SAAS,SAAShkJ,EAAKikJ,EAAS7D,GAAU,IAAI8D,EAAKrrJ,KAAKgwH,IAAIs7B,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmBpkJ,EAAKikJ,EAAS7D,GAAUvnJ,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQuE,GAAI7D,EAAc3nJ,KAAKwrJ,EAAG,CAAC,EAAEC,QAAQ,SAASl8I,GAAO/G,QAAQC,KAAK,qBAAqB8G,EAAM+3I,EAAStnJ,KAAKinJ,SAAS,EAAE13I,MAAM,SAASA,GAAO/G,QAAQ+G,MAAM,mBAAmBA,EAAM+3I,EAAStnJ,KAAKinJ,SAAS,EAAEyE,WAAW,SAASn8I,GAA2E,MAApE/G,QAAQ+G,MAAM,wBAAwBA,EAAM+3I,EAAStnJ,KAAKinJ,UAAgB13I,CAAK,GAA8T,+JAA+JyD,QAAQ,QAAO,SAAS3O,GAAK6iJ,EAAW/tG,UAAU90C,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAI2jJ,EAAUzzE,EAAQ,SAASyzE,UAAckB,EAAkBxpJ,EAAQwpJ,kBAAkB30E,EAAQ,SAAS20E,kBAAkBxpJ,EAAQy4I,cAAc5jE,EAAQ,SAAS4jE,cAAcz4I,EAAQixE,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAAS4D,EAAQ90E,EAAOC,GAAS,SAASy5D,EAAKusB,EAAIimE,GAAM,IAAI,IAAI7pI,KAAK4jE,EAAKimE,EAAK7pI,GAAG4jE,EAAI5jE,EAAG,CAAC,SAAS8pI,EAASrtI,EAAMstI,GAAO,IAAIC,EAAGvtI,EAAM46B,UAAU,GAAGhlC,OAAOm0D,OAAO,CAAC,IAAIyjF,EAAI53I,OAAOm0D,OAAOujF,EAAM1yG,WAAW2yG,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAAS5vH,IAAI,CAACA,EAAEkd,UAAU0yG,EAAM1yG,UAAkBggB,EAAK2yF,EAAb7vH,EAAE,IAAIA,GAAa1d,EAAM46B,UAAU2yG,EAAG7vH,CAAC,CAAI6vH,EAAGnsJ,aAAa4e,IAAwB,mBAAPA,GAAmB/V,QAAQ+G,MAAM,gBAAgBgP,GAAOutI,EAAGnsJ,YAAY4e,EAAM,CAAC,IAA8C0tI,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAaj3I,EAAKnF,GAAS,GAAGA,aAAmBhJ,MAAO,IAAIiH,EAAM+B,OAAa/B,EAAMvP,KAAKsI,MAAM8wC,KAAKp5C,KAAK+sJ,EAAiBt2I,IAAOzW,KAAKsR,QAAQy7I,EAAiBt2I,GAASnO,MAAMqlJ,mBAAkBrlJ,MAAMqlJ,kBAAkB3tJ,KAAK0tJ,GAAgF,OAAlEn+I,EAAMkH,KAAKA,EAAQnF,IAAQtR,KAAKsR,QAAQtR,KAAKsR,QAAQ,KAAKA,GAAe/B,CAAK,CAAyE,SAASq+I,IAAW,CAA+N,SAASC,EAAatrJ,EAAKmC,GAAS1E,KAAK8tJ,MAAMvrJ,EAAKvC,KAAK+tJ,SAASrpJ,EAAQspJ,EAAgBhuJ,KAAK,CAAC,SAASguJ,EAAgB/jJ,GAAM,IAAIgkJ,EAAIhkJ,EAAK6jJ,MAAMI,MAAMjkJ,EAAK6jJ,MAAMK,cAAcD,KAAK,GAAGjkJ,EAAKikJ,MAAMD,EAAI,CAAC,IAAIG,EAAGnkJ,EAAK8jJ,SAAS9jJ,EAAK6jJ,OAAOO,GAAQpkJ,EAAK,SAASmkJ,EAAGjoJ,QAAQgzD,EAAKi1F,EAAGnkJ,GAAMA,EAAKikJ,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAetkJ,EAAK1H,GAAwB,IAAlB,IAAI8Q,EAAEpJ,EAAK9D,OAAakN,KAAK,GAAGpJ,EAAKoJ,KAAK9Q,EAAM,OAAO8Q,CAAG,CAAC,SAASm7I,EAAchiJ,EAAGvC,EAAKwkJ,EAAQC,GAAiG,GAArFA,EAASzkJ,EAAKskJ,EAAetkJ,EAAKykJ,IAAUD,EAAaxkJ,EAAKA,EAAK9D,UAAUsoJ,EAAWjiJ,EAAG,CAACiiJ,EAAQE,aAAaniJ,EAAG,IAAIwjH,EAAIxjH,EAAG2hJ,cAAiBn+B,IAAK0+B,GAASE,EAAmB5+B,EAAIxjH,EAAGkiJ,GAChi2B,SAAyB1+B,EAAIxjH,EAAGiiJ,GAASz+B,GAAKA,EAAIk+B,OAA0C,iCAA5BO,EAAQrX,eAAqD5qI,EAAGqiJ,OAAOJ,EAAQ9zI,OAAO8zI,EAAQpF,UAAU,IAAIoF,EAAQ9rJ,MAAM,CAD+21BmsJ,CAAgB9+B,EAAIxjH,EAAGiiJ,GAAS,CAAC,CAAC,SAASM,EAAiBviJ,EAAGvC,EAAK0T,GAAM,IAAItK,EAAEk7I,EAAetkJ,EAAK0T,GAAM,KAAGtK,GAAG,GAAgM,MAAMq6I,EAAaP,EAAc,IAAI7kJ,MAAMkE,EAAG6jH,QAAQ,IAAI1yG,IAA3N,IAA5B,IAAIqxI,EAAU/kJ,EAAK9D,OAAO,EAAQkN,EAAE27I,GAAW/kJ,EAAKoJ,GAAGpJ,IAAOoJ,GAAyB,GAAtBpJ,EAAK9D,OAAO6oJ,EAAaxiJ,EAAG,CAAC,IAAIwjH,EAAIxjH,EAAG2hJ,cAAiBn+B,IAAK4+B,EAAmB5+B,EAAIxjH,EAAGmR,GAAMA,EAAKgxI,aAAa,KAAK,CAAwE,CAAioC,SAASzF,EAAkB+F,GAA4B,GAAlBjvJ,KAAKkvJ,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAUjvJ,KAAKkvJ,UAAUD,EAASE,EAAU,CACnm9B,SAASC,IAAO,CAA6kD,SAASC,EAAY9rJ,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAE+rJ,aAAa,GAAG,CAAmD,SAASC,EAAWhtJ,EAAKsP,GAAU,GAAGA,EAAStP,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAK04G,WAAY,GAAG,GAAGs0C,EAAWhtJ,EAAKsP,GAAW,OAAO,QAAYtP,EAAKA,EAAKitJ,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmB5+B,EAAIxjH,EAAGiiJ,EAAQ5zI,GAAQm1G,GAAKA,EAAIk+B,OAA0C,iCAA5BO,EAAQrX,qBAA4D5qI,EAAGqiJ,OAAOJ,EAAQ9zI,OAAO8zI,EAAQpF,UAAU,GAAI,CAAC,SAASqG,EAAe1/B,EAAIxjH,EAAGmjJ,GAAU,GAAG3/B,GAAKA,EAAIk+B,KAAK,CAACl+B,EAAIk+B,OAAO,IAAI0B,EAAGpjJ,EAAGqjJ,WAAW,GAAGF,EAAUC,EAAGA,EAAGzpJ,UAAUwpJ,MAAa,CAAiC,IAAhC,IAAIljE,EAAMjgF,EAAGyuG,WAAe5nG,EAAE,EAAQo5E,GAAOmjE,EAAGv8I,KAAKo5E,EAAMA,EAAMA,EAAM+iE,YAAYI,EAAGzpJ,OAAOkN,CAAC,CAAC,CAAC,CAAC,SAASy8I,EAAa5mE,EAAWuD,GAAO,IAAIsjE,EAAStjE,EAAMujE,gBAAoBtlI,EAAK+hE,EAAM+iE,YAAiN,OAAlMO,EAAUA,EAASP,YAAY9kI,EAAUw+D,EAAW+xB,WAAWvwF,EAAQA,EAAMA,EAAKslI,gBAAgBD,EAAc7mE,EAAW+mE,UAAUF,EAASL,EAAexmE,EAAWilE,cAAcjlE,GAAmBuD,CAAK,CAAC,SAASyjE,EAAchnE,EAAWymE,EAASQ,GAAW,IAAIC,EAAGT,EAASzmE,WAA2C,GAA7BknE,GAAIA,EAAGjnE,YAAYwmE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAAS10C,WAAW,GAAa,MAAVq1C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgB9mE,EAAW+mE,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAcpnE,EAAW+xB,WAAWq1C,EAAuB,MAAXH,EAAiBjnE,EAAW+mE,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAASpnE,WAAWA,QAAiBonE,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAexmE,EAAWilE,eAAejlE,EAAWA,GAAeymE,EAASU,UAAUzD,IAAwB+C,EAAS10C,WAAW00C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUzwJ,KAAK6uJ,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAASjZ,IAAgB,CAAqL,SAASkZ,EAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfzxJ,KAAKqwJ,SAAYrwJ,KAAK0xJ,gBAAgB1xJ,KAAS2a,EAAO82I,EAAQ92I,OAAWuvI,EAAIuH,EAAQra,aAAa,GAAG8S,GAAa,MAARvvI,GAA8D,OAA5CA,EAAO82I,EAAQE,aAAazH,IAAsB,IAAI0H,EAAkB,CAAC,CAACC,UAAU3H,EAAIvvI,OAAO,OAAwE,OAAhEg+H,GAAkB34I,KAAKwxJ,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAIljJ,KAAK,GAAG,CAAC,SAASwjJ,GAAoBvvJ,EAAKwvJ,EAAOH,GAAmB,IAAIj3I,EAAOpY,EAAKoY,QAAQ,GAAOuvI,EAAI3nJ,EAAK60I,aAAa,IAAIz8H,IAASuvI,EAAK,OAAO,EAAM,GAAY,QAATvvI,GAAsB,yCAANuvI,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAI72I,EAAEu+I,EAAkBzrJ,OAAakN,KAAI,CAAC,IAAI2+I,EAAGJ,EAAkBv+I,GAAG,GAAG2+I,EAAGr3I,QAAQA,EAAQ,OAAOq3I,EAAGH,WAAW3H,CAAI,CAAC,OAAO,CAAI,CAAC,SAASvR,GAAkBp2I,EAAKivJ,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtBhvJ,EAAKgvJ,EAAWhvJ,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAfivJ,EAAIltJ,KAAK/B,EAA0B,CAAC,OAAOA,EAAK8tJ,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBzrJ,OAA7C,IAAwD0Y,EAAMtc,EAAKygB,WAAewmI,EAAI3qI,EAAM1Y,OAAWsmF,EAAMlqF,EAAK04G,WAAeC,EAAS34G,EAAK8tH,QAAQ0hC,EAD4xZ,iCAC5wZxvJ,EAAK60I,cAAc2a,EAAOP,EAAIltJ,KAAK,IAAI42G,GAAU,IAAI,IAAI7nG,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAA4C,UAAnCsK,EAAKkB,EAAMzQ,KAAKiF,IAAWsH,OAAiBi3I,EAAkBttJ,KAAK,CAACqW,OAAOgD,EAAK0rI,UAAUwI,UAAUl0I,EAAKhb,QAA+B,SAAfgb,EAAKu9F,UAAmB02C,EAAkBttJ,KAAK,CAACqW,OAAO,GAAGk3I,UAAUl0I,EAAKhb,QAAS,IAAQ0Q,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAAI,CAAC,IAAIsK,EAAmB,GAAGm0I,GAAtBn0I,EAAKkB,EAAMzQ,KAAKiF,GAA+B0+I,EAAOH,GAAmB,CAAC,IAAIj3I,EAAOgD,EAAKhD,QAAQ,GAAOuvI,EAAIvsI,EAAKy5H,aAAiB4a,EAAGr3I,EAAO,UAAUA,EAAO,SAAS62I,EAAIltJ,KAAK0tJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBttJ,KAAK,CAACqW,OAAOA,EAAOk3I,UAAU3H,GAAK,CAACvR,GAAkBh7H,EAAK6zI,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoBvvJ,EAAKwvJ,EAAOH,KAAwBj3I,EAAOpY,EAAKoY,QAAQ,GAAOuvI,EAAI3nJ,EAAK60I,aAAiB4a,EAAGr3I,EAAO,UAAUA,EAAO,SAAS62I,EAAIltJ,KAAK0tJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBttJ,KAAK,CAACqW,OAAOA,EAAOk3I,UAAU3H,KAASz9D,GAAOslE,IAAS,mCAAmC1vI,KAAK64F,GAAU,CAAe,GAAds2C,EAAIltJ,KAAK,KAAQytJ,GAAQ,YAAY1vI,KAAK64F,GAAW,KAAMzuB,GAAUA,EAAM5iF,KAAM2nJ,EAAIltJ,KAAKmoF,EAAM5iF,MAAW8uI,GAAkBlsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,iBAAkB,KAAM/iE,GAAOksD,GAAkBlsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,YAAagC,EAAIltJ,KAAK,KAAK42G,EAAS,IAAI,MAAMs2C,EAAIltJ,KAAK,MAAM,OAAO,KAAKooJ,EAAc,KAAKE,EAAiD,IAAtBngE,EAAMlqF,EAAK04G,WAAiBxuB,GAAOksD,GAAkBlsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAIltJ,KAAK,IAAI/B,EAAK4E,KAAK,KAAK5E,EAAKI,MAAMqQ,QAAQ,SAASq8I,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAIltJ,KAAK/B,EAAKsH,KAAKmJ,QAAQ,QAAQq8I,IAAc,KAAKhD,EAAmB,OAAOmF,EAAIltJ,KAAK,YAAY/B,EAAKsH,KAAK,OAAO,KAAK4iJ,EAAa,OAAO+E,EAAIltJ,KAAK,UAAO/B,EAAKsH,KAAK,UAAO,KAAK8iJ,EAAmB,IAAIsF,EAAM1vJ,EAAK6oJ,SAAa8G,EAAM3vJ,EAAKglJ,SAA0C,GAAjCiK,EAAIltJ,KAAK,aAAa/B,EAAK4E,MAAS8qJ,EAAOT,EAAIltJ,KAAK,YAAY2tJ,GAAUC,GAAc,KAAPA,GAAYV,EAAIltJ,KAAK,MAAM4tJ,GAAOV,EAAIltJ,KAAK,WAAW,GAAG4tJ,GAAc,KAAPA,EAAYV,EAAIltJ,KAAK,YAAY4tJ,EAAM,UAAU,CAAC,IAAI5+I,EAAI/Q,EAAK4vJ,eAAkB7+I,GAAKk+I,EAAIltJ,KAAK,KAAKgP,EAAI,KAAKk+I,EAAIltJ,KAAK,IAAI,CAAC,OAAO,KAAKkoJ,EAA4B,OAAOgF,EAAIltJ,KAAK,KAAK/B,EAAK0jD,OAAO,IAAI1jD,EAAKsH,KAAK,MAAM,KAAKyiJ,EAAsB,OAAOkF,EAAIltJ,KAAK,IAAI/B,EAAK24G,SAAS,KAAK,QAAQs2C,EAAIltJ,KAAK,KAAK/B,EAAK24G,UAAU,CAAC,SAASk3C,GAAWpiC,EAAIztH,EAAK6jB,GAAM,IAAIisI,EAAM,OAAO9vJ,EAAK8tJ,UAAU,KAAKnE,GAAamG,EAAM9vJ,EAAK+vJ,WAAU,IAAanE,cAAcn+B,EAAI,KAAK48B,EAAuB,MAAM,KAAKT,EAAe/lI,GAAK,EAAgG,GAAjFisI,IAAOA,EAAM9vJ,EAAK+vJ,WAAU,IAAOD,EAAMlE,cAAcn+B,EAAIqiC,EAAMnpE,WAAW,KAAQ9iE,EAAgC,IAA1B,IAAIqmE,EAAMlqF,EAAK04G,WAAiBxuB,GAAO4lE,EAAMvoE,YAAYsoE,GAAWpiC,EAAIvjC,EAAMrmE,IAAOqmE,EAAMA,EAAM+iE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAUtiC,EAAIztH,EAAK6jB,GAAM,IAAIisI,EAAM,IAAI9vJ,EAAK5C,YAAY,IAAI,IAAIy/C,KAAK78C,EAAK,CAAC,IAAI6Q,EAAE7Q,EAAK68C,GAAgB,iBAAHhsC,GAAgBA,GAAGi/I,EAAMjzG,KAAIizG,EAAMjzG,GAAGhsC,EAAG,CAA2E,OAAvE7Q,EAAKstJ,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAcn+B,EAAWqiC,EAAMhC,UAAU,KAAKnE,EAAa,IAAIrtI,EAAMtc,EAAKygB,WAAeuvI,EAAOF,EAAMrvI,WAAW,IAAIsrI,EAAiB9E,EAAI3qI,EAAM1Y,OAAOosJ,EAAOC,cAAcH,EAAM,IAAI,IAAIh/I,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAAKg/I,EAAMvI,iBAAiBwI,GAAUtiC,EAAInxG,EAAMzQ,KAAKiF,IAAG,IAAO,MAAM,KAAK84I,EAAe/lI,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAIqmE,EAAMlqF,EAAK04G,WAAiBxuB,GAAO4lE,EAAMvoE,YAAYwoE,GAAUtiC,EAAIvjC,EAAMrmE,IAAOqmE,EAAMA,EAAM+iE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQppJ,EAAOZ,EAAI1B,GAAOsC,EAAOZ,GAAK1B,CAAK,CADonWmqJ,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAav0G,UAAU7wC,MAAM6wC,UAAUggB,EAAK2zF,EAAcY,GAAmCE,EAASz0G,UAAU,CAAChzC,OAAO,EAAEiI,KAAK,SAASrC,GAAO,OAAO/L,KAAK+L,IAAQ,IAAI,EAAE2I,SAAS,SAASq9I,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAGn+I,EAAE,EAAEA,EAAErT,KAAKmG,OAAOkN,IAAKslI,GAAkB34I,KAAKqT,GAAGm+I,EAAIO,EAAOR,GAAY,OAAOC,EAAIljJ,KAAK,GAAG,GAA2Su/I,EAAa10G,UAAU/qC,KAAK,SAASiF,GAAyB,OAAtB26I,EAAgBhuJ,MAAaA,KAAKqT,EAAE,EAAEu4I,EAASiC,EAAaD,GAAuuBU,EAAan1G,UAAU,CAAChzC,OAAO,EAAEiI,KAAKw/I,EAASz0G,UAAU/qC,KAAK0kJ,aAAa,SAASzuJ,GAAuB,IAAlB,IAAIgP,EAAErT,KAAKmG,OAAakN,KAAI,CAAC,IAAIsK,EAAK3d,KAAKqT,GAAG,GAAGsK,EAAKu9F,UAAU72G,EAAK,OAAOsZ,CAAK,CAAC,EAAEo1I,aAAa,SAASp1I,GAAM,IAAInR,EAAGmR,EAAKgxI,aAAa,GAAGniJ,GAAIA,GAAIxM,KAAKwyJ,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQ1uJ,KAAK8yJ,aAAan1I,EAAKu9F,UAA8D,OAApDszC,EAAcxuJ,KAAKwyJ,cAAcxyJ,KAAK2d,EAAK+wI,GAAgBA,CAAO,EAAEsE,eAAe,SAASr1I,GAAM,IAAyB+wI,EAArBliJ,EAAGmR,EAAKgxI,aAAqB,GAAGniJ,GAAIA,GAAIxM,KAAKwyJ,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQ1uJ,KAAKizJ,eAAet1I,EAAKy5H,aAAaz5H,EAAK0rI,WAAWmF,EAAcxuJ,KAAKwyJ,cAAcxyJ,KAAK2d,EAAK+wI,GAAgBA,CAAO,EAAEwE,gBAAgB,SAAS7uJ,GAAK,IAAIsZ,EAAK3d,KAAK8yJ,aAAazuJ,GAAoD,OAA/C0qJ,EAAiB/uJ,KAAKwyJ,cAAcxyJ,KAAK2d,GAAaA,CAAI,EAAEw1I,kBAAkB,SAAS/b,EAAaiS,GAAW,IAAI1rI,EAAK3d,KAAKizJ,eAAe7b,EAAaiS,GAA0D,OAA/C0F,EAAiB/uJ,KAAKwyJ,cAAcxyJ,KAAK2d,GAAaA,CAAI,EAAEs1I,eAAe,SAAS7b,EAAaiS,GAA6B,IAAlB,IAAIh2I,EAAErT,KAAKmG,OAAakN,KAAI,CAAC,IAAI9Q,EAAKvC,KAAKqT,GAAG,GAAG9Q,EAAK8mJ,WAAWA,GAAW9mJ,EAAK60I,cAAcA,EAAc,OAAO70I,CAAK,CAAC,OAAO,IAAI,GAAuI2mJ,EAAkB/vG,UAAU,CAACi6G,WAAW,SAASjE,EAAQkE,GAAS,IAAIC,EAAStzJ,KAAKkvJ,UAAUC,EAAQh3I,eAAe,SAAGm7I,GAAYD,KAASA,KAAWC,GAChv+B,EAAEnK,eAAe,SAAS/R,EAAamc,EAAcC,GAAS,IAAIxjC,EAAI,IAAIy/B,EAAsH,GAA7Gz/B,EAAIs7B,eAAetrJ,KAAKgwH,EAAI6/B,WAAW,IAAIjC,EAAS59B,EAAIwjC,QAAQA,EAAWA,GAASxjC,EAAIlmC,YAAY0pE,GAAYD,EAAc,CAAC,IAAIj4D,EAAK00B,EAAIu5B,gBAAgBnS,EAAamc,GAAevjC,EAAIlmC,YAAYwR,EAAK,CAAC,OAAO00B,CAAG,EAAEu7B,mBAAmB,SAASgI,EAAcnI,EAAS7D,GAAU,IAAIhlJ,EAAK,IAAIwuJ,EAA+G,OAAlGxuJ,EAAK4E,KAAKosJ,EAAchxJ,EAAK24G,SAASq4C,EAAchxJ,EAAK6oJ,SAASA,EAAS7oJ,EAAKglJ,SAASA,EAAgBhlJ,CAAI,GAAoB6sJ,EAAKj2G,UAAU,CAAC8hE,WAAW,KAAKg1C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAKxsI,WAAW,KAAKkmE,WAAW,KAAK2mE,WAAW,KAAK1B,cAAc,KAAKtE,UAAU,KAAKzS,aAAa,KAAKz8H,OAAO,KAAK0uI,UAAU,KAAKoK,aAAa,SAAS9D,EAAS+D,GAAU,OAAOxD,EAAclwJ,KAAK2vJ,EAAS+D,EAAS,EAAEC,aAAa,SAAShE,EAASiE,GAAU5zJ,KAAKyzJ,aAAa9D,EAASiE,GAAaA,GAAU5zJ,KAAKmpF,YAAYyqE,EAAU,EAAEzqE,YAAY,SAASyqE,GAAU,OAAO9D,EAAa9vJ,KAAK4zJ,EAAS,EAAE9pE,YAAY,SAAS6lE,GAAU,OAAO3vJ,KAAKyzJ,aAAa9D,EAAS,KAAK,EAAEkE,cAAc,WAAW,OAAwB,MAAjB7zJ,KAAKi7G,UAAgB,EAAEq3C,UAAU,SAASlsI,GAAM,OAAOksI,GAAUtyJ,KAAKmuJ,eAAenuJ,KAAKA,KAAKomB,EAAK,EAAE0kI,UAAU,WAAqC,IAA1B,IAAIr+D,EAAMzsF,KAAKi7G,WAAiBxuB,GAAM,CAAC,IAAI/hE,EAAK+hE,EAAM+iE,YAAe9kI,GAAMA,EAAK2lI,UAAUjE,GAAW3/D,EAAM4jE,UAAUjE,GAAWpsJ,KAAKmpF,YAAYz+D,GAAM+hE,EAAMqnE,WAAWppI,EAAK7gB,QAAW4iF,EAAMq+D,YAAYr+D,EAAM/hE,EAAK,CAAC,EAAEqpI,YAAY,SAAS5E,EAAQkE,GAAS,OAAOrzJ,KAAKmuJ,cAAc7C,eAAe8H,WAAWjE,EAAQkE,EAAQ,EAAEW,cAAc,WAAW,OAAOh0J,KAAKgjB,WAAW7c,OAAO,CAAC,EAAEwrJ,aAAa,SAASva,GAA0B,IAAZ,IAAI5qI,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAGqiJ,OAAO,GAAG1gJ,EAAK,IAAI,IAAIixC,KAAKjxC,EAAK,GAAGA,EAAIixC,IAAIg4F,EAAc,OAAOh4F,EAAI5yC,EAAGA,EAAG6jJ,UAAUlE,EAAe3/I,EAAG2hJ,cAAc3hJ,EAAG08E,UAAU,CAAC,OAAO,IAAI,EAAE+qE,mBAAmB,SAASt5I,GAAoB,IAAZ,IAAInO,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAGqiJ,OAAO,GAAG1gJ,GAAQwM,KAAUxM,EAAK,OAAOA,EAAIwM,GAASnO,EAAGA,EAAG6jJ,UAAUlE,EAAe3/I,EAAG2hJ,cAAc3hJ,EAAG08E,UAAU,CAAC,OAAO,IAAI,EAAEgrE,mBAAmB,SAAS9c,GAAyD,OAAe,MAA/Cp3I,KAAK2xJ,aAAava,EAAiC,GAA6Hj+E,EAAK8yF,EAASmD,GAAMj2F,EAAK8yF,EAASmD,EAAKj2G,WAA02Es2G,EAASt2G,UAAU,CAAC+hE,SAAS,YAAYm1C,SAAS3D,EAAc8G,QAAQ,KAAK9B,gBAAgB,KAAKxD,KAAK,EAAEuF,aAAa,SAAS9D,EAAS+D,GAAU,GAAG/D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAIngE,EAAMkjE,EAAS10C,WAAiBxuB,GAAM,CAAC,IAAI/hE,EAAK+hE,EAAM+iE,YAAYxvJ,KAAKyzJ,aAAahnE,EAAMinE,GAAUjnE,EAAM/hE,CAAI,CAAC,OAAOilI,CAAQ,CAA+F,OAArE,MAAtB3vJ,KAAK0xJ,iBAAuB/B,EAASU,UAAUnE,IAAclsJ,KAAK0xJ,gBAAgB/B,GAAgBO,EAAclwJ,KAAK2vJ,EAAS+D,GAAU/D,EAASxB,cAAcnuJ,KAAK2vJ,CAAQ,EAAExmE,YAAY,SAASyqE,GAAuE,OAA1D5zJ,KAAK0xJ,iBAAiBkC,IAAU5zJ,KAAK0xJ,gBAAgB,MAAY5B,EAAa9vJ,KAAK4zJ,EAAS,EAAExB,WAAW,SAAS+B,EAAa/tI,GAAM,OAAOgsI,GAAWpyJ,KAAKm0J,EAAa/tI,EAAK,EAAEguI,eAAe,SAASxzJ,GAAI,IAAIyzJ,EAAI,KAA6I,OAAxI9E,EAAWvvJ,KAAK0xJ,iBAAgB,SAASnvJ,GAAM,GAAGA,EAAK8tJ,UAAUnE,GAAiB3pJ,EAAK8gF,aAAa,OAAOziF,EAAa,OAATyzJ,EAAI9xJ,GAAY,CAAM,IAAU8xJ,CAAG,EAAE7qH,cAAc,SAAS6mF,GAAS,IAAI9tH,EAAK,IAAIkuJ,EAA4K,OAApKluJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK24G,SAASmV,EAAQ9tH,EAAK8tH,QAAQA,EAAQ9tH,EAAKstJ,WAAW,IAAIjC,GAAmBrrJ,EAAKygB,WAAW,IAAIsrI,GAAmBkE,cAAcjwJ,EAAYA,CAAI,EAAE+xJ,uBAAuB,WAAW,IAAI/xJ,EAAK,IAAI4uJ,EAAsE,OAArD5uJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAKstJ,WAAW,IAAIjC,EAAgBrrJ,CAAI,EAAEsnF,eAAe,SAAShgF,GAAM,IAAItH,EAAK,IAAIquJ,EAAmD,OAA9CruJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAKuxJ,WAAWjqJ,GAAatH,CAAI,EAAEyoJ,cAAc,SAASnhJ,GAAM,IAAItH,EAAK,IAAIsuJ,EAAsD,OAA9CtuJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAKuxJ,WAAWjqJ,GAAatH,CAAI,EAAEooJ,mBAAmB,SAAS9gJ,GAAM,IAAItH,EAAK,IAAIuuJ,EAA2D,OAA9CvuJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAKuxJ,WAAWjqJ,GAAatH,CAAI,EAAE+nJ,4BAA4B,SAASrkG,EAAOp8C,GAAM,IAAItH,EAAK,IAAI6uJ,EAA4G,OAAtF7uJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK8tH,QAAQ9tH,EAAK0jD,OAAOA,EAAO1jD,EAAKsnJ,UAAUtnJ,EAAKsH,KAAKA,EAAYtH,CAAI,EAAEgyJ,gBAAgB,SAASptJ,GAAM,IAAI5E,EAAK,IAAImuJ,EAAuG,OAAlGnuJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK4E,KAAKA,EAAK5E,EAAK24G,SAAS/zG,EAAK5E,EAAK8mJ,UAAUliJ,EAAK5E,EAAKiyJ,WAAU,EAAYjyJ,CAAI,EAAEkyJ,sBAAsB,SAASttJ,GAAM,IAAI5E,EAAK,IAAI2uJ,EAA2D,OAA3C3uJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK24G,SAAS/zG,EAAY5E,CAAI,EAAEgnJ,gBAAgB,SAASnS,EAAamc,GAAe,IAAIhxJ,EAAK,IAAIkuJ,EAAYiE,EAAGnB,EAAc/rI,MAAM,KAAS3I,EAAMtc,EAAKygB,WAAW,IAAIsrI,EAA2Q,OAA9P/rJ,EAAKstJ,WAAW,IAAIjC,EAASrrJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK24G,SAASq4C,EAAchxJ,EAAK8tH,QAAQkjC,EAAchxJ,EAAK60I,aAAaA,EAA2B,GAAXsd,EAAGvuJ,QAAW5D,EAAKoY,OAAO+5I,EAAG,GAAGnyJ,EAAK8mJ,UAAUqL,EAAG,IAAQnyJ,EAAK8mJ,UAAUkK,EAAc10I,EAAM2zI,cAAcjwJ,EAAYA,CAAI,EAAEonJ,kBAAkB,SAASvS,EAAamc,GAAe,IAAIhxJ,EAAK,IAAImuJ,EAASgE,EAAGnB,EAAc/rI,MAAM,KAA8N,OAAzNjlB,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK24G,SAASq4C,EAAchxJ,EAAK4E,KAAKosJ,EAAchxJ,EAAK60I,aAAaA,EAAa70I,EAAKiyJ,WAAU,EAAmB,GAAXE,EAAGvuJ,QAAW5D,EAAKoY,OAAO+5I,EAAG,GAAGnyJ,EAAK8mJ,UAAUqL,EAAG,IAAQnyJ,EAAK8mJ,UAAUkK,EAAqBhxJ,CAAI,GAAGqpJ,EAAS6D,EAASL,GAAwCqB,EAAQt3G,UAAU,CAACk3G,SAASnE,EAAayI,aAAa,SAASxtJ,GAAM,OAAoC,MAA7BnH,KAAK40J,iBAAiBztJ,EAAW,EAAEk8E,aAAa,SAASl8E,GAAM,IAAIwW,EAAK3d,KAAK40J,iBAAiBztJ,GAAM,OAAOwW,GAAMA,EAAKhb,OAAO,EAAE,EAAEiyJ,iBAAiB,SAASztJ,GAAM,OAAOnH,KAAKgjB,WAAW8vI,aAAa3rJ,EAAK,EAAEy5E,aAAa,SAASz5E,EAAKxE,GAAO,IAAIgb,EAAK3d,KAAKmuJ,cAAcoG,gBAAgBptJ,GAAMwW,EAAKhb,MAAMgb,EAAKksI,UAAU,GAAGlnJ,EAAM3C,KAAK8pJ,iBAAiBnsI,EAAK,EAAE6lE,gBAAgB,SAASr8E,GAAM,IAAIwW,EAAK3d,KAAK40J,iBAAiBztJ,GAAMwW,GAAM3d,KAAK60J,oBAAoBl3I,EAAK,EAAEmsE,YAAY,SAAS6lE,GAAU,OAAGA,EAASU,WAAWzD,EAA+B5sJ,KAAKyzJ,aAAa9D,EAAS,MAAr4H,SAA4BzmE,EAAWymE,GAAU,IAAIS,EAAGT,EAASzmE,WAAW,GAAGknE,EAAG,CAAC,IAAII,EAAItnE,EAAW+mE,UAAUG,EAAGjnE,YAAYwmE,GAAca,EAAItnE,EAAW+mE,SAAS,CAAoR,OAA/QO,EAAItnE,EAAW+mE,UAAUN,EAASzmE,WAAWA,EAAWymE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAczmE,EAAW+xB,WAAW00C,EAASzmE,EAAW+mE,UAAUN,EAASD,EAAexmE,EAAWilE,cAAcjlE,EAAWymE,GAAiBA,CAAQ,CAA+8GmF,CAAmB90J,KAAK2vJ,EAAU,EAAE7F,iBAAiB,SAAS2E,GAAS,OAAOzuJ,KAAKgjB,WAAW+vI,aAAatE,EAAQ,EAAEsG,mBAAmB,SAAStG,GAAS,OAAOzuJ,KAAKgjB,WAAWgwI,eAAevE,EAAQ,EAAEoG,oBAAoB,SAASnG,GAAS,OAAO1uJ,KAAKgjB,WAAWkwI,gBAAgBxE,EAAQxzC,SAAS,EAAE85C,kBAAkB,SAAS5d,EAAaiS,GAAW,IAAI9wC,EAAIv4G,KAAKi1J,mBAAmB7d,EAAaiS,GAAW9wC,GAAKv4G,KAAK60J,oBAAoBt8C,EAAI,EAAE28C,eAAe,SAAS9d,EAAaiS,GAAW,OAAwD,MAAjDrpJ,KAAKi1J,mBAAmB7d,EAAaiS,EAAgB,EAAE8L,eAAe,SAAS/d,EAAaiS,GAAW,IAAI1rI,EAAK3d,KAAKi1J,mBAAmB7d,EAAaiS,GAAW,OAAO1rI,GAAMA,EAAKhb,OAAO,EAAE,EAAEyyJ,eAAe,SAAShe,EAAamc,EAAc5wJ,GAAO,IAAIgb,EAAK3d,KAAKmuJ,cAAcxE,kBAAkBvS,EAAamc,GAAe51I,EAAKhb,MAAMgb,EAAKksI,UAAU,GAAGlnJ,EAAM3C,KAAK8pJ,iBAAiBnsI,EAAK,EAAEs3I,mBAAmB,SAAS7d,EAAaiS,GAAW,OAAOrpJ,KAAKgjB,WAAWiwI,eAAe7b,EAAaiS,EAAU,EAAEp4E,qBAAqB,SAASo/C,GAAS,OAAO,IAAIw9B,EAAa7tJ,MAAK,SAAS0gE,GAAM,IAAI0tF,EAAG,GAAwI,OAArImB,EAAW7uF,GAAK,SAASn+D,GAASA,IAAOm+D,GAAMn+D,EAAK8tJ,UAAUnE,GAAyB,MAAV77B,GAAe9tH,EAAK8tH,SAASA,GAAU+9B,EAAG9pJ,KAAK/B,EAAM,IAAU6rJ,CAAE,GAAE,EAAEiH,uBAAuB,SAASje,EAAaiS,GAAW,OAAO,IAAIwE,EAAa7tJ,MAAK,SAAS0gE,GAAM,IAAI0tF,EAAG,GAAuM,OAApMmB,EAAW7uF,GAAK,SAASn+D,GAASA,IAAOm+D,GAAMn+D,EAAK8tJ,WAAWnE,GAA8B,MAAf9U,GAAoB70I,EAAK60I,eAAeA,GAA4B,MAAZiS,GAAiB9mJ,EAAK8mJ,WAAWA,GAAY+E,EAAG9pJ,KAAK/B,EAAM,IAAU6rJ,CAAE,GAAE,GAAGqB,EAASt2G,UAAU83B,qBAAqBw/E,EAAQt3G,UAAU83B,qBAAqBw+E,EAASt2G,UAAUk8G,uBAAuB5E,EAAQt3G,UAAUk8G,uBAAuBzJ,EAAS6E,EAAQrB,GAAuBsB,EAAKv3G,UAAUk3G,SAASlE,EAAeP,EAAS8E,EAAKtB,GAAgCuB,EAAcx3G,UAAU,CAACtvC,KAAK,GAAGyrJ,cAAc,SAASrd,EAAOxnH,GAAO,OAAOzwB,KAAK6J,KAAK+sB,UAAUqhH,EAAOA,EAAOxnH,EAAM,EAAEqjI,WAAW,SAASzlJ,GAAMA,EAAKrO,KAAK6J,KAAKwE,EAAKrO,KAAK6pJ,UAAU7pJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,EAAEovJ,WAAW,SAAStd,EAAO5pI,GAAMrO,KAAKw1J,YAAYvd,EAAO,EAAE5pI,EAAK,EAAEy7E,YAAY,SAAS6lE,GAAU,MAAM,IAAIrnJ,MAAMykJ,EAAiBC,GAAuB,EAAEyI,WAAW,SAASxd,EAAOxnH,GAAOzwB,KAAKw1J,YAAYvd,EAAOxnH,EAAM,GAAG,EAAE+kI,YAAY,SAASvd,EAAOxnH,EAAMpiB,GAAwFA,EAAxErO,KAAK6J,KAAK+sB,UAAU,EAAEqhH,GAA6D5pI,EAA7CrO,KAAK6J,KAAK+sB,UAAUqhH,EAAOxnH,GAA2BzwB,KAAK6pJ,UAAU7pJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,GAAGylJ,EAAS+E,EAAcvB,GAAuBwB,EAAKz3G,UAAU,CAAC+hE,SAAS,QAAQm1C,SAASjE,EAAUsJ,UAAU,SAASzd,GAAQ,IAAI5pI,EAAKrO,KAAK6J,KAAS8rJ,EAAQtnJ,EAAKuoB,UAAUqhH,GAAQ5pI,EAAKA,EAAKuoB,UAAU,EAAEqhH,GAAQj4I,KAAK6J,KAAK7J,KAAK6pJ,UAAUx7I,EAAKrO,KAAKmG,OAAOkI,EAAKlI,OAAO,IAAIyvJ,EAAQ51J,KAAKmuJ,cAActkE,eAAe8rE,GAAoF,OAAxE31J,KAAKkpF,YAAYlpF,KAAKkpF,WAAWuqE,aAAamC,EAAQ51J,KAAKwvJ,aAAoBoG,CAAO,GAAGhK,EAASgF,EAAKD,GAAmCE,EAAQ13G,UAAU,CAAC+hE,SAAS,WAAWm1C,SAAS5D,GAAcb,EAASiF,EAAQF,GAAwCG,EAAa33G,UAAU,CAAC+hE,SAAS,iBAAiBm1C,SAAShE,GAAoBT,EAASkF,EAAaH,GAAwCI,EAAa53G,UAAUk3G,SAAS1D,EAAmBf,EAASmF,EAAa3B,GAA2B4B,EAAS73G,UAAUk3G,SAASxD,EAAcjB,EAASoF,EAAS5B,GAAyB6B,EAAO93G,UAAUk3G,SAAS9D,EAAYX,EAASqF,EAAO7B,GAAkC8B,EAAgB/3G,UAAUk3G,SAAS/D,EAAsBV,EAASsF,EAAgB9B,GAAmC+B,EAAiBh4G,UAAU+hE,SAAS,qBAAqBi2C,EAAiBh4G,UAAUk3G,SAASzD,EAAuBhB,EAASuF,EAAiB/B,GAAwCgC,EAAsBj4G,UAAUk3G,SAAS7D,EAA4BZ,EAASwF,EAAsBhC,GAAgCjX,EAAch/F,UAAUw/F,kBAAkB,SAASp2I,EAAK+uJ,EAAOC,GAAY,OAAOF,EAAsBj4G,KAAK72C,EAAK+uJ,EAAOC,EAAW,EAAEnC,EAAKj2G,UAAUzkC,SAAS28I,EAAqhJ,IAAI,GAAGl9I,OAAO8gI,eAAe,CAA2f,SAAS4gB,GAAetzJ,GAAM,OAAOA,EAAK8tJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArBjvJ,EAAKA,EAAK04G,WAAiB14G,GAAyB,IAAhBA,EAAK8tJ,UAA8B,IAAhB9tJ,EAAK8tJ,UAAcmB,EAAIltJ,KAAKuxJ,GAAetzJ,IAAOA,EAAKA,EAAKitJ,YAAY,OAAOgC,EAAIljJ,KAAK,IAAI,QAAQ,OAAO/L,EAAKsnJ,UAAU,CAAxxB11I,OAAO8gI,eAAe4Y,EAAa10G,UAAU,SAAS,CAACxjC,IAAI,WAAiC,OAAtBq4I,EAAgBhuJ,MAAaA,KAAK81J,QAAQ,IAAI3hJ,OAAO8gI,eAAema,EAAKj2G,UAAU,cAAc,CAACxjC,IAAI,WAAW,OAAOkgJ,GAAe71J,KAAK,EAAE6Z,IAAI,SAAShQ,GAAM,OAAO7J,KAAKqwJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAM5sJ,KAAKi7G,YAAYj7G,KAAKmpF,YAAYnpF,KAAKi7G,aAAepxG,GAAMqR,OAAOrR,KAAO7J,KAAK8pF,YAAY9pF,KAAKmuJ,cAActkE,eAAehgF,IAAO,MAAM,QAAQ7J,KAAK6J,KAAKA,EAAK7J,KAAK2C,MAAMkH,EAAK7J,KAAK6pJ,UAAUhgJ,EAAK,IAAmSwkJ,GAAQ,SAASppJ,EAAOZ,EAAI1B,GAAOsC,EAAO,KAAKZ,GAAK1B,CAAK,CAAC,CAAW,CAAT,MAAM0H,IAAG,CAAC3K,EAAQwpJ,kBAAkBA,EAAkBxpJ,EAAQy4I,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS5jE,EAAQ90E,EAAOC,GAAS,IAAIq2J,EAAc,mJAAuJC,EAAS,IAAI5zI,OAAO,aAAa2zI,EAAcjO,OAAO50I,MAAM,GAAG,GAAG,0CAA8C+iJ,EAAe,IAAI7zI,OAAO,IAAI2zI,EAAcjO,OAAOkO,EAASlO,OAAO,QAAQiO,EAAcjO,OAAOkO,EAASlO,OAAO,QAA8I,SAASE,IAAY,CAA+P,SAASzwI,EAAMuwI,EAAOoO,EAAiB9N,EAAUH,EAAW9O,GAAgO,SAASgd,EAAevoJ,GAAG,IAAIyG,EAAEzG,EAAEsF,MAAM,GAAG,GAAG,OAAGmB,KAAK+zI,EAAkBA,EAAU/zI,GAAyB,MAAdA,EAAEuvC,OAAO,GAAzT,SAA2BntC,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAI2/I,EAAW,QAA3B3/I,GAAM,QAAkC,IAAI4/I,EAAW,OAAY,KAAL5/I,GAAW,OAAOyE,OAAOg/H,aAAakc,EAAWC,EAAW,CAAM,OAAOn7I,OAAOg/H,aAAazjI,EAAM,CAAyH6/I,CAAkBzxI,SAASxQ,EAAEksC,OAAO,GAAGvtC,QAAQ,IAAI,SAAammI,EAAa5pI,MAAM,oBAAoB3B,GAAUA,EAAE,CAAC,SAAS2oJ,EAAWvyG,GAAK,GAAGA,EAAIvyB,EAAM,CAAC,IAAI+kI,EAAG1O,EAAOlxH,UAAUnF,EAAMuyB,GAAKhxC,QAAQ,WAAWmjJ,GAAgBlP,GAAStmJ,EAAS8wB,GAAOw2H,EAAWwC,WAAW+L,EAAG,EAAExyG,EAAIvyB,GAAOA,EAAMuyB,CAAG,CAAC,CAAC,SAASrjD,EAASmhB,EAAEs6G,GAAG,KAAMt6G,GAAG20I,IAAUr6B,EAAEs6B,EAAYjc,KAAKqN,KAAU6O,EAAUv6B,EAAErwH,MAAM0qJ,EAAQE,EAAUv6B,EAAE,GAAGj2H,OAAO8gJ,EAAQG,aAAaH,EAAQI,aAAavlI,EAAE60I,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BzP,EAAQgB,EAAWhB,QAAY2P,EAAW,CAAC,CAACC,aAAaX,IAAuBY,EAAS,CAAC,EAAMrlI,EAAM,IAAa,CAAC,IAAI,IAAIslI,EAASjP,EAAOz6I,QAAQ,IAAIokB,GAAO,GAAGslI,EAAS,EAAE,CAAC,IAAIjP,EAAOvnG,OAAO9uB,GAAOkR,MAAM,SAAS,CAAC,IAAIqtF,EAAIi4B,EAAWj4B,IAAQ3hH,EAAK2hH,EAAInmC,eAAei+D,EAAOvnG,OAAO9uB,IAAQu+F,EAAIlmC,YAAYz7E,GAAM45I,EAAWJ,eAAex5I,CAAI,CAAC,MAAM,CAAyC,OAArC0oJ,EAAStlI,GAAO8kI,EAAWQ,GAAiBjP,EAAOlkG,OAAOmzG,EAAS,IAAI,IAAI,IAAI,IAAI/yG,EAAI8jG,EAAOz6I,QAAQ,IAAI0pJ,EAAS,GAAO1mC,EAAQy3B,EAAOlxH,UAAUmgI,EAAS,EAAE/yG,GAAS/hD,EAAO20J,EAAW5pH,MAASgX,EAAI,GAAGqsE,EAAQy3B,EAAOlxH,UAAUmgI,EAAS,GAAG/jJ,QAAQ,UAAU,IAAImmI,EAAa5pI,MAAM,iBAAiB8gH,EAAQ,oBAAoBpuH,EAAOouH,SAASrsE,EAAI+yG,EAAS,EAAE1mC,EAAQlqH,QAAekqH,EAAQ1tF,MAAM,SAAQ0tF,EAAQA,EAAQr9G,QAAQ,UAAU,IAAImmI,EAAa5pI,MAAM,iBAAiB8gH,EAAQ,uBAAuBrsE,EAAI+yG,EAAS,EAAE1mC,EAAQlqH,QAAO,IAAI6wJ,EAAW/0J,EAAO+0J,WAAeC,EAASh1J,EAAOouH,SAASA,EAA4G,GAA9E4mC,GAAUh1J,EAAOouH,SAASpuH,EAAOouH,QAAQl4G,eAAek4G,EAAQl4G,cAAmC,CAA4D,GAA3D8vI,EAAW8B,WAAW9nJ,EAAOioJ,IAAIjoJ,EAAOonJ,UAAUh5B,GAAY2mC,EAAY,IAAI,IAAIr8I,KAAUq8I,EAAY/O,EAAWkC,iBAAiBxvI,GAAas8I,GAAU9d,EAAauS,WAAW,iBAAiBr7B,EAAQ,2CAA2CpuH,EAAOouH,QAAS,MAAMumC,EAAWtyJ,KAAKrC,GAAQ+hD,IAAM,MAAM,IAAI,IAAIijG,GAAStmJ,EAASo2J,GAAU/yG,EAAIkzG,EAAiBpP,EAAOiP,EAAS9O,GAAY,MAAM,IAAI,IAAIhB,GAAStmJ,EAASo2J,GAAU/yG,EAAImzG,EAASrP,EAAOiP,EAAS9O,EAAW9O,GAAc,MAAM,QAAQ8N,GAAStmJ,EAASo2J,GAAU,IAAIvqJ,EAAG,IAAI4qJ,EAAsBP,EAAaD,EAAWA,EAAWzwJ,OAAO,GAAG0wJ,aAA4GrN,GAA3FxlG,EAAIqzG,EAAsBvP,EAAOiP,EAASvqJ,EAAGqqJ,EAAaV,EAAehd,GAAsB3sI,EAAGrG,QAAwJ,IAA7IqG,EAAG8qJ,QAAQC,EAAczP,EAAO9jG,EAAIx3C,EAAG6jH,QAAQymC,KAAWtqJ,EAAG8qJ,QAAO,EAASlP,EAAUY,MAAM7P,EAAasS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAIgO,EAASC,EAAYxQ,EAAQ,CAAC,GAAW5zI,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAG1S,EAASiN,EAAEqqI,QAAQrqI,EAAEq5I,QAAQwQ,EAAYxQ,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQuQ,EAAY7P,EAAcn7I,EAAGy7I,EAAW4O,IAAeD,EAAWtyJ,KAAKkI,GAAIy7I,EAAWhB,QAAQA,CAAO,MAASU,EAAcn7I,EAAGy7I,EAAW4O,IAAeD,EAAWtyJ,KAAKkI,GAAiB,iCAATA,EAAG09I,KAAuC19I,EAAG8qJ,OAA0FtzG,IAAlFA,EAAI0zG,EAAwB5P,EAAO9jG,EAAIx3C,EAAG6jH,QAAQ8lC,EAAelO,GAAsF,CAA7D,MAAM59I,GAAG8uI,EAAa5pI,MAAM,wBAAwBlF,GAAG25C,GAAK,CAAC,CAAIA,EAAIvyB,EAAOA,EAAMuyB,EAASuyG,EAAWhwJ,KAAK22C,IAAI65G,EAAStlI,GAAO,EAAG,CAAC,CAAC,SAASgmI,EAAYzwJ,EAAEi1B,GAA2D,OAAxDA,EAAEmrH,WAAWpgJ,EAAEogJ,WAAWnrH,EAAEorH,aAAargJ,EAAEqgJ,aAAoBprH,CAAC,CAAC,SAASo7H,EAAsBvP,EAAOr2H,EAAMjlB,EAAGqqJ,EAAaV,EAAehd,GAA+D,IAAjD,IAAIwe,EAAuB71I,IAAI2P,EAAU7kB,EAAviI,IAA0jI,CAAC,IAAIrJ,EAAEukJ,EAAOlkG,OAAO9hC,GAAG,OAAOve,GAAG,IAAI,IAAI,GAAvlI,IAA0lIqJ,EAAY+qJ,EAAS7P,EAAO50I,MAAMue,EAAM3P,GAAGlV,EAAvmI,MAAmnI,IAA9nI,IAAioIA,EAA8B,MAAM,IAAItE,MAAM,uCAA5BsE,EAAxoI,CAA0sI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAjuI,IAAouIA,GAAlwI,IAA4wIA,EAAW,CAA0I,GAAj6I,IAA2xIA,IAAYusI,EAAasS,QAAQ,kCAAkCkM,EAAS7P,EAAO50I,MAAMue,EAAM3P,IAAG2P,EAAM3P,EAAE,KAAEA,EAAEgmI,EAAOz6I,QAAQ9J,EAAEkuB,IAAY,GAAmH,MAAM,IAAInpB,MAAM,2BAA2B/E,EAAE,WAA7JZ,EAAMmlJ,EAAO50I,MAAMue,EAAM3P,GAAG9O,QAAQ,WAAWmjJ,GAAgB3pJ,EAAG0U,IAAIy2I,EAASh1J,EAAM8uB,EAAM,GAAG7kB,EAA97I,CAAwgJ,KAAM,IAA/hJ,GAAkiJA,EAA4N,MAAM,IAAItE,MAAM,kCAApN3F,EAAMmlJ,EAAO50I,MAAMue,EAAM3P,GAAG9O,QAAQ,WAAWmjJ,GAAgB3pJ,EAAG0U,IAAIy2I,EAASh1J,EAAM8uB,GAAO0nH,EAAasS,QAAQ,cAAckM,EAAS,uBAAuBp0J,EAAE,OAAOkuB,EAAM3P,EAAE,EAAElV,EAA3tJ,CAA8xJ,CAAC,MAAM,IAAI,IAAI,OAAOA,GAAG,KAA74J,EAAw5JJ,EAAGorJ,WAAW9P,EAAO50I,MAAMue,EAAM3P,IAAI,KAAv2J,EAAu3J,KAAr2J,EAAs3J,KAAp2J,EAAq3JlV,EAAr3J,EAAm4JJ,EAAG8qJ,QAAO,EAAK,KAAv8J,EAAg+J,KAAxhK,EAAoiK,KAAjhK,EAAmiK,MAAM,QAAQ,MAAM,IAAIhvJ,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhG6wI,EAAa5pI,MAAM,2BAAtqK,GAAosK3C,GAAUJ,EAAGorJ,WAAW9P,EAAO50I,MAAMue,EAAM3P,IAAWA,EAAE,IAAI,IAAI,OAAOlV,GAAG,KAA9wK,EAAyxKJ,EAAGorJ,WAAW9P,EAAO50I,MAAMue,EAAM3P,IAAI,KAAxuK,EAAwvK,KAAtuK,EAAuvK,KAAruK,EAAsvK,MAAM,KAAjzK,EAA00K,KAAl4K,EAA+7K,OAAjDnf,EAAMmlJ,EAAO50I,MAAMue,EAAM3P,IAAY5O,OAAO,KAAU1G,EAAG8qJ,QAAO,EAAK30J,EAAMA,EAAMuQ,MAAM,GAAG,IAAG,KAAx9K,MAA6+KtG,IAAkBjK,EAAMg1J,GAAh+K,GAA4+K/qJ,GAAwBusI,EAAasS,QAAQ,cAAc9oJ,EAAM,sBAAsB6J,EAAG0U,IAAIy2I,EAASh1J,EAAMqQ,QAAQ,WAAWmjJ,GAAgB1kI,KAAkC,iCAAnBolI,EAAa,KAAuCl0J,EAAMggC,MAAM,qCAAqCw2G,EAAasS,QAAQ,cAAc9oJ,EAAM,qBAAqBA,EAAM,eAAe6J,EAAG0U,IAAIve,EAAMA,EAAM8uB,IAAO,MAAM,KAA73L,EAAu4L,MAAM,IAAInpB,MAAM,4BAA4B,OAAOwZ,EAAE,IAAI,IAAIve,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOqJ,GAAG,KAAlhM,EAA6hMJ,EAAGorJ,WAAW9P,EAAO50I,MAAMue,EAAM3P,IAAIlV,EAA19L,EAAw+L,MAAM,KAAzkM,EAAqlM+qJ,EAAS7P,EAAO50I,MAAMue,EAAM3P,GAAGlV,EAAjmM,EAAgnM,MAAM,KAAjlM,EAA0mM,IAAIjK,EAAMmlJ,EAAO50I,MAAMue,EAAM3P,GAAG9O,QAAQ,WAAWmjJ,GAAgBhd,EAAasS,QAAQ,cAAc9oJ,EAAM,sBAAsB6J,EAAG0U,IAAIy2I,EAASh1J,EAAM8uB,GAAO,KAAxvM,EAAwwM7kB,EAAtvM,OAAgxM,OAAOA,GAAG,KAAl2M,EAAg4MJ,EAAG6jH,QAA8B,iCAAnBwmC,EAAa,KAAuCc,EAASh1H,MAAM,qCAAqCw2G,EAAasS,QAAQ,cAAckM,EAAS,qBAAqBA,EAAS,gBAAgBnrJ,EAAG0U,IAAIy2I,EAASA,EAASlmI,GAAOA,EAAM3P,EAAElV,EAA3oN,EAAopN,MAAM,KAAjlN,EAAimNusI,EAAasS,QAAQ,+BAA+BkM,EAAS,OAAO,KAAnpN,EAAoqN/qJ,EAA/vN,EAAwwN6kB,EAAM3P,EAAE,MAAM,KAAxvN,EAAkwNlV,EAAxuN,EAA8vN6kB,EAAM3P,EAAE,MAAM,KAAvtN,EAAwuN,MAAM,IAAIxZ,MAAM,+DAAgEwZ,GAAG,CAAC,CAAC,SAAS6lI,EAAcn7I,EAAGy7I,EAAW4O,GAAyE,IAA3D,IAAIxmC,EAAQ7jH,EAAG6jH,QAAY2mC,EAAW,KAAS3jJ,EAAE7G,EAAGrG,OAAakN,KAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAOi2I,EAAM17I,EAAE07I,MAAU3mJ,EAAMiL,EAAEjL,MAAiC,IAAvBk1J,EAAIvO,EAAMj8I,QAAQ,MAAY,EAAG,IAAIsN,EAAO/M,EAAE+M,OAAO2uI,EAAMp2I,MAAM,EAAE2kJ,GAASxO,EAAUC,EAAMp2I,MAAM2kJ,EAAI,GAAOC,EAAkB,UAATn9I,GAAkB0uI,OAAeA,EAAUC,EAAM3uI,EAAO,KAAKm9I,EAAiB,UAARxO,GAAiB,GAAG17I,EAAEy7I,UAAUA,GAAwB,IAAXyO,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAUn1J,EAAMiL,EAAEs8I,IAAI,gCAAgCjC,EAAWgC,mBAAmB6N,EAASn1J,GAAO,CAAiB,IAAZ0Q,EAAE7G,EAAGrG,OAAakN,MAAiBsH,GAAZ/M,EAAEpB,EAAG6G,IAAgBsH,UAA8B,QAATA,IAAgB/M,EAAEs8I,IAAI,wCAAmD,UAATvvI,IAAkB/M,EAAEs8I,IAAI2M,EAAal8I,GAAQ,MAAM,IAAIk9I,KAAIxnC,EAAQhjH,QAAQ,MAAY,GAAGsN,EAAOnO,EAAGmO,OAAO01G,EAAQn9G,MAAM,EAAE2kJ,GAAKxO,EAAU78I,EAAG68I,UAAUh5B,EAAQn9G,MAAM2kJ,EAAI,KAAQl9I,EAAO,KAAK0uI,EAAU78I,EAAG68I,UAAUh5B,GAAQ,IAAI2hC,EAAGxlJ,EAAG09I,IAAI2M,EAAal8I,GAAQ,IAAqD,GAAjDstI,EAAW99F,aAAa6nG,EAAG3I,EAAUh5B,EAAQ7jH,IAAOA,EAAG8qJ,OAA8L,OAAtD9qJ,EAAGqqJ,aAAaA,EAAarqJ,EAAGwqJ,WAAWA,GAAkB,EAAjJ,GAA5C/O,EAAW8B,WAAWiI,EAAG3I,EAAUh5B,GAAY2mC,EAAY,IAAIr8I,KAAUq8I,EAAY/O,EAAWkC,iBAAiBxvI,EAAiF,CAAC,SAAS+8I,EAAwB5P,EAAOkQ,EAAW3nC,EAAQ8lC,EAAelO,GAAY,GAAG,yBAAyB5lI,KAAKguG,GAAS,CAAC,IAAI4nC,EAAWnQ,EAAOz6I,QAAQ,KAAKgjH,EAAQ,IAAI2nC,GAAgB3pJ,EAAKy5I,EAAOlxH,UAAUohI,EAAW,EAAEC,GAAY,GAAG,OAAO51I,KAAKhU,GAAO,MAAG,YAAYgU,KAAKguG,IAAU43B,EAAWwC,WAAWp8I,EAAK,EAAEA,EAAKlI,QAAe8xJ,IAAW5pJ,EAAKA,EAAK2E,QAAQ,WAAWmjJ,GAAgBlO,EAAWwC,WAAWp8I,EAAK,EAAEA,EAAKlI,QAAe8xJ,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAczP,EAAOkQ,EAAW3nC,EAAQymC,GAAU,IAAIvnI,EAAIunI,EAASzmC,GAA8I,OAA7H,MAAL9gG,KAAWA,EAAIu4H,EAAOoQ,YAAY,KAAK7nC,EAAQ,MAAY2nC,IAAYzoI,EAAIu4H,EAAOoQ,YAAY,KAAK7nC,IAASymC,EAASzmC,GAAS9gG,GAAWA,EAAIyoI,CAAU,CAAC,SAASD,EAAMjQ,EAAO7hG,GAAQ,IAAI,IAAI7G,KAAK0oG,EAAQ7hG,EAAO7G,GAAG0oG,EAAO1oG,EAAG,CAAC,SAAS+3G,EAASrP,EAAOr2H,EAAMw2H,EAAW9O,GAA8C,GAAiB,MAAxC2O,EAAOlkG,OAAOnyB,EAAM,GAAwB,MAA4B,MAAzBq2H,EAAOlkG,OAAOnyB,EAAM,IAAcuyB,EAAI8jG,EAAOz6I,QAAQ,SAAMokB,EAAM,IAAUA,GAAOw2H,EAAWrgC,QAAQkgC,EAAOr2H,EAAM,EAAEuyB,EAAIvyB,EAAM,GAAUuyB,EAAI,IAAOm1F,EAAa5pI,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1Bu4I,EAAOvnG,OAAO9uB,EAAM,EAAE,GAAa,CAAC,IAAIuyB,EAAI8jG,EAAOz6I,QAAQ,MAAMokB,EAAM,GAAmG,OAAhGw2H,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAOr2H,EAAM,EAAEuyB,EAAIvyB,EAAM,GAAGw2H,EAAWiD,WAAkBlnG,EAAI,CAAC,CAAC,IAAIm0G,EAAqiD,SAAerQ,EAAOr2H,GAAO,IAAIkR,EAAU6uH,EAAI,GAAO4G,EAAI,6CAAkF,IAArCA,EAAIpJ,UAAUv9H,EAAM2mI,EAAI3d,KAAKqN,GAAcnlH,EAAMy1H,EAAI3d,KAAKqN,IAAyB,GAAhB0J,EAAIltJ,KAAKq+B,GAAUA,EAAM,GAAG,OAAO6uH,CAAI,CAA/uDhqI,CAAMsgI,EAAOr2H,GAAW+3H,EAAI2O,EAAOhyJ,OAAO,GAAGqjJ,EAAI,GAAG,YAAYnnI,KAAK81I,EAAO,GAAG,IAAI,CAAC,IAAIhxJ,EAAKgxJ,EAAO,GAAG,GAAOlG,EAAMzI,EAAI,GAAG,YAAYnnI,KAAK81I,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOjG,EAAM1I,EAAI,GAAG2O,EAAO,GAAG,GAAOE,EAAUF,EAAO3O,EAAI,GAA2I,OAAxIvB,EAAWkD,SAAShkJ,EAAK8qJ,GAAOA,EAAMj/I,QAAQ,kBAAkB,MAAMk/I,GAAOA,EAAMl/I,QAAQ,kBAAkB,OAAOi1I,EAAWqQ,SAAgBD,EAAUtsJ,MAAMssJ,EAAU,GAAGlyJ,MAAM,CAAE,OAAO,CAAC,CAAC,SAAS+wJ,EAAiBpP,EAAOr2H,EAAMw2H,GAAY,IAAIjkG,EAAI8jG,EAAOz6I,QAAQ,KAAKokB,GAAO,GAAGuyB,EAAI,CAAC,IAAIrhB,EAAMmlH,EAAOlxH,UAAUnF,EAAMuyB,GAAKrhB,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAGx8B,OAAO8hJ,EAAWmC,sBAAsBznH,EAAM,GAAGA,EAAM,IAAWqhB,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAASozG,EAAkBtP,GAAQ,CAAkjB,SAASyQ,EAAYC,EAAKzjJ,GAA8B,OAAtByjJ,EAAKxM,UAAUj3I,EAAcyjJ,CAAI,CAAnqVxQ,EAAU7uG,UAAU,CAAC5hC,MAAM,SAASuwI,EAAOI,EAAaE,GAAW,IAAIH,EAAWjoJ,KAAKioJ,WAAWA,EAAWgB,gBAAgB8O,EAAM7P,EAAaA,EAAa,CAAC,GAAG3wI,EAAMuwI,EAAOI,EAAaE,EAAUH,EAAWjoJ,KAAKm5I,cAAc8O,EAAW4C,aAAa,GAAozTuM,EAAkBj+G,UAAU,CAACy+G,WAAW,SAASvnC,GAAS,IAAI4lC,EAAe5zI,KAAKguG,GAAU,MAAM,IAAI/nH,MAAM,mBAAmB+nH,GAASrwH,KAAKqwH,QAAQA,CAAO,EAAEnvG,IAAI,SAASooI,EAAM3mJ,EAAMs1I,GAAQ,IAAIge,EAAe5zI,KAAKinI,GAAQ,MAAM,IAAIhhJ,MAAM,qBAAqBghJ,GAAOtpJ,KAAKA,KAAKmG,UAAU,CAACmjJ,MAAMA,EAAM3mJ,MAAMA,EAAMs1I,OAAOA,EAAO,EAAE9xI,OAAO,EAAEsyJ,aAAa,SAASplJ,GAAG,OAAOrT,KAAKqT,GAAGg2I,SAAS,EAAEO,WAAW,SAASv2I,GAAG,OAAOrT,KAAKqT,GAAG4zI,OAAO,EAAEyC,SAAS,SAASr2I,GAAG,OAAOrT,KAAKqT,GAAGi2I,KAAK,EAAEG,OAAO,SAASp2I,GAAG,OAAOrT,KAAKqT,GAAG62I,GAAG,EAAEj+I,SAAS,SAASoH,GAAG,OAAOrT,KAAKqT,GAAG1Q,KAAK,GAA4E41J,EAAY,CAAC,EAAEA,EAAYp/G,qBAAqBo/G,IAAcA,EAAY,SAASC,EAAKzjJ,GAAQ,SAAS+M,IAAI,CAA4B,IAAI/M,KAA/B+M,EAAEq3B,UAAUpkC,EAAO+M,EAAE,IAAIA,EAAgB02I,EAAM12I,EAAE/M,GAAQyjJ,EAAKzjJ,GAAQ,OAAO+M,CAAC,GAAoNpiB,EAAQsoJ,UAAUA,CAAS,EAAE,CAAC,GAAG,mBAAmB,CAAC,SAASzzE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIvtD,EAAUpT,EAAQ,eAAmBggE,EAAShgE,EAAQ,iBAAiBggE,SAAa5jE,EAAU4D,EAAQ,UAAU5D,UAA0D,IAAIglE,EAAWphE,EAAQ,gBAAoB2uE,EAAW,iDAAiD,SAASwV,EAAavW,GAAyB,OAAVA,EAAK7J,IAAgB,CAAC,SAASqgB,EAAaC,GAAO,IAAItgB,EAAKsgB,EAAMtgB,KAAKlpC,EAAKwpD,EAAMxpD,KAAK1L,EAAMk1D,EAAMl1D,MAAsCm1D,EAArBD,EAAMjV,WAAoCzwI,MAAMk8F,EAAK,EAAE1L,GAAOkzC,QAAO,SAAS9vH,EAAO1Y,GAAM,OAAO0Y,EAAO1Y,EAAKzL,KAAK,GAAE,IAAQouE,GAAO,IAAKJ,GAAWE,gBAAgB,QAAQgoF,EAAU,UAAc5gB,EAAOlnE,EAAOE,qBAAqB,SAAa6nF,EAAI/nF,EAAOE,qBAAqB,SAA4M,OAAnMqnE,EAAKwgB,IAAI,CAACC,GAAGl0I,SAASi0I,EAAI,GAAGz1E,aAAa,MAAM,IAAI21E,GAAGn0I,SAASi0I,EAAI,GAAGz1E,aAAa,MAAM,KAAKi1D,EAAKL,OAAO,CAAC/qI,EAAE2X,SAASozH,EAAO,GAAG50D,aAAa,KAAK,IAAI/sB,EAAEzxC,SAASozH,EAAO,GAAG50D,aAAa,KAAK,KAAYi1D,CAAI,CAAC,IAAI/qB,EAAY,WAAW,SAASA,EAAYprH,GAA4K,GAAtwC,SAAyB2kD,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAo9BC,CAAgB91I,KAAKutH,GAAavtH,KAAKmH,KAAK,cAAcnH,KAAKmC,QAAQA,GAAS,CAAC,EAAEnC,KAAKi5J,YAAY,CAAC,EAA4B,MAAvBj5J,KAAKmC,QAAQ+tH,WAAgBlwH,KAAKmC,QAAQ+tH,UAAS,GAAgC,MAAvBlwH,KAAKmC,QAAQguH,SAAgB,MAAM,IAAI7nH,MAAM,4BAA4B,GAAyB,MAAtBtI,KAAKmC,QAAQmuH,QAAe,MAAM,IAAIhoH,MAAM,2BAA2BtI,KAAKk5J,YAAY,CAAC,CAC3u4B,OAD4u4BvkB,EAAapnB,EAAY,CAAC,CAAClpH,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQuyI,GACtw+B,IAAIykB,EAAUzkB,EAAc3kB,IAAIz+C,KAAK,eAAexqD,OAAO4tH,EAAc3kB,IAAIz+C,KAAK,0BAA0BnjE,KAAI,SAASmjE,GAAM,OAAOA,EAAKnqE,IAAI,IAAgL,OAA7KnH,KAAKk7I,eAAexG,EAAcwG,eAAel7I,KAAK67C,SAAS64F,EAAc74F,SAAS77C,KAAK+vH,IAAI2kB,EAAc3kB,IAAI5tH,EAAQi5I,aAAaj5I,EAAQi5I,aAAat0H,OAAOqyI,GAAkBh3J,CAAO,GAAG,CAACkC,IAAI,MAAM1B,MAAM,SAAaR,GAAYA,EAAQ4tH,MAAK/vH,KAAK+vH,IAAI5tH,EAAQ4tH,KAAO5tH,EAAQyzI,eAAc51I,KAAK41I,aAAazzI,EAAQyzI,aAAa,GAAG,CAACvxI,IAAI,QAAQ1B,MAAM,SAAewgJ,GAAoB,IAAI1jJ,EAAOyjJ,EAAethJ,EAAK,cAAc,MAAuC,OAApCuhJ,EAAmBvsH,UAAU,EAAE,GAAiB,CAACh1B,KAAKA,EAAKe,MAAMwgJ,EAAmB5iG,OAAO,GAAG9gD,OAAOA,EAAOywH,UAAS,GAA6C,MAApCizB,EAAmBvsH,UAAU,EAAE,GAAgB,CAACh1B,KAAKA,EAAKe,MAAMwgJ,EAAmB5iG,OAAO,GAAG9gD,OAAOA,EAAOywH,UAAS,GAAc,IAAI,GAAG,CAAC7rH,IAAI,YAAY1B,MAAM,SAAmB03I,GAAQ,IAAIoI,OAAS,EAAWiB,OAAS,EAA8I,MAApH,SAAhB1jJ,KAAK67C,UAAmB4mG,EAAS,OAAOiB,EAASiV,IAAkBlW,EAASziJ,KAAKmC,QAAQ+tH,SAAS,MAAM,MAAMwzB,EAASgV,GAAoBnkB,EAASoG,OAAOoJ,YAAY1J,EAAO,CAAC6I,WAAWA,EAAWQ,SAASA,EAASjB,SAASA,GAAU,GAAG,CAACp+I,IAAI,SAAS1B,MAAM,SAAgB21I,EAAKn2I,GAASnC,KAAKi5J,YAAY92J,EAAQo6I,UAAUv8I,KAAKi5J,YAAY92J,EAAQo6I,WAAW,IAAI5G,EAAW31I,KAAK+vH,IAAI5tH,EAAQo6I,SAASv8I,KAAK41I,aAAa51I,KAAK67C,UAAU,IAAIu9G,EAAWp5J,KAAKi5J,YAAY92J,EAAQo6I,UAAU,GAAgB,iBAAZjE,EAAK12I,MAAsB02I,EAAK74I,SAASyjJ,EAAY,OAAO,KAAK,IAAI,IAAI9yB,EAASjuH,EAAQohJ,aAAat3I,SAASqsI,EAAK31I,OAAO,IAAIytH,EAAU,MAAM,IAAI9nH,MAAM,qBAAqB,IAAIioH,EAAUvwH,KAAKmC,QAAQguH,SAASC,EAASkoB,EAAK31I,OAAWm1I,EAAIshB,EAAW5hB,aAAax3I,KAAKq5J,mBAAmB9oC,GAAe+oC,EAAUt5J,KAAKmC,QAAQmuH,QAAQC,EAAUH,EAASkoB,EAAK31I,OAAO,OAAO3C,KAAKu5J,gBAAgBjhB,EAAKR,EAAIwhB,EAAgE,CAArD,MAAMjvJ,GAAG,MAAM,CAAC1H,MAAM3C,KAAKk7I,eAAewC,WAAW,CAAC,GAAG,CAACr5I,IAAI,kBAAkB1B,MAAM,SAAyB21I,EAAKR,EAAIwhB,GAAW,IADum4Bx4I,EAC9l4Bg3H,IADun4Bh3H,EACjn4B,MAAM,IAAIxY,MAAM,wBADyj4B,IAAewY,EAC5i4ByhE,EAAK,CAACgyD,EAASC,oBAAoB8kB,EAAU,IAAI/kB,EAASC,oBAAoB8kB,EAAU,KAASppC,EAASlwH,KAAKmC,QAAQ+tH,UAAUooB,EAAKpoB,SAAyK,MAAM,CAACvtH,MAAjI,SAAhB3C,KAAK67C,SAA2B77C,KAAKw5J,oBAAoBlhB,EAAKR,EAAIv1D,EAAK2tC,GAAuBlwH,KAAKy5J,oBAAoB3hB,EAAIv1D,EAAK2tC,GAA+B,GAAG,CAAC7rH,IAAI,sBAAsB1B,MAAM,SAA6B21I,EAAKR,EAAIv1D,EAAK2tC,GAAU,IAAI+nB,EAAO,CAAC/qI,EAAEorI,EAAKL,OAAO/qI,EAAEopD,EAAEgiF,EAAKL,OAAO3hF,GAAOojG,EAAOphB,EAAKwgB,IAAIC,GAAOY,EAAOrhB,EAAKwgB,IAAIE,GAAOY,EAAKr3E,EAAK,GAAOs3E,EAAKt3E,EAAK,GAAoE,OAA9D2tC,IAAU+nB,EAAO/qI,GAAGwsJ,EAAO,EAAEE,EAAK,EAAE3hB,EAAO3hF,GAAGqjG,EAAO,EAAEE,EAAK,GAASlyE,EAAUqwD,gBAAgBF,EAAI,CAAC8hB,EAAKC,GAAM5hB,EAAO,GAAG,CAAC5zI,IAAI,sBAAsB1B,MAAM,SAA6Bm1I,EAAIv1D,EAAK2tC,GAAU,OAAOA,EAASvoC,EAAUowD,oBAAoBD,EAAIv1D,GAAMoF,EAAUkwD,YAAYC,EAAIv1D,EAAK,GAAG,CAACl+E,IAAI,mBAAmB1B,MAAM,WAA4B,IAAIwE,EAAK,mBAAmBnH,KAAKk5J,YAAY,OAA0B,OAAnBl5J,KAAKk5J,cAAqB/xJ,CAAI,KAAYomH,CAAW,CADq23B,GACj23B9tH,EAAOC,QAAQ6tH,CAAW,EAAE,CAAC,eAAe,EAAE,cAAc,EAAEmnB,cAAc,EAAEmG,OAAO,MAAM,CAAC,EAAE,GAH/rF,CAGmsF,+BCH5+Fp7I,EAAOC,QAAoS,SAAS2K,EAAE4xB,EAAEmjB,EAAExvC,GAAG,SAAShD,EAAEyY,EAAE8wD,GAAG,IAAI/2B,EAAE/5B,GAAG,CAAC,IAAI4W,EAAE5W,GAAG,CAAmE,GAAGhS,EAAE,OAAOA,EAAEgS,GAAE,GAAI,IAAIre,EAAE,IAAIsB,MAAM,uBAAuB+c,EAAE,KAAK,MAAMre,EAAEyP,KAAK,mBAAmBzP,CAAC,CAAC,IAAIsN,EAAE8qC,EAAE/5B,GAAG,CAAC3lB,QAAQ,CAAC,GAAGu8B,EAAE5W,GAAG,GAAG+zB,KAAK9kC,EAAE5U,SAAQ,SAAS2K,GAAoB,OAAOuC,EAAlBqvB,EAAE5W,GAAG,GAAGhb,IAAgBA,EAAE,GAAEiK,EAAEA,EAAE5U,QAAQ2K,EAAE4xB,EAAEmjB,EAAExvC,EAAE,CAAC,OAAOwvC,EAAE/5B,GAAG3lB,OAAO,CAA2C,IAA1C,IAAI2T,OAAE,EAA4CgS,EAAE,EAAEA,EAAEzV,EAAEzJ,OAAOkf,IAAIzY,EAAEgD,EAAEyV,IAAI,OAAOzY,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAAS2nE,EAAQ90E,EAAOC,GAAS,aAAgM,IAAIw4I,EAAQ3jE,EAAQ,aAAiB5D,EAAU4D,EAAQ,UAAU5D,UAAcwnE,EAAc5jE,EAAQ,UAAU4jE,cAAkBC,EAAO7jE,EAAQ,YAAgBggE,EAAS,CAAC,EAA0HA,EAASnwI,SAAS,CAACi0I,WAAW,SAAoBC,GAAM,OAAIA,EAAK74I,QAA6B64I,EAAK74I,OAAyB,IAA7C,WAAwD,EAAEo1E,OAAOqjE,GAAxQ,SAAgBtnB,GAAK,OAAnVjuH,EAAmX,SAAakuH,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvbvsH,EAAiX,SAArXyT,EAAkX,CAAC,GAArV3D,OAAO8gI,eAAen9H,EAAIzT,EAAI,CAAC1B,MAAMA,EAAMmyI,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAYl9H,EAAIzT,GAAK1B,EAAamV,EAA/K,IAAyBA,EAAIzT,EAAI1B,CAAqb,IAAiK41I,WAAW,CAAC9mH,MAAM,IAAIuyB,IAAI,MAAMuwF,EAASiE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAM3gI,OAAI,EAAO1D,OAAK,EAAef,EAAE,EAAEA,EAAEN,UAAU5M,OAAOkN,GAAG,EAAE,CAACyE,EAAI/E,UAAUM,GAAGe,EAAKD,OAAOC,KAAK0D,GAAK,IAAI,IAAI4oB,EAAE,EAAEA,EAAEtsB,EAAKjO,OAAOu6B,GAAG,EAAG+3G,EAAOrkI,EAAKssB,IAAI5oB,EAAI1D,EAAKssB,GAAI,CAAC,OAAO+3G,CAAM,EAAElE,EAASiC,QAAQ,SAASkC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAEnE,EAASqE,WAAW,SAAShsI,GAAG,IAAI,QAAOsd,IAAJtd,EAAe,OAAiB,OAAOisI,mBAAmBC,OAAOvE,EAASwE,cAAcnsI,IAAmI,CAA9H,MAAMvC,GAAG,IAAIlC,EAAI,IAAIG,MAAM,OAA0F,MAAnFH,EAAIwlF,WAAW9jF,KAAK+C,EAAEzE,EAAIwlF,WAAWqrD,YAAY,kCAAwC7wI,CAAG,CAAC,EAAEosI,EAAS0E,WAAW,SAASrsI,GAAG,OAAOssI,SAASjjI,mBAAmBrJ,GAAG,EAAE2nI,EAASgC,QAAQ,SAASnkE,EAAI+mE,GAAoE,OAA3C,IAAIxoE,EAAU,CAACwoE,aAAaA,IAA6BtoE,gBAAgBuB,EAAI,WAAW,EAAEmiE,EAAS6E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC9E,EAAS+E,aAAa,SAASlnE,GAAK,OAAOA,EAAIp/D,QAAQqmI,EAAiB,OAAO,EAAE9E,EAASgF,eAAeplI,OAAOC,KAAKmgI,EAAS6E,SAASjrI,KAAI,SAASqrI,GAAS,IAAIC,EAAUlF,EAAS6E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAIt3H,OAAOmyH,EAAS+E,aAAaG,GAAW,KAAKE,KAAK,IAAIv3H,OAAOmyH,EAAS+E,aAAaE,GAAS,KAAK/nH,MAAMgoH,EAAUz1F,IAAIw1F,EAAQ,IAAGjF,EAASqF,WAAW,SAAS92F,GAAqB,IAAb,IAAIlzC,OAAE,EAAeyD,EAAE,EAAEiB,EAAEigI,EAASgF,eAAepzI,OAAOkN,EAAEiB,EAAEjB,IAAKzD,EAAE2kI,EAASgF,eAAelmI,GAAGyvC,EAAOA,EAAO9vC,QAAQpD,EAAE8pI,OAAO9pI,EAAEo0C,KAAK,OAAOlB,CAAM,EAAEyxF,EAASsF,WAAW,SAAS/2F,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOpuC,YAAwB,IAAb,IAAI9E,OAAE,EAAeyD,EAAE,EAAEiB,EAAEigI,EAASgF,eAAepzI,OAAOkN,EAAEiB,EAAEjB,IAAKzD,EAAE2kI,EAASgF,eAAelmI,GAAGyvC,EAAOA,EAAO9vC,QAAQpD,EAAE+pI,KAAK/pI,EAAE6hB,OAAO,OAAOqxB,CAAM,EAAEyxF,EAAS7uI,UAAU,SAASoS,GAAK,OAAOjE,KAAK0D,MAAM1D,KAAKC,UAAUgE,GAAK,EAAEy8H,EAASuF,aAAa,SAASC,GAAQ,OAAOA,EAAOnD,QAAO,SAAS9oI,EAAOksI,GAAgD,OAAzC7sI,MAAMgsC,UAAU70C,KAAKqkC,MAAM76B,EAAOksI,GAAclsI,CAAM,GAAE,GAAG,EAAE,IAAImsI,EAAY,IAAI73H,OAAOlH,OAAOg/H,aAAa,KAAK,KAA8U,SAASC,EAAoBh4I,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,WAAWj4I,EAAQ62B,QAAQ,sBAAsB72B,EAAQxB,UAAsN,MAA5MwH,EAAIwlF,WAAW,CAAC/sF,GAAG,uBAAuBuB,EAAQxB,SAASq4I,YAAY,WAAW72I,EAAQ62B,QAAQ,sBAAsB72B,EAAQxB,SAAS05I,OAAOl4I,EAAQk4I,OAAOtuI,MAAM5J,EAAQ4J,MAAMitB,QAAQ72B,EAAQ62B,SAAe7wB,CAAG,CAA1qBosI,EAASwE,cAAc,SAASnsI,GAAG,OAAOA,EAAEoG,QAAQinI,EAAY,IAAI,EAAE1F,EAAS+F,aAAa,SAASC,EAAMzrE,GAA4C,IAAnC,IAAI0rE,EAAW,GAAO73G,OAAM,EAA0C,OAA5BA,EAAM43G,EAAME,KAAK3rE,KAAiB0rE,EAAWl2I,KAAK,CAAC01I,MAAMr3G,EAAMs1G,OAAOt1G,EAAM52B,QAAQ,OAAOyuI,CAAU,EAAEjG,EAASmG,aAAa,SAAS5iI,GAAK,OAAO3D,OAAOC,KAAK0D,GAAK3R,MAAM,EAAoWouI,EAAS3yF,SAAS,SAASy4F,EAAOrhH,EAAQjtB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMuI,EAAE+lI,EAAOl0I,OAAOkN,EAAEiB,EAAEjB,IAAwB,GAAVgnI,EAAOhnI,GAAW1Q,QAAQ,KAAKq2B,EAAQ,IAAK,OAAO3lB,EAAG8mI,EAAoB,CAACx5I,SAAS,QAAQq4B,QAAQA,EAAQqhH,OAAOA,EAAOtuI,MAAMA,GAAO,EAAEwoI,EAAS5yF,QAAQ,SAAS04F,EAAOrhH,EAAQjtB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMsH,GAAG,EAAEA,IAAI,CAAC,IAAIilI,EAAK+B,EAAOhnI,GAAG,GAAqC,IAAlCilI,EAAK31I,MAAM0K,QAAQ,IAAI2rB,KAAiE,IAAnD,CAAC,IAAI,KAAK3rB,QAAQirI,EAAK31I,MAAMq2B,EAAQ7yB,OAAO,IAAU,OAAOkN,CAAE,CAAC8mI,EAAoB,CAACx5I,SAAS,OAAOq4B,QAAQA,EAAQqhH,OAAOA,EAAOtuI,MAAMA,GAAO,EAAEtM,EAAOC,QAAQ60I,CAAQ,EAAE,CAAC,WAAW,EAAE,YAAY,EAAEsG,OAAO,KAAK,EAAE,CAAC,SAAStmE,EAAQ90E,EAAOC,GAAS,aAAa,SAASo9I,EAAQxrI,GAAStR,KAAKmH,KAAK,eAAenH,KAAKsR,QAAQA,EAAQtR,KAAK+8I,MAAM,IAAIz0I,MAAMgJ,GAASyrI,KAAK,CAAmC,SAAS3C,EAAgB9oI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAKsR,QAAQA,EAAQtR,KAAK+8I,MAAM,IAAIz0I,MAAMgJ,GAASyrI,KAAK,CAAuC,SAASC,EAAmB1rI,GAAStR,KAAKmH,KAAK,mBAAmBnH,KAAKsR,QAAQA,EAAQtR,KAAK+8I,MAAM,IAAIz0I,MAAMgJ,GAASyrI,KAAK,CAA0C,SAASE,EAAgB3rI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAK2tF,WAAW,CAACqrD,YAAY,iBAAiBh5I,KAAKsR,QAAQA,EAAQtR,KAAK+8I,MAAM,IAAIz0I,MAAMgJ,GAASyrI,KAAK,CAAngBD,EAAQ3jG,UAAU7wC,MAAM6wC,UAA+HihG,EAAgBjhG,UAAU,IAAI2jG,EAAmIE,EAAmB7jG,UAAU,IAAI2jG,EAA2KG,EAAgB9jG,UAAU,IAAI2jG,EAAQr9I,EAAOC,QAAQ,CAACo9I,QAAQA,EAAQ1C,gBAAgBA,EAAgB6C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASzoE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIw9I,EAAW3oE,EAAQ,kBAAsB4oE,EAAoB5oE,EAAQ,4BAAgC6oE,EAAa7oE,EAAQ,oBAAwB8oE,EAAgB9oE,EAAQ,+BAAmC7I,EAAO6I,EAAQ,oBAAwB+oE,EAAmB,CAAC7B,kBAAkB,SAA2B1rB,GAAkI,OAA1GA,EAAIz+C,KAAK,2DAA2DnjE,KAAI,SAASmjE,GAAM,OAAOA,EAAKnqE,IAAI,IAAyB2f,OAAO,CAAC,wBAAwB,EAAE61H,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAACjwE,EAAO2xE,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2B1rB,GAAwG,OAAhFA,EAAIz+C,KAAK,iCAAiCnjE,KAAI,SAASmjE,GAAM,OAAOA,EAAKnqE,IAAI,IAAyB2f,OAAO,CAAC,qBAAqB,EAAE61H,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAACjwE,EAAOyxE,EAAoBE,EAAgBD,EAAaF,IAAaz9I,EAAOC,QAAQ,CAACk+I,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,EAAE,iBAAiB,EAAE,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAAS/oE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI04I,EAAO7jE,EAAQ,YAAgBggE,EAAShgE,EAAQ,eAAe,SAASupE,EAAQC,EAAMp7G,GAAO,OAAOo7G,EAAM,IAAIp7G,EAAMs1G,QAAQt1G,EAAMs1G,OAAO8F,EAAM,EAAE,CAAC,SAASC,EAAgB1F,EAAK2F,GAAW,GAAe,QAAZ3F,EAAK12I,MAA8B,UAAhB02I,EAAK33I,UAAoB23I,EAAKjqI,KAAK,CAAC,GAAG4vI,EAAW,MAAM,IAAI31I,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZgwI,EAAK12I,MAA8B,QAAhB02I,EAAK33I,UAAkB23I,EAAKjqI,KAAK,CAAC,IAAI4vI,EAAW,MAAM,IAAI31I,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAO21I,CAAS,CAAC,SAASC,EAAWtwI,EAAEC,GAAG,OAAOD,EAAEqqI,OAAOpqI,EAAEoqI,MAAM,CAAC,SAASkG,EAAOvtB,GAAK,IAAIn/F,EAAM,EAAc,MAATm/F,EAAI,KAAUn/F,EAAM,GAAE,IAAI1lB,EAAM6kH,EAAIvjH,QAAQ,KAAS22C,GAAa,IAATj4C,EAAW6kH,EAAIzqH,OAAO,EAAE4F,EAAM,MAAM,CAAC6kH,IAAIA,EAAI19G,MAAMue,EAAMuyB,GAAKrjD,SAAiB,IAAR8wB,EAAU,QAAQ,MAAM,CAA6hC,SAAS2sH,EAA0Bj8I,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,gBAAmM,MAAnLjyI,EAAIwlF,WAAW,CAAC0wD,KAAKl8I,EAAQk8I,KAAK72H,MAAM,KAAK,GAAG+4B,OAAO,GAAG3/C,GAAG,eAAe0O,QAAQnN,EAAQk8I,KAAKrF,YAAY,2BAA2B72I,EAAQk8I,KAAK99F,OAAO,EAAE,IAAI,iBAAuBp4C,CAAG,CAAC,SAASm2I,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACzG,OAAO,GAAOoG,OAAK,EAAOE,EAAiBt6I,SAAQ,SAAS06I,GAAgBN,EAAKG,EAASj+F,OAAOm+F,EAAmBzG,OAAO0G,EAAe1G,OAAOyG,EAAmBzG,SAAqC,UAA1B0G,EAAeh+I,UAAoB89I,GAAuC,QAA1BE,EAAeh+I,WAAmB89I,KAA0C,UAA1BE,EAAeh+I,SAAoBy9I,EAA0B,CAACC,KAAKA,IAA3+B,SAAmCl8I,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,gBAAyL,MAAzKjyI,EAAIwlF,WAAW,CAAC0wD,KAAKl8I,EAAQk8I,KAAK72H,MAAM,KAAK,GAAG5mB,GAAG,eAAe0O,QAAQnN,EAAQk8I,KAAKrF,YAAY,2BAA2B72I,EAAQk8I,KAAK99F,OAAO,EAAE,IAAI,iBAAuBp4C,CAAG,CAAsuBy2I,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAASr4I,OAAQk4I,EAAKG,EAASj+F,OAAOm+F,EAAmBzG,OAAO0G,EAAsBD,EAAmBzG,QAAWwG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAI9oI,EAAIrV,GAAU,IAAIk/B,EAAQ,GAAOo4G,GAAQ,EAAE,IAAiD,KAA9CA,EAAO6G,EAAIzxI,QAAQ2I,EAAIiiI,EAAO,KAAmBp4G,EAAQv7B,KAAK,CAAC2zI,OAAOA,EAAOt3I,SAASA,WAA4B,IAAVs3I,GAAa,OAAOp4G,CAAO,CAAC,SAASk/G,EAAOC,GAAmB,IAAI/D,EAAMj7I,KAAKA,KAAKg/I,kBAAkBA,EAAkBh/I,KAAKi/I,KAAK,GAAGj/I,KAAKk/I,gBAAgB,SAAS3G,GAAY0C,EAAMgE,KAAKhE,EAAM+D,kBAAkB1wI,KAAK,IAAI,IAAI2pI,EAAO,EAAEgD,EAAMkE,OAAOlE,EAAM+D,kBAAkB7wI,KAAI,SAASmqI,GAA0B,OAApBL,GAAQK,EAAKnyI,QAAqBmyI,EAAKnyI,MAAM,IAAG,IAAIo4I,EAAiBhK,EAASuF,aAAa,CAAC+E,EAAc5D,EAAMgE,KAAK1G,EAAW9mH,MAAM,SAASotH,EAAc5D,EAAMgE,KAAK1G,EAAWv0F,IAAI,SAASr2C,KAAKuwI,GAAYI,EAAuBC,EAAiBtD,EAAMgE,MAAM,IAAIG,EAAgB,CAAC3tH,MAAM8mH,EAAW9mH,MAAMtrB,OAAO69C,IAAIu0F,EAAWv0F,IAAI79C,QAAYk5I,EAAQ,EAAMC,EAAe,EAAErE,EAAMZ,OAAOY,EAAMkE,OAAOhxI,KAAI,SAAS8pI,EAAO5kI,GAAkI,IAA/H,IAAI0qI,EAAM,CAAC9F,EAAOA,EAAOj4I,KAAKg/I,kBAAkB3rI,GAAGlN,QAAYo5I,EAAYv/I,KAAKg/I,kBAAkB3rI,GAAOmsI,EAAmB,GAASF,EAAef,EAAiBp4I,QAAQ23I,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmBl7I,KAAKi6I,EAAiBe,IAAiBA,IAAiB,IAAI/3H,EAAM,GAAO82E,EAAO,EAAKghD,EAAQ,IAAGhhD,EAAOghD,EAAQA,EAAQ,GAAEG,EAAmBv7I,SAAQ,SAASw7I,GAAmB,IAAI98I,EAAM48I,EAAYh/F,OAAO89C,EAAOohD,EAAkBxH,OAAOA,EAAO55C,GAAW17F,EAAMwD,OAAO,GAAGohB,EAAMjjB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQ4kB,EAAMjjB,KAAK,CAAC1C,KAAK,YAAYjB,SAAS8+I,EAAkB9+I,WAAW09F,EAAOohD,EAAkBxH,OAAOA,EAAOmH,EAAgBK,EAAkB9+I,SAAS,IAAG0+I,EAAQhhD,EAAOkhD,EAAYp5I,OAAO,IAAIxD,EAAM48I,EAAYh/F,OAAO89C,GAAoE,OAAzD17F,EAAMwD,OAAO,GAAGohB,EAAMjjB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe4kB,CAAK,GAAE0zH,EAAM,CAAC,CAACx7I,EAAOC,QAAQ,CAAC6X,MAAM,SAAemoI,EAAUnH,GAAY,IAAI0F,GAAU,EAAUe,EAAkB,GAAGU,EAAUz7I,SAAQ,SAASq0I,IAAM2F,EAAUD,EAAgB1F,EAAK2F,KAAqC,YAAZ3F,EAAK12I,MAAkBo9I,EAAkB16I,KAAKg0I,EAAK31I,MAAO,IAAG,IAAI+uE,EAAO,IAAIqtE,EAAOC,GAAmBttE,EAAOwtE,gBAAgB3G,GAAY,IAAIoH,EAAS,GAAO5zI,EAAM,EAAoW,OAAlW2zI,EAAUz7I,SAAQ,SAASq0I,GAAM2F,EAAUD,EAAgB1F,EAAK2F,GAA0B,YAAZ3F,EAAK12I,OAAkB02I,EAAK33I,SAASs9I,EAAU,YAAY,cAAgBA,GAAuB,YAAZ3F,EAAK12I,MAAkBuL,MAAMgsC,UAAU70C,KAAKqkC,MAAMg3G,EAASjuE,EAAO2oE,OAAOtuI,GAAOoC,KAAI,SAAS2T,GAAiD,MAAlC,YAATA,EAAElgB,OAAkBkgB,EAAEnhB,SAAS,aAAmBmhB,CAAC,KAAI/V,KAAa4zI,EAASr7I,KAAKg0I,EAAM,IAAUqH,CAAQ,EAAEC,SAAS,SAAkB9wE,EAAQ+wE,GAAS,IAAIC,EAApgJ,SAAoBhxE,EAAQixE,EAAeC,GAAuU,IAArT,IAAI3hD,EAAO,EAAM4hD,EAAcnxE,EAAQ3oE,OAAW+5I,EAAW3L,EAASuF,aAAa,CAACiG,EAAe5xI,KAAI,SAASyiH,GAAK,MAAM,CAACA,IAAIA,EAAIviH,MAAK,EAAK,IAAG2xI,EAAiB7xI,KAAI,SAASyiH,GAAK,MAAM,CAACA,IAAIA,EAAIviH,MAAK,EAAM,MAAKuoI,QAAO,SAASsJ,EAAWjkH,GAA4B,OAAzBikH,EAAWjkH,EAAE20F,KAAK30F,EAAE5tB,KAAY6xI,CAAU,GAAE,CAAC,GAAOC,EAAa,GAAS9hD,EAAO4hD,IAA+D,KAAhD5hD,EAAOvvB,EAAQzhE,QAAQ,IAAIgxF,KAA5B,CAA0D,IAAI45C,EAAO55C,EAAOA,EAAOvvB,EAAQzhE,QAAQ,IAAIgxF,GAAQ,IAAI+hD,EAAQtxE,EAAQ57D,MAAM+kI,EAAO55C,EAAO,GAAOgiD,EAAQlC,EAAOiC,GAASxvB,EAAIyvB,EAAQzvB,IAAIjwH,EAAS0/I,EAAQ1/I,SAAa0N,EAAK6xI,EAAWtvB,GAAc,MAANviH,GAAqB8xI,EAAa77I,KAAK,CAAC1C,KAAK,MAAMjB,SAASA,EAAS0N,KAAKA,EAAK4pI,OAAOA,EAAOt1I,MAAMy9I,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAWxxE,EAAQ+wE,EAAQxxI,KAAKwxI,EAAQU,OAAWliD,EAAO,EAAMg8C,EAAOyF,EAAQlJ,QAAO,SAASyD,EAAO13G,GAAO,IAAIhgC,EAAMmsE,EAAQvuB,OAAO89C,EAAO17D,EAAMs1G,OAAO55C,GAA4K,OAAjK17F,EAAMwD,OAAO,GAAGk0I,EAAO/1I,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQ07F,EAAO17D,EAAMs1G,OAAOt1G,EAAMhgC,MAAMwD,cAAcw8B,EAAMs1G,OAAUt1G,EAAMhgC,MAAMwD,OAAO,GAAGk0I,EAAO/1I,KAAKq+B,GAAc03G,CAAM,GAAE,IAAQ13I,EAAMmsE,EAAQvuB,OAAO89C,GAAqE,OAA1D17F,EAAMwD,OAAO,GAAGk0I,EAAO/1I,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe03I,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAAS9lE,EAAQ90E,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiB8gJ,GAAM,IAAIC,EAAc5sI,KAAKC,UAAU4sI,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAI3qH,EAAK0qH,EAAc1tI,WAAW,OAAOgjB,KAAQ2qH,EAAMA,EAAM3qH,GAAM2qH,EAAM3qH,GAAMyqH,EAAK73G,MAAM3oC,KAAK+S,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASwhE,EAAQ90E,EAAOC,GAAS,aAAa,SAASihJ,EAAiB5G,EAAOpzF,GAAuB,IAAhB,IAAIi6F,GAAU,EAAUvtI,EAAE,EAAEiB,EAAEylI,EAAO5zI,OAAOkN,EAAEiB,EAAEjB,IAAQszC,EAAMtzC,IAAI0mI,EAAO1mI,GAAGlN,UAAgC,IAAZy6I,GAAe7G,EAAO1mI,GAAGszC,EAAMtzC,IAAI4kI,OAAO8B,EAAO6G,GAAUj6F,EAAMi6F,IAAW3I,UAAQ2I,EAASvtI,GAAG,IAAe,IAAZutI,EAAe,MAAM,IAAIt4I,MAAM,qBAAqB,OAAOs4I,CAAQ,CAACnhJ,EAAOC,QAAQ,SAASq6I,GAAQ,IAAI8G,EAAY9G,EAAOnD,QAAO,SAAS35F,EAAI+8F,GAAO,OAAO/8F,EAAI+8F,EAAM7zI,MAAM,GAAE,GAAG4zI,EAAOA,EAAOjxI,QAAO,SAASkxI,GAAO,OAAOA,EAAM7zI,OAAO,CAAC,IAA6F,IAA1F,IAAI26I,EAAY,IAAI3zI,MAAM0zI,GAAiBl6F,EAAMozF,EAAO5rI,KAAI,WAAW,OAAO,CAAC,IAAOkF,EAAE,EAAQA,GAAGwtI,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiB5G,EAAOpzF,GAAOm6F,EAAYztI,GAAG0mI,EAAOgH,GAAYp6F,EAAMo6F,IAAap6F,EAAMo6F,KAAc1tI,GAAG,CAAC,OAAOytI,CAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASvsE,EAAQ90E,EAAOC,GAAS,aAAa,SAASshJ,IAAW,CAAC,SAASC,EAAS5tI,GAAG,OAAOA,CAAC,CAAC5T,EAAOC,QAAQ,SAASD,GAAQ,IAAI2E,EAAS,CAACyV,IAAImnI,EAASzpI,MAAMypI,EAASt1E,OAAOs1E,EAASE,UAAUF,EAASnF,mBAAmBoF,EAAS/E,eAAe+E,EAASE,UAAUF,GAAU,GAAG9sI,OAAOC,KAAKhQ,GAAUg9I,OAAM,SAAS/8I,GAAK,OAAO5E,EAAO4E,EAAI,IAAI,MAAM,IAAIiE,MAAM,2FAAgL,OAArF6L,OAAOC,KAAKhQ,GAAUH,SAAQ,SAASI,GAAK5E,EAAO4E,GAAK5E,EAAO4E,IAAMD,EAASC,EAAI,IAAU5E,CAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS80E,EAAQ90E,EAAOC,GAAS,aAAa,IAA+B2hJ,EAAU9sE,EAAQ,gBAAoBggE,EAAShgE,EAAQ,gBAAoBumE,EAAQvmE,EAAQ,qBAAuD+sE,EAArB/sE,EAAQ,aAAyC+sE,mBAAuBlJ,EAAO7jE,EAAQ,aAA+V,SAASgtE,EAAkCp/I,GAAS,IAAIs2H,EAAKt2H,EAAQs2H,KAAStwH,EAAI,IAAIiwI,EAAOgC,gBAAgB,0CAA4O,MAAlMjyI,EAAIwlF,WAAW,CAAC/sF,GAAG,yCAAyCo4I,YAAY,YAAYvgB,EAAK,GAAG91H,MAAM,2BAA2B81H,EAAK,GAAG91H,MAAM,IAAI6+I,WAAW/oB,EAAK,GAAG91H,MAAM8+I,WAAWhpB,EAAK,GAAG91H,OAAawF,CAAG,CAAC,SAASu5I,EAAmBpJ,GAAM,OAAOA,EAAKqJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAIr5I,MAAM,uDAAuDgwI,EAAKqJ,SAAS,KAAK,CAAC,SAASC,EAASjH,GAAQ,GAAmB,IAAhBA,EAAOx0I,OAAY,MAAM,GAA4C,IAAzC,IAAI07I,EAAU,EAAMC,EAAWnH,EAAO,GAAWtnI,EAAE,EAAEA,EAAEsnI,EAAOx0I,OAAOkN,IAAI,CAAC,IAAI0uI,EAAapH,EAAOtnI,GAAoD,GAAe,KAAhEwuI,GAAWH,EAAmBK,EAAazJ,OAAuB,CAAIyJ,EAAazJ,KAAK31I,QAAQm/I,EAAWxJ,KAAK31I,OAAiC,KAA1Bo/I,EAAazJ,KAAK31I,OAAY4+I,EAAkC,CAAC9oB,KAAK,CAACqpB,EAAWxJ,KAAKyJ,EAAazJ,QAAQ,IAAI0J,EAAMJ,EAASjH,EAAOznI,MAAMG,EAAE,IAAI,MAAM,CAAC,CAACyuI,EAAWC,IAAej7H,OAAOk7H,EAAM,CAAC,CAAC,IAAI1J,EAAKwJ,EAAWxJ,MAAp2C,SAAqCn2I,GAAS,IAAIw/I,EAASx/I,EAAQw/I,SAAa1lH,EAAa,UAAX0lH,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAex5I,EAAI,IAAIiwI,EAAOgC,gBAAgB6H,EAAE,SAAarxB,EAAIzuH,EAAQm2I,KAAK31I,MAA2F,MAArFwF,EAAIwlF,WAAW,CAAC/sF,GAAGq7B,EAAE,QAAQ+8G,YAAY,qBAAqBpoB,EAAI,OAAO30F,EAAEoiH,KAAKztB,GAAWzoH,CAAG,CAAwhC+5I,CAA4B,CAAC5J,KAAKA,EAAKqJ,SAASrJ,EAAKqJ,UAAU,CAAC,IAAItE,EAAgB,CAACl2I,KAAK,kBAAkBg6I,UAAU,SAAmB9G,EAAO8H,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAAcxG,EAAOuG,EAAnzD,aAAu0D7G,GAAQM,EAAOA,EAAOxsI,KAAI,SAASk0I,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnCjH,EAAO0G,EAAU1G,IAAuC4H,EAAcD,EAAMn0I,KAAI,SAASq0I,GAAM,IAAIC,EAASD,EAAK,GAAGlK,KAAKmK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmBjH,EAAOnnI,MAAMsvI,EAAK,GAAGvK,OAAOuK,EAAK,GAAGvK,UAAawK,EAA4K,CAAnHlO,EAAS5yF,QAAQ04F,EAAOoI,EAASD,EAAK,GAAGvK,QAAkB1D,EAAS3yF,SAASy4F,EAAOoI,EAASD,EAAK,GAAGvK,SAA9I,CAACuK,EAAK,GAAGvK,OAAOuK,EAAK,GAAGvK,OAAgJ,IAAOyK,EAAiB,EAAMC,OAAW,EAAO,OAAOtI,EAAOzD,QAAO,SAASgM,EAAUtK,EAAKjlI,GAAG,IAAIwvI,EAAOH,EAAiBJ,EAAMn8I,QAAQo8I,EAAcG,GAAkB,IAAIrvI,EAAMmvI,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAUt+I,KAAKg0I,GAAasK,EAAiH,GAApGE,EAAa,KAAKzvI,IAAGsvI,EAAW,IAAMH,EAAK,GAAGvK,SAAS5kI,GAAGmvI,EAAK,GAAGvK,SAAS5kI,GAAGsvI,EAAWr+I,KAAKg0I,GAASwK,EAAa,KAAKzvI,EAAE,CAAC,IAAI0vI,EAAS1I,EAAOmI,EAAK,GAAGvK,eAAe8K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAUt+I,KAAKy+I,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAGnjJ,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQuC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,oBAAoB,EAAE,YAAY,KAAK,EAAE,CAAC,SAAS9oE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,gBAAoB0uE,EAAe,oBAAwBnI,EAAQvmE,EAAQ,qBAAyB2uE,EAAW,OAAWhG,EAAW,CAAC/1I,KAAK,aAAaoQ,MAAM,SAAe4rI,GAAoB,IAAI1jJ,EAAOyjJ,EAAethJ,EAAK,cAAc,MAA2B,MAAxBuhJ,EAAmB,GAAgB,CAACvhJ,KAAKA,EAAKe,MAAMwgJ,EAAmB5iG,OAAO,GAAGkiG,SAAS,OAAOhjJ,OAAOA,EAAOkiJ,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAACvhJ,KAAKA,EAAKe,MAAMwgJ,EAAmB5iG,OAAO,GAAGkiG,SAAS,OAAOhjJ,OAAOA,EAAOkiJ,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAACvhJ,KAAKA,EAAKe,MAAMwgJ,EAAmB5iG,OAAO,GAAG9gD,OAAOA,EAAOkiJ,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAACvhJ,KAAKA,EAAKe,MAA9HwgJ,EAAmBnwI,QAAQiwI,EAAe,MAAgGR,SAA7EU,EAAmBnwI,QAAQiwI,EAAe,MAAqDxjJ,OAAOA,EAAOkiJ,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAUhJ,GAAQ,GAAe,eAAZgJ,EAAiC,OAAOhJ,EAAOzD,QAAO,SAASne,EAAK6f,EAAKL,GAAqG,MAA9E,gBAAZK,EAAK12I,MAAsB02I,EAAK74I,SAASyjJ,GAAYzqB,EAAKn0H,KAAK,CAACg0I,KAAKA,EAAKL,OAAOA,IAAgBxf,CAAI,GAAE,GAAG,EAAE/sD,OAAO,SAAgB4sE,EAAKn2I,GAAS,GAAgB,iBAAZm2I,EAAK12I,MAAsB02I,EAAK74I,SAASyjJ,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjEnhJ,EAAQohJ,aAAaC,SAASlL,EAAK31I,OAAzQ,SAAkBkuH,GAAO,IAAI0yB,EAAaphJ,EAAQohJ,aAAaE,sBAAsB5yB,EAAMynB,EAAK31I,OAAO2gJ,EAAWh/I,KAAKnC,EAAQupE,OAAO6oE,EAASiE,aAAa,CAAC,EAAEr2I,EAAQ,CAAC44I,SAASzC,EAAK0K,UAAUvqB,KAAK,CAAC,EAAE8qB,aAAaA,KAAgB,GAAmDjL,EAAK8K,UAAgB,CAACzgJ,MAAM2gJ,EAAWh1I,KAAK,IAAI,GAAG7O,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQoC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAAS3oE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAShgE,EAAQ,gBAAoB6jE,EAAO7jE,EAAQ,aAAiB2uE,EAAW,SAAapI,EAAQvmE,EAAQ,qBAAkW,SAASmvE,EAASvB,GAAM,IAAI7J,EAAK6J,EAAK7J,KAAKlpC,EAAK+yC,EAAK/yC,KAAK1L,EAAMy+C,EAAKz+C,MAAMigD,EAAWxB,EAAKwB,WAAW53I,EAAMo2I,EAAKp2I,MAAU63I,EAAeD,EAAWzwI,MAAMk8F,EAAK,EAAE1L,GAAsO,OAA/NkgD,EAAe3/I,SAAQ,SAAS6d,EAAEzO,GAAMA,IAAItH,EAAMqjG,EAAK,IAAsB,gBAATttF,EAAElgB,MAA+B,YAATkgB,EAAElgB,MAA+B,cAAbkgB,EAAEnhB,WAAxmB,SAAgDwB,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,gDAAoDxpB,EAAIzuH,EAAQm2I,KAAK31I,MAAkK,MAA5JwF,EAAIwlF,WAAW,CAAC/sF,GAAG,+CAA+Co4I,YAAY,WAAWpoB,EAAIytB,KAAKl8I,EAAQm2I,KAAK31I,MAAMihJ,eAAezhJ,EAAQyhJ,gBAAsBz7I,CAAG,CAAoT07I,CAAuC,CAACD,eAAeA,EAAetL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIwL,EAAa,WAAW,SAASA,KAA5hC,SAAyBh9F,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgB91I,KAAK8jJ,GAAc9jJ,KAAKmH,KAAK,cAAc,CAAyvB,OAAxvBwtI,EAAamP,EAAa,CAAC,CAACz/I,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQuyI,GAAgE,OAAjD10I,KAAKk7I,eAAexG,EAAcwG,eAAsB/4I,CAAO,GAAG,CAACkC,IAAI,QAAQ1B,MAAM,SAAewgJ,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAACvhJ,KAAjE,cAA2Ee,MAAMwgJ,EAAmB5iG,OAAO,GAAG9gD,OAAOyjJ,EAAW,GAAG,CAAC7+I,IAAI,YAAY1B,MAAM,SAAmB03I,GAAQ,OAAO9F,EAASoG,OAAOoJ,YAAY1J,EAAO,CAAC6I,WAAWA,EAAWQ,SAASA,EAASjB,SAASziJ,KAAKk7I,eAAeuC,WAAW,GAAG,CAACp5I,IAAI,SAAS1B,MAAM,SAAgB21I,EAAKn2I,GAAS,GAAGm2I,EAAK74I,SAASyjJ,EAAY,OAAO,KAAK,IAAIvgJ,EAAMR,EAAQohJ,aAAat3I,SAASqsI,EAAK31I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQk2I,WAAWC,IAAY,CAAC31I,MAAMA,EAAM,KAAYmhJ,CAAY,CAA12B,GAA82BrkJ,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQ,IAAIgJ,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAASvvE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI4F,EAAQvmE,EAAQ,qBAAyByvE,EAAO,WAAW,SAASA,KAAxN,SAAyBl9F,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgB91I,KAAKgkJ,GAAQhkJ,KAAKmH,KAAK,QAAQ,CAA4V,OAA3VwtI,EAAaqP,EAAO,CAAC,CAAC3/I,IAAI,MAAM1B,MAAM,SAAamV,GAAQA,EAAIijI,WAAU/6I,KAAK+6I,SAASjjI,EAAIijI,UAAsB,MAAVjjI,EAAIjO,OAAY7J,KAAK6J,KAAKiO,EAAIjO,KAAK,GAAG,CAACxF,IAAI,iBAAiB1B,MAAM,SAAwBs5I,GAAQ,IAAIhB,EAAMj7I,KAAK,OAAOmU,OAAOC,KAAKpU,KAAK+6I,UAAUnE,QAAO,SAASqF,EAAOz1G,GAA+C,OAAzCy1G,EAAOz1G,GAAM,CAACA,KAAKA,EAAK38B,KAAKoxI,EAAMpxI,MAAaoyI,CAAM,GAAEA,EAAO,KAAY+H,CAAM,CAArb,GAAybvkJ,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQ,IAAIkJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAASzvE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIo7I,EAAQvmE,EAAQ,qBAAyB0vE,EAAc,CAAC98I,KAAK,sBAAsBg6I,UAAU,SAAmB9G,GAAQ,IAAIl2F,EAAM,GAAO+/F,GAAQ,EAAUp2I,EAAOusI,EAAOzD,QAAO,SAASyD,EAAO/B,GAA8X,MAAzW,QAAZA,EAAK12I,MAA8B,UAAhB02I,EAAK33I,UAAoB23I,EAAKjqI,MAAmB,UAAbiqI,EAAK31I,QAAiBuhJ,GAAQ,GAAQA,GAAwB,gBAAZ5L,EAAK12I,MAAuB02I,EAAK74I,SAAQ0kD,EAAM,GAAGxhD,MAAM,8BAA6BwhD,EAAM7/C,KAAKg0I,IAAW+B,EAAO/1I,KAAKg0I,GAAqB,QAAZA,EAAK12I,MAA8B,QAAhB02I,EAAK33I,UAAkB23I,EAAKjqI,MAAmB,WAAbiqI,EAAK31I,QAAkBwK,MAAMgsC,UAAU70C,KAAKqkC,MAAM0xG,EAAOl2F,GAAO+/F,GAAQ,EAAM//F,EAAM,IAAUk2F,CAAM,GAAE,IAA6C,OAAzCltI,MAAMgsC,UAAU70C,KAAKqkC,MAAM76B,EAAOq2C,GAAcr2C,CAAM,GAAGrO,EAAOC,QAAQ,WAAW,OAAOo7I,EAAQmJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAAS1vE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,eAAmBM,EAAO,CAACssE,UAAU,SAAmB9G,EAAOW,GAAS,SAASkG,EAAUmC,EAAUhJ,GAAQ,OAAOW,EAAQ7sI,KAAI,SAAS1O,GAAQ,OAAOA,EAAOyhJ,UAAUmC,EAAUhJ,EAAO,GAAE,CAA6J,OAA5J,SAAS8G,EAAU9G,GAAQ,OAAOW,EAAQpE,QAAO,SAASyD,EAAO56I,GAAQ,OAAOA,EAAO0hJ,UAAU9G,EAAO,CAAC8G,UAAUA,EAAUD,UAAUA,GAAW,GAAE7G,EAAO,CAAQ8G,CAAU9G,EAAO,EAAE9iI,MAAM,SAAe4sI,EAAMnJ,GAAyQ,IAAIoJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMvN,QAAO,SAASyD,EAAOiK,GAAO,MAAgB,cAAbA,EAAM1iJ,MAAoBwiJ,EAA+B,UAAjBE,EAAM3jJ,SAAuC,QAAjB2jJ,EAAM3jJ,UAA/b,SAAqBwiJ,EAAmB9I,GAAgC,IAAxB,IAAIkK,OAAa,EAAelxI,EAAE,EAAEiB,EAAE0mI,EAAQ70I,OAAOkN,EAAEiB,EAAEjB,IAA2E,GAA/CkxI,EAAXvJ,EAAQ3nI,GAAwBkE,MAAM4rI,GAA+D,OAA1B9I,EAAO/1I,KAAKigJ,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmB5O,EAASqF,WAAWuJ,GAAuD9I,IAASA,EAAO/1I,KAAK,CAAC1C,KAAK,cAAce,MAAMwgJ,IAAqBh2I,MAAMgsC,UAAU70C,KAAKqkC,MAAM0xG,EAAOgK,GAAWA,EAAU,GAAUhK,IAAO8I,EAAmB,GAAU9I,IAAU+J,GAA+B,YAAbE,EAAM1iJ,MAAmC,cAAjB0iJ,EAAM3jJ,SAAwBwiJ,GAAoBmB,EAAM3hJ,MAAW0hJ,EAAU//I,KAAKggJ,GAAcjK,IAAOA,EAAO/1I,KAAKggJ,GAAcjK,EAAM,GAAE,GAAG,GAAG56I,EAAOC,QAAQm1E,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASN,EAAQ90E,EAAOC,GAAS,aAAa,IAAI+kJ,EAAalwE,EAAQ,mBAAuBggE,EAAShgE,EAAQ,eAAu1B90E,EAAOC,QAAjmB,SAASgsE,EAAOvpE,GAA2J,OAAlJA,EAAQupE,OAAOA,EAAOvpE,EAAQ64I,QAAQ74I,EAAQ64I,QAAY74I,EAAQohJ,eAAcphJ,EAAQohJ,aAAakB,EAAaC,uBAAuBviJ,IAAgBA,EAAQ44I,SAAS5sI,KAAI,SAASmqI,GAAM,IAAIqM,EAAxc,SAAsBrM,EAAKn2I,GAAmC,IAA1B,IAAIwiJ,OAAe,EAAetxI,EAAE,EAAEiB,EAAEnS,EAAQ64I,QAAQ70I,OAAOkN,EAAEiB,EAAEjB,IAAgF,GAA5CsxI,EAAnBxiJ,EAAQ64I,QAAQ3nI,GAA0Bq4D,OAAO4sE,EAAKn2I,GAA4B,OAAOwiJ,EAAgB,OAAO,CAAK,CAA0OC,CAAatM,EAAKn2I,GAAS,GAAGwiJ,EAAgB,OAAOA,EAAehiJ,MAAM,GAAe,gBAAZ21I,EAAK12I,KAAqB,CAAC,IAAIe,EAAMR,EAAQohJ,aAAat3I,SAASqsI,EAAK31I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQk2I,WAAWC,IAAa/D,EAASsF,WAAWl3I,EAAM,CAAC,GAAe,YAAZ21I,EAAK12I,MAA8B,QAAZ02I,EAAK12I,KAAc,OAAO02I,EAAK31I,MAAM,MAAM,IAAI2F,MAAM,2BAA2BgwI,EAAK12I,KAAK,IAAI,IAAG0M,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASimE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIkD,EAAO7jE,EAAQ,YAAgBkwE,EAAa,WAAW,SAASA,EAAatiJ,IAAjO,SAAyB2kD,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgB91I,KAAKykJ,GAAczkJ,KAAK6kJ,UAAU1iJ,EAAQ0iJ,UAAU7kJ,KAAKuzB,UAAUpxB,EAAQoxB,UAAUvzB,KAAK60E,OAAO1yE,EAAQ0yE,MAAM,CAAmmE,OAAlmE8/D,EAAa8P,EAAa,CAAC,CAACpgJ,IAAI,WAAW1B,MAAM,SAAkBiuH,EAAI/+G,EAASuxI,GAAmC,OAAzBA,EAASA,IAAU,EAAapjJ,KAAK8kJ,cAAc9kJ,KAAKiM,SAAS2kH,GAAK/+G,EAASuxI,EAAS,GAAG,CAAC/+I,IAAI,oBAAoB1B,MAAM,SAA2BygJ,EAAS2B,EAAQpiJ,GAAUygJ,GAAU2B,EAAQpiJ,EAAO,GAAG,CAAC0B,IAAI,eAAe1B,MAAM,SAAsBA,EAAMf,GAAM,OAAc,MAAPe,IAAcA,GAAc,mBAAPf,GAAwC,IAAfe,EAAMwD,MAAU,GAAG,CAAC9B,IAAI,gBAAgB1B,MAAM,SAAuBA,EAAMoiJ,EAAQ3B,GAAU,IAAIxhJ,EAAKuS,OAAOglC,UAAUzkC,SAAS0kC,KAAKz2C,GAAWqiJ,EAAahlJ,KAAKuzB,UAAUvzB,KAAKilJ,KAAK,GAAGjlJ,KAAKklJ,aAAaviJ,EAAMf,GAAO,OAAO5B,KAAKmlJ,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAPpjJ,EAAqI,MAAU,oBAAPA,EAAiC5B,KAAKmlJ,mBAAmB/B,EAAS2B,EAAQpiJ,IAAkB,IAARA,EAAqB3C,KAAKmlJ,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQn0B,EAAJx9G,EAAE,EAAQA,EAAE1Q,EAAMwD,OAAOkN,IAAKw9G,EAAMluH,EAAM0Q,GAAGrT,KAAKmlJ,mBAAmB/B,EAAS2B,EAAQl0B,EAAiL,GAAG,CAACxsH,IAAI,WAAW1B,MAAM,SAAkBiuH,EAAIq0B,GAAKjlJ,KAAKilJ,IAAS,MAALA,EAAUjlJ,KAAKuzB,UAAUptB,OAAO,EAAE8+I,EAAI,IAAI98I,OAAI,EAAW0sE,OAAO,EAAW/mE,OAAO,EAAW+iH,EAAM7wH,KAAKuzB,UAAUvzB,KAAKilJ,KAAK,IAAIpwE,EAAO70E,KAAK60E,OAAO+7C,EAAkP,CAA7O,MAAMrhH,GAA8N,MAAvNpH,EAAI,IAAIiwI,EAAO4E,mBAAmB,oCAAuCrvD,WAAW,CAAC/sF,GAAG,iCAAiCgwH,IAAIA,EAAIooB,YAAY,gCAAgCpoB,EAAI,qBAAqBw0B,UAAU71I,GAAapH,CAAG,CAAC,IAAI2F,EAAO+mE,EAAOl/D,IAAIk7G,EAAM,CAACo0B,IAAIjlJ,KAAKilJ,IAAI1xH,UAAUvzB,KAAKuzB,WAAiQ,CAArP,MAAMhkB,GAAsO,MAA/NpH,EAAI,IAAIiwI,EAAO4E,mBAAmB,kCAAqCrvD,WAAW,CAAC/sF,GAAG,+BAA+Bo4I,YAAY,gCAAgCpoB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAIw0B,UAAU71I,GAAapH,CAAG,CAAC,OAAW,MAAR2F,GAAc9N,KAAKilJ,IAAI,EAAUjlJ,KAAKiM,SAAS2kH,EAAI5wH,KAAKilJ,IAAI,GAAUn3I,CAAM,GAAG,CAACzJ,IAAI,wBAAwB1B,MAAM,SAA+BkuH,EAAMD,GAAK,IAAIzuH,EAAQ,CAAC0iJ,UAAU7kJ,KAAK6kJ,UAAU3xI,MAAM,GAAGqgB,UAAUvzB,KAAKuzB,UAAUrgB,MAAM,IAA2H,OAAvH/Q,EAAQ0yE,OAAO70E,KAAK60E,OAAO1yE,EAAQoxB,UAAUvzB,KAAKuzB,UAAUzM,OAAO+pG,GAAO1uH,EAAQ0iJ,UAAU7kJ,KAAK6kJ,UAAU/9H,OAAO8pG,GAAY,IAAI6zB,EAAatiJ,EAAQ,KAAYsiJ,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAIttE,EAAOstE,EAAKttE,OAAO4jD,EAAK0pB,EAAK1pB,KAASt2H,EAAQ,CAAC0yE,OAAOA,EAAO4jD,KAAKA,EAAMt2H,UAAkB,IAA4B,OAAzBA,EAAQoxB,UAAU,CAACklG,GAAa,IAAIgsB,EAAatiJ,EAAQ,EAAE1C,EAAOC,QAAQ+kJ,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAASlwE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,eAAmB6jE,EAAO7jE,EAAQ,YAA4V,SAAS8wE,EAAiBrL,EAAMppB,GAAK,GAAkB,IAAfopB,EAAM7zI,OAAY,OAAO,EAAM,IAAsCm/I,EAA1BtL,EAAMA,EAAM7zI,OAAO,GAA4ByqH,IAAIrwE,OAAO,GAAOglG,EAAgB30B,EAAIrwE,OAAO,EAAEqwE,EAAIzqH,OAAO,GAAG,OAA+C,IAAxCm/I,EAAaj4I,QAAQk4I,EAAoB,CAAC,SAASC,EAAOxL,EAAMppB,GAA2B,OAAtBopB,EAAM11I,KAAK,CAACssH,IAAIA,IAAaopB,CAAK,CAA0nB,SAASyL,EAAUnN,EAAKqL,EAAWxhJ,GAAS,IAAIsgJ,EAASnK,EAAKmK,UAAUtgJ,EAAQsgJ,SAAa12I,EAAM43I,EAAWt2I,QAAQirI,GAAM,IAAImK,EAAU,OAAOkB,EAAW,IAAIjgD,OAAM,EAAO0L,OAAK,EAAO,IAAI1L,EAAM6wC,EAAS3yF,SAAS+hG,EAAWlB,EAAS12I,GAAOqjG,EAAKmlC,EAAS5yF,QAAQgiG,EAAWlB,EAAS12I,EAAsM,CAA/L,MAAMq5I,GAA0K,MAA5JA,aAAqBhN,EAAOgC,iBAAxkD,SAAmCj4I,GAAS,IAAIgG,EAAI,IAAIiwI,EAAOgC,gBAAgB,4BAAgCxpB,EAAIzuH,EAAQm2I,KAAK31I,MAAsM,MAAhMwF,EAAIwlF,WAAW,CAAC/sF,GAAG,2BAA2Bo4I,YAAY,YAAYpoB,EAAI,IAAIw0B,UAAUjjJ,EAAQijJ,UAAU/G,KAAKztB,EAAI+yB,WAAWxhJ,EAAQwhJ,WAAWlB,SAAStgJ,EAAQsgJ,SAAS12I,MAAM5J,EAAQ4J,OAAa5D,CAAG,CAA0wCu9I,CAA0B,CAACpN,KAAKA,EAAK8M,UAAUA,EAAUzB,WAAWA,EAAWlB,SAASA,EAAS12I,MAAMA,IAAcq5I,CAAS,CAAC,IAAIO,EAAUhC,EAAWzwI,MAAMk8F,EAAKrjG,GAAW65I,EAAWjC,EAAWzwI,MAAMnH,EAAM,EAAE23F,EAAM,GAAOmiD,EAAM1jJ,EAAQuhJ,SAAS,CAAC33I,MAAMA,EAAMusI,KAAKA,EAAKqN,UAAUA,EAAUC,WAAWA,EAAWx2C,KAAKA,EAAK1L,MAAMA,EAAMigD,WAAWA,IAAmF,OAAlEkC,EAAM1/I,SAAQ0/I,EAAMiU,SAAS,CAACnU,EAAUC,GAAYC,EAAM,CAACA,IAActR,EAASuF,aAAa,CAAC6J,EAAWzwI,MAAM,EAAEk8F,GAAMy2C,EAAMlC,EAAWzwI,MAAMwwF,EAAM,IAAI,CAA4TjkG,EAAOC,QAAQ,CAACqkJ,YAA3U,SAAqBJ,EAAWxhJ,GAAyQ,OAA3OwhJ,EAAW/M,QAAO,SAAS1tI,EAASovI,GAA0F,MAArE,gBAAZA,EAAK12I,MAAsB02I,EAAK74I,SAAS0C,EAAQ+gJ,YAAYh6I,EAAS5E,KAAKg0I,GAAapvI,CAAQ,GAAE,IAAqBjF,SAAQ,SAASq0I,GAAMqL,EAAW8B,EAAUnN,EAAKqL,EAAWxhJ,EAAQ,IAAUwhJ,CAAU,EAAyCrC,mBAAl9C,SAA4B/5H,GAAiD,IAA1C,IAAIu+H,EAAvZ,SAA4Bv+H,GAA4H,IAArH,IAAiIqpG,EAA7H6H,EAAKlxG,EAAMze,QAAO,SAASwvI,GAAM,MAAmB,QAAZA,EAAK12I,IAAY,IAAGuM,KAAI,SAASmqI,GAAM,OAAOA,EAAK31I,KAAK,IAAOmL,EAAO,GAAWuF,EAAE,EAAMA,EAAEolH,EAAKtyH,OAAOkN,IAA6B,OAAxBu9G,EAAI6H,EAAKplH,IAAU,GAAagyI,EAAiBv3I,EAAO8iH,GAAM9iH,EAAOk/B,MAAWl/B,EAAO03I,EAAO13I,EAAO8iH,GAAkC,MAApBA,EAAIA,EAAIzqH,OAAO,KAAU2H,EAAO03I,EAAO13I,EAAO8iH,IAAM,OAAO9iH,CAAM,CAAoDi4I,CAAmBx+H,GAAelU,EAAE,EAAEA,EAAEyyI,EAAY3/I,OAAOkN,IAAI,CAAC,IAAI0mJ,EAAWjU,EAAYzyI,GAAG,GAAqC,IAAlC0mJ,EAAWnpC,IAAIvjH,QAAQ,SAAc,MAAM,OAAO,GAAqC,IAAlC0sJ,EAAWnpC,IAAIvjH,QAAQ,SAAc,MAAM,MAAO,CAAC,OAAO,CAAK,EAAgvC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASknE,EAAQ90E,EAAOC,GAAS,aAAa,IAAI60I,EAAShgE,EAAQ,eAAo7C,IAAIyxE,EAA75CzxE,EAAQ,YAA85C2jE,EAAxe,SAAoBppE,EAAQm3E,GAAc,IAAI7rI,EAAI,CAAC,EAAEA,EAAI00D,QAAQA,EAAQ10D,EAAI6rI,aAAaA,EAAa7rI,EAAI8rI,mBAAmB9rI,EAAI6rI,aAAa33I,KAAK,KAAK,IAAIg1C,EAAO,IAAIlhC,OAAO,QAAQhI,EAAI8rI,mBAAmB,wBAAwB9rI,EAAI8rI,mBAAmB,KAAK,KAAyL,OAApL9rI,EAAI0lI,QAAQvL,EAAS+F,aAAah3F,EAAOlpC,EAAI00D,SAAS10D,EAAI+rI,0BAA0B/rI,EAAI0lI,QAAQ3xI,KAAI,WAAW,OAAO,CAAC,IAAGiM,EAAIgsI,gBAAgBhsI,EAAI0lI,QAAQ3xI,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6BiM,GAAK,SAASisI,IAAkB,IAAIC,EAAG,CAACtM,MAAM7sI,MAAMgsC,UAAUjmC,MAAMkmC,KAAKrmC,YAAYuzI,EAAGtM,MAAMzlI,QAAQ,IAAIouB,EAAM2jH,EAAGtM,MAAM,GAAGsM,EAAGtM,MAAM,GAAGsM,EAAGtM,MAAMluG,QAAQnJ,GAAO2jH,EAAGtM,MAAMhtG,MAAM,IAAIirG,EAAOqO,EAAGtM,MAAMhtG,MAA4F,OAAtFs5G,EAAGrO,OAAOA,EAAOqO,EAAGtqH,OAAM,EAAK5hB,EAAI0lI,QAAQh0G,QAAQw6G,GAAIlsI,EAAIgsI,gBAAgBt6G,QAAQ,GAAU1xB,EAAI+rI,0BAA0Br6G,QAAQ,EAAE,EAAgC,IAA5B1xB,EAAI00D,QAAQzhE,QAAQ,OAAuC,IAA5B+M,EAAI00D,QAAQzhE,QAAQ,MAAW+M,EAAI00D,QAAQ97D,QAAQ,eAAeqzI,GAAiB,IAAIz2I,EAAE,IAAIwS,OAAO,kBAAkBhI,EAAI8rI,mBAAmB,MAAmY,OAA7X9rI,EAAI00D,QAAQ97D,QAAQpD,EAAEy2I,GAAmQz2I,EAAE,IAAIwS,OAAO,QAAQhI,EAAI8rI,mBAAmB,oBAAoB9rI,EAAI00D,QAAQ97D,QAAQpD,GAAtU,WAAwB,IAAI02I,EAAG,CAACtM,MAAM7sI,MAAMgsC,UAAUjmC,MAAMkmC,KAAKrmC,YAAYuzI,EAAGtM,MAAMhtG,MAAM,IAAIirG,EAAOqO,EAAGtM,MAAMhtG,MAAqF,OAA/Es5G,EAAGrO,OAAOA,EAAOqO,EAAGC,MAAK,EAAKnsI,EAAI0lI,QAAQx7I,KAAKgiJ,GAAIlsI,EAAIgsI,gBAAgB9hJ,KAAK,GAAU8V,EAAI+rI,0BAA0B7hJ,KAAK,EAAE,IAA4G8V,CAAG,CAAmcosI,CAAoBpsI,EAAI,IAAkC3a,EAAOC,QAAQ,SAASovE,EAAQm3E,GAAc,OAAO1R,EAAS7uI,UAAUsgJ,EAASl3E,EAAQm3E,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAAS1xE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAShgE,EAAQ,eAAmBkwE,EAAalwE,EAAQ,mBAAuBkyE,EAAWlyE,EAAQ,iBAAqB6jE,EAAO7jE,EAAQ,YAAgBmyE,EAAMnyE,EAAQ,WAAeoyE,EAAOpyE,EAAQ,eAAmBqyE,EAAQryE,EAAQ,eAAmP90E,EAAOC,QAAQ,WAAW,SAASg9I,EAAa5tE,EAAQ3sE,IAArqB,SAAyB2kD,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgB91I,KAAK08I,GAAc18I,KAAK6mJ,SAAS1kJ,GAASnC,KAAK8mJ,WAAW,CAACC,QAAQ,CAACxK,SAASv8I,KAAKu8I,YAAYv8I,KAAKqyB,KAAKy8C,EAAQ,CAA2tD,OAA1tD6lE,EAAa+H,EAAa,CAAC,CAACr4I,IAAI,OAAO1B,MAAM,SAAcmsE,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAI3mE,EAAI,IAAIiwI,EAAO6E,gBAAgB,4BAAoF,MAAxD90I,EAAIwlF,WAAW/sF,GAAG,sCAA4CuH,CAAG,CAACnI,KAAK8uE,QAAQA,CAAO,GAAG,CAACzqE,IAAI,UAAU1B,MAAM,SAAiB81H,GAA8H,OAAxHz4H,KAAKy4H,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAEz4H,KAAKujJ,aAAakB,EAAaC,uBAAuB,CAACjsB,KAAKz4H,KAAKy4H,KAAK5jD,OAAO70E,KAAK60E,SAAgB70E,IAAI,GAAG,CAACqE,IAAI,WAAW1B,MAAM,SAAkBR,GAASnC,KAAKu8I,SAASp6I,EAAQo6I,SAASv8I,KAAKg7I,QAAQ74I,EAAQ64I,QAAQh7I,KAAKk7I,eAAe/4I,EAAQ+4I,eAAe/mI,OAAOC,KAAKmgI,EAASnwI,UAAU+J,KAAI,SAAS9J,GAAKrE,KAAKqE,GAAmB,MAAdlC,EAAQkC,GAAWlC,EAAQkC,GAAKkwI,EAASnwI,SAASC,EAAI,GAAErE,KAAK,GAAG,CAACqE,IAAI,cAAc1B,MAAM,WAAuB,OAA/nCmsE,EAAmpC9uE,KAAK8uE,QAAhpCm3E,EAAwpCjmJ,KAAKk7I,eAAeqC,iBAA7mCzvI,EAArC24I,EAAW33E,EAAQm3E,GAAiCnG,QAAQ3xI,KAAI,SAASw0B,GAAO,OAAOA,EAAMq3G,MAAM,EAAE,IAAUzF,EAASqF,WAAWrF,EAASwE,cAAcjrI,EAAOQ,KAAK,MAA9N,IAAsBwgE,EAAQm3E,EAA+Dn4I,CAA8nC,GAAG,CAACzJ,IAAI,aAAa1B,MAAM,SAAoBmV,GAAK9X,KAAKg7I,QAAQ/2I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI/B,EAAI,GAAE,GAAG,CAACzT,IAAI,QAAQ1B,MAAM,WAAyc,OAAxb3C,KAAKgnJ,SAASN,EAAM9G,SAAS5/I,KAAK8uE,QAAQ,CAACzgE,KAAKrO,KAAKk7I,eAAeqC,iBAAiBgD,MAAMvgJ,KAAKk7I,eAAesC,oBAAoBx9I,KAAK8mJ,WAAW,CAACC,QAAQ,CAACC,SAAShnJ,KAAKgnJ,YAAYhnJ,KAAKmkJ,MAAMuC,EAAMnvI,MAAMvX,KAAKgnJ,SAAShnJ,KAAKu4I,YAAYv4I,KAAK8mJ,WAAW,CAACC,QAAQ,CAAC5C,MAAMnkJ,KAAKmkJ,SAASnkJ,KAAKq6I,OAAOsM,EAAOpvI,MAAMvX,KAAKmkJ,MAAMnkJ,KAAKg7I,SAASh7I,KAAK8mJ,WAAW,CAACC,QAAQ,CAAC1M,OAAOr6I,KAAKq6I,UAAUr6I,KAAK2jJ,WAAWgD,EAAOxF,UAAUnhJ,KAAKq6I,OAAOr6I,KAAKg7I,SAAgBh7I,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,SAAgB2jC,GAAyR,OAArRtmC,KAAKu8I,SAASj2G,EAAGtmC,KAAK8mJ,WAAW,CAACC,QAAQ,CAACpD,WAAW3jJ,KAAK2jJ,cAAc3jJ,KAAK8uE,QAAQ83E,EAAQ,CAAC7L,SAAS/6I,KAAK2jJ,WAAWlrB,KAAKz4H,KAAKy4H,KAAKuiB,QAAQh7I,KAAKg7I,QAAQnmE,OAAO70E,KAAK60E,OAAOwjE,WAAWr4I,KAAKq4I,WAAWkE,SAASv8I,KAAKu8I,WAAWv8I,KAAK8mJ,WAAW,CAACC,QAAQ,CAACj4E,QAAQ9uE,KAAK8uE,WAAkB9uE,IAAI,KAAY08I,CAAY,CAAh6D,EAAm6D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAASnoE,EAAQ90E,EAAOC,GAAS,SAASixE,EAAUxuE,GAASnC,KAAKmC,QAAQA,GAAS,CAAC8kJ,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAalnJ,KAAKmnJ,OAAM,CAAK,CAAC,SAASxmJ,EAASsmJ,EAAQ1kJ,GAAMA,EAAK6kJ,WAAWH,EAAQG,WAAW7kJ,EAAK8kJ,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAAShzI,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAEizI,UAAU,IAAI,UAAUjzI,EAAE8yI,WAAW,QAAQ9yI,EAAE+yI,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMh2H,EAAMtrB,GAAQ,MAAiB,iBAAPshJ,EAAwBA,EAAMlnG,OAAO9uB,EAAMtrB,GAAgBshJ,EAAMthJ,QAAQsrB,EAAMtrB,GAAQsrB,EAAc,IAAIi2H,KAAK/jF,KAAKzoD,OAAOusI,EAAMh2H,EAAMtrB,GAAQ,GAAUshJ,CAAM,CAAiP,SAASE,EAAcC,EAAOrlJ,GAAUqlJ,EAAOC,eAAkDD,EAAOC,eAAe/9D,YAAYvnF,GAApEqlJ,EAAO53B,IAAIlmC,YAAYvnF,EAAmD,CAA3/IouE,EAAUx3B,UAAU03B,gBAAgB,SAASi3E,EAAOr2B,GAAU,IAAItvH,EAAQnC,KAAKmC,QAAY4lJ,EAAI,IAAIC,EAAcC,EAAW9lJ,EAAQ8lJ,YAAY,IAAIf,EAAe/N,EAAah3I,EAAQg3I,aAAiB8N,EAAQ9kJ,EAAQ8kJ,QAAYiB,EAAa/lJ,EAAQgmJ,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAI5O,aAA2a,SAA2BwP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI9O,EAAa,CAAC,EAAMyP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMzkJ,GAAK,IAAIqM,EAAGi4I,EAAUtkJ,IAASqM,GAAIk4I,IAAYl4I,EAAqB,GAAlBi4I,EAAUxiJ,OAAU,SAAS4Y,GAAK4pI,EAAUtkJ,EAAI0a,EAAI,EAAE4pI,GAAUxP,EAAa90I,GAAKqM,GAAI,SAASqO,GAAKrO,EAAG,WAAWrM,EAAI,MAAM0a,EAAIuoI,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqB3P,CAAY,CAAj7B4P,CAAkB5P,EAAa8O,EAAWhB,GAASc,EAAIE,WAAW9lJ,EAAQ8lJ,YAAYA,EAAc,aAAa5lI,KAAKovG,KAAW22B,EAAUY,KAAK,IAAIZ,EAAUjvF,KAAK,IAAI+uF,EAAa,IAAI,gCAA+BA,EAAahiH,IAAIgiH,EAAahiH,KAAK,uCAA0C4hH,EAAQC,EAAIxwI,MAAMuwI,EAAOI,EAAaE,GAAgBL,EAAI5O,aAAa5pI,MAAM,sBAA6B04I,EAAWj4B,GAAG,EAAuqBk3B,EAAW/tG,UAAU,CAAC8vG,cAAc,WAAWjpJ,KAAKgwH,KAAI,IAAKk5B,GAAmBC,eAAe,KAAK,KAAK,MAASnpJ,KAAKinJ,UAASjnJ,KAAKgwH,IAAIo5B,YAAYppJ,KAAKinJ,QAAQM,SAAS,EAAEp9F,aAAa,SAASitF,EAAaiS,EAAUC,EAAMzqI,GAAO,IAAImxG,EAAIhwH,KAAKgwH,IAAQxjH,EAAGwjH,EAAIu5B,gBAAgBnS,EAAakS,GAAOD,GAAeG,EAAI3qI,EAAM1Y,OAAOwhJ,EAAc3nJ,KAAKwM,GAAIxM,KAAK6nJ,eAAer7I,EAAGxM,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQz6I,GAAI,IAAI,IAAI6G,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAAI,CAAK+jI,EAAav4H,EAAM4qI,OAAOp2I,GAA9B,IAAqC1Q,EAAMkc,EAAM5S,SAASoH,GAAmCsK,GAA5B2rI,EAAMzqI,EAAM6qI,SAASr2I,GAAY28G,EAAI25B,kBAAkBvS,EAAakS,IAAOtpJ,KAAKinJ,SAAStmJ,EAASke,EAAM+qI,WAAWv2I,GAAGsK,GAAMA,EAAKhb,MAAMgb,EAAKksI,UAAUlnJ,EAAM6J,EAAGs9I,iBAAiBnsI,EAAK,CAAC,EAAEosI,WAAW,SAAS3S,EAAaiS,EAAUC,GAAO,IAAIU,EAAQhqJ,KAAK6nJ,eAA2BmC,EAAQ35B,QAAQrwH,KAAK6nJ,eAAemC,EAAQ9gE,UAAU,EAAE+gE,mBAAmB,SAAStvI,EAAOuvI,GAAK,EAAEC,iBAAiB,SAASxvI,GAAQ,EAAEyvI,sBAAsB,SAASnkG,EAAOp8C,GAAM,IAAIwgJ,EAAIrqJ,KAAKgwH,IAAIs6B,4BAA4BrkG,EAAOp8C,GAAM7J,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQoD,GAAK1C,EAAc3nJ,KAAKqqJ,EAAI,EAAEE,oBAAoB,SAASC,EAAG/4H,EAAMtrB,GAAQ,EAAEskJ,WAAW,SAAShD,EAAMh2H,EAAMtrB,GAA8C,GAAtCshJ,EAAMD,EAAU7+G,MAAM3oC,KAAK+S,WAAoB,CAAC,GAAG/S,KAAKmnJ,MAAO,IAAIuD,EAAS1qJ,KAAKgwH,IAAI26B,mBAAmBlD,QAAgBiD,EAAS1qJ,KAAKgwH,IAAInmC,eAAe49D,GAAUznJ,KAAK6nJ,eAAgB7nJ,KAAK6nJ,eAAe/9D,YAAY4gE,GAAkB,QAAQroI,KAAKolI,IAAQznJ,KAAKgwH,IAAIlmC,YAAY4gE,GAAU1qJ,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAASzjJ,GAAM,EAAE0jJ,YAAY,WAAW7qJ,KAAKgwH,IAAI86B,WAAW,EAAEpC,mBAAmB,SAASzB,IAAYjnJ,KAAKinJ,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAEx/B,QAAQ,SAAS6/B,EAAMh2H,EAAMtrB,GAAQshJ,EAAMD,EAAU7+G,MAAM3oC,KAAK+S,WAAW,IAAIg4I,EAAK/qJ,KAAKgwH,IAAIg7B,cAAcvD,GAAOznJ,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQ8D,GAAMpD,EAAc3nJ,KAAK+qJ,EAAK,EAAEE,WAAW,WAAWjrJ,KAAKmnJ,OAAM,CAAI,EAAE+D,SAAS,WAAWlrJ,KAAKmnJ,OAAM,CAAK,EAAEgE,SAAS,SAAShkJ,EAAKikJ,EAAS7D,GAAU,IAAI8D,EAAKrrJ,KAAKgwH,IAAIs7B,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmBpkJ,EAAKikJ,EAAS7D,GAAUvnJ,KAAKinJ,SAAStmJ,EAASX,KAAKinJ,QAAQuE,GAAI7D,EAAc3nJ,KAAKwrJ,EAAG,CAAC,EAAEC,QAAQ,SAASl8I,GAAO/G,QAAQC,KAAK,qBAAqB8G,EAAM+3I,EAAStnJ,KAAKinJ,SAAS,EAAE13I,MAAM,SAASA,GAAO/G,QAAQ+G,MAAM,mBAAmBA,EAAM+3I,EAAStnJ,KAAKinJ,SAAS,EAAEyE,WAAW,SAASn8I,GAA2E,MAApE/G,QAAQ+G,MAAM,wBAAwBA,EAAM+3I,EAAStnJ,KAAKinJ,UAAgB13I,CAAK,GAA8T,+JAA+JyD,QAAQ,QAAO,SAAS3O,GAAK6iJ,EAAW/tG,UAAU90C,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAI2jJ,EAAUzzE,EAAQ,SAASyzE,UAAckB,EAAkBxpJ,EAAQwpJ,kBAAkB30E,EAAQ,SAAS20E,kBAAkBxpJ,EAAQy4I,cAAc5jE,EAAQ,SAAS4jE,cAAcz4I,EAAQixE,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAAS4D,EAAQ90E,EAAOC,GAAS,SAASy5D,EAAKusB,EAAIimE,GAAM,IAAI,IAAI7pI,KAAK4jE,EAAKimE,EAAK7pI,GAAG4jE,EAAI5jE,EAAG,CAAC,SAAS8pI,EAASrtI,EAAMstI,GAAO,IAAIC,EAAGvtI,EAAM46B,UAAU,GAAGhlC,OAAOm0D,OAAO,CAAC,IAAIyjF,EAAI53I,OAAOm0D,OAAOujF,EAAM1yG,WAAW2yG,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAAS5vH,IAAI,CAACA,EAAEkd,UAAU0yG,EAAM1yG,UAAkBggB,EAAK2yF,EAAb7vH,EAAE,IAAIA,GAAa1d,EAAM46B,UAAU2yG,EAAG7vH,CAAC,CAAI6vH,EAAGnsJ,aAAa4e,IAAwB,mBAAPA,GAAmB/V,QAAQ+G,MAAM,gBAAgBgP,GAAOutI,EAAGnsJ,YAAY4e,EAAM,CAAC,IAA8C0tI,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAaj3I,EAAKnF,GAAS,GAAGA,aAAmBhJ,MAAO,IAAIiH,EAAM+B,OAAa/B,EAAMvP,KAAKsI,MAAM8wC,KAAKp5C,KAAK+sJ,EAAiBt2I,IAAOzW,KAAKsR,QAAQy7I,EAAiBt2I,GAASnO,MAAMqlJ,mBAAkBrlJ,MAAMqlJ,kBAAkB3tJ,KAAK0tJ,GAAgF,OAAlEn+I,EAAMkH,KAAKA,EAAQnF,IAAQtR,KAAKsR,QAAQtR,KAAKsR,QAAQ,KAAKA,GAAe/B,CAAK,CAAyE,SAASq+I,IAAW,CAA+N,SAASC,EAAatrJ,EAAKmC,GAAS1E,KAAK8tJ,MAAMvrJ,EAAKvC,KAAK+tJ,SAASrpJ,EAAQspJ,EAAgBhuJ,KAAK,CAAC,SAASguJ,EAAgB/jJ,GAAM,IAAIgkJ,EAAIhkJ,EAAK6jJ,MAAMI,MAAMjkJ,EAAK6jJ,MAAMK,cAAcD,KAAK,GAAGjkJ,EAAKikJ,MAAMD,EAAI,CAAC,IAAIG,EAAGnkJ,EAAK8jJ,SAAS9jJ,EAAK6jJ,OAAOO,GAAQpkJ,EAAK,SAASmkJ,EAAGjoJ,QAAQgzD,EAAKi1F,EAAGnkJ,GAAMA,EAAKikJ,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAetkJ,EAAK1H,GAAwB,IAAlB,IAAI8Q,EAAEpJ,EAAK9D,OAAakN,KAAK,GAAGpJ,EAAKoJ,KAAK9Q,EAAM,OAAO8Q,CAAG,CAAC,SAASm7I,EAAchiJ,EAAGvC,EAAKwkJ,EAAQC,GAAiG,GAArFA,EAASzkJ,EAAKskJ,EAAetkJ,EAAKykJ,IAAUD,EAAaxkJ,EAAKA,EAAK9D,UAAUsoJ,EAAWjiJ,EAAG,CAACiiJ,EAAQE,aAAaniJ,EAAG,IAAIwjH,EAAIxjH,EAAG2hJ,cAAiBn+B,IAAK0+B,GAASE,EAAmB5+B,EAAIxjH,EAAGkiJ,GAAyvI,SAAyB1+B,EAAIxjH,EAAGiiJ,GAASz+B,GAAKA,EAAIk+B,OAA0C,iCAA5BO,EAAQrX,eAAqD5qI,EAAGqiJ,OAAOJ,EAAQ9zI,OAAO8zI,EAAQpF,UAAU,IAAIoF,EAAQ9rJ,MAAM,CAA16ImsJ,CAAgB9+B,EAAIxjH,EAAGiiJ,GAAS,CAAC,CAAC,SAASM,EAAiBviJ,EAAGvC,EAAK0T,GAAM,IAAItK,EAAEk7I,EAAetkJ,EAAK0T,GAAM,KAAGtK,GAAG,GAAgM,MAAMq6I,EAAaP,EAAc,IAAI7kJ,MAAMkE,EAAG6jH,QAAQ,IAAI1yG,IAA3N,IAA5B,IAAIqxI,EAAU/kJ,EAAK9D,OAAO,EAAQkN,EAAE27I,GAAW/kJ,EAAKoJ,GAAGpJ,IAAOoJ,GAAyB,GAAtBpJ,EAAK9D,OAAO6oJ,EAAaxiJ,EAAG,CAAC,IAAIwjH,EAAIxjH,EAAG2hJ,cAAiBn+B,IAAK4+B,EAAmB5+B,EAAIxjH,EAAGmR,GAAMA,EAAKgxI,aAAa,KAAK,CAAwE,CAAioC,SAASzF,EAAkB+F,GAA4B,GAAlBjvJ,KAAKkvJ,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAUjvJ,KAAKkvJ,UAAUD,EAASE,EAAU,CAAsrB,SAASC,IAAO,CAA6kD,SAASC,EAAY9rJ,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAE+rJ,aAAa,GAAG,CAAmD,SAASC,EAAWhtJ,EAAKsP,GAAU,GAAGA,EAAStP,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAK04G,WAAY,GAAG,GAAGs0C,EAAWhtJ,EAAKsP,GAAW,OAAO,QAAYtP,EAAKA,EAAKitJ,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmB5+B,EAAIxjH,EAAGiiJ,EAAQ5zI,GAAQm1G,GAAKA,EAAIk+B,OAA0C,iCAA5BO,EAAQrX,qBAA4D5qI,EAAGqiJ,OAAOJ,EAAQ9zI,OAAO8zI,EAAQpF,UAAU,GAAI,CAAC,SAASqG,EAAe1/B,EAAIxjH,EAAGmjJ,GAAU,GAAG3/B,GAAKA,EAAIk+B,KAAK,CAACl+B,EAAIk+B,OAAO,IAAI0B,EAAGpjJ,EAAGqjJ,WAAW,GAAGF,EAAUC,EAAGA,EAAGzpJ,UAAUwpJ,MAAa,CAAiC,IAAhC,IAAIljE,EAAMjgF,EAAGyuG,WAAe5nG,EAAE,EAAQo5E,GAAOmjE,EAAGv8I,KAAKo5E,EAAMA,EAAMA,EAAM+iE,YAAYI,EAAGzpJ,OAAOkN,CAAC,CAAC,CAAC,CAAC,SAASy8I,EAAa5mE,EAAWuD,GAAO,IAAIsjE,EAAStjE,EAAMujE,gBAAoBtlI,EAAK+hE,EAAM+iE,YAAiN,OAAlMO,EAAUA,EAASP,YAAY9kI,EAAUw+D,EAAW+xB,WAAWvwF,EAAQA,EAAMA,EAAKslI,gBAAgBD,EAAc7mE,EAAW+mE,UAAUF,EAASL,EAAexmE,EAAWilE,cAAcjlE,GAAmBuD,CAAK,CAAC,SAASyjE,EAAchnE,EAAWymE,EAASQ,GAAW,IAAIC,EAAGT,EAASzmE,WAA2C,GAA7BknE,GAAIA,EAAGjnE,YAAYwmE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAAS10C,WAAW,GAAa,MAAVq1C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgB9mE,EAAW+mE,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAcpnE,EAAW+xB,WAAWq1C,EAAuB,MAAXH,EAAiBjnE,EAAW+mE,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAASpnE,WAAWA,QAAiBonE,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAexmE,EAAWilE,eAAejlE,EAAWA,GAAeymE,EAASU,UAAUzD,IAAwB+C,EAAS10C,WAAW00C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUzwJ,KAAK6uJ,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAASjZ,IAAgB,CAAqL,SAASkZ,EAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfzxJ,KAAKqwJ,SAAYrwJ,KAAK0xJ,gBAAgB1xJ,KAAS2a,EAAO82I,EAAQ92I,OAAWuvI,EAAIuH,EAAQra,aAAa,GAAG8S,GAAa,MAARvvI,GAA8D,OAA5CA,EAAO82I,EAAQE,aAAazH,IAAsB,IAAI0H,EAAkB,CAAC,CAACC,UAAU3H,EAAIvvI,OAAO,OAAwE,OAAhEg+H,GAAkB34I,KAAKwxJ,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAIljJ,KAAK,GAAG,CAAC,SAASwjJ,GAAoBvvJ,EAAKwvJ,EAAOH,GAAmB,IAAIj3I,EAAOpY,EAAKoY,QAAQ,GAAOuvI,EAAI3nJ,EAAK60I,aAAa,IAAIz8H,IAASuvI,EAAK,OAAO,EAAM,GAAY,QAATvvI,GAAsB,yCAANuvI,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAI72I,EAAEu+I,EAAkBzrJ,OAAakN,KAAI,CAAC,IAAI2+I,EAAGJ,EAAkBv+I,GAAG,GAAG2+I,EAAGr3I,QAAQA,EAAQ,OAAOq3I,EAAGH,WAAW3H,CAAI,CAAC,OAAO,CAAI,CAAC,SAASvR,GAAkBp2I,EAAKivJ,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtBhvJ,EAAKgvJ,EAAWhvJ,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAfivJ,EAAIltJ,KAAK/B,EAA0B,CAAC,OAAOA,EAAK8tJ,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBzrJ,OAA7C,IAAwD0Y,EAAMtc,EAAKygB,WAAewmI,EAAI3qI,EAAM1Y,OAAWsmF,EAAMlqF,EAAK04G,WAAeC,EAAS34G,EAAK8tH,QAAQ0hC,EAA7/kB,iCAA6glBxvJ,EAAK60I,cAAc2a,EAAOP,EAAIltJ,KAAK,IAAI42G,GAAU,IAAI,IAAI7nG,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAA4C,UAAnCsK,EAAKkB,EAAMzQ,KAAKiF,IAAWsH,OAAiBi3I,EAAkBttJ,KAAK,CAACqW,OAAOgD,EAAK0rI,UAAUwI,UAAUl0I,EAAKhb,QAA+B,SAAfgb,EAAKu9F,UAAmB02C,EAAkBttJ,KAAK,CAACqW,OAAO,GAAGk3I,UAAUl0I,EAAKhb,QAAS,IAAQ0Q,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAAI,CAAC,IAAIsK,EAAmB,GAAGm0I,GAAtBn0I,EAAKkB,EAAMzQ,KAAKiF,GAA+B0+I,EAAOH,GAAmB,CAAC,IAAIj3I,EAAOgD,EAAKhD,QAAQ,GAAOuvI,EAAIvsI,EAAKy5H,aAAiB4a,EAAGr3I,EAAO,UAAUA,EAAO,SAAS62I,EAAIltJ,KAAK0tJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBttJ,KAAK,CAACqW,OAAOA,EAAOk3I,UAAU3H,GAAK,CAACvR,GAAkBh7H,EAAK6zI,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoBvvJ,EAAKwvJ,EAAOH,KAAwBj3I,EAAOpY,EAAKoY,QAAQ,GAAOuvI,EAAI3nJ,EAAK60I,aAAiB4a,EAAGr3I,EAAO,UAAUA,EAAO,SAAS62I,EAAIltJ,KAAK0tJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBttJ,KAAK,CAACqW,OAAOA,EAAOk3I,UAAU3H,KAASz9D,GAAOslE,IAAS,mCAAmC1vI,KAAK64F,GAAU,CAAe,GAAds2C,EAAIltJ,KAAK,KAAQytJ,GAAQ,YAAY1vI,KAAK64F,GAAW,KAAMzuB,GAAUA,EAAM5iF,KAAM2nJ,EAAIltJ,KAAKmoF,EAAM5iF,MAAW8uI,GAAkBlsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,iBAAkB,KAAM/iE,GAAOksD,GAAkBlsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,YAAagC,EAAIltJ,KAAK,KAAK42G,EAAS,IAAI,MAAMs2C,EAAIltJ,KAAK,MAAM,OAAO,KAAKooJ,EAAc,KAAKE,EAAiD,IAAtBngE,EAAMlqF,EAAK04G,WAAiBxuB,GAAOksD,GAAkBlsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAIltJ,KAAK,IAAI/B,EAAK4E,KAAK,KAAK5E,EAAKI,MAAMqQ,QAAQ,SAASq8I,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAIltJ,KAAK/B,EAAKsH,KAAKmJ,QAAQ,QAAQq8I,IAAc,KAAKhD,EAAmB,OAAOmF,EAAIltJ,KAAK,YAAY/B,EAAKsH,KAAK,OAAO,KAAK4iJ,EAAa,OAAO+E,EAAIltJ,KAAK,UAAU/B,EAAKsH,KAAK,UAAU,KAAK8iJ,EAAmB,IAAIsF,EAAM1vJ,EAAK6oJ,SAAa8G,EAAM3vJ,EAAKglJ,SAA0C,GAAjCiK,EAAIltJ,KAAK,aAAa/B,EAAK4E,MAAS8qJ,EAAOT,EAAIltJ,KAAK,YAAY2tJ,GAAUC,GAAc,KAAPA,GAAYV,EAAIltJ,KAAK,MAAM4tJ,GAAOV,EAAIltJ,KAAK,WAAW,GAAG4tJ,GAAc,KAAPA,EAAYV,EAAIltJ,KAAK,YAAY4tJ,EAAM,UAAU,CAAC,IAAI5+I,EAAI/Q,EAAK4vJ,eAAkB7+I,GAAKk+I,EAAIltJ,KAAK,KAAKgP,EAAI,KAAKk+I,EAAIltJ,KAAK,IAAI,CAAC,OAAO,KAAKkoJ,EAA4B,OAAOgF,EAAIltJ,KAAK,KAAK/B,EAAK0jD,OAAO,IAAI1jD,EAAKsH,KAAK,MAAM,KAAKyiJ,EAAsB,OAAOkF,EAAIltJ,KAAK,IAAI/B,EAAK24G,SAAS,KAAK,QAAQs2C,EAAIltJ,KAAK,KAAK/B,EAAK24G,UAAU,CAAC,SAASk3C,GAAWpiC,EAAIztH,EAAK6jB,GAAM,IAAIisI,EAAM,OAAO9vJ,EAAK8tJ,UAAU,KAAKnE,GAAamG,EAAM9vJ,EAAK+vJ,WAAU,IAAanE,cAAcn+B,EAAI,KAAK48B,EAAuB,MAAM,KAAKT,EAAe/lI,GAAK,EAAgG,GAAjFisI,IAAOA,EAAM9vJ,EAAK+vJ,WAAU,IAAOD,EAAMlE,cAAcn+B,EAAIqiC,EAAMnpE,WAAW,KAAQ9iE,EAAgC,IAA1B,IAAIqmE,EAAMlqF,EAAK04G,WAAiBxuB,GAAO4lE,EAAMvoE,YAAYsoE,GAAWpiC,EAAIvjC,EAAMrmE,IAAOqmE,EAAMA,EAAM+iE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAUtiC,EAAIztH,EAAK6jB,GAAM,IAAIisI,EAAM,IAAI9vJ,EAAK5C,YAAY,IAAI,IAAIy/C,KAAK78C,EAAK,CAAC,IAAI6Q,EAAE7Q,EAAK68C,GAAgB,iBAAHhsC,GAAgBA,GAAGi/I,EAAMjzG,KAAIizG,EAAMjzG,GAAGhsC,EAAG,CAA2E,OAAvE7Q,EAAKstJ,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAcn+B,EAAWqiC,EAAMhC,UAAU,KAAKnE,EAAa,IAAIrtI,EAAMtc,EAAKygB,WAAeuvI,EAAOF,EAAMrvI,WAAW,IAAIsrI,EAAiB9E,EAAI3qI,EAAM1Y,OAAOosJ,EAAOC,cAAcH,EAAM,IAAI,IAAIh/I,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAAKg/I,EAAMvI,iBAAiBwI,GAAUtiC,EAAInxG,EAAMzQ,KAAKiF,IAAG,IAAO,MAAM,KAAK84I,EAAe/lI,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAIqmE,EAAMlqF,EAAK04G,WAAiBxuB,GAAO4lE,EAAMvoE,YAAYwoE,GAAUtiC,EAAIvjC,EAAMrmE,IAAOqmE,EAAMA,EAAM+iE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQppJ,EAAOZ,EAAI1B,GAAOsC,EAAOZ,GAAK1B,CAAK,CAA3qoBmqJ,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAav0G,UAAU7wC,MAAM6wC,UAAUggB,EAAK2zF,EAAcY,GAAmCE,EAASz0G,UAAU,CAAChzC,OAAO,EAAEiI,KAAK,SAASrC,GAAO,OAAO/L,KAAK+L,IAAQ,IAAI,EAAE2I,SAAS,SAASq9I,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAGn+I,EAAE,EAAEA,EAAErT,KAAKmG,OAAOkN,IAAKslI,GAAkB34I,KAAKqT,GAAGm+I,EAAIO,EAAOR,GAAY,OAAOC,EAAIljJ,KAAK,GAAG,GAA2Su/I,EAAa10G,UAAU/qC,KAAK,SAASiF,GAAyB,OAAtB26I,EAAgBhuJ,MAAaA,KAAKqT,EAAE,EAAEu4I,EAASiC,EAAaD,GAAuuBU,EAAan1G,UAAU,CAAChzC,OAAO,EAAEiI,KAAKw/I,EAASz0G,UAAU/qC,KAAK0kJ,aAAa,SAASzuJ,GAAuB,IAAlB,IAAIgP,EAAErT,KAAKmG,OAAakN,KAAI,CAAC,IAAIsK,EAAK3d,KAAKqT,GAAG,GAAGsK,EAAKu9F,UAAU72G,EAAK,OAAOsZ,CAAK,CAAC,EAAEo1I,aAAa,SAASp1I,GAAM,IAAInR,EAAGmR,EAAKgxI,aAAa,GAAGniJ,GAAIA,GAAIxM,KAAKwyJ,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQ1uJ,KAAK8yJ,aAAan1I,EAAKu9F,UAA8D,OAApDszC,EAAcxuJ,KAAKwyJ,cAAcxyJ,KAAK2d,EAAK+wI,GAAgBA,CAAO,EAAEsE,eAAe,SAASr1I,GAAM,IAAyB+wI,EAArBliJ,EAAGmR,EAAKgxI,aAAqB,GAAGniJ,GAAIA,GAAIxM,KAAKwyJ,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQ1uJ,KAAKizJ,eAAet1I,EAAKy5H,aAAaz5H,EAAK0rI,WAAWmF,EAAcxuJ,KAAKwyJ,cAAcxyJ,KAAK2d,EAAK+wI,GAAgBA,CAAO,EAAEwE,gBAAgB,SAAS7uJ,GAAK,IAAIsZ,EAAK3d,KAAK8yJ,aAAazuJ,GAAoD,OAA/C0qJ,EAAiB/uJ,KAAKwyJ,cAAcxyJ,KAAK2d,GAAaA,CAAI,EAAEw1I,kBAAkB,SAAS/b,EAAaiS,GAAW,IAAI1rI,EAAK3d,KAAKizJ,eAAe7b,EAAaiS,GAA0D,OAA/C0F,EAAiB/uJ,KAAKwyJ,cAAcxyJ,KAAK2d,GAAaA,CAAI,EAAEs1I,eAAe,SAAS7b,EAAaiS,GAA6B,IAAlB,IAAIh2I,EAAErT,KAAKmG,OAAakN,KAAI,CAAC,IAAI9Q,EAAKvC,KAAKqT,GAAG,GAAG9Q,EAAK8mJ,WAAWA,GAAW9mJ,EAAK60I,cAAcA,EAAc,OAAO70I,CAAK,CAAC,OAAO,IAAI,GAAuI2mJ,EAAkB/vG,UAAU,CAACi6G,WAAW,SAASjE,EAAQkE,GAAS,IAAIC,EAAStzJ,KAAKkvJ,UAAUC,EAAQh3I,eAAe,SAAGm7I,GAAYD,KAASA,KAAWC,GAAyC,EAAEnK,eAAe,SAAS/R,EAAamc,EAAcC,GAAS,IAAIxjC,EAAI,IAAIy/B,EAAsH,GAA7Gz/B,EAAIs7B,eAAetrJ,KAAKgwH,EAAI6/B,WAAW,IAAIjC,EAAS59B,EAAIwjC,QAAQA,EAAWA,GAASxjC,EAAIlmC,YAAY0pE,GAAYD,EAAc,CAAC,IAAIj4D,EAAK00B,EAAIu5B,gBAAgBnS,EAAamc,GAAevjC,EAAIlmC,YAAYwR,EAAK,CAAC,OAAO00B,CAAG,EAAEu7B,mBAAmB,SAASgI,EAAcnI,EAAS7D,GAAU,IAAIhlJ,EAAK,IAAIwuJ,EAA+G,OAAlGxuJ,EAAK4E,KAAKosJ,EAAchxJ,EAAK24G,SAASq4C,EAAchxJ,EAAK6oJ,SAASA,EAAS7oJ,EAAKglJ,SAASA,EAAgBhlJ,CAAI,GAAoB6sJ,EAAKj2G,UAAU,CAAC8hE,WAAW,KAAKg1C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAKxsI,WAAW,KAAKkmE,WAAW,KAAK2mE,WAAW,KAAK1B,cAAc,KAAKtE,UAAU,KAAKzS,aAAa,KAAKz8H,OAAO,KAAK0uI,UAAU,KAAKoK,aAAa,SAAS9D,EAAS+D,GAAU,OAAOxD,EAAclwJ,KAAK2vJ,EAAS+D,EAAS,EAAEC,aAAa,SAAShE,EAASiE,GAAU5zJ,KAAKyzJ,aAAa9D,EAASiE,GAAaA,GAAU5zJ,KAAKmpF,YAAYyqE,EAAU,EAAEzqE,YAAY,SAASyqE,GAAU,OAAO9D,EAAa9vJ,KAAK4zJ,EAAS,EAAE9pE,YAAY,SAAS6lE,GAAU,OAAO3vJ,KAAKyzJ,aAAa9D,EAAS,KAAK,EAAEkE,cAAc,WAAW,OAAwB,MAAjB7zJ,KAAKi7G,UAAgB,EAAEq3C,UAAU,SAASlsI,GAAM,OAAOksI,GAAUtyJ,KAAKmuJ,eAAenuJ,KAAKA,KAAKomB,EAAK,EAAE0kI,UAAU,WAAqC,IAA1B,IAAIr+D,EAAMzsF,KAAKi7G,WAAiBxuB,GAAM,CAAC,IAAI/hE,EAAK+hE,EAAM+iE,YAAe9kI,GAAMA,EAAK2lI,UAAUjE,GAAW3/D,EAAM4jE,UAAUjE,GAAWpsJ,KAAKmpF,YAAYz+D,GAAM+hE,EAAMqnE,WAAWppI,EAAK7gB,QAAW4iF,EAAMq+D,YAAYr+D,EAAM/hE,EAAK,CAAC,EAAEqpI,YAAY,SAAS5E,EAAQkE,GAAS,OAAOrzJ,KAAKmuJ,cAAc7C,eAAe8H,WAAWjE,EAAQkE,EAAQ,EAAEW,cAAc,WAAW,OAAOh0J,KAAKgjB,WAAW7c,OAAO,CAAC,EAAEwrJ,aAAa,SAASva,GAA0B,IAAZ,IAAI5qI,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAGqiJ,OAAO,GAAG1gJ,EAAK,IAAI,IAAIixC,KAAKjxC,EAAK,GAAGA,EAAIixC,IAAIg4F,EAAc,OAAOh4F,EAAI5yC,EAAGA,EAAG6jJ,UAAUlE,EAAe3/I,EAAG2hJ,cAAc3hJ,EAAG08E,UAAU,CAAC,OAAO,IAAI,EAAE+qE,mBAAmB,SAASt5I,GAAoB,IAAZ,IAAInO,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAGqiJ,OAAO,GAAG1gJ,GAAQwM,KAAUxM,EAAK,OAAOA,EAAIwM,GAASnO,EAAGA,EAAG6jJ,UAAUlE,EAAe3/I,EAAG2hJ,cAAc3hJ,EAAG08E,UAAU,CAAC,OAAO,IAAI,EAAEgrE,mBAAmB,SAAS9c,GAAyD,OAAe,MAA/Cp3I,KAAK2xJ,aAAava,EAAiC,GAA6Hj+E,EAAK8yF,EAASmD,GAAMj2F,EAAK8yF,EAASmD,EAAKj2G,WAA02Es2G,EAASt2G,UAAU,CAAC+hE,SAAS,YAAYm1C,SAAS3D,EAAc8G,QAAQ,KAAK9B,gBAAgB,KAAKxD,KAAK,EAAEuF,aAAa,SAAS9D,EAAS+D,GAAU,GAAG/D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAIngE,EAAMkjE,EAAS10C,WAAiBxuB,GAAM,CAAC,IAAI/hE,EAAK+hE,EAAM+iE,YAAYxvJ,KAAKyzJ,aAAahnE,EAAMinE,GAAUjnE,EAAM/hE,CAAI,CAAC,OAAOilI,CAAQ,CAA+F,OAArE,MAAtB3vJ,KAAK0xJ,iBAAuB/B,EAASU,UAAUnE,IAAclsJ,KAAK0xJ,gBAAgB/B,GAAgBO,EAAclwJ,KAAK2vJ,EAAS+D,GAAU/D,EAASxB,cAAcnuJ,KAAK2vJ,CAAQ,EAAExmE,YAAY,SAASyqE,GAAuE,OAA1D5zJ,KAAK0xJ,iBAAiBkC,IAAU5zJ,KAAK0xJ,gBAAgB,MAAY5B,EAAa9vJ,KAAK4zJ,EAAS,EAAExB,WAAW,SAAS+B,EAAa/tI,GAAM,OAAOgsI,GAAWpyJ,KAAKm0J,EAAa/tI,EAAK,EAAEguI,eAAe,SAASxzJ,GAAI,IAAIyzJ,EAAI,KAA6I,OAAxI9E,EAAWvvJ,KAAK0xJ,iBAAgB,SAASnvJ,GAAM,GAAGA,EAAK8tJ,UAAUnE,GAAiB3pJ,EAAK8gF,aAAa,OAAOziF,EAAa,OAATyzJ,EAAI9xJ,GAAY,CAAM,IAAU8xJ,CAAG,EAAE7qH,cAAc,SAAS6mF,GAAS,IAAI9tH,EAAK,IAAIkuJ,EAA4K,OAApKluJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK24G,SAASmV,EAAQ9tH,EAAK8tH,QAAQA,EAAQ9tH,EAAKstJ,WAAW,IAAIjC,GAAmBrrJ,EAAKygB,WAAW,IAAIsrI,GAAmBkE,cAAcjwJ,EAAYA,CAAI,EAAE+xJ,uBAAuB,WAAW,IAAI/xJ,EAAK,IAAI4uJ,EAAsE,OAArD5uJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAKstJ,WAAW,IAAIjC,EAAgBrrJ,CAAI,EAAEsnF,eAAe,SAAShgF,GAAM,IAAItH,EAAK,IAAIquJ,EAAmD,OAA9CruJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAKuxJ,WAAWjqJ,GAAatH,CAAI,EAAEyoJ,cAAc,SAASnhJ,GAAM,IAAItH,EAAK,IAAIsuJ,EAAsD,OAA9CtuJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAKuxJ,WAAWjqJ,GAAatH,CAAI,EAAEooJ,mBAAmB,SAAS9gJ,GAAM,IAAItH,EAAK,IAAIuuJ,EAA2D,OAA9CvuJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAKuxJ,WAAWjqJ,GAAatH,CAAI,EAAE+nJ,4BAA4B,SAASrkG,EAAOp8C,GAAM,IAAItH,EAAK,IAAI6uJ,EAA4G,OAAtF7uJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK8tH,QAAQ9tH,EAAK0jD,OAAOA,EAAO1jD,EAAKsnJ,UAAUtnJ,EAAKsH,KAAKA,EAAYtH,CAAI,EAAEgyJ,gBAAgB,SAASptJ,GAAM,IAAI5E,EAAK,IAAImuJ,EAAuG,OAAlGnuJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK4E,KAAKA,EAAK5E,EAAK24G,SAAS/zG,EAAK5E,EAAK8mJ,UAAUliJ,EAAK5E,EAAKiyJ,WAAU,EAAYjyJ,CAAI,EAAEkyJ,sBAAsB,SAASttJ,GAAM,IAAI5E,EAAK,IAAI2uJ,EAA2D,OAA3C3uJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK24G,SAAS/zG,EAAY5E,CAAI,EAAEgnJ,gBAAgB,SAASnS,EAAamc,GAAe,IAAIhxJ,EAAK,IAAIkuJ,EAAYiE,EAAGnB,EAAc/rI,MAAM,KAAS3I,EAAMtc,EAAKygB,WAAW,IAAIsrI,EAA2Q,OAA9P/rJ,EAAKstJ,WAAW,IAAIjC,EAASrrJ,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK24G,SAASq4C,EAAchxJ,EAAK8tH,QAAQkjC,EAAchxJ,EAAK60I,aAAaA,EAA2B,GAAXsd,EAAGvuJ,QAAW5D,EAAKoY,OAAO+5I,EAAG,GAAGnyJ,EAAK8mJ,UAAUqL,EAAG,IAAQnyJ,EAAK8mJ,UAAUkK,EAAc10I,EAAM2zI,cAAcjwJ,EAAYA,CAAI,EAAEonJ,kBAAkB,SAASvS,EAAamc,GAAe,IAAIhxJ,EAAK,IAAImuJ,EAASgE,EAAGnB,EAAc/rI,MAAM,KAA8N,OAAzNjlB,EAAK4rJ,cAAcnuJ,KAAKuC,EAAK24G,SAASq4C,EAAchxJ,EAAK4E,KAAKosJ,EAAchxJ,EAAK60I,aAAaA,EAAa70I,EAAKiyJ,WAAU,EAAmB,GAAXE,EAAGvuJ,QAAW5D,EAAKoY,OAAO+5I,EAAG,GAAGnyJ,EAAK8mJ,UAAUqL,EAAG,IAAQnyJ,EAAK8mJ,UAAUkK,EAAqBhxJ,CAAI,GAAGqpJ,EAAS6D,EAASL,GAAwCqB,EAAQt3G,UAAU,CAACk3G,SAASnE,EAAayI,aAAa,SAASxtJ,GAAM,OAAoC,MAA7BnH,KAAK40J,iBAAiBztJ,EAAW,EAAEk8E,aAAa,SAASl8E,GAAM,IAAIwW,EAAK3d,KAAK40J,iBAAiBztJ,GAAM,OAAOwW,GAAMA,EAAKhb,OAAO,EAAE,EAAEiyJ,iBAAiB,SAASztJ,GAAM,OAAOnH,KAAKgjB,WAAW8vI,aAAa3rJ,EAAK,EAAEy5E,aAAa,SAASz5E,EAAKxE,GAAO,IAAIgb,EAAK3d,KAAKmuJ,cAAcoG,gBAAgBptJ,GAAMwW,EAAKhb,MAAMgb,EAAKksI,UAAU,GAAGlnJ,EAAM3C,KAAK8pJ,iBAAiBnsI,EAAK,EAAE6lE,gBAAgB,SAASr8E,GAAM,IAAIwW,EAAK3d,KAAK40J,iBAAiBztJ,GAAMwW,GAAM3d,KAAK60J,oBAAoBl3I,EAAK,EAAEmsE,YAAY,SAAS6lE,GAAU,OAAGA,EAASU,WAAWzD,EAA+B5sJ,KAAKyzJ,aAAa9D,EAAS,MAAr4H,SAA4BzmE,EAAWymE,GAAU,IAAIS,EAAGT,EAASzmE,WAAW,GAAGknE,EAAG,CAAC,IAAII,EAAItnE,EAAW+mE,UAAUG,EAAGjnE,YAAYwmE,GAAca,EAAItnE,EAAW+mE,SAAS,CAAoR,OAA/QO,EAAItnE,EAAW+mE,UAAUN,EAASzmE,WAAWA,EAAWymE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAczmE,EAAW+xB,WAAW00C,EAASzmE,EAAW+mE,UAAUN,EAASD,EAAexmE,EAAWilE,cAAcjlE,EAAWymE,GAAiBA,CAAQ,CAA+8GmF,CAAmB90J,KAAK2vJ,EAAU,EAAE7F,iBAAiB,SAAS2E,GAAS,OAAOzuJ,KAAKgjB,WAAW+vI,aAAatE,EAAQ,EAAEsG,mBAAmB,SAAStG,GAAS,OAAOzuJ,KAAKgjB,WAAWgwI,eAAevE,EAAQ,EAAEoG,oBAAoB,SAASnG,GAAS,OAAO1uJ,KAAKgjB,WAAWkwI,gBAAgBxE,EAAQxzC,SAAS,EAAE85C,kBAAkB,SAAS5d,EAAaiS,GAAW,IAAI9wC,EAAIv4G,KAAKi1J,mBAAmB7d,EAAaiS,GAAW9wC,GAAKv4G,KAAK60J,oBAAoBt8C,EAAI,EAAE28C,eAAe,SAAS9d,EAAaiS,GAAW,OAAwD,MAAjDrpJ,KAAKi1J,mBAAmB7d,EAAaiS,EAAgB,EAAE8L,eAAe,SAAS/d,EAAaiS,GAAW,IAAI1rI,EAAK3d,KAAKi1J,mBAAmB7d,EAAaiS,GAAW,OAAO1rI,GAAMA,EAAKhb,OAAO,EAAE,EAAEyyJ,eAAe,SAAShe,EAAamc,EAAc5wJ,GAAO,IAAIgb,EAAK3d,KAAKmuJ,cAAcxE,kBAAkBvS,EAAamc,GAAe51I,EAAKhb,MAAMgb,EAAKksI,UAAU,GAAGlnJ,EAAM3C,KAAK8pJ,iBAAiBnsI,EAAK,EAAEs3I,mBAAmB,SAAS7d,EAAaiS,GAAW,OAAOrpJ,KAAKgjB,WAAWiwI,eAAe7b,EAAaiS,EAAU,EAAEp4E,qBAAqB,SAASo/C,GAAS,OAAO,IAAIw9B,EAAa7tJ,MAAK,SAAS0gE,GAAM,IAAI0tF,EAAG,GAAwI,OAArImB,EAAW7uF,GAAK,SAASn+D,GAASA,IAAOm+D,GAAMn+D,EAAK8tJ,UAAUnE,GAAyB,MAAV77B,GAAe9tH,EAAK8tH,SAASA,GAAU+9B,EAAG9pJ,KAAK/B,EAAM,IAAU6rJ,CAAE,GAAE,EAAEiH,uBAAuB,SAASje,EAAaiS,GAAW,OAAO,IAAIwE,EAAa7tJ,MAAK,SAAS0gE,GAAM,IAAI0tF,EAAG,GAAuM,OAApMmB,EAAW7uF,GAAK,SAASn+D,GAASA,IAAOm+D,GAAMn+D,EAAK8tJ,WAAWnE,GAA8B,MAAf9U,GAAoB70I,EAAK60I,eAAeA,GAA4B,MAAZiS,GAAiB9mJ,EAAK8mJ,WAAWA,GAAY+E,EAAG9pJ,KAAK/B,EAAM,IAAU6rJ,CAAE,GAAE,GAAGqB,EAASt2G,UAAU83B,qBAAqBw/E,EAAQt3G,UAAU83B,qBAAqBw+E,EAASt2G,UAAUk8G,uBAAuB5E,EAAQt3G,UAAUk8G,uBAAuBzJ,EAAS6E,EAAQrB,GAAuBsB,EAAKv3G,UAAUk3G,SAASlE,EAAeP,EAAS8E,EAAKtB,GAAgCuB,EAAcx3G,UAAU,CAACtvC,KAAK,GAAGyrJ,cAAc,SAASrd,EAAOxnH,GAAO,OAAOzwB,KAAK6J,KAAK+sB,UAAUqhH,EAAOA,EAAOxnH,EAAM,EAAEqjI,WAAW,SAASzlJ,GAAMA,EAAKrO,KAAK6J,KAAKwE,EAAKrO,KAAK6pJ,UAAU7pJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,EAAEovJ,WAAW,SAAStd,EAAO5pI,GAAMrO,KAAKw1J,YAAYvd,EAAO,EAAE5pI,EAAK,EAAEy7E,YAAY,SAAS6lE,GAAU,MAAM,IAAIrnJ,MAAMykJ,EAAiBC,GAAuB,EAAEyI,WAAW,SAASxd,EAAOxnH,GAAOzwB,KAAKw1J,YAAYvd,EAAOxnH,EAAM,GAAG,EAAE+kI,YAAY,SAASvd,EAAOxnH,EAAMpiB,GAAwFA,EAAxErO,KAAK6J,KAAK+sB,UAAU,EAAEqhH,GAA6D5pI,EAA7CrO,KAAK6J,KAAK+sB,UAAUqhH,EAAOxnH,GAA2BzwB,KAAK6pJ,UAAU7pJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,GAAGylJ,EAAS+E,EAAcvB,GAAuBwB,EAAKz3G,UAAU,CAAC+hE,SAAS,QAAQm1C,SAASjE,EAAUsJ,UAAU,SAASzd,GAAQ,IAAI5pI,EAAKrO,KAAK6J,KAAS8rJ,EAAQtnJ,EAAKuoB,UAAUqhH,GAAQ5pI,EAAKA,EAAKuoB,UAAU,EAAEqhH,GAAQj4I,KAAK6J,KAAK7J,KAAK6pJ,UAAUx7I,EAAKrO,KAAKmG,OAAOkI,EAAKlI,OAAO,IAAIyvJ,EAAQ51J,KAAKmuJ,cAActkE,eAAe8rE,GAAoF,OAAxE31J,KAAKkpF,YAAYlpF,KAAKkpF,WAAWuqE,aAAamC,EAAQ51J,KAAKwvJ,aAAoBoG,CAAO,GAAGhK,EAASgF,EAAKD,GAAmCE,EAAQ13G,UAAU,CAAC+hE,SAAS,WAAWm1C,SAAS5D,GAAcb,EAASiF,EAAQF,GAAwCG,EAAa33G,UAAU,CAAC+hE,SAAS,iBAAiBm1C,SAAShE,GAAoBT,EAASkF,EAAaH,GAAwCI,EAAa53G,UAAUk3G,SAAS1D,EAAmBf,EAASmF,EAAa3B,GAA2B4B,EAAS73G,UAAUk3G,SAASxD,EAAcjB,EAASoF,EAAS5B,GAAyB6B,EAAO93G,UAAUk3G,SAAS9D,EAAYX,EAASqF,EAAO7B,GAAkC8B,EAAgB/3G,UAAUk3G,SAAS/D,EAAsBV,EAASsF,EAAgB9B,GAAmC+B,EAAiBh4G,UAAU+hE,SAAS,qBAAqBi2C,EAAiBh4G,UAAUk3G,SAASzD,EAAuBhB,EAASuF,EAAiB/B,GAAwCgC,EAAsBj4G,UAAUk3G,SAAS7D,EAA4BZ,EAASwF,EAAsBhC,GAAgCjX,EAAch/F,UAAUw/F,kBAAkB,SAASp2I,EAAK+uJ,EAAOC,GAAY,OAAOF,EAAsBj4G,KAAK72C,EAAK+uJ,EAAOC,EAAW,EAAEnC,EAAKj2G,UAAUzkC,SAAS28I,EAA2hJ,IAAI,GAAGl9I,OAAO8gI,eAAe,CAA2f,SAAS4gB,GAAetzJ,GAAM,OAAOA,EAAK8tJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArBjvJ,EAAKA,EAAK04G,WAAiB14G,GAAyB,IAAhBA,EAAK8tJ,UAA8B,IAAhB9tJ,EAAK8tJ,UAAcmB,EAAIltJ,KAAKuxJ,GAAetzJ,IAAOA,EAAKA,EAAKitJ,YAAY,OAAOgC,EAAIljJ,KAAK,IAAI,QAAQ,OAAO/L,EAAKsnJ,UAAU,CAAxxB11I,OAAO8gI,eAAe4Y,EAAa10G,UAAU,SAAS,CAACxjC,IAAI,WAAiC,OAAtBq4I,EAAgBhuJ,MAAaA,KAAK81J,QAAQ,IAAI3hJ,OAAO8gI,eAAema,EAAKj2G,UAAU,cAAc,CAACxjC,IAAI,WAAW,OAAOkgJ,GAAe71J,KAAK,EAAE6Z,IAAI,SAAShQ,GAAM,OAAO7J,KAAKqwJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAM5sJ,KAAKi7G,YAAYj7G,KAAKmpF,YAAYnpF,KAAKi7G,aAAepxG,GAAMqR,OAAOrR,KAAO7J,KAAK8pF,YAAY9pF,KAAKmuJ,cAActkE,eAAehgF,IAAO,MAAM,QAAQ7J,KAAK6J,KAAKA,EAAK7J,KAAK2C,MAAMkH,EAAK7J,KAAK6pJ,UAAUhgJ,EAAK,IAAmSwkJ,GAAQ,SAASppJ,EAAOZ,EAAI1B,GAAOsC,EAAO,KAAKZ,GAAK1B,CAAK,CAAC,CAAW,CAAT,MAAM0H,IAAG,CAAC3K,EAAQwpJ,kBAAkBA,EAAkBxpJ,EAAQy4I,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS5jE,EAAQ90E,EAAOC,GAAS,IAAIq2J,EAAc,mJAAuJC,EAAS,IAAI5zI,OAAO,aAAa2zI,EAAcjO,OAAO50I,MAAM,GAAG,GAAG,0CAA8C+iJ,EAAe,IAAI7zI,OAAO,IAAI2zI,EAAcjO,OAAOkO,EAASlO,OAAO,QAAQiO,EAAcjO,OAAOkO,EAASlO,OAAO,QAA8I,SAASE,IAAY,CAA+P,SAASzwI,EAAMuwI,EAAOoO,EAAiB9N,EAAUH,EAAW9O,GAAgO,SAASgd,EAAevoJ,GAAG,IAAIyG,EAAEzG,EAAEsF,MAAM,GAAG,GAAG,OAAGmB,KAAK+zI,EAAkBA,EAAU/zI,GAAyB,MAAdA,EAAEuvC,OAAO,GAAzT,SAA2BntC,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAI2/I,EAAW,QAA3B3/I,GAAM,QAAkC,IAAI4/I,EAAW,OAAY,KAAL5/I,GAAW,OAAOyE,OAAOg/H,aAAakc,EAAWC,EAAW,CAAM,OAAOn7I,OAAOg/H,aAAazjI,EAAM,CAAyH6/I,CAAkBzxI,SAASxQ,EAAEksC,OAAO,GAAGvtC,QAAQ,IAAI,SAAammI,EAAa5pI,MAAM,oBAAoB3B,GAAUA,EAAE,CAAC,SAAS2oJ,EAAWvyG,GAAK,GAAGA,EAAIvyB,EAAM,CAAC,IAAI+kI,EAAG1O,EAAOlxH,UAAUnF,EAAMuyB,GAAKhxC,QAAQ,WAAWmjJ,GAAgBlP,GAAStmJ,EAAS8wB,GAAOw2H,EAAWwC,WAAW+L,EAAG,EAAExyG,EAAIvyB,GAAOA,EAAMuyB,CAAG,CAAC,CAAC,SAASrjD,EAASmhB,EAAEs6G,GAAG,KAAMt6G,GAAG20I,IAAUr6B,EAAEs6B,EAAYjc,KAAKqN,KAAU6O,EAAUv6B,EAAErwH,MAAM0qJ,EAAQE,EAAUv6B,EAAE,GAAGj2H,OAAO8gJ,EAAQG,aAAaH,EAAQI,aAAavlI,EAAE60I,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BzP,EAAQgB,EAAWhB,QAAY2P,EAAW,CAAC,CAACC,aAAaX,IAAuBY,EAAS,CAAC,EAAMrlI,EAAM,IAAa,CAAC,IAAI,IAAIslI,EAASjP,EAAOz6I,QAAQ,IAAIokB,GAAO,GAAGslI,EAAS,EAAE,CAAC,IAAIjP,EAAOvnG,OAAO9uB,GAAOkR,MAAM,SAAS,CAAC,IAAIqtF,EAAIi4B,EAAWj4B,IAAQ3hH,EAAK2hH,EAAInmC,eAAei+D,EAAOvnG,OAAO9uB,IAAQu+F,EAAIlmC,YAAYz7E,GAAM45I,EAAWJ,eAAex5I,CAAI,CAAC,MAAM,CAAyC,OAArC0oJ,EAAStlI,GAAO8kI,EAAWQ,GAAiBjP,EAAOlkG,OAAOmzG,EAAS,IAAI,IAAI,IAAI,IAAI/yG,EAAI8jG,EAAOz6I,QAAQ,IAAI0pJ,EAAS,GAAO1mC,EAAQy3B,EAAOlxH,UAAUmgI,EAAS,EAAE/yG,GAAS/hD,EAAO20J,EAAW5pH,MAASgX,EAAI,GAAGqsE,EAAQy3B,EAAOlxH,UAAUmgI,EAAS,GAAG/jJ,QAAQ,UAAU,IAAImmI,EAAa5pI,MAAM,iBAAiB8gH,EAAQ,oBAAoBpuH,EAAOouH,SAASrsE,EAAI+yG,EAAS,EAAE1mC,EAAQlqH,QAAekqH,EAAQ1tF,MAAM,SAAQ0tF,EAAQA,EAAQr9G,QAAQ,UAAU,IAAImmI,EAAa5pI,MAAM,iBAAiB8gH,EAAQ,uBAAuBrsE,EAAI+yG,EAAS,EAAE1mC,EAAQlqH,QAAO,IAAI6wJ,EAAW/0J,EAAO+0J,WAAeC,EAASh1J,EAAOouH,SAASA,EAA4G,GAA9E4mC,GAAUh1J,EAAOouH,SAASpuH,EAAOouH,QAAQl4G,eAAek4G,EAAQl4G,cAAmC,CAA4D,GAA3D8vI,EAAW8B,WAAW9nJ,EAAOioJ,IAAIjoJ,EAAOonJ,UAAUh5B,GAAY2mC,EAAY,IAAI,IAAIr8I,KAAUq8I,EAAY/O,EAAWkC,iBAAiBxvI,GAAas8I,GAAU9d,EAAauS,WAAW,iBAAiBr7B,EAAQ,2CAA2CpuH,EAAOouH,QAAS,MAAMumC,EAAWtyJ,KAAKrC,GAAQ+hD,IAAM,MAAM,IAAI,IAAIijG,GAAStmJ,EAASo2J,GAAU/yG,EAAIkzG,EAAiBpP,EAAOiP,EAAS9O,GAAY,MAAM,IAAI,IAAIhB,GAAStmJ,EAASo2J,GAAU/yG,EAAImzG,EAASrP,EAAOiP,EAAS9O,EAAW9O,GAAc,MAAM,QAAQ8N,GAAStmJ,EAASo2J,GAAU,IAAIvqJ,EAAG,IAAI4qJ,EAAsBP,EAAaD,EAAWA,EAAWzwJ,OAAO,GAAG0wJ,aAA4GrN,GAA3FxlG,EAAIqzG,EAAsBvP,EAAOiP,EAASvqJ,EAAGqqJ,EAAaV,EAAehd,GAAsB3sI,EAAGrG,QAAwJ,IAA7IqG,EAAG8qJ,QAAQC,EAAczP,EAAO9jG,EAAIx3C,EAAG6jH,QAAQymC,KAAWtqJ,EAAG8qJ,QAAO,EAASlP,EAAUY,MAAM7P,EAAasS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAIgO,EAASC,EAAYxQ,EAAQ,CAAC,GAAW5zI,EAAE,EAAEA,EAAEm2I,EAAIn2I,IAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAG1S,EAASiN,EAAEqqI,QAAQrqI,EAAEq5I,QAAQwQ,EAAYxQ,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQuQ,EAAY7P,EAAcn7I,EAAGy7I,EAAW4O,IAAeD,EAAWtyJ,KAAKkI,GAAIy7I,EAAWhB,QAAQA,CAAO,MAASU,EAAcn7I,EAAGy7I,EAAW4O,IAAeD,EAAWtyJ,KAAKkI,GAAiB,iCAATA,EAAG09I,KAAuC19I,EAAG8qJ,OAA0FtzG,IAAlFA,EAAI0zG,EAAwB5P,EAAO9jG,EAAIx3C,EAAG6jH,QAAQ8lC,EAAelO,GAAsF,CAA7D,MAAM59I,GAAG8uI,EAAa5pI,MAAM,wBAAwBlF,GAAG25C,GAAK,CAAC,CAAIA,EAAIvyB,EAAOA,EAAMuyB,EAASuyG,EAAWhwJ,KAAK22C,IAAI65G,EAAStlI,GAAO,EAAG,CAAC,CAAC,SAASgmI,EAAYzwJ,EAAEi1B,GAA2D,OAAxDA,EAAEmrH,WAAWpgJ,EAAEogJ,WAAWnrH,EAAEorH,aAAargJ,EAAEqgJ,aAAoBprH,CAAC,CAAC,SAASo7H,EAAsBvP,EAAOr2H,EAAMjlB,EAAGqqJ,EAAaV,EAAehd,GAA+D,IAAjD,IAAIwe,EAAuB71I,IAAI2P,EAAU7kB,EAAviI,IAA0jI,CAAC,IAAIrJ,EAAEukJ,EAAOlkG,OAAO9hC,GAAG,OAAOve,GAAG,IAAI,IAAI,GAAvlI,IAA0lIqJ,EAAY+qJ,EAAS7P,EAAO50I,MAAMue,EAAM3P,GAAGlV,EAAvmI,MAAmnI,IAA9nI,IAAioIA,EAA8B,MAAM,IAAItE,MAAM,uCAA5BsE,EAAxoI,CAA0sI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAjuI,IAAouIA,GAAlwI,IAA4wIA,EAAW,CAA0I,GAAj6I,IAA2xIA,IAAYusI,EAAasS,QAAQ,kCAAkCkM,EAAS7P,EAAO50I,MAAMue,EAAM3P,IAAG2P,EAAM3P,EAAE,KAAEA,EAAEgmI,EAAOz6I,QAAQ9J,EAAEkuB,IAAY,GAAmH,MAAM,IAAInpB,MAAM,2BAA2B/E,EAAE,WAA7JZ,EAAMmlJ,EAAO50I,MAAMue,EAAM3P,GAAG9O,QAAQ,WAAWmjJ,GAAgB3pJ,EAAG0U,IAAIy2I,EAASh1J,EAAM8uB,EAAM,GAAG7kB,EAA97I,CAAwgJ,KAAM,IAA/hJ,GAAkiJA,EAA4N,MAAM,IAAItE,MAAM,kCAApN3F,EAAMmlJ,EAAO50I,MAAMue,EAAM3P,GAAG9O,QAAQ,WAAWmjJ,GAAgB3pJ,EAAG0U,IAAIy2I,EAASh1J,EAAM8uB,GAAO0nH,EAAasS,QAAQ,cAAckM,EAAS,uBAAuBp0J,EAAE,OAAOkuB,EAAM3P,EAAE,EAAElV,EAA3tJ,CAA8xJ,CAAC,MAAM,IAAI,IAAI,OAAOA,GAAG,KAA74J,EAAw5JJ,EAAGorJ,WAAW9P,EAAO50I,MAAMue,EAAM3P,IAAI,KAAv2J,EAAu3J,KAAr2J,EAAs3J,KAAp2J,EAAq3JlV,EAAr3J,EAAm4JJ,EAAG8qJ,QAAO,EAAK,KAAv8J,EAAg+J,KAAxhK,EAAoiK,KAAjhK,EAAmiK,MAAM,QAAQ,MAAM,IAAIhvJ,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhG6wI,EAAa5pI,MAAM,2BAAtqK,GAAosK3C,GAAUJ,EAAGorJ,WAAW9P,EAAO50I,MAAMue,EAAM3P,IAAWA,EAAE,IAAI,IAAI,OAAOlV,GAAG,KAA9wK,EAAyxKJ,EAAGorJ,WAAW9P,EAAO50I,MAAMue,EAAM3P,IAAI,KAAxuK,EAAwvK,KAAtuK,EAAuvK,KAAruK,EAAsvK,MAAM,KAAjzK,EAA00K,KAAl4K,EAA+7K,OAAjDnf,EAAMmlJ,EAAO50I,MAAMue,EAAM3P,IAAY5O,OAAO,KAAU1G,EAAG8qJ,QAAO,EAAK30J,EAAMA,EAAMuQ,MAAM,GAAG,IAAG,KAAx9K,MAA6+KtG,IAAkBjK,EAAMg1J,GAAh+K,GAA4+K/qJ,GAAwBusI,EAAasS,QAAQ,cAAc9oJ,EAAM,sBAAsB6J,EAAG0U,IAAIy2I,EAASh1J,EAAMqQ,QAAQ,WAAWmjJ,GAAgB1kI,KAAkC,iCAAnBolI,EAAa,KAAuCl0J,EAAMggC,MAAM,qCAAqCw2G,EAAasS,QAAQ,cAAc9oJ,EAAM,qBAAqBA,EAAM,eAAe6J,EAAG0U,IAAIve,EAAMA,EAAM8uB,IAAO,MAAM,KAA73L,EAAu4L,MAAM,IAAInpB,MAAM,4BAA4B,OAAOwZ,EAAE,IAAI,IAAIve,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOqJ,GAAG,KAAlhM,EAA6hMJ,EAAGorJ,WAAW9P,EAAO50I,MAAMue,EAAM3P,IAAIlV,EAA19L,EAAw+L,MAAM,KAAzkM,EAAqlM+qJ,EAAS7P,EAAO50I,MAAMue,EAAM3P,GAAGlV,EAAjmM,EAAgnM,MAAM,KAAjlM,EAA0mM,IAAIjK,EAAMmlJ,EAAO50I,MAAMue,EAAM3P,GAAG9O,QAAQ,WAAWmjJ,GAAgBhd,EAAasS,QAAQ,cAAc9oJ,EAAM,sBAAsB6J,EAAG0U,IAAIy2I,EAASh1J,EAAM8uB,GAAO,KAAxvM,EAAwwM7kB,EAAtvM,OAAgxM,OAAOA,GAAG,KAAl2M,EAAg4MJ,EAAG6jH,QAA8B,iCAAnBwmC,EAAa,KAAuCc,EAASh1H,MAAM,qCAAqCw2G,EAAasS,QAAQ,cAAckM,EAAS,qBAAqBA,EAAS,gBAAgBnrJ,EAAG0U,IAAIy2I,EAASA,EAASlmI,GAAOA,EAAM3P,EAAElV,EAA3oN,EAAopN,MAAM,KAAjlN,EAAimNusI,EAAasS,QAAQ,+BAA+BkM,EAAS,OAAO,KAAnpN,EAAoqN/qJ,EAA/vN,EAAwwN6kB,EAAM3P,EAAE,MAAM,KAAxvN,EAAkwNlV,EAAxuN,EAA8vN6kB,EAAM3P,EAAE,MAAM,KAAvtN,EAAwuN,MAAM,IAAIxZ,MAAM,+DAAgEwZ,GAAG,CAAC,CAAC,SAAS6lI,EAAcn7I,EAAGy7I,EAAW4O,GAAyE,IAA3D,IAAIxmC,EAAQ7jH,EAAG6jH,QAAY2mC,EAAW,KAAS3jJ,EAAE7G,EAAGrG,OAAakN,KAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAOi2I,EAAM17I,EAAE07I,MAAU3mJ,EAAMiL,EAAEjL,MAAiC,IAAvBk1J,EAAIvO,EAAMj8I,QAAQ,MAAY,EAAG,IAAIsN,EAAO/M,EAAE+M,OAAO2uI,EAAMp2I,MAAM,EAAE2kJ,GAASxO,EAAUC,EAAMp2I,MAAM2kJ,EAAI,GAAOC,EAAkB,UAATn9I,GAAkB0uI,OAAeA,EAAUC,EAAM3uI,EAAO,KAAKm9I,EAAiB,UAARxO,GAAiB,GAAG17I,EAAEy7I,UAAUA,GAAwB,IAAXyO,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAUn1J,EAAMiL,EAAEs8I,IAAI,gCAAgCjC,EAAWgC,mBAAmB6N,EAASn1J,GAAO,CAAiB,IAAZ0Q,EAAE7G,EAAGrG,OAAakN,MAAiBsH,GAAZ/M,EAAEpB,EAAG6G,IAAgBsH,UAA8B,QAATA,IAAgB/M,EAAEs8I,IAAI,wCAAmD,UAATvvI,IAAkB/M,EAAEs8I,IAAI2M,EAAal8I,GAAQ,MAAM,IAAIk9I,KAAIxnC,EAAQhjH,QAAQ,MAAY,GAAGsN,EAAOnO,EAAGmO,OAAO01G,EAAQn9G,MAAM,EAAE2kJ,GAAKxO,EAAU78I,EAAG68I,UAAUh5B,EAAQn9G,MAAM2kJ,EAAI,KAAQl9I,EAAO,KAAK0uI,EAAU78I,EAAG68I,UAAUh5B,GAAQ,IAAI2hC,EAAGxlJ,EAAG09I,IAAI2M,EAAal8I,GAAQ,IAAqD,GAAjDstI,EAAW99F,aAAa6nG,EAAG3I,EAAUh5B,EAAQ7jH,IAAOA,EAAG8qJ,OAA8L,OAAtD9qJ,EAAGqqJ,aAAaA,EAAarqJ,EAAGwqJ,WAAWA,GAAkB,EAAjJ,GAA5C/O,EAAW8B,WAAWiI,EAAG3I,EAAUh5B,GAAY2mC,EAAY,IAAIr8I,KAAUq8I,EAAY/O,EAAWkC,iBAAiBxvI,EAAiF,CAAC,SAAS+8I,EAAwB5P,EAAOkQ,EAAW3nC,EAAQ8lC,EAAelO,GAAY,GAAG,yBAAyB5lI,KAAKguG,GAAS,CAAC,IAAI4nC,EAAWnQ,EAAOz6I,QAAQ,KAAKgjH,EAAQ,IAAI2nC,GAAgB3pJ,EAAKy5I,EAAOlxH,UAAUohI,EAAW,EAAEC,GAAY,GAAG,OAAO51I,KAAKhU,GAAO,MAAG,YAAYgU,KAAKguG,IAAU43B,EAAWwC,WAAWp8I,EAAK,EAAEA,EAAKlI,QAAe8xJ,IAAW5pJ,EAAKA,EAAK2E,QAAQ,WAAWmjJ,GAAgBlO,EAAWwC,WAAWp8I,EAAK,EAAEA,EAAKlI,QAAe8xJ,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAczP,EAAOkQ,EAAW3nC,EAAQymC,GAAU,IAAIvnI,EAAIunI,EAASzmC,GAA8I,OAA7H,MAAL9gG,KAAWA,EAAIu4H,EAAOoQ,YAAY,KAAK7nC,EAAQ,MAAY2nC,IAAYzoI,EAAIu4H,EAAOoQ,YAAY,KAAK7nC,IAASymC,EAASzmC,GAAS9gG,GAAWA,EAAIyoI,CAAU,CAAC,SAASD,EAAMjQ,EAAO7hG,GAAQ,IAAI,IAAI7G,KAAK0oG,EAAQ7hG,EAAO7G,GAAG0oG,EAAO1oG,EAAG,CAAC,SAAS+3G,EAASrP,EAAOr2H,EAAMw2H,EAAW9O,GAA8C,GAAiB,MAAxC2O,EAAOlkG,OAAOnyB,EAAM,GAAwB,MAA4B,MAAzBq2H,EAAOlkG,OAAOnyB,EAAM,IAAcuyB,EAAI8jG,EAAOz6I,QAAQ,SAASokB,EAAM,IAAUA,GAAOw2H,EAAWrgC,QAAQkgC,EAAOr2H,EAAM,EAAEuyB,EAAIvyB,EAAM,GAAUuyB,EAAI,IAAOm1F,EAAa5pI,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1Bu4I,EAAOvnG,OAAO9uB,EAAM,EAAE,GAAa,CAAC,IAAIuyB,EAAI8jG,EAAOz6I,QAAQ,MAAMokB,EAAM,GAAmG,OAAhGw2H,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAOr2H,EAAM,EAAEuyB,EAAIvyB,EAAM,GAAGw2H,EAAWiD,WAAkBlnG,EAAI,CAAC,CAAC,IAAIm0G,EAAqiD,SAAerQ,EAAOr2H,GAAO,IAAIkR,EAAU6uH,EAAI,GAAO4G,EAAI,6CAAkF,IAArCA,EAAIpJ,UAAUv9H,EAAM2mI,EAAI3d,KAAKqN,GAAcnlH,EAAMy1H,EAAI3d,KAAKqN,IAAyB,GAAhB0J,EAAIltJ,KAAKq+B,GAAUA,EAAM,GAAG,OAAO6uH,CAAI,CAA/uDhqI,CAAMsgI,EAAOr2H,GAAW+3H,EAAI2O,EAAOhyJ,OAAO,GAAGqjJ,EAAI,GAAG,YAAYnnI,KAAK81I,EAAO,GAAG,IAAI,CAAC,IAAIhxJ,EAAKgxJ,EAAO,GAAG,GAAOlG,EAAMzI,EAAI,GAAG,YAAYnnI,KAAK81I,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOjG,EAAM1I,EAAI,GAAG2O,EAAO,GAAG,GAAOE,EAAUF,EAAO3O,EAAI,GAA2I,OAAxIvB,EAAWkD,SAAShkJ,EAAK8qJ,GAAOA,EAAMj/I,QAAQ,kBAAkB,MAAMk/I,GAAOA,EAAMl/I,QAAQ,kBAAkB,OAAOi1I,EAAWqQ,SAAgBD,EAAUtsJ,MAAMssJ,EAAU,GAAGlyJ,MAAM,CAAE,OAAO,CAAC,CAAC,SAAS+wJ,EAAiBpP,EAAOr2H,EAAMw2H,GAAY,IAAIjkG,EAAI8jG,EAAOz6I,QAAQ,KAAKokB,GAAO,GAAGuyB,EAAI,CAAC,IAAIrhB,EAAMmlH,EAAOlxH,UAAUnF,EAAMuyB,GAAKrhB,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAGx8B,OAAO8hJ,EAAWmC,sBAAsBznH,EAAM,GAAGA,EAAM,IAAWqhB,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAASozG,EAAkBtP,GAAQ,CAAkjB,SAASyQ,EAAYC,EAAKzjJ,GAA8B,OAAtByjJ,EAAKxM,UAAUj3I,EAAcyjJ,CAAI,CAAtqVxQ,EAAU7uG,UAAU,CAAC5hC,MAAM,SAASuwI,EAAOI,EAAaE,GAAW,IAAIH,EAAWjoJ,KAAKioJ,WAAWA,EAAWgB,gBAAgB8O,EAAM7P,EAAaA,EAAa,CAAC,GAAG3wI,EAAMuwI,EAAOI,EAAaE,EAAUH,EAAWjoJ,KAAKm5I,cAAc8O,EAAW4C,aAAa,GAAuzTuM,EAAkBj+G,UAAU,CAACy+G,WAAW,SAASvnC,GAAS,IAAI4lC,EAAe5zI,KAAKguG,GAAU,MAAM,IAAI/nH,MAAM,mBAAmB+nH,GAASrwH,KAAKqwH,QAAQA,CAAO,EAAEnvG,IAAI,SAASooI,EAAM3mJ,EAAMs1I,GAAQ,IAAIge,EAAe5zI,KAAKinI,GAAQ,MAAM,IAAIhhJ,MAAM,qBAAqBghJ,GAAOtpJ,KAAKA,KAAKmG,UAAU,CAACmjJ,MAAMA,EAAM3mJ,MAAMA,EAAMs1I,OAAOA,EAAO,EAAE9xI,OAAO,EAAEsyJ,aAAa,SAASplJ,GAAG,OAAOrT,KAAKqT,GAAGg2I,SAAS,EAAEO,WAAW,SAASv2I,GAAG,OAAOrT,KAAKqT,GAAG4zI,OAAO,EAAEyC,SAAS,SAASr2I,GAAG,OAAOrT,KAAKqT,GAAGi2I,KAAK,EAAEG,OAAO,SAASp2I,GAAG,OAAOrT,KAAKqT,GAAG62I,GAAG,EAAEj+I,SAAS,SAASoH,GAAG,OAAOrT,KAAKqT,GAAG1Q,KAAK,GAA4E41J,EAAY,CAAC,EAAEA,EAAYp/G,qBAAqBo/G,IAAcA,EAAY,SAASC,EAAKzjJ,GAAQ,SAAS+M,IAAI,CAA4B,IAAI/M,KAA/B+M,EAAEq3B,UAAUpkC,EAAO+M,EAAE,IAAIA,EAAgB02I,EAAM12I,EAAE/M,GAAQyjJ,EAAKzjJ,GAAQ,OAAO+M,CAAC,GAAoNpiB,EAAQsoJ,UAAUA,CAAS,EAAE,CAAC,GAAG,2BAA2B,CAAC,SAASzzE,EAAQ90E,EAAOC,GAAS,aAAa,IAAIi1I,EAAa,WAAW,SAASC,EAAiB3uF,EAAO0xC,GAAO,IAAI,IAAItkF,EAAE,EAAEA,EAAEskF,EAAMxxF,OAAOkN,IAAI,CAAC,IAAIwhI,EAAWl9C,EAAMtkF,GAAGwhI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7gI,OAAO8gI,eAAehvF,EAAO4uF,EAAWxwI,IAAIwwI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/7F,UAAUg8F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0e,SAASY,EAAgBhvF,EAASouF,GAAa,KAAKpuF,aAAoBouF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAC,IAAItB,EAAShgE,EAAQ,eAAeggE,EAASoG,OAAOpmE,EAAQ,YAAYggE,EAASqG,cAAcrmE,EAAQ,oBAAoB,IAAIumE,EAAQvG,EAASqG,cAAkBttB,EAAc,WAAW,SAASA,IAAoD,GAApCwoB,EAAgB91I,KAAKstH,GAAkBv6G,UAAU5M,OAAO,EAAG,MAAM,IAAImC,MAAM,2GAA2GtI,KAAK+6I,SAAS,CAAC,EAAE/6I,KAAKg7I,QAAQ,GAAGh7I,KAAKwnF,WAAW,CAAC,EAAE,CAAq5G,OAAp5GmtD,EAAarnB,EAAc,CAAC,CAACjpH,IAAI,eAAe1B,MAAM,SAAsBlD,GAA2C,OAAnCO,KAAKg7I,QAAQ12I,KAAKw2I,EAAQr7I,IAAgBO,IAAI,GAAG,CAACqE,IAAI,aAAa1B,MAAM,SAAoBR,GAAS,IAAI84I,EAAMj7I,KAAsO,OAAjOA,KAAKmC,QAAQA,EAAQgS,OAAOC,KAAKmgI,EAASnwI,UAAUH,SAAQ,SAASI,GAAK,IAAI09B,EAAawyG,EAASnwI,SAASC,GAAK42I,EAAM52I,GAAyB,MAApB42I,EAAM94I,QAAQkC,GAAW42I,EAAM94I,QAAQkC,GAAK09B,CAAY,IAAM/hC,KAAK+vH,KAAK/vH,KAAKg6J,uBAA8Bh6J,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBotH,GAAK,GAAGA,EAAIsrB,UAAW,MAAM,IAAI/yI,MAAM,iEAA0G,OAAzCtI,KAAK+vH,IAAIA,EAAI/vH,KAAKg6J,uBAA8Bh6J,IAAI,GAAG,CAACqE,IAAI,cAAc1B,MAAM,SAAqBquG,GAAU,IAAIsqC,EAAYt7I,KAAKu7I,oBAAoBvqC,GAAUsqC,EAAY/jI,QAAQvX,KAAK+6I,SAAS/pC,GAAUsqC,CAAW,GAAG,CAACj3I,IAAI,UAAU1B,MAAM,WAAuF,OAApE3C,KAAKw7I,eAAex7I,KAAKk7I,eAAeO,kBAAkBz7I,KAAK+vH,KAAY/vH,IAAI,GAAG,CAACqE,IAAI,uBAAuB1B,MAAM,WAA6L,OAA7J3C,KAAK67C,SAAS77C,KAAK+vH,IAAIumB,MAAM,qBAAqB,OAAO,OAAOt2I,KAAKk7I,eAAel7I,KAAKmC,QAAQ+4I,gBAAgB5tB,EAAc6tB,eAAen7I,KAAK67C,UAAiB77C,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,IAAI+4I,EAAO17I,KAAmzC,OAA9yCA,KAAKmC,QAAQi5I,aAAa,GAAGp7I,KAAKg7I,QAAQh7I,KAAKk7I,eAAeS,YAAYxtI,KAAI,SAASytI,GAAgB,OAAOA,GAAgB,IAAG90H,OAAO9mB,KAAKg7I,SAASh7I,KAAKmC,QAAQnC,KAAKg7I,QAAQpE,QAAO,SAASz0I,EAAQ1C,GAAQ,OAAOA,EAAOo8I,mBAAmB15I,EAAQu5I,EAAO,GAAE17I,KAAKmC,SAASnC,KAAK41I,aAAa51I,KAAKmC,QAAQi5I,aAAaxE,QAAO,SAAShB,EAAa5kC,GAAU,IAAIliC,EAAQ4sE,EAAO3rB,IAAIumB,MAAMtlC,GAAU8qC,SAA0D,OAAjDlG,EAAa5kC,GAAUujC,EAASgC,QAAQznE,GAAgB8mE,CAAY,GAAE,CAAC,GAAG51I,KAAKg7I,QAAQ/2I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI,CAACk2G,IAAI2rB,EAAO3rB,IAAI6lB,aAAa8F,EAAO9F,aAAa/rI,KAAK6xI,EAAO7xI,MAAM,IAAG7J,KAAK+7I,UAAU/7I,KAAKg7I,QAAQ/2I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI,CAACkhI,SAASW,EAAOX,UAAU,IAAG/6I,KAAKw7I,eAAev3I,SAAQ,SAAS+sG,GAAyC,MAA5B0qC,EAAO3rB,IAAIumB,MAAMtlC,IAAiB0qC,EAAOM,YAAYhrC,EAAU,IAAGhxG,KAAKi8I,OAAOj8I,KAAKg7I,QAAQpE,QAAO,SAASj0I,EAAMlD,GAAQ,OAAOA,EAAOy8I,eAAev5I,EAAM,GAAE,CAAC,GAAGwR,OAAOC,KAAKpU,KAAKi8I,QAAQh4I,SAAQ,SAASqiC,GAAI,IAAI61G,EAAOT,EAAOO,OAAO31G,GAAQE,EAAK21G,EAAO31G,KAAS80G,EAAYI,EAAOX,SAASv0G,GAAM80G,EAAYc,QAAQD,EAAOtyI,MAAMyxI,EAAY5vE,OAAOplC,GAAIo1G,EAAO3rB,IAAIz+C,KAAKhrC,EAAGg1G,EAAYxsE,QAAQ,IAAG36D,OAAOC,KAAKpU,KAAK41I,cAAc3xI,SAAQ,SAAS+sG,GAAU0qC,EAAO3rB,IAAIl1G,OAAOm2F,GAAU,IAAIliC,EAAQylE,EAASiC,QAAQkF,EAAO9F,aAAa5kC,IAAW,OAAO0qC,EAAO3rB,IAAIz+C,KAAK0/B,EAASliC,EAAQ,CAAC,EAAE,IAAU9uE,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBkH,GAAqB,OAAf7J,KAAK6J,KAAKA,EAAY7J,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,OAAO3C,KAAK+vH,GAAG,GAAG,CAAC1rH,IAAI,sBAAsB1B,MAAM,SAA6BspD,GAAM,IAAIowF,EAASr8I,KAAK+vH,IAAIumB,MAAMrqF,GAAM6vF,SAAS,OAAO97I,KAAKs8I,+BAA+BD,EAASpwF,EAAK,GAAG,CAAC5nD,IAAI,iCAAiC1B,MAAM,SAAwCmsE,EAAQytE,GAAU,IAAIC,EAAOx8I,KAASy8I,EAAY,CAACF,SAASA,GAA8K,OAApKpoI,OAAOC,KAAKmgI,EAASnwI,UAAUH,SAAQ,SAASI,GAAKo4I,EAAYp4I,GAAKm4I,EAAOn4I,EAAI,IAAGo4I,EAAYvB,eAAel7I,KAAKk7I,eAAeuB,EAAYzB,QAAQh7I,KAAKg7I,QAAe,IAAI1tB,EAAcovB,aAAa5tE,EAAQ2tE,EAAY,GAAG,CAACp4I,IAAI,cAAc1B,MAAM,SAAqBspD,GAAM,OAAOjsD,KAAKu7I,oBAAoBtvF,GAAMjsD,KAAKk7I,eAAeyB,UAAUC,aAAa,GAAG,CAACv4I,IAAI,oBAAoB1B,MAAM,WAA4C,OAAf3C,KAAK+7I,UAAiB/7I,KAAKw7I,cAAc,KAAYluB,CAAa,CAAvrH,GAA2rHA,EAAcinB,SAAShgE,EAAQ,eAAe+4C,EAAc8qB,OAAO7jE,EAAQ,YAAY+4C,EAAcovB,aAAanoE,EAAQ,mBAAmB+4C,EAAc6tB,eAAe5mE,EAAQ,sBAAsB+4C,EAAcuvB,WAAWtoE,EAAQ,iBAAiB90E,EAAOC,QAAQ4tH,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,WAAW,GAAG,gBAAgB,GAAG,kBAAkB,MAAM,CAAC,EAAE,GAAnkiF,CAAukiF,uCCWr3iF7tH,EAAOC,QAA2N,SAASkO,EAAEC,EAAEtK,EAAEqsB,GAAG,SAASvlB,EAAE2tG,EAAEtoC,GAAG,IAAInsE,EAAEy0G,GAAG,CAAC,IAAInqG,EAAEmqG,GAAG,CAAmE,GAAGhxG,EAAE,OAAOA,EAAEgxG,GAAE,GAAI,IAAIt3E,EAAE,IAAIp4B,MAAM,uBAAuB0vG,EAAE,KAAK,MAAMt3E,EAAEjqB,KAAK,mBAAmBiqB,CAAC,CAAC,IAAIrsB,EAAE9Q,EAAEy0G,GAAG,CAACt4G,QAAQ,CAAC,GAAGmO,EAAEmqG,GAAG,GAAG5+D,KAAK/kC,EAAE3U,SAAQ,SAASkO,GAAoB,OAAOvD,EAAlBwD,EAAEmqG,GAAG,GAAGpqG,IAAgBA,EAAE,GAAEyG,EAAEA,EAAE3U,QAAQkO,EAAEC,EAAEtK,EAAEqsB,EAAE,CAAC,OAAOrsB,EAAEy0G,GAAGt4G,OAAO,CAAC,IAAI,IAAIsH,OAAE,EAAoCgxG,EAAE,EAAEA,EAAEpoF,EAAEzpB,OAAO6xG,IAAI3tG,EAAEulB,EAAEooF,IAAI,OAAO3tG,CAAC,CAAnb,CAAqb,CAAC,EAAE,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAG,GAAGA,EAAE,CAAC5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAKi6J,KAAK,EAAE,IAAI,IAAIpsJ,EAAE,EAAEA,EAAE7N,KAAK6J,KAAK1D,OAAO0H,IAAID,EAAEC,GAAG,IAAID,EAAEC,EAAE,CAAC,CAAC,IAAIxD,EAAEuD,EAAE,gBAAgBgiB,EAAEupB,UAAU,IAAI9uC,EAAEulB,EAAEupB,UAAU+gH,OAAO,SAAStsJ,GAAG,OAAO5N,KAAK6J,KAAK7J,KAAKi6J,KAAKrsJ,EAAE,EAAEgiB,EAAEupB,UAAUghH,qBAAqB,SAASvsJ,GAAG,IAAI,IAAIC,EAAED,EAAE0hJ,WAAW,GAAG/rJ,EAAEqK,EAAE0hJ,WAAW,GAAG1/H,EAAEhiB,EAAE0hJ,WAAW,GAAGjlJ,EAAEuD,EAAE0hJ,WAAW,GAAGtoJ,EAAEhH,KAAKmG,OAAO,EAAEa,GAAG,IAAIA,EAAE,GAAGhH,KAAK6J,KAAK7C,KAAK6G,GAAG7N,KAAK6J,KAAK7C,EAAE,KAAKzD,GAAGvD,KAAK6J,KAAK7C,EAAE,KAAK4oB,GAAG5vB,KAAK6J,KAAK7C,EAAE,KAAKqD,EAAE,OAAOrD,EAAEhH,KAAKi6J,KAAK,OAAO,CAAC,EAAErqI,EAAEupB,UAAUihH,SAAS,SAASxsJ,GAAG,GAAG5N,KAAKq6J,YAAYzsJ,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKqJ,MAAMlT,KAAKi6J,KAAKj6J,KAAK+L,MAAM/L,KAAKi6J,KAAKj6J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAE,oEAAoErsB,EAAE+2J,OAAO,SAAS1sJ,EAAEC,GAAG,IAAI,IAAItK,EAAE8G,EAAErD,EAAEgxG,EAAEtoC,EAAEr8D,EAAEqtB,EAAErsB,EAAE,GAAGC,EAAE,EAAEA,EAAE1G,EAAEzH,QAAoE6xG,GAA5Dz0G,EAAEqK,EAAE0hJ,WAAWh7I,OAAkD,EAAEo7D,GAAG,EAAEnsE,IAAI,GAAxD8G,EAAEuD,EAAE0hJ,WAAWh7I,OAA8C,EAAEjB,GAAG,GAAGhJ,IAAI,GAArDrD,EAAE4G,EAAE0hJ,WAAWh7I,OAA2C,EAAEosB,EAAE,GAAG15B,EAAEq4C,MAAMh1C,GAAGgJ,EAAEqtB,EAAE,GAAG2e,MAAMr4C,KAAK05B,EAAE,IAAIrsB,EAAEA,EAAEub,EAAEg0B,OAAOo0D,GAAGpoF,EAAEg0B,OAAO8rB,GAAG9/C,EAAEg0B,OAAOvwC,GAAGuc,EAAEg0B,OAAOljB,GAAG,OAAOrsB,CAAC,EAAE9Q,EAAEg3J,OAAO,SAAS3sJ,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAI0oE,EAAEr8D,EAAEqtB,EAAErsB,EAAE,GAAGC,EAAE,EAAE,IAAI1G,EAAEA,EAAEoF,QAAQ,sBAAsB,IAAIsB,EAAE1G,EAAEzH,QAAoH5C,EAA1GqsB,EAAEviB,QAAQO,EAAEg2C,OAAOtvC,OAA4F,GAAtFo7D,EAAE9/C,EAAEviB,QAAQO,EAAEg2C,OAAOtvC,QAAsE,EAAEjK,GAAG,GAAGqlE,IAAI,GAA5Er8D,EAAEuc,EAAEviB,QAAQO,EAAEg2C,OAAOtvC,QAA4D,EAAEtN,GAAG,EAAEqM,IAAI,GAAjEqtB,EAAE9Q,EAAEviB,QAAQO,EAAEg2C,OAAOtvC,OAAgDD,GAAG6G,OAAOg/H,aAAa32I,GAAG,IAAI8P,IAAIgB,GAAG6G,OAAOg/H,aAAa7vI,IAAI,IAAIq2B,IAAIrsB,GAAG6G,OAAOg/H,aAAalzI,IAAI,OAAOqN,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASzG,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,IAAI5vB,KAAKw6J,eAAe,EAAEx6J,KAAKy6J,iBAAiB,EAAEz6J,KAAK06J,MAAM,EAAE16J,KAAK26J,kBAAkB,KAAK36J,KAAK46J,kBAAkB,IAAI,CAAChrI,EAAEupB,UAAU,CAAC0hH,WAAW,WAAW,OAAO,IAAI,EAAEC,qBAAqB,WAAW,OAAO,IAAI,GAAGjtJ,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAaA,EAAEw3J,MAAM,CAACC,MAAM,OAAOC,SAAS,SAASrtJ,EAAEC,GAAG,OAAOD,CAAC,EAAEstJ,WAAW,SAASttJ,GAAG,OAAOA,CAAC,EAAEutJ,kBAAkB,KAAKC,oBAAoB,MAAM73J,EAAE83J,QAAQztJ,EAAE,UAAU,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAEhiB,EAAE,WAAWvD,EAAE,CAAC,EAAE,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAWwD,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,QAAG,IAAoBD,IAAIA,EAAEzH,OAAO,OAAO,EAAE,IAAI5C,EAAE,WAAWqsB,EAAE0rI,UAAU1tJ,QAAG,IAAoBC,IAAIA,EAAE,GAAG,IAAY6hE,EAAE,EAAE7hE,IAAI,EAAE,IAAI,IAAIwF,EAAE,EAAEqtB,EAAE9yB,EAAEzH,OAAOkN,EAAEqtB,EAAErtB,IAAIq8D,EAAEnsE,EAAEqK,EAAEyF,GAAGzF,EAAE0hJ,WAAWj8I,GAAsBxF,EAAEA,IAAI,EAAXxD,EAAZ,KAAKwD,EAAE6hE,IAAoB,OAAU,EAAH7hE,CAAI,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAG5N,KAAK6J,KAAK,KAAK7J,KAAKmG,OAAO,EAAEnG,KAAK+L,MAAM,EAAE/L,KAAKi6J,KAAK,CAAC,CAAC,IAAI5vJ,EAAEuD,EAAE,WAAWgiB,EAAEupB,UAAU,CAACkhH,YAAY,SAASzsJ,GAAG5N,KAAKu7J,WAAWv7J,KAAK+L,MAAM6B,EAAE,EAAE2tJ,WAAW,SAAS3tJ,GAAG,GAAG5N,KAAKmG,OAAOnG,KAAKi6J,KAAKrsJ,GAAGA,EAAE,EAAE,MAAM,IAAItF,MAAM,sCAAsCtI,KAAKmG,OAAO,mBAAmByH,EAAE,qBAAqB,EAAE4tJ,SAAS,SAAS5tJ,GAAG5N,KAAKu7J,WAAW3tJ,GAAG5N,KAAK+L,MAAM6B,CAAC,EAAEgkB,KAAK,SAAShkB,GAAG5N,KAAKw7J,SAASx7J,KAAK+L,MAAM6B,EAAE,EAAEssJ,OAAO,SAAStsJ,GAAG,EAAE6tJ,QAAQ,SAAS7tJ,GAAG,IAAIC,EAAEtK,EAAE,EAAE,IAAIvD,KAAKq6J,YAAYzsJ,GAAGC,EAAE7N,KAAK+L,MAAM6B,EAAE,EAAEC,GAAG7N,KAAK+L,MAAM8B,IAAItK,GAAGA,GAAG,GAAGvD,KAAKk6J,OAAOrsJ,GAAG,OAAO7N,KAAK+L,OAAO6B,EAAErK,CAAC,EAAEm4J,WAAW,SAAS9tJ,GAAG,OAAOvD,EAAEsxJ,YAAY,SAAS37J,KAAKo6J,SAASxsJ,GAAG,EAAEwsJ,SAAS,SAASxsJ,GAAG,EAAEusJ,qBAAqB,SAASvsJ,GAAG,EAAEguJ,SAAS,WAAW,IAAIhuJ,EAAE5N,KAAKy7J,QAAQ,GAAG,OAAO,IAAIl7I,KAAiB,MAAX3S,GAAG,GAAG,MAAWA,GAAG,GAAG,IAAI,EAAEA,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAGA,GAAG,EAAE,IAAI,GAAGA,IAAI,EAAE,GAAGC,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAaA,EAAEs4J,QAAO,EAAGt4J,EAAEk0I,QAAO,EAAGl0I,EAAEoH,KAAI,EAAGpH,EAAEu4J,eAAc,EAAGv4J,EAAEkd,KAAK,KAAKld,EAAEw4J,YAAY,KAAKx4J,EAAEy4J,mBAAmB,KAAKz4J,EAAEqkH,QAAQ,KAAKrkH,EAAE04J,gBAAgB,KAAK14J,EAAE24J,eAAe,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,SAAStuJ,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAEhiB,EAAE,WAAWrK,EAAE44J,cAAc,SAASvuJ,GAAG,OAAOgiB,EAAEusI,cAAcvuJ,EAAE,EAAErK,EAAE64J,kBAAkB,SAASxuJ,GAAG,OAAOgiB,EAAE+rI,YAAY,aAAa/tJ,EAAE,EAAErK,EAAE84J,kBAAkB,SAASzuJ,GAAG,OAAOgiB,EAAE+rI,YAAY,SAAS/tJ,EAAE,EAAErK,EAAE+4J,YAAY,SAAS1uJ,GAAG,IAAIC,EAAE+hB,EAAE+rI,YAAY,cAAc/tJ,GAAG,OAAOgiB,EAAE2sI,iBAAiB1uJ,EAAE,EAAEtK,EAAEg5J,iBAAiB,SAAS3uJ,GAAG,OAAOgiB,EAAE2sI,iBAAiB3uJ,EAAE,EAAErK,EAAEo4J,YAAY,SAAS/tJ,EAAEC,GAAG,OAAO+hB,EAAE+rI,YAAY/tJ,EAAEC,EAAE,EAAEtK,EAAE+3J,UAAU,SAAS1tJ,GAAG,OAAOgiB,EAAE0rI,UAAU1tJ,EAAE,EAAErK,EAAEi5J,aAAa,SAAS5uJ,GAAG,OAAOgiB,EAAE4sI,aAAa5uJ,EAAE,EAAErK,EAAEk5J,iBAAiB7sI,EAAE6sI,iBAAiBl5J,EAAEm5J,iBAAiB9sI,EAAE8sI,iBAAiBn5J,EAAEo5J,OAAO,SAAS/uJ,GAAG,OAAOgiB,EAAE+sI,OAAO/uJ,EAAE,EAAErK,EAAEq5J,gBAAgB,SAAShvJ,GAAG,OAAOgiB,EAAEgtI,gBAAgBhvJ,EAAE,EAAErK,EAAEs5J,SAAS,SAASjvJ,GAAG,OAAOgiB,EAAEitI,SAASjvJ,EAAE,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAE,oBAAoBktI,YAAY,oBAAoBC,aAAa,oBAAoBC,YAAY3yJ,EAAEuD,EAAE,QAAQrK,EAAE63J,oBAAoBxrI,EAAE,aAAa,QAAQrsB,EAAE43J,kBAAkBvrI,EAAE,aAAa,QAAQrsB,EAAEy3J,MAAM,OAAOz3J,EAAE03J,SAAS,SAASrtJ,EAAEC,GAAG,OAAOxD,EAAE4yJ,WAAWrvJ,EAAE,CAACsvJ,MAAMrvJ,EAAEqvJ,QAAQ,GAAG,EAAE35J,EAAE23J,WAAW,SAASttJ,GAAG,OAAOvD,EAAE8yJ,WAAWvvJ,EAAE,CAAC,EAAE,CAACwvJ,KAAK,KAAK,GAAG,CAAC,SAASxvJ,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,EAAEC,GAAG,OAAO7N,gBAAgB4vB,GAAG5vB,KAAKs2I,MAAM,CAAC,EAAEt2I,KAAK4nH,QAAQ,KAAK5nH,KAAKs7F,KAAK,GAAG1tF,GAAG5N,KAAKqyB,KAAKzkB,EAAEC,QAAQ7N,KAAKq0B,MAAM,WAAW,IAAIzmB,EAAE,IAAIgiB,EAAE,IAAI,IAAI/hB,KAAK7N,KAAK,mBAAmBA,KAAK6N,KAAKD,EAAEC,GAAG7N,KAAK6N,IAAI,OAAOD,CAAC,IAAI,IAAIgiB,EAAEhiB,EAAEC,EAAE,CAAC,IAAIxD,EAAEuD,EAAE,YAAYgiB,EAAEupB,UAAUvrC,EAAE,YAAYgiB,EAAEupB,UAAU9mB,KAAKzkB,EAAE,UAAUgiB,EAAEytI,QAAQzvJ,EAAE,aAAagiB,EAAExrB,SAASwJ,EAAE,cAAcgiB,EAAE0tI,MAAM1vJ,EAAE,2BAA2BgiB,EAAEisI,OAAO,CAACvB,OAAO,SAAS1sJ,GAAG,OAAOvD,EAAEiwJ,OAAO1sJ,EAAE,EAAE2sJ,OAAO,SAAS3sJ,GAAG,OAAOvD,EAAEkwJ,OAAO3sJ,EAAE,GAAGgiB,EAAE2tI,aAAa3vJ,EAAE,kBAAkBC,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,WAAW,EAAE,iBAAiB,EAAE,aAAa,EAAE,0BAA0B,EAAE,SAAS,GAAG,WAAW,GAAG,YAAY,KAAK,GAAG,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAEhiB,EAAE,YAAYvD,EAAEuD,EAAE,UAAU5G,EAAE4G,EAAE,WAAWoqG,EAAEpqG,EAAE,gBAAgBC,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,IAAItK,EAAEmsE,EAAEr8D,EAAEqtB,EAAE,KAAI7yB,EAAE7G,EAAEtD,OAAOmK,GAAG,CAAC,EAAE,CAACguJ,QAAO,EAAG2B,YAAW,EAAGC,uBAAsB,EAAG3B,eAAc,EAAG4B,eAAerzJ,EAAEszJ,cAAe9B,SAASjuJ,EAAEgiB,EAAE2qI,OAAO3sJ,IAAiBrK,GAAbmsE,EAAE,IAAIsoC,EAAEpqG,EAAEC,IAAOyoI,MAAMjjI,EAAE,EAAEA,EAAE9P,EAAE4C,OAAOkN,IAAIqtB,EAAEn9B,EAAE8P,GAAGrT,KAAKsxE,KAAK5wC,EAAEk9H,YAAYl9H,EAAEm9H,aAAa,CAACpmB,QAAO,EAAGgmB,uBAAsB,EAAGh9I,KAAKigB,EAAEjgB,KAAK9V,IAAI+1B,EAAE/1B,IAAIi9G,QAAQlnF,EAAEo9H,eAAe33J,OAAOu6B,EAAEo9H,eAAe,KAAK7B,gBAAgBv7H,EAAEu7H,gBAAgBC,eAAex7H,EAAEw7H,eAAeJ,cAAcjuJ,EAAEiuJ,gBAAgB,OAAOpsF,EAAEquF,WAAW53J,SAASnG,KAAK4nH,QAAQl4C,EAAEquF,YAAY/9J,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,GAAG,UAAU,GAAG,eAAe,KAAK,GAAG,CAAC,SAAS4N,EAAEC,EAAEtK,IAAG,SAAUqK,GAAG,aAAaC,EAAEnO,QAAQ,SAASmO,EAAEtK,GAAG,OAAO,IAAIqK,EAAEC,EAAEtK,EAAE,EAAEsK,EAAEnO,QAAQ2iB,KAAK,SAASxU,GAAG,OAAOD,EAAEowJ,SAASnwJ,EAAE,CAAE,GAAEurC,KAAKp5C,KAAK,oBAAoBi+J,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAASrwJ,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAG5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAKi6J,KAAK,CAAC,CAAC,IAAI5vJ,EAAEuD,EAAE,sBAAsBgiB,EAAEupB,UAAU,IAAI9uC,EAAEulB,EAAEupB,UAAUihH,SAAS,SAASxsJ,GAAG5N,KAAKq6J,YAAYzsJ,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKqJ,MAAMlT,KAAKi6J,KAAKj6J,KAAK+L,MAAM/L,KAAKi6J,KAAKj6J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,qBAAqB,KAAK,GAAG,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAEhiB,EAAE,aAAavD,EAAEuD,EAAE,WAAW5G,EAAE4G,EAAE,WAAWoqG,EAAEpqG,EAAE,eAAe8hE,EAAE9hE,EAAE,cAAcyF,EAAEzF,EAAE,YAAY8yB,EAAE9yB,EAAE,kBAAkByG,EAAEzG,EAAE,sBAAsB0G,EAAE1G,EAAE,gBAAgBwuH,EAAExuH,EAAE,UAAUwxC,EAAExxC,EAAE,kBAAkByX,EAAEzX,EAAE,sBAAsBkU,EAAE,SAASlU,GAAG,GAAGA,EAAEswJ,iBAAiB7pJ,IAAIzG,EAAEswJ,MAAMtwJ,EAAEswJ,MAAMrD,aAAajtJ,EAAEzL,QAAQs1I,QAAO,EAAG7pI,EAAEzL,QAAQ05J,QAAO,EAAG,eAAexxJ,EAAEixJ,UAAU1tJ,EAAEswJ,QAAQ,CAAC,IAAIrwJ,EAAED,EAAEswJ,MAAMtwJ,EAAEswJ,MAAM,IAAIpB,WAAWjvJ,EAAE1H,QAAQ,IAAI0H,EAAE1H,QAAQyH,EAAEswJ,MAAMrkJ,IAAIhM,EAAE,EAAE,CAAC,OAAOD,EAAEswJ,KAAK,EAAE/2I,EAAE,SAASvZ,GAAG,IAAIC,EAAEiU,EAAElU,GAAoB,MAAM,WAArBvD,EAAEixJ,UAAUztJ,IAAuBD,EAAEzL,QAAQs1I,QAAQ7nH,EAAEuuI,WAAW7pJ,EAAEzG,EAAE,SAASD,EAAEwwJ,WAAWvwJ,CAAC,EAAE+B,EAAE,SAAShC,GAAG,IAAIC,EAAEiU,EAAE9hB,MAAM,OAAO,MAAO6N,EAAyB,IAAI7N,KAAKmC,QAAQ05J,SAAShuJ,EAAEwF,EAAEknJ,OAAO1sJ,IAAIA,EAAED,GAAG5N,KAAKmC,QAAQs1I,OAAO4mB,EAAEV,WAAW9vJ,GAAGxD,EAAEsxJ,YAAY,SAAS9tJ,GAAGD,GAAG5N,KAAKmC,QAAQs1I,SAAS5pI,EAAExD,EAAEsxJ,YAAY,SAAS0C,EAAEC,WAAWzwJ,KAAKA,EAAE,EAAEjB,EAAE,SAASgB,EAAEC,EAAEtK,GAAGvD,KAAKmH,KAAKyG,EAAE5N,KAAK2K,IAAIpH,EAAEoH,IAAI3K,KAAKygB,KAAKld,EAAEkd,KAAKzgB,KAAK4nH,QAAQrkH,EAAEqkH,QAAQ5nH,KAAKi8J,gBAAgB14J,EAAE04J,gBAAgBj8J,KAAKk8J,eAAe34J,EAAE24J,eAAel8J,KAAKk+J,MAAMrwJ,EAAE7N,KAAKmC,QAAQoB,EAAEvD,KAAKu+J,iBAAiB,CAAC5zJ,IAAIpH,EAAEoH,IAAI8V,KAAKld,EAAEkd,KAAK,EAAE7T,EAAEusC,UAAU,CAAC2iG,OAAO,WAAW,OAAOlsI,EAAEwpC,KAAKp5C,MAAK,EAAG,EAAEo+J,SAAS,WAAW,OAAOxuJ,EAAEwpC,KAAKp5C,MAAK,EAAG,EAAEw+J,aAAa,WAAW,IAAI5wJ,EAAEuZ,EAAEnnB,MAAM,OAAOqK,EAAEsxJ,YAAY,aAAa/tJ,EAAE,EAAE6wJ,aAAa,WAAW,IAAI7wJ,EAAEuZ,EAAEnnB,MAAM,OAAOqK,EAAEsxJ,YAAY,aAAa/tJ,EAAE,EAAE8wJ,cAAc,WAAW,OAAO1+J,KAAKy+J,eAAeE,MAAM,GAAG,IAAI1iI,EAAE,SAASruB,EAAEC,GAAG,IAAItK,EAAEqsB,EAAE,GAAG,IAAIrsB,EAAE,EAAEA,EAAEsK,EAAEtK,IAAIqsB,GAAG1U,OAAOg/H,aAAa,IAAItsI,GAAGA,KAAK,EAAE,OAAOgiB,CAAC,EAA6Mxc,EAAE,SAASxF,EAAEC,EAAEtK,GAAG,IAAIqsB,EAAE5oB,EAAEqD,EAAEixJ,UAAUztJ,GAAG,GAAU,iBAAPtK,EAArP,SAASqK,GAAG,OAA0B,KAAnBA,EAAEA,GAAG,CAAC,GAAIiuJ,QAAa,OAAOjuJ,EAAE6pI,aAAQ,IAAS7pI,EAAE6pI,SAAS7pI,EAAE6pI,QAAO,IAAI7pI,EAAEvD,EAAE3G,OAAOkK,EAAE8hE,IAAKjvD,KAAK7S,EAAE6S,MAAM,IAAIF,KAAK,OAAO3S,EAAEmuJ,cAAcnuJ,EAAEmuJ,YAAYnuJ,EAAEmuJ,YAAYp4G,eAAe/1C,CAAC,CAAgDuoE,CAAE5yE,IAAsB04J,kBAAkB14J,EAAE04J,gBAAgBp3I,SAASthB,EAAE04J,gBAAgB,IAAI14J,EAAE04J,iBAAiB,MAAM14J,EAAE04J,kBAAkB14J,EAAEoH,KAAI,GAAIpH,EAAE24J,gBAAgB,GAAG34J,EAAE24J,iBAAiB34J,EAAEoH,KAAI,GAAIpH,EAAEoH,MAAMiD,EAAEV,EAAEU,IAAIrK,EAAEu4J,gBAAgBlsI,EAAE2nE,EAAE3pF,KAAK0oD,EAAEld,KAAKp5C,KAAK4vB,GAAE,GAAIrsB,EAAEoH,KAAFpH,MAAcsK,EAAyBtK,EAAEs4J,QAAO,EAAGt4J,EAAEk0I,QAAO,EAAG5pI,EAAE,KAAK7G,EAAE,UAAU,GAAG,WAAWA,EAAEzD,EAAEk0I,SAASl0I,EAAEs4J,SAAkC,IAA1Bt4J,EAAEk6J,wBAA6B5vJ,EAAExD,EAAE8xJ,cAActuJ,QAAQ,CAAC,GAAGtK,EAAEs4J,QAAO,EAAGt4J,EAAEk0I,QAAO,IAAKzwI,GAAG6G,aAAawG,GAAG,MAAM,IAAI/L,MAAM,gBAAgBsF,EAAE,mCAAmC,gBAAgB5G,IAAI6G,EAAExD,EAAEsxJ,YAAY,aAAa9tJ,GAAG,CAAC,IAAImqG,EAAE,IAAIprG,EAAEgB,EAAEC,EAAEtK,GAAG,OAAOvD,KAAKs2I,MAAM1oI,GAAGoqG,EAAEA,CAAC,EAAEzgB,EAAE,SAAS3pF,GAAG,KAAKA,EAAEsF,OAAO,KAAKtF,EAAEA,EAAEgpB,UAAU,EAAEhpB,EAAEzH,OAAO,IAAI,IAAI0H,EAAED,EAAEsqJ,YAAY,KAAK,OAAOrqJ,EAAE,EAAED,EAAEgpB,UAAU,EAAE/oB,GAAG,EAAE,EAAEX,EAAE,SAASU,GAAG,MAAM,KAAKA,EAAEsF,OAAO,KAAKtF,GAAG,KAAKA,CAAC,EAAE0oD,EAAE,SAAS1oD,EAAEC,GAAG,OAAOA,OAAE,IAAoBA,GAAGA,EAAED,EAAEV,EAAEU,GAAG5N,KAAKs2I,MAAM1oI,IAAIwF,EAAEgmC,KAAKp5C,KAAK4N,EAAE,KAAK,CAACjD,KAAI,EAAGmxJ,cAAcjuJ,IAAI7N,KAAKs2I,MAAM1oI,EAAE,EAAEgxJ,EAAE,SAAShxJ,EAAEC,EAAEtK,GAAG,IAAIqsB,EAAEooF,EAAE,IAAI3jG,EAAE,OAAOzG,EAAEswJ,iBAAiB7pJ,GAAG2jG,EAAEyiD,iBAAiB7sJ,EAAEswJ,MAAMzD,iBAAiBziD,EAAE0iD,MAAM9sJ,EAAEswJ,MAAMxD,MAAM,IAAI1iD,EAAEyiD,kBAAkB7sJ,EAAEjD,KAAKkD,EAAE6yB,EAAEq6H,MAAM/iD,EAAE4iD,kBAAkB,GAAG5iD,EAAE0iD,MAAM,GAAG9sJ,EAAEswJ,MAAMvD,oBAAoB9sJ,EAAEmtJ,MAAMhjD,EAAE4iD,kBAAkBhtJ,EAAEswJ,MAAMpD,wBAAwBlrI,EAAEhiB,EAAEswJ,MAAMrD,aAAa7iD,EAAE4iD,kBAAkB/sJ,EAAEotJ,SAAS5wJ,EAAEsxJ,YAAY9tJ,EAAEstJ,kBAAkBvrI,GAAGrsB,OAAMqsB,EAAEzI,EAAEvZ,KAAM,IAAIgiB,EAAEzpB,SAASyH,EAAEjD,MAAMkD,EAAE6yB,EAAEq6H,MAAMnrI,EAAE,IAAIooF,EAAEyiD,iBAAiB7qI,EAAEzpB,OAAO6xG,EAAE0iD,MAAM1zJ,EAAE4oB,GAAGooF,EAAE4iD,kBAAkB/sJ,EAAEotJ,SAAS5wJ,EAAEsxJ,YAAY9tJ,EAAEstJ,kBAAkBvrI,GAAGrsB,IAAIy0G,EAAEwiD,eAAexiD,EAAE4iD,kBAAkBz0J,OAAO6xG,EAAE2iD,kBAAkB9sJ,EAAEmtJ,MAAMhjD,CAAC,EAAuG6mD,EAAE,SAASjxJ,EAAEC,EAAEtK,EAAEqsB,EAAE8/C,EAAEr8D,GAAG,IAAIqtB,EAAErsB,EAAEC,EAAE8qC,EAAE/5B,GAAG9hB,EAAEq3J,kBAAkBvnJ,IAAI+oH,EAAEkiC,YAAYx8I,EAAEzX,EAAEsxJ,YAAY,SAAStoJ,EAAExF,EAAE1G,OAAOggB,EAAE9c,EAAEsxJ,YAAY,SAASv/B,EAAEkiC,WAAWzwJ,EAAE1G,OAAOyI,EAAE/B,EAAE+5G,SAAS,GAAGh7G,EAAEvC,EAAEsxJ,YAAY,SAAStoJ,EAAEzD,IAAIumE,EAAE9rE,EAAEsxJ,YAAY,SAASv/B,EAAEkiC,WAAW1uJ,IAAIwD,EAAE+T,EAAEhhB,SAAS0H,EAAE1G,KAAKhB,OAAOoxF,EAAEphB,EAAEhwE,SAASyJ,EAAEzJ,OAAO+G,EAAEW,EAAE1L,QAAQm0D,EAAE,GAAGsoG,EAAE,GAAGC,EAAE,GAAGvqJ,EAAEzG,EAAE0wJ,iBAAiB5zJ,MAAMkD,EAAElD,IAAIkD,EAAElD,IAAIuC,EAAEvC,IAAIy0C,EAAEvxC,EAAE0wJ,iBAAiB99I,OAAO5S,EAAE4S,KAAK5S,EAAE4S,KAAKvT,EAAEuT,KAAK,IAAI49I,EAAE,EAAES,EAAE,EAAExqJ,IAAI+pJ,GAAG,IAAI,SAAS3uF,GAAGovF,EAAE,IAAIT,GAA/iB,SAASzwJ,EAAEC,GAAG,IAAItK,EAAEqK,EAAE,OAAOA,IAAIrK,EAAEsK,EAAE,MAAM,QAAQ,MAAMtK,IAAI,EAAE,CAAmfw7J,CAAElxJ,EAAEouJ,gBAAgB3nJ,KAAKwqJ,EAAE,GAAGT,GAA7gB,SAASzwJ,EAAEC,GAAG,OAAO,IAAID,GAAG,EAAE,CAAkfoxJ,CAAEnxJ,EAAEquJ,iBAAmBx7H,EAAE0e,EAAExE,WAAWla,IAAI,EAAEA,GAAG0e,EAAEtE,aAAapa,IAAI,EAAEA,GAAG0e,EAAEpE,aAAa,EAAE3mC,EAAE+qC,EAAEtK,cAAc,KAAKzgC,IAAI,EAAEA,GAAG+qC,EAAEpK,WAAW,EAAE3gC,IAAI,EAAEA,GAAG+qC,EAAElK,UAAU9hC,IAAIwrJ,EAAE3iI,EAAE,EAAE,GAAGA,EAAEj1B,EAAE8a,GAAG,GAAGqF,EAAEmvC,GAAG,KAAKr6B,EAAE2iI,EAAEz4J,OAAO,GAAGy4J,GAAGrnE,IAAIsnE,EAAE5iI,EAAE,EAAE,GAAGA,EAAEj8B,KAAK06J,MAAM9tJ,GAAG,GAAGupE,EAAE7f,GAAG,KAAKr6B,EAAE4iI,EAAE14J,OAAO,GAAG04J,GAAG,IAAI36J,EAAE,GAAuS,OAApSA,GAAG,OAAOA,GAAGmhB,IAAIjS,IAAImkF,EAAE,OAAO,OAAOrzF,GAAGX,EAAEo3J,kBAAkBz2J,GAAG+3B,EAAEyE,EAAE,GAAGx8B,GAAG+3B,EAAE5nB,EAAE,GAAGnQ,GAAG+3B,EAAE14B,EAAEm3J,MAAM,GAAGx2J,GAAG+3B,EAAE14B,EAAEi3J,eAAe,GAAGt2J,GAAG+3B,EAAE14B,EAAEk3J,iBAAiB,GAAGv2J,GAAG+3B,EAAEna,EAAE3b,OAAO,GAAGjC,GAAG+3B,EAAEq6B,EAAEnwD,OAAO,GAAuH,CAAC84J,WAA/GjnD,EAAEknD,kBAAkBh7J,EAAE4d,EAAEw0C,EAAoG6oG,UAAhGnnD,EAAEonD,oBAAoBnjI,EAAE6iI,EAAE,GAAG56J,EAAE+3B,EAAErvB,EAAEzG,OAAO,GAAG,WAAW81B,EAAEoiI,EAAE,GAAGpiI,EAAErM,EAAE,GAAG9N,EAAEw0C,EAAE1pD,EAAkCyyJ,iBAAiB97J,EAAE,EAAE86J,EAAE,CAAChsI,KAAK,SAASzkB,EAAEC,GAAG,MAAM,IAAIvF,MAAM,mEAAmE,EAAEQ,OAAO,SAAS8E,GAAG,IAAIC,EAAEtK,EAAEqsB,EAAE5oB,EAAEgxG,EAAE,GAAG,IAAInqG,KAAK7N,KAAKs2I,MAAMt2I,KAAKs2I,MAAMtoE,eAAengE,KAAK+hB,EAAE5vB,KAAKs2I,MAAMzoI,GAAG7G,EAAE,IAAI4F,EAAEgjB,EAAEzoB,KAAKyoB,EAAEsuI,MAAM7zJ,EAAE3G,OAAOksB,EAAEztB,UAAUoB,EAAEsK,EAAEqF,MAAMlT,KAAKs7F,KAAKn1F,OAAO0H,EAAE1H,QAAQ0H,EAAEqF,MAAM,EAAElT,KAAKs7F,KAAKn1F,UAAUnG,KAAKs7F,MAAM1tF,EAAErK,EAAEyD,IAAIgxG,EAAE1zG,KAAK0C,IAAI,OAAOgxG,CAAC,EAAE1mC,KAAK,SAAS1jE,EAAEC,EAAEtK,GAAG,GAAG,IAAIwP,UAAU5M,OAAO,CAAC,GAAGkE,EAAEwyJ,SAASjvJ,GAAG,CAAC,IAAIgiB,EAAEhiB,EAAE,OAAO5N,KAAK8I,QAAO,SAAS8E,EAAEC,GAAG,OAAOA,EAAElD,KAAKilB,EAAEvN,KAAKzU,EAAE,GAAE,CAAC,OAAO5N,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAEoH,KAAKkD,IAAID,CAAC,IAAG,IAAI,IAAI,CAAC,OAAOA,EAAE5N,KAAKs7F,KAAK1tF,EAAEwF,EAAEgmC,KAAKp5C,KAAK4N,EAAEC,EAAEtK,GAAGvD,IAAI,EAAEs/J,OAAO,SAAS1xJ,GAAG,IAAIA,EAAE,OAAO5N,KAAK,GAAGqK,EAAEwyJ,SAASjvJ,GAAG,OAAO5N,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAEoH,KAAKiD,EAAEyU,KAAKxU,EAAE,IAAG,IAAIA,EAAE7N,KAAKs7F,KAAK1tF,EAAErK,EAAE+yD,EAAEld,KAAKp5C,KAAK6N,GAAG+hB,EAAE5vB,KAAKq0B,QAAQ,OAAOzE,EAAE0rE,KAAK/3F,EAAE4D,KAAKyoB,CAAC,EAAE/U,OAAO,SAASjN,GAAGA,EAAE5N,KAAKs7F,KAAK1tF,EAAE,IAAIC,EAAE7N,KAAKs2I,MAAM1oI,GAAG,GAAGC,IAAI,KAAKD,EAAEsF,OAAO,KAAKtF,GAAG,KAAKC,EAAE7N,KAAKs2I,MAAM1oI,IAAIC,IAAIA,EAAElD,WAAW3K,KAAKs2I,MAAM1oI,QAAQ,IAAI,IAAIrK,EAAEvD,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAE4D,KAAK+L,MAAM,EAAEtF,EAAEzH,UAAUyH,CAAC,IAAGgiB,EAAE,EAAEA,EAAErsB,EAAE4C,OAAOypB,WAAW5vB,KAAKs2I,MAAM/yI,EAAEqsB,GAAGzoB,MAAM,OAAOnH,IAAI,EAAEwxH,SAAS,SAAS5jH,GAAGA,EAAEvD,EAAE3G,OAAOkK,GAAG,CAAC,EAAE,CAACiuJ,QAAO,EAAGE,YAAY,QAAQC,mBAAmB,KAAKp6J,KAAK,SAAS29J,SAAS,MAAM33C,QAAQ,KAAK6J,SAAS,kBAAkB+tC,eAAepjC,EAAEkiC,aAAaj0J,EAAEmyJ,aAAa5uJ,EAAEhM,MAAM,WAAWgM,EAAE2xJ,UAAU,YAAY3xJ,EAAE2xJ,UAAU,UAAU3xJ,EAAE2xJ,UAAU,UAAU3xJ,EAAE2xJ,WAAW3xJ,EAAE2xJ,SAAS,QAAQ,UAAU3xJ,EAAE2xJ,WAAW3xJ,EAAE2xJ,SAAS,OAAO,IAAI1xJ,EAAEtK,EAAEqsB,EAAE,GAAG5oB,EAAE,EAAE0oE,EAAE,EAAEr7D,EAAEhK,EAAEsxJ,YAAY,SAAS/tJ,EAAE4xJ,eAAe5xJ,EAAEg6G,SAAS5nH,KAAK4nH,SAAS,KAAK,IAAI,IAAItzG,KAAKtU,KAAKs2I,MAAM,GAAGt2I,KAAKs2I,MAAMtoE,eAAe15D,GAAG,CAAC,IAAIwN,EAAE9hB,KAAKs2I,MAAMhiI,GAAG6S,EAAErF,EAAE3f,QAAQ45J,aAAanuJ,EAAEmuJ,YAAYp4G,cAAc/zC,EAAE8wB,EAAEvZ,GAAG,IAAIvX,EAAE,MAAM,IAAItH,MAAM6e,EAAE,wCAAwC,IAAIva,EAAEkV,EAAE3f,QAAQ65J,oBAAoBpuJ,EAAEouJ,oBAAoB,CAAC,EAAE7lF,EAAEyoF,EAAExlH,KAAKp5C,KAAK8hB,EAAElS,EAAEhD,GAAGwG,EAAEyrJ,EAAEzlH,KAAKp5C,KAAKsU,EAAEwN,EAAEq0D,EAAEnvE,EAAE4G,EAAE2xJ,SAAS3xJ,EAAE4xJ,gBAAgBx4J,GAAGoM,EAAE6rJ,WAAW94J,OAAOgwE,EAAEqkF,eAAe9qF,GAAGt8D,EAAE+rJ,UAAUh5J,OAAOypB,EAAEtrB,KAAK8O,EAAE,CAAC,IAAImkF,EAAKA,EAAEygB,EAAEynD,sBAAsB,WAAWxjI,EAAErM,EAAEzpB,OAAO,GAAG81B,EAAErM,EAAEzpB,OAAO,GAAG81B,EAAEyzC,EAAE,GAAGzzC,EAAEj1B,EAAE,GAAGi1B,EAAE5nB,EAAElO,OAAO,GAAGkO,EAAE,IAAInH,EAAEU,EAAEhM,KAAKuW,cAAc,IAAItK,EAAE,eAAeX,GAAG,gBAAgBA,GAAG,SAASA,GAAG,eAAeA,EAAE,IAAImY,EAAEre,EAAE0oE,EAAE6nB,EAAEpxF,QAAQ,IAAIi5C,EAAEp4C,EAAE0oE,EAAE6nB,EAAEpxF,QAAQ5C,EAAE,EAAEA,EAAEqsB,EAAEzpB,OAAO5C,IAAIsK,EAAE6xJ,OAAO9vI,EAAErsB,GAAG07J,YAAYpxJ,EAAE6xJ,OAAO9vI,EAAErsB,GAAG87J,iBAAiBzE,mBAAmB,IAAIr3J,EAAE,EAAEA,EAAEqsB,EAAEzpB,OAAO5C,IAAIsK,EAAE6xJ,OAAO9vI,EAAErsB,GAAG47J,WAAWtxJ,EAAE6xJ,OAAOnoE,GAAG,IAAIjhC,EAAEzoD,EAAE8xJ,WAAW,OAAO/xJ,EAAEhM,KAAKuW,eAAe,IAAI,aAAa,IAAI,cAAc,IAAI,aAAa,OAAO9N,EAAEsxJ,YAAY/tJ,EAAEhM,KAAKuW,cAAcm+C,GAAG,IAAI,OAAO,OAAOjsD,EAAEkyJ,iBAAiBlyJ,EAAEsxJ,YAAY,cAAcrlG,GAAG1oD,EAAE6jH,UAAU,IAAI,SAAS,OAAO7jH,EAAEiuJ,OAAOxoJ,EAAEinJ,OAAOhkG,GAAGA,EAAE,QAAQ,OAAOA,EAAE,EAAEokG,MAAM,SAAS9sJ,EAAEC,GAAG,OAAO7G,EAAE4G,EAAEC,EAAE,EAAEywJ,WAAW,SAAS1wJ,GAAG,OAAOvD,EAAEsxJ,YAAY,SAASv/B,EAAEkiC,WAAW1wJ,GAAG,EAAE+vJ,WAAW,SAAS/vJ,GAAG,OAAOwuH,EAAEuhC,WAAW/vJ,EAAE,GAAGC,EAAEnO,QAAQ2+J,CAAC,EAAE,CAAC,WAAW,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,UAAU,EAAE,aAAa,EAAE,eAAe,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,SAAS,GAAG,UAAU,KAAK,GAAG,CAAC,SAASzwJ,EAAEC,EAAEtK,GAAG,aAAaA,EAAE27J,kBAAkB,OAAO37J,EAAE67J,oBAAoB,OAAO77J,EAAEk8J,sBAAsB,OAAOl8J,EAAEq8J,gCAAgC,OAAOr8J,EAAEs8J,4BAA4B,OAAOt8J,EAAEu8J,gBAAgB,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAASlyJ,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,EAAEC,GAAG7N,KAAK6J,KAAK+D,EAAEC,IAAI7N,KAAK6J,KAAK7C,EAAEm1J,cAAcn8J,KAAK6J,OAAO7J,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAKi6J,KAAK,CAAC,CAAC,IAAI5vJ,EAAEuD,EAAE,gBAAgB5G,EAAE4G,EAAE,WAAWgiB,EAAEupB,UAAU,IAAI9uC,EAAEulB,EAAEupB,UAAU+gH,OAAO,SAAStsJ,GAAG,OAAO5N,KAAK6J,KAAKylJ,WAAWtvJ,KAAKi6J,KAAKrsJ,EAAE,EAAEgiB,EAAEupB,UAAUghH,qBAAqB,SAASvsJ,GAAG,OAAO5N,KAAK6J,KAAKquJ,YAAYtqJ,GAAG5N,KAAKi6J,IAAI,EAAErqI,EAAEupB,UAAUihH,SAAS,SAASxsJ,GAAG5N,KAAKq6J,YAAYzsJ,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKqJ,MAAMlT,KAAKi6J,KAAKj6J,KAAK+L,MAAM/L,KAAKi6J,KAAKj6J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,eAAe,EAAE,UAAU,KAAK,GAAG,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAEhiB,EAAE,WAAWvD,EAAE,WAAWrK,KAAK6J,KAAK,EAAE,EAAEQ,EAAE8uC,UAAU,CAACumH,OAAO,SAAS9xJ,GAAGA,EAAEgiB,EAAE+rI,YAAY,SAAS/tJ,GAAG5N,KAAK6J,KAAKvF,KAAKsJ,EAAE,EAAE+xJ,SAAS,WAAW,OAAO3/J,KAAK6J,KAAKyE,KAAK,GAAG,GAAGT,EAAEnO,QAAQ2K,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,IAAG,SAAUqK,GAAG,aAAa,GAAGrK,EAAEs4J,QAAO,EAAGt4J,EAAEy2I,OAAM,EAAGz2I,EAAEu/C,QAAO,EAAGv/C,EAAEw8J,YAAY,oBAAoBC,aAAa,oBAAoBlD,WAAWv5J,EAAE46J,gBAAW,IAAoBvwJ,EAAErK,EAAE08J,WAAW,oBAAoBnD,WAAW,oBAAoBkD,YAAYz8J,EAAEwiG,MAAK,MAAO,CAAC,IAAIl4F,EAAE,IAAImyJ,YAAY,GAAG,IAAIz8J,EAAEwiG,KAAK,IAAI,IAAIm6D,KAAK,CAACryJ,GAAG,CAACjM,KAAK,oBAAoB2gF,IAAsM,CAAjM,MAAM3yD,GAAG,IAAI,IAAgG5oB,EAAE,IAA5FgS,OAAOmnJ,aAAannJ,OAAOonJ,mBAAmBpnJ,OAAOqnJ,gBAAgBrnJ,OAAOsnJ,eAAsBt5J,EAAE04J,OAAO7xJ,GAAGtK,EAAEwiG,KAAK,IAAI/+F,EAAEu5J,QAAQ,mBAAmBh+E,IAAuB,CAAlB,MAAM3yD,GAAGrsB,EAAEwiG,MAAK,CAAE,CAAC,CAAC,CAAE,GAAE3sD,KAAKp5C,KAAK,oBAAoBi+J,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAASrwJ,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAGA,IAAI5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAKi6J,KAAK,EAAE,CAAC,IAAI5vJ,EAAEuD,EAAE,iBAAiBgiB,EAAEupB,UAAU,IAAI9uC,EAAEulB,EAAEupB,UAAUihH,SAAS,SAASxsJ,GAAG,GAAG5N,KAAKq6J,YAAYzsJ,GAAG,IAAIA,EAAE,OAAO,IAAIkvJ,WAAW,GAAG,IAAIjvJ,EAAE7N,KAAK6J,KAAK22J,SAASxgK,KAAKi6J,KAAKj6J,KAAK+L,MAAM/L,KAAKi6J,KAAKj6J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,gBAAgB,IAAI,GAAG,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAEhiB,EAAE,WAAWvD,EAAE,SAASuD,GAAG5N,KAAK6J,KAAK,IAAIizJ,WAAWlvJ,GAAG5N,KAAK+L,MAAM,CAAC,EAAE1B,EAAE8uC,UAAU,CAACumH,OAAO,SAAS9xJ,GAAG,IAAIA,EAAEzH,SAASyH,EAAEgiB,EAAE+rI,YAAY,aAAa/tJ,GAAG5N,KAAK6J,KAAKgQ,IAAIjM,EAAE5N,KAAK+L,OAAO/L,KAAK+L,OAAO6B,EAAEzH,OAAO,EAAEw5J,SAAS,WAAW,OAAO3/J,KAAK6J,IAAI,GAAGgE,EAAEnO,QAAQ2K,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,IAAI,IAAIqsB,EAAEhiB,EAAE,WAAWvD,EAAEuD,EAAE,aAAa5G,EAAE4G,EAAE,gBAAgBoqG,EAAE,IAAI7qG,MAAM,KAAKuiE,EAAE,EAAEA,EAAE,IAAIA,IAAIsoC,EAAEtoC,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAEsoC,EAAE,KAAKA,EAAE,KAAK,EAAE,IAAumBt3E,EAAE,SAAS9yB,EAAEC,GAAG,IAAItK,EAAE,KAAIsK,EAAEA,GAAGD,EAAEzH,QAASyH,EAAEzH,SAAS0H,EAAED,EAAEzH,QAAQ5C,EAAEsK,EAAE,EAAEtK,GAAG,GAAG,MAAO,IAAIqK,EAAErK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANsK,EAAUtK,EAAEy0G,EAAEpqG,EAAErK,IAAIsK,EAAEtK,EAAEsK,CAAC,EAAEwG,EAAE,SAASzG,GAAG,IAAIC,EAAEtK,EAAE8G,EAAErD,EAAE0oE,EAAE9hE,EAAEzH,OAAOkN,EAAE,IAAIlG,MAAM,EAAEuiE,GAAG,IAAInsE,EAAE,EAAEsK,EAAE,EAAEA,EAAE6hE,GAAG,IAAGrlE,EAAEuD,EAAEC,MAAO,IAAIwF,EAAE9P,KAAK8G,OAAO,IAAGrD,EAAEgxG,EAAE3tG,IAAK,EAAEgJ,EAAE9P,KAAK,MAAMsK,GAAG7G,EAAE,MAAM,CAAC,IAAIqD,GAAG,IAAIrD,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAG6G,EAAE6hE,GAAGrlE,EAAEA,GAAG,EAAE,GAAGuD,EAAEC,KAAK7G,IAAIA,EAAE,EAAEqM,EAAE9P,KAAK,MAAM8G,EAAE,MAAMgJ,EAAE9P,KAAK8G,GAAGA,GAAG,MAAMgJ,EAAE9P,KAAK,MAAM8G,GAAG,GAAG,KAAKgJ,EAAE9P,KAAK,MAAM,KAAK8G,EAAE,CAAC,OAAOgJ,EAAElN,SAAS5C,IAAI8P,EAAEmtJ,SAASntJ,EAAEA,EAAEmtJ,SAAS,EAAEj9J,GAAG8P,EAAElN,OAAO5C,GAAGqsB,EAAE6wI,kBAAkBptJ,EAAE,EAAE9P,EAAE+6J,WAAW,SAAS1wJ,GAAG,OAAOvD,EAAE8zJ,WAAWn3J,EAAE4G,EAAE,SAAnpC,SAASA,GAAG,IAAIC,EAAEtK,EAAEqsB,EAAE5oB,EAAEgxG,EAAEtoC,EAAE9hE,EAAEzH,OAAOkN,EAAE,EAAE,IAAIrM,EAAE,EAAEA,EAAE0oE,EAAE1oE,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAE0hJ,WAAWtoJ,MAAsBA,EAAE,EAAE0oE,GAAwB,QAAS,OAA7B9/C,EAAEhiB,EAAE0hJ,WAAWtoJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKqsB,EAAE,OAAO5oB,KAAMqM,GAAG9P,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIsK,EAAExD,EAAE41J,WAAW,IAAInD,WAAWzpJ,GAAG,IAAIlG,MAAMkG,GAAG2kG,EAAE,EAAEhxG,EAAE,EAAEgxG,EAAE3kG,EAAErM,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAE0hJ,WAAWtoJ,MAAsBA,EAAE,EAAE0oE,GAAwB,QAAS,OAA7B9/C,EAAEhiB,EAAE0hJ,WAAWtoJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKqsB,EAAE,OAAO5oB,KAAMzD,EAAE,IAAIsK,EAAEmqG,KAAKz0G,EAAEA,EAAE,MAAMsK,EAAEmqG,KAAK,IAAIz0G,IAAI,EAAEsK,EAAEmqG,KAAK,IAAI,GAAGz0G,GAAGA,EAAE,OAAOsK,EAAEmqG,KAAK,IAAIz0G,IAAI,GAAGsK,EAAEmqG,KAAK,IAAIz0G,IAAI,EAAE,GAAGsK,EAAEmqG,KAAK,IAAI,GAAGz0G,IAAIsK,EAAEmqG,KAAK,IAAIz0G,IAAI,GAAGsK,EAAEmqG,KAAK,IAAIz0G,IAAI,GAAG,GAAGsK,EAAEmqG,KAAK,IAAIz0G,IAAI,EAAE,GAAGsK,EAAEmqG,KAAK,IAAI,GAAGz0G,GAAG,OAAOsK,CAAC,CAA6jBwF,CAAEzF,EAAE,EAAErK,EAAEo6J,WAAW,SAAS/vJ,GAAG,GAAGvD,EAAE8zJ,WAAW,OAAOvuI,EAAE+rI,YAAY,aAAa/tJ,GAAG8G,SAAS,SAA8D,IAAI,IAAI7G,EAAE,GAAGtK,EAAE,EAAEyD,GAAtE4G,EAAEgiB,EAAE+rI,YAAYtxJ,EAAE41J,WAAW,aAAa,QAAQryJ,IAAwBzH,OAAe5C,EAAEyD,GAAG,CAAC,IAAI0oE,EAAEhvC,EAAE9yB,EAAErH,KAAK42C,IAAI55C,EAA/B,MAAmCyD,IAAIqD,EAAE41J,WAAWpyJ,EAAEvJ,KAAK+P,EAAEzG,EAAE4yJ,SAASj9J,EAAEmsE,KAAK7hE,EAAEvJ,KAAK+P,EAAEzG,EAAEsF,MAAM3P,EAAEmsE,KAAKnsE,EAAEmsE,CAAC,CAAC,OAAO7hE,EAAES,KAAK,GAAG,CAAC,EAAE,CAAC,eAAe,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAASV,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAG,OAAOA,CAAC,CAAC,SAASvD,EAAEuD,EAAEC,GAAG,IAAI,IAAItK,EAAE,EAAEA,EAAEqK,EAAEzH,SAAS5C,EAAEsK,EAAEtK,GAAG,IAAIqK,EAAE0hJ,WAAW/rJ,GAAG,OAAOsK,CAAC,CAAC,SAAS7G,EAAE4G,GAAG,IAAIC,EAAE,MAAM+hB,EAAE,GAAGvlB,EAAEuD,EAAEzH,OAAOa,EAAEzD,EAAE+3J,UAAU1tJ,GAAGoqG,EAAE,EAAEtoC,GAAE,EAAG,IAAI,OAAO1oE,GAAG,IAAI,aAAakU,OAAOg/H,aAAavxG,MAAM,KAAK,IAAIm0H,WAAW,IAAI,MAAM,IAAI,aAAa5hJ,OAAOg/H,aAAavxG,MAAM,KAAKjI,EAAE,IAAkB,CAAb,MAAMrtB,GAAGq8D,GAAE,CAAE,CAAC,IAAIA,EAAE,CAAC,IAAI,IAAIr7D,EAAE,GAAGC,EAAE,EAAEA,EAAE1G,EAAEzH,OAAOmO,IAAID,GAAG6G,OAAOg/H,aAAatsI,EAAE0G,IAAI,OAAOD,CAAC,CAAC,KAAK2jG,EAAE3tG,GAAGwD,EAAE,GAAG,IAAI,UAAU7G,GAAG,eAAeA,EAAE4oB,EAAEtrB,KAAK4W,OAAOg/H,aAAavxG,MAAM,KAAK/6B,EAAEsF,MAAM8kG,EAAEzxG,KAAK42C,IAAI66D,EAAEnqG,EAAExD,MAAMulB,EAAEtrB,KAAK4W,OAAOg/H,aAAavxG,MAAM,KAAK/6B,EAAE4yJ,SAASxoD,EAAEzxG,KAAK42C,IAAI66D,EAAEnqG,EAAExD,MAAM2tG,GAAGnqG,CAA4B,CAA1B,MAAMwF,GAAGxF,EAAEtH,KAAKC,MAAMqH,EAAE,EAAE,CAAC,OAAO+hB,EAAEthB,KAAK,GAAG,CAAC,SAAS0pG,EAAEpqG,EAAEC,GAAG,IAAI,IAAItK,EAAE,EAAEA,EAAEqK,EAAEzH,OAAO5C,IAAIsK,EAAEtK,GAAGqK,EAAErK,GAAG,OAAOsK,CAAC,CAAC,IAAI6hE,EAAE9hE,EAAE,aAAayF,EAAEzF,EAAE,kBAAkB8yB,EAAE9yB,EAAE,gBAAgBrK,EAAE44J,cAAc,SAASvuJ,GAAG,IAAI,IAAIC,EAAE,GAAGtK,EAAE,EAAEA,EAAEqK,EAAEzH,OAAO5C,IAAIsK,GAAGqN,OAAOg/H,aAAa,IAAItsI,EAAE0hJ,WAAW/rJ,IAAI,OAAOsK,CAAC,EAAEtK,EAAEg5J,iBAAiB,SAAS3uJ,EAAEC,GAAGtK,EAAEi5J,aAAa,QAAQ3uJ,EAAEA,GAAG,kBAAkB,IAAI,OAAO,IAAIqyJ,KAAK,CAACtyJ,GAAG,CAAChM,KAAKiM,GAAqN,CAAjN,MAAM+hB,GAAG,IAAI,IAAgG5oB,EAAE,IAA5FgS,OAAOmnJ,aAAannJ,OAAOonJ,mBAAmBpnJ,OAAOqnJ,gBAAgBrnJ,OAAOsnJ,eAAsB,OAAOt5J,EAAE04J,OAAO9xJ,GAAG5G,EAAEu5J,QAAQ1yJ,EAA8D,CAA3D,MAAM+hB,GAAG,MAAM,IAAItnB,MAAM,kCAAkC,CAAC,CAAC,EAAE/E,EAAEk9J,kBAAkBz5J,EAAE,IAAIqN,EAAE,CAAC,EAAEA,EAAEyuC,OAAO,CAACA,OAAOlzB,EAAEoqH,MAAM,SAASpsI,GAAG,OAAOvD,EAAEuD,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAE45J,YAAY,SAASnyJ,GAAG,OAAOyG,EAAEyuC,OAAOm9G,WAAWryJ,GAAG+wJ,MAAM,EAAEsB,WAAW,SAASryJ,GAAG,OAAOvD,EAAEuD,EAAE,IAAIkvJ,WAAWlvJ,EAAEzH,QAAQ,EAAEg4J,WAAW,SAASvwJ,GAAG,OAAOvD,EAAEuD,EAAE8yB,EAAE9yB,EAAEzH,QAAQ,GAAGkO,EAAE2lI,MAAM,CAACl3F,OAAO97C,EAAEgzI,MAAMpqH,EAAEmwI,YAAY,SAASnyJ,GAAG,OAAO,IAAIkvJ,WAAWlvJ,GAAG+wJ,MAAM,EAAEsB,WAAW,SAASryJ,GAAG,OAAO,IAAIkvJ,WAAWlvJ,EAAE,EAAEuwJ,WAAW,SAASvwJ,GAAG,OAAO8yB,EAAE9yB,EAAE,GAAGyG,EAAE0rJ,YAAY,CAACj9G,OAAO,SAASl1C,GAAG,OAAO5G,EAAE,IAAI81J,WAAWlvJ,GAAG,EAAEosI,MAAM,SAASpsI,GAAG,OAAOoqG,EAAE,IAAI8kD,WAAWlvJ,GAAG,IAAIT,MAAMS,EAAE8yJ,YAAY,EAAEX,YAAYnwI,EAAEqwI,WAAW,SAASryJ,GAAG,OAAO,IAAIkvJ,WAAWlvJ,EAAE,EAAEuwJ,WAAW,SAASvwJ,GAAG,OAAO8yB,EAAE,IAAIo8H,WAAWlvJ,GAAG,GAAGyG,EAAE4rJ,WAAW,CAACn9G,OAAO97C,EAAEgzI,MAAM,SAASpsI,GAAG,OAAOoqG,EAAEpqG,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAE45J,YAAY,SAASnyJ,GAAG,OAAOA,EAAE+wJ,MAAM,EAAEsB,WAAWrwI,EAAEuuI,WAAW,SAASvwJ,GAAG,OAAO8yB,EAAE9yB,EAAE,GAAGyG,EAAE8pJ,WAAW,CAACr7G,OAAO97C,EAAEgzI,MAAM,SAASpsI,GAAG,OAAOoqG,EAAEpqG,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAE45J,YAAY,SAASnyJ,GAAG,OAAOyG,EAAE8pJ,WAAW8B,WAAWryJ,GAAG+wJ,MAAM,EAAEsB,WAAW,SAASryJ,GAAG,OAAOoqG,EAAEpqG,EAAE,IAAIkvJ,WAAWlvJ,EAAEzH,QAAQ,EAAEg4J,WAAWvuI,GAAGrsB,EAAEo4J,YAAY,SAAS/tJ,EAAEC,GAAG,GAAGA,IAAIA,EAAE,KAAKD,EAAE,OAAOC,EAAEtK,EAAEi5J,aAAa5uJ,GAAG,IAAIgiB,EAAErsB,EAAE+3J,UAAUztJ,GAAgB,OAAXwG,EAAEub,GAAGhiB,GAAGC,EAAW,EAAEtK,EAAE+3J,UAAU,SAAS1tJ,GAAG,MAAM,iBAAiBA,EAAE,SAAS,mBAAmBuG,OAAOglC,UAAUzkC,SAAS0kC,KAAKxrC,GAAG,QAAQ8hE,EAAEyuF,YAAYz9H,EAAEre,KAAKzU,GAAG,aAAa8hE,EAAEuwF,YAAYryJ,aAAakvJ,WAAW,aAAaptF,EAAEqwF,aAAanyJ,aAAaoyJ,YAAY,mBAAc,CAAM,EAAEz8J,EAAEi5J,aAAa,SAAS5uJ,GAA4B,IAAnB8hE,EAAE9hE,EAAEuK,eAAqB,MAAM,IAAI7P,MAAMsF,EAAE,oCAAoC,EAAErK,EAAEk5J,iBAAiB,MAAMl5J,EAAEm5J,kBAAkB,EAAEn5J,EAAEo5J,OAAO,SAAS/uJ,GAAG,IAAIC,EAAEtK,EAAEqsB,EAAE,GAAG,IAAIrsB,EAAE,EAAEA,GAAGqK,GAAG,IAAIzH,OAAO5C,IAAsBqsB,GAAG,QAArB/hB,EAAED,EAAE0hJ,WAAW/rJ,IAAe,GAAG,IAAI,IAAIsK,EAAE6G,SAAS,IAAIivC,cAAc,OAAO/zB,CAAC,EAAErsB,EAAEq5J,gBAAgB,SAAShvJ,GAAG,IAAI,IAAIC,KAAKwF,EAAE,GAAGA,EAAE26D,eAAengE,IAAIwF,EAAExF,GAAGmtJ,QAAQptJ,EAAE,OAAOyF,EAAExF,GAAG,OAAO,IAAI,EAAEtK,EAAEs5J,SAAS,SAASjvJ,GAAG,MAAM,oBAAoBuG,OAAOglC,UAAUzkC,SAAS0kC,KAAKxrC,EAAE,EAAErK,EAAEG,OAAO,WAAW,IAAIkK,EAAEC,EAAEtK,EAAE,CAAC,EAAE,IAAIqK,EAAE,EAAEA,EAAEmF,UAAU5M,OAAOyH,IAAI,IAAIC,KAAKkF,UAAUnF,GAAGmF,UAAUnF,GAAGogE,eAAengE,SAAI,IAAoBtK,EAAEsK,KAAKtK,EAAEsK,GAAGkF,UAAUnF,GAAGC,IAAI,OAAOtK,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,eAAe,GAAG,YAAY,KAAK,GAAG,CAAC,SAASqK,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,EAAEC,GAAG7N,KAAKs2I,MAAM,GAAGt2I,KAAK2gK,YAAY9yJ,EAAED,GAAG5N,KAAKqyB,KAAKzkB,EAAE,CAAC,IAAIvD,EAAEuD,EAAE,kBAAkB5G,EAAE4G,EAAE,sBAAsBoqG,EAAEpqG,EAAE,sBAAsB8hE,EAAE9hE,EAAE,iBAAiByF,EAAEzF,EAAE,WAAW8yB,EAAE9yB,EAAE,eAAeyG,EAAEzG,EAAE,cAAc0G,EAAE1G,EAAE,aAAaA,EAAE,YAAYgiB,EAAEupB,UAAU,CAACynH,eAAe,SAAShzJ,GAAG,IAAIC,EAAE7N,KAAK0xE,OAAOgqF,WAAW,GAAG,GAAG7tJ,IAAID,EAAE,MAAM,IAAItF,MAAM,gDAAgD+K,EAAEspJ,OAAO9uJ,GAAG,cAAcwF,EAAEspJ,OAAO/uJ,GAAG,IAAI,EAAEizJ,YAAY,SAASjzJ,EAAEC,GAAG,IAAItK,EAAEvD,KAAK0xE,OAAO3lE,MAAM/L,KAAK0xE,OAAO8pF,SAAS5tJ,GAAG,IAAgCvD,EAA1BrK,KAAK0xE,OAAOgqF,WAAW,KAAS7tJ,EAAE,OAAO7N,KAAK0xE,OAAO8pF,SAASj4J,GAAG8G,CAAC,EAAEy2J,sBAAsB,WAAW9gK,KAAK+gK,WAAW/gK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKghK,wBAAwBhhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKihK,4BAA4BjhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKkhK,kBAAkBlhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKmhK,eAAenhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKohK,iBAAiBphK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKqhK,iBAAiBrhK,KAAK0xE,OAAO+pF,QAAQ,GAAG,IAAI7tJ,EAAE5N,KAAK0xE,OAAO0oF,SAASp6J,KAAKqhK,kBAAkBxzJ,EAAEyG,EAAE2rJ,WAAW,aAAa,QAAQ18J,EAAE8P,EAAEsoJ,YAAY9tJ,EAAED,GAAG5N,KAAK+9J,WAAW/9J,KAAK2gK,YAAYjD,eAAen6J,EAAE,EAAE+9J,2BAA2B,WAAWthK,KAAKuhK,sBAAsBvhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKwhK,cAAcxhK,KAAK0xE,OAAOgqF,WAAW,GAAG17J,KAAKyhK,cAAczhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAK+gK,WAAW/gK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKghK,wBAAwBhhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKihK,4BAA4BjhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKkhK,kBAAkBlhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKmhK,eAAenhK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAKohK,iBAAiBphK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAK0hK,oBAAoB,CAAC,EAAE,IAAI,IAAI9zJ,EAAEC,EAAEtK,EAAEqsB,EAAE5vB,KAAKuhK,sBAAsB,GAAK,EAAI3xI,GAAGhiB,EAAE5N,KAAK0xE,OAAO+pF,QAAQ,GAAG5tJ,EAAE7N,KAAK0xE,OAAO+pF,QAAQ,GAAGl4J,EAAEvD,KAAK0xE,OAAOgqF,WAAW7tJ,GAAG7N,KAAK0hK,oBAAoB9zJ,GAAG,CAAChN,GAAGgN,EAAEzH,OAAO0H,EAAElL,MAAMY,EAAE,EAAEo+J,kCAAkC,WAAW,GAAG3hK,KAAK4hK,6BAA6B5hK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAK6hK,mCAAmC7hK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAK8hK,WAAW9hK,KAAK0xE,OAAO+pF,QAAQ,GAAGz7J,KAAK8hK,WAAW,EAAE,MAAM,IAAIx5J,MAAM,sCAAsC,EAAEy5J,eAAe,WAAW,IAAIn0J,EAAEC,EAAE,IAAID,EAAE,EAAEA,EAAE5N,KAAKs2I,MAAMnwI,OAAOyH,IAAIC,EAAE7N,KAAKs2I,MAAM1oI,GAAG5N,KAAK0xE,OAAO8pF,SAAS3tJ,EAAEm0J,mBAAmBhiK,KAAK4gK,eAAelgI,EAAEw+H,mBAAmBrxJ,EAAEo0J,cAAcjiK,KAAK0xE,QAAQ7jE,EAAEq0J,aAAar0J,EAAEs0J,mBAAmB,EAAEC,eAAe,WAAW,IAAIx0J,EAAE,IAAI5N,KAAK0xE,OAAO8pF,SAASx7J,KAAKohK,kBAAkBphK,KAAK0xE,OAAOgqF,WAAW,KAAKh7H,EAAE0+H,sBAAqBxxJ,EAAE,IAAIyG,EAAE,CAACguJ,MAAMriK,KAAKqiK,OAAOriK,KAAK2gK,cAAe2B,gBAAgBtiK,KAAK0xE,QAAQ1xE,KAAKs2I,MAAMhyI,KAAKsJ,GAAG,GAAG5N,KAAKkhK,oBAAoBlhK,KAAKs2I,MAAMnwI,QAAQ,IAAInG,KAAKkhK,mBAAmB,IAAIlhK,KAAKs2I,MAAMnwI,OAAO,MAAM,IAAImC,MAAM,kCAAkCtI,KAAKkhK,kBAAkB,gCAAgClhK,KAAKs2I,MAAMnwI,OAAO,EAAEo8J,iBAAiB,WAAW,IAAI30J,EAAE5N,KAAK0xE,OAAOyoF,qBAAqBz5H,EAAE++H,uBAAuB,GAAG7xJ,EAAE,EAAkD,MAAxC5N,KAAK6gK,YAAY,EAAEngI,EAAEw+H,mBAA+K,IAAI52J,MAAM,uDAA9J,IAAIA,MAAM,0IAA2MtI,KAAK0xE,OAAO8pF,SAAS5tJ,GAAG,IAAIrK,EAAEqK,EAAE,GAAG5N,KAAK4gK,eAAelgI,EAAE++H,uBAAuBz/J,KAAK8gK,wBAAwB9gK,KAAK+gK,aAAa1tJ,EAAEopJ,kBAAkBz8J,KAAKghK,0BAA0B3tJ,EAAEopJ,kBAAkBz8J,KAAKihK,8BAA8B5tJ,EAAEopJ,kBAAkBz8J,KAAKkhK,oBAAoB7tJ,EAAEopJ,kBAAkBz8J,KAAKmhK,iBAAiB9tJ,EAAEqpJ,kBAAkB18J,KAAKohK,mBAAmB/tJ,EAAEqpJ,iBAAiB,CAAC,GAAG18J,KAAKqiK,OAAM,GAAGz0J,EAAE5N,KAAK0xE,OAAOyoF,qBAAqBz5H,EAAEk/H,kCAAmC,EAAE,MAAM,IAAIt3J,MAAM,yEAAyE,GAAGtI,KAAK0xE,OAAO8pF,SAAS5tJ,GAAG5N,KAAK4gK,eAAelgI,EAAEk/H,iCAAiC5/J,KAAK2hK,qCAAqC3hK,KAAK6gK,YAAY7gK,KAAK6hK,mCAAmCnhI,EAAEm/H,+BAA+B7/J,KAAK6hK,mCAAmC7hK,KAAK0xE,OAAOyoF,qBAAqBz5H,EAAEm/H,6BAA6B7/J,KAAK6hK,mCAAmC,GAAG,MAAM,IAAIv5J,MAAM,iEAAiEtI,KAAK0xE,OAAO8pF,SAASx7J,KAAK6hK,oCAAoC7hK,KAAK4gK,eAAelgI,EAAEm/H,6BAA6B7/J,KAAKshK,4BAA4B,CAAC,IAAI1xI,EAAE5vB,KAAKohK,iBAAiBphK,KAAKmhK,eAAenhK,KAAKqiK,QAAQzyI,GAAG,GAAGA,GAAG,GAAG5vB,KAAKuhK,uBAAuB,IAAIl3J,EAAE9G,EAAEqsB,EAAE,GAAGvlB,EAAE,EAAErK,KAAK6gK,YAAYt9J,EAAEm9B,EAAE0+H,uBAAuBp/J,KAAK0xE,OAAOuoF,KAAK5vJ,QAAQ,GAAGA,EAAE,EAAE,MAAM,IAAI/B,MAAM,0BAA0B/B,KAAK25C,IAAI71C,GAAG,UAAU,EAAEm4J,cAAc,SAAS50J,GAAG,IAAIC,EAAEwF,EAAEioJ,UAAU1tJ,GAAG,GAAGyF,EAAEmpJ,aAAa3uJ,GAAG,WAAWA,GAAGyG,EAAE2rJ,WAAW,GAAG,eAAepyJ,EAAE7N,KAAK0xE,OAAO,IAAI1qE,EAAE4G,QAAQ,GAAG0G,EAAE2rJ,WAAWjgK,KAAK0xE,OAAO,IAAIsmC,EAAE3kG,EAAEsoJ,YAAY,aAAa/tJ,QAAQ,CAAC,IAAI0G,EAAE0lI,MAAM,MAAM,IAAI1xI,MAAM,uCAAuCuF,EAAE,KAAK7N,KAAK0xE,OAAO,IAAIhC,EAAEr8D,EAAEsoJ,YAAY,QAAQ/tJ,GAAG,MAAM5N,KAAK0xE,OAAO,IAAIrnE,EAAEuD,EAAE5N,KAAK2gK,YAAYlD,sBAAsB,EAAEprI,KAAK,SAASzkB,GAAG5N,KAAKwiK,cAAc50J,GAAG5N,KAAKuiK,mBAAmBviK,KAAKoiK,iBAAiBpiK,KAAK+hK,gBAAgB,GAAGl0J,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,gBAAgB,EAAE,qBAAqB,GAAG,WAAW,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,UAAU,GAAG,aAAa,KAAK,GAAG,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,EAAEC,GAAG7N,KAAKmC,QAAQyL,EAAE5N,KAAK2gK,YAAY9yJ,CAAC,CAAC,IAAIxD,EAAEuD,EAAE,kBAAkB5G,EAAE4G,EAAE,WAAWoqG,EAAEpqG,EAAE,sBAAsB8hE,EAAE9hE,EAAE,YAAYyF,EAAEzF,EAAE,aAAqBgiB,EAAEupB,UAAU,CAACspH,YAAY,WAAW,OAAO,IAAK,EAAEziK,KAAK0iK,QAAQ,EAAEC,QAAQ,WAAW,OAAO,OAAQ,KAAK3iK,KAAK0iK,QAAQ,EAAEE,yBAAyB,SAASh1J,EAAEC,EAAEtK,GAAG,OAAO,WAAW,IAAIqsB,EAAEhiB,EAAE7B,MAAM6B,EAAE4tJ,SAAS3tJ,GAAG,IAAIxD,EAAEuD,EAAEwsJ,SAAS72J,GAAG,OAAOqK,EAAE4tJ,SAAS5rI,GAAGvlB,CAAC,CAAC,EAAEw4J,eAAe,SAASj1J,EAAEC,EAAEtK,EAAEqsB,EAAEvlB,GAAG,OAAO,WAAW,IAAIuD,EAAE5G,EAAE20J,YAAY/rI,EAAEwrI,oBAAoBp7J,KAAK86J,wBAAwBjtJ,EAAE+hB,EAAEsrI,WAAWttJ,GAAG,GAAGC,EAAE1H,SAASkE,EAAE,MAAM,IAAI/B,MAAM,yCAAyC,OAAOuF,CAAC,CAAC,EAAEo0J,cAAc,SAASr0J,GAAG,IAAIC,EAAEtK,EAAE,GAAGqK,EAAEgkB,KAAK,IAAI5xB,KAAK8iK,eAAel1J,EAAE6tJ,QAAQ,GAAGl4J,EAAEqK,EAAE6tJ,QAAQ,GAAGz7J,KAAKgxG,SAASpjG,EAAEwsJ,SAASp6J,KAAK8iK,gBAAgBl1J,EAAEgkB,KAAKruB,IAAyB,GAAtBvD,KAAKw6J,iBAA4C,GAAxBx6J,KAAKy6J,iBAAqB,MAAM,IAAInyJ,MAAM,qIAAqI,GAA+C,QAA5CuF,EAAE7G,EAAE41J,gBAAgB58J,KAAK26J,oBAA4B,MAAM,IAAIryJ,MAAM,+BAA+BtB,EAAE21J,OAAO38J,KAAK26J,mBAAmB,0BAA0B3zJ,EAAE20J,YAAY,SAAS37J,KAAKgxG,UAAU,KAAK,GAAGhxG,KAAK69J,aAAa,IAAI7lD,EAAEh4G,KAAK69J,aAAarD,eAAex6J,KAAKw6J,eAAex6J,KAAK69J,aAAapD,iBAAiBz6J,KAAKy6J,iBAAiBz6J,KAAK69J,aAAanD,MAAM16J,KAAK06J,MAAM16J,KAAK69J,aAAalD,kBAAkB36J,KAAK26J,kBAAkB36J,KAAK69J,aAAa/C,qBAAqB96J,KAAK4iK,yBAAyBh1J,EAAEA,EAAE7B,MAAM/L,KAAKw6J,eAAe3sJ,GAAG7N,KAAK69J,aAAahD,WAAW76J,KAAK6iK,eAAej1J,EAAEA,EAAE7B,MAAM/L,KAAKw6J,eAAe3sJ,EAAE7N,KAAKy6J,kBAAkBz6J,KAAK2gK,YAAYnD,aAAax9J,KAAK69J,aAAa72J,EAAE20J,YAAY,SAAS37J,KAAK69J,aAAahD,cAAcnrF,EAAEgrF,MAAM16J,KAAK69J,gBAAgB79J,KAAK06J,OAAO,MAAM,IAAIpyJ,MAAM,iCAC5x+B,EAAEg6J,gBAAgB,SAAS10J,GAAG,GAAG5N,KAAKwhK,cAAc5zJ,EAAE6tJ,QAAQ,GAAGz7J,KAAKyhK,cAAc7zJ,EAAE6tJ,QAAQ,GAAGz7J,KAAK0iK,QAAQ90J,EAAE6tJ,QAAQ,GAAGz7J,KAAK26J,kBAAkB/sJ,EAAE8tJ,WAAW,GAAG17J,KAAKygB,KAAK7S,EAAEguJ,WAAW57J,KAAK06J,MAAM9sJ,EAAE6tJ,QAAQ,GAAGz7J,KAAKw6J,eAAe5sJ,EAAE6tJ,QAAQ,GAAGz7J,KAAKy6J,iBAAiB7sJ,EAAE6tJ,QAAQ,GAAGz7J,KAAK8iK,eAAel1J,EAAE6tJ,QAAQ,GAAGz7J,KAAK+iK,kBAAkBn1J,EAAE6tJ,QAAQ,GAAGz7J,KAAKgjK,kBAAkBp1J,EAAE6tJ,QAAQ,GAAGz7J,KAAKijK,gBAAgBr1J,EAAE6tJ,QAAQ,GAAGz7J,KAAKkjK,uBAAuBt1J,EAAE6tJ,QAAQ,GAAGz7J,KAAKmjK,uBAAuBv1J,EAAE6tJ,QAAQ,GAAGz7J,KAAKgiK,kBAAkBp0J,EAAE6tJ,QAAQ,GAAGz7J,KAAKyiK,cAAc,MAAM,IAAIn6J,MAAM,mCAAmCtI,KAAKgxG,SAASpjG,EAAEwsJ,SAASp6J,KAAK8iK,gBAAgB9iK,KAAKojK,gBAAgBx1J,GAAG5N,KAAKqjK,qBAAqBz1J,GAAG5N,KAAKsjK,YAAY11J,EAAEwsJ,SAASp6J,KAAKgjK,kBAAkB,EAAEb,kBAAkB,WAAWniK,KAAKi8J,gBAAgB,KAAKj8J,KAAKk8J,eAAe,KAAK,IAAItuJ,EAAE5N,KAAKwhK,eAAe,EAAExhK,KAAK2K,OAAO,GAAG3K,KAAKmjK,wBADm05B,IAC3y5Bv1J,IAAQ5N,KAAKk8J,eAAe,GAAGl8J,KAAKmjK,wBAD2w5B,IACnv5Bv1J,IAAQ5N,KAAKi8J,gBAAgBj8J,KAAKmjK,wBAAwB,GAAG,OAAOnjK,KAAK2K,KAAK,MAAM3K,KAAK49J,YAAY1qJ,OAAO,KAAKlT,KAAK2K,KAAI,EAAG,EAAE04J,qBAAqB,SAASz1J,GAAG,GAAG5N,KAAKujK,YAAY,GAAG,CAAC,IAAI11J,EAAE,IAAIxD,EAAErK,KAAKujK,YAAY,GAAG5gK,OAAO3C,KAAKy6J,mBAAmBzzJ,EAAE01J,mBAAmB18J,KAAKy6J,iBAAiB5sJ,EAAE4tJ,QAAQ,IAAIz7J,KAAKw6J,iBAAiBxzJ,EAAE01J,mBAAmB18J,KAAKw6J,eAAe3sJ,EAAE4tJ,QAAQ,IAAIz7J,KAAKgiK,oBAAoBh7J,EAAE01J,mBAAmB18J,KAAKgiK,kBAAkBn0J,EAAE4tJ,QAAQ,IAAIz7J,KAAKijK,kBAAkBj8J,EAAE01J,mBAAmB18J,KAAKijK,gBAAgBp1J,EAAE4tJ,QAAQ,GAAG,CAAC,EAAE2H,gBAAgB,SAASx1J,GAAG,IAAIC,EAAEtK,EAAEqsB,EAAEvlB,EAAEuD,EAAE7B,MAAM,IAAI/L,KAAKujK,YAAYvjK,KAAKujK,aAAa,CAAC,EAAE31J,EAAE7B,MAAM1B,EAAErK,KAAK+iK,mBAAmBl1J,EAAED,EAAE6tJ,QAAQ,GAAGl4J,EAAEqK,EAAE6tJ,QAAQ,GAAG7rI,EAAEhiB,EAAE8tJ,WAAWn4J,GAAGvD,KAAKujK,YAAY11J,GAAG,CAACjN,GAAGiN,EAAE1H,OAAO5C,EAAEZ,MAAMitB,EAAE,EAAEsyI,WAAW,WAAW,IAAIt0J,EAAEyF,EAAE4sJ,WAAW,aAAa,QAAQ,GAAGjgK,KAAK2iK,UAAU3iK,KAAK49J,YAAYluF,EAAEiuF,WAAW39J,KAAKgxG,UAAUhxG,KAAK89J,eAAepuF,EAAEiuF,WAAW39J,KAAKsjK,iBAAiB,CAAC,IAAIz1J,EAAE7N,KAAKwjK,4BAA4B,GAAG,OAAO31J,EAAE7N,KAAK49J,YAAY/vJ,MAAM,CAAC,IAAItK,EAAEyD,EAAE20J,YAAY/tJ,EAAE5N,KAAKgxG,UAAUhxG,KAAK49J,YAAY59J,KAAK2gK,YAAYjD,eAAen6J,EAAE,CAAC,IAAIqsB,EAAE5vB,KAAKyjK,+BAA+B,GAAG,OAAO7zI,EAAE5vB,KAAK89J,eAAeluI,MAAM,CAAC,IAAIvlB,EAAErD,EAAE20J,YAAY/tJ,EAAE5N,KAAKsjK,aAAatjK,KAAK89J,eAAe99J,KAAK2gK,YAAYjD,eAAerzJ,EAAE,CAAC,CAAC,EAAEm5J,0BAA0B,WAAW,IAAI51J,EAAE5N,KAAKujK,YAAY,OAAO,GAAG31J,EAAE,CAAC,IAAIC,EAAE,IAAIxD,EAAEuD,EAAEjL,OAAO,OAAO,IAAIkL,EAAE4tJ,QAAQ,IAAQ/rF,EAAEgrF,MAAM16J,KAAKgxG,YAAYnjG,EAAE4tJ,QAAQ,GAAxC,KAAgD/rF,EAAEiuF,WAAW9vJ,EAAE6tJ,WAAW9tJ,EAAEzH,OAAO,GAAG,CAAC,OAAO,IAAI,EAAEs9J,6BAA6B,WAAW,IAAI71J,EAAE5N,KAAKujK,YAAY,OAAO,GAAG31J,EAAE,CAAC,IAAIC,EAAE,IAAIxD,EAAEuD,EAAEjL,OAAO,OAAO,IAAIkL,EAAE4tJ,QAAQ,IAAQ/rF,EAAEgrF,MAAM16J,KAAKsjK,eAAez1J,EAAE4tJ,QAAQ,GAA3C,KAAmD/rF,EAAEiuF,WAAW9vJ,EAAE6tJ,WAAW9tJ,EAAEzH,OAAO,GAAG,CAAC,OAAO,IAAI,GAAG0H,EAAEnO,QAAQkwB,CAAC,EAAE,CAAC,qBAAqB,EAAE,WAAW,GAAG,iBAAiB,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAa,IAA2GmsE,EAAE,CAAC,GAAE9/C,EAA1GhiB,EAAE,sBAAsB6sC,QAAoFi1B,EAA3E9hE,EAAE,iBAAmBA,EAAE,iBAAmBA,EAAE,yBAAwCC,EAAEnO,QAAQgwE,CAAC,EAAE,CAAC,gBAAgB,GAAG,gBAAgB,GAAG,qBAAqB,GAAG,uBAAuB,KAAK,GAAG,CAAC,SAAS9hE,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAG,KAAK5N,gBAAgB4vB,GAAG,OAAO,IAAIA,EAAEhiB,GAAG5N,KAAKmC,QAAQkR,EAAEonC,OAAO,CAACyiH,MAAMtwJ,EAAEoK,OAAOm/D,EAAEutF,UAAU,MAAMC,WAAW,GAAGC,SAAS,EAAEC,SAAS5nI,EAAEqK,GAAG,IAAI14B,GAAG,CAAC,GAAG,IAAIC,EAAE7N,KAAKmC,QAAQ0L,EAAE8Q,KAAK9Q,EAAE81J,WAAW,EAAE91J,EAAE81J,YAAY91J,EAAE81J,WAAW91J,EAAEi2J,MAAMj2J,EAAE81J,WAAW,GAAG91J,EAAE81J,WAAW,KAAK91J,EAAE81J,YAAY,IAAI3jK,KAAKmI,IAAI,EAAEnI,KAAK+e,IAAI,GAAG/e,KAAK+jK,OAAM,EAAG/jK,KAAKikD,OAAO,GAAGjkD,KAAKgkK,KAAK,IAAI1vJ,EAAEtU,KAAKgkK,KAAKC,UAAU,EAAE,IAAI1gK,EAAEmsE,EAAEw0F,aAAalkK,KAAKgkK,KAAKn2J,EAAEqvJ,MAAMrvJ,EAAEmJ,OAAOnJ,EAAE81J,WAAW91J,EAAE+1J,SAAS/1J,EAAEg2J,UAAU,GAAGtgK,IAAIue,EAAE,MAAM,IAAIxZ,MAAM+L,EAAE9Q,IAAI,GAAGsK,EAAE4gE,QAAQiB,EAAEy0F,iBAAiBnkK,KAAKgkK,KAAKn2J,EAAE4gE,QAAQ5gE,EAAEu2J,WAAW,CAAC,IAAI/5J,EAAE,GAAGA,EAAE,iBAAiBwD,EAAEu2J,WAAW1jI,EAAE2jI,WAAWx2J,EAAEu2J,YAAY,yBAAyBhoC,EAAEhjF,KAAKvrC,EAAEu2J,YAAY,IAAItH,WAAWjvJ,EAAEu2J,YAAYv2J,EAAEu2J,YAAW7gK,EAAEmsE,EAAE40F,qBAAqBtkK,KAAKgkK,KAAK35J,MAAOyX,EAAE,MAAM,IAAIxZ,MAAM+L,EAAE9Q,IAAIvD,KAAKukK,WAAU,CAAE,CAAC,CAAC,SAASl6J,EAAEuD,EAAEC,GAAG,IAAItK,EAAE,IAAIqsB,EAAE/hB,GAAG,GAAGtK,EAAEe,KAAKsJ,GAAE,GAAIrK,EAAE4E,IAAI,MAAM5E,EAAEwb,IAAI,OAAOxb,EAAEuK,MAAM,CAAgG,IAAI4hE,EAAE9hE,EAAE,kBAAkByF,EAAEzF,EAAE,kBAAkB8yB,EAAE9yB,EAAE,mBAAmByG,EAAEzG,EAAE,mBAAmB0G,EAAE1G,EAAE,kBAAkBwuH,EAAEjoH,OAAOglC,UAAUzkC,SAAiBoN,EAAE,EAAUlV,GAAG,EAAEqvB,EAAE,EAAEk6C,EAAE,EAAEvmD,EAAEupB,UAAU70C,KAAK,SAASsJ,EAAEC,GAAG,IAAItK,EAAEqsB,EAAEvlB,EAAErK,KAAKgkK,KAAKh9J,EAAEhH,KAAKmC,QAAQuhK,UAAU,GAAG1jK,KAAK+jK,MAAM,OAAM,EAAGn0I,EAAE/hB,MAAMA,EAAEA,GAAM,IAAJA,EAA1I,EAAJ,EAAyJ,iBAAiBD,EAAEvD,EAAEm6J,MAAM9jI,EAAE2jI,WAAWz2J,GAAG,yBAAyBwuH,EAAEhjF,KAAKxrC,GAAGvD,EAAEm6J,MAAM,IAAI1H,WAAWlvJ,GAAGvD,EAAEm6J,MAAM52J,EAAEvD,EAAEo6J,QAAQ,EAAEp6J,EAAEq6J,SAASr6J,EAAEm6J,MAAMr+J,OAAO,EAAE,CAAC,GAAG,IAAIkE,EAAE45J,YAAY55J,EAAEs6J,OAAO,IAAItxJ,EAAEuxJ,KAAK59J,GAAGqD,EAAEw6J,SAAS,EAAEx6J,EAAE45J,UAAUj9J,GAA7W,KAAgXzD,EAAEmsE,EAAEo1F,QAAQz6J,EAAEulB,KAAUrsB,IAAIue,EAAE,OAAO9hB,KAAK+kK,MAAMxhK,GAAGvD,KAAK+jK,OAAM,GAAG,EAAG,IAAI15J,EAAE45J,YAAY,IAAI55J,EAAEq6J,UAApd,IAA8d90I,GAAld,IAAydA,KAAS,WAAW5vB,KAAKmC,QAAQmkC,GAAGtmC,KAAKglK,OAAOtkI,EAAEukI,cAAc5xJ,EAAE6xJ,UAAU76J,EAAEs6J,OAAOt6J,EAAEw6J,YAAY7kK,KAAKglK,OAAO3xJ,EAAE6xJ,UAAU76J,EAAEs6J,OAAOt6J,EAAEw6J,WAAW,QAAQx6J,EAAEq6J,SAAS,GAAG,IAAIr6J,EAAE45J,YAA1oB,IAAspB1gK,GAAO,OAArqB,IAA4qBqsB,GAAOrsB,EAAEmsE,EAAEy1F,WAAWnlK,KAAKgkK,MAAMhkK,KAAK+kK,MAAMxhK,GAAGvD,KAAK+jK,OAAM,EAAGxgK,IAAIue,GAAjuB,IAAouB8N,IAAQ5vB,KAAK+kK,MAAMjjJ,GAAGzX,EAAE45J,UAAU,GAAE,EAAG,EAAEr0I,EAAEupB,UAAU6rH,OAAO,SAASp3J,GAAG5N,KAAKikD,OAAO3/C,KAAKsJ,EAAE,EAAEgiB,EAAEupB,UAAU4rH,MAAM,SAASn3J,GAAGA,IAAIkU,IAAI,WAAW9hB,KAAKmC,QAAQmkC,GAAGtmC,KAAK8N,OAAO9N,KAAKikD,OAAO31C,KAAK,IAAItO,KAAK8N,OAAOuF,EAAE+xJ,cAAcplK,KAAKikD,SAASjkD,KAAKikD,OAAO,GAAGjkD,KAAKmI,IAAIyF,EAAE5N,KAAK+e,IAAI/e,KAAKgkK,KAAKjlJ,GAAG,EAAExb,EAAE8hK,QAAQz1I,EAAErsB,EAAEuhK,QAAQz6J,EAAE9G,EAAE05J,WAA1xC,SAAWrvJ,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAI8Q,KAAI,EAAGtU,EAAEuD,EAAEC,EAAE,EAAyvCtK,EAAEugK,KAA1vC,SAAWl2J,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAIi2J,MAAK,EAAGz5J,EAAEuD,EAAEC,EAAE,CAAitC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAG,KAAK5N,gBAAgB4vB,GAAG,OAAO,IAAIA,EAAEhiB,GAAG5N,KAAKmC,QAAQutE,EAAEj1B,OAAO,CAACipH,UAAU,MAAMC,WAAW,EAAEr9H,GAAG,IAAI14B,GAAG,CAAC,GAAG,IAAIC,EAAE7N,KAAKmC,QAAQ0L,EAAE8Q,KAAK9Q,EAAE81J,YAAY,GAAG91J,EAAE81J,WAAW,KAAK91J,EAAE81J,YAAY91J,EAAE81J,WAAW,IAAI91J,EAAE81J,aAAa91J,EAAE81J,YAAY,OAAO91J,EAAE81J,YAAY,GAAG91J,EAAE81J,WAAW,KAAK/1J,GAAGA,EAAE+1J,aAAa91J,EAAE81J,YAAY,IAAI91J,EAAE81J,WAAW,IAAI91J,EAAE81J,WAAW,IAAI,IAAK,GAAG91J,EAAE81J,cAAc91J,EAAE81J,YAAY,IAAI3jK,KAAKmI,IAAI,EAAEnI,KAAK+e,IAAI,GAAG/e,KAAK+jK,OAAM,EAAG/jK,KAAKikD,OAAO,GAAGjkD,KAAKgkK,KAAK,IAAI1vJ,EAAEtU,KAAKgkK,KAAKC,UAAU,EAAE,IAAI1gK,EAAEy0G,EAAEstD,aAAatlK,KAAKgkK,KAAKn2J,EAAE81J,YAAY,GAAGpgK,IAAIm9B,EAAE6kI,KAAK,MAAM,IAAIj9J,MAAM+L,EAAE9Q,IAAIvD,KAAKyuE,OAAO,IAAI2tD,EAAEpkB,EAAEwtD,iBAAiBxlK,KAAKgkK,KAAKhkK,KAAKyuE,OAAO,CAAC,SAASpkE,EAAEuD,EAAEC,GAAG,IAAItK,EAAE,IAAIqsB,EAAE/hB,GAAG,GAAGtK,EAAEe,KAAKsJ,GAAE,GAAIrK,EAAE4E,IAAI,MAAM5E,EAAEwb,IAAI,OAAOxb,EAAEuK,MAAM,CAAgD,IAAIkqG,EAAEpqG,EAAE,kBAAkB8hE,EAAE9hE,EAAE,kBAAkByF,EAAEzF,EAAE,mBAAmB8yB,EAAE9yB,EAAE,oBAAoByG,EAAEzG,EAAE,mBAAmB0G,EAAE1G,EAAE,kBAAkBwuH,EAAExuH,EAAE,mBAAmBwxC,EAAEjrC,OAAOglC,UAAUzkC,SAASkb,EAAEupB,UAAU70C,KAAK,SAASsJ,EAAEC,GAAG,IAAItK,EAAEqsB,EAAEvlB,EAAErD,EAAEqN,EAAEC,EAAE8nH,EAAEp8H,KAAKgkK,KAAK3+I,EAAErlB,KAAKmC,QAAQuhK,UAAU5hJ,EAAE9hB,KAAKmC,QAAQiiK,WAAWj9I,GAAE,EAAG,GAAGnnB,KAAK+jK,MAAM,OAAM,EAAGn0I,EAAE/hB,MAAMA,EAAEA,GAAM,IAAJA,EAAO6yB,EAAE+kI,SAAS/kI,EAAEglI,WAAW,iBAAiB93J,EAAEwuH,EAAEooC,MAAMnxJ,EAAEsyJ,cAAc/3J,GAAG,yBAAyBwxC,EAAEhG,KAAKxrC,GAAGwuH,EAAEooC,MAAM,IAAI1H,WAAWlvJ,GAAGwuH,EAAEooC,MAAM52J,EAAEwuH,EAAEqoC,QAAQ,EAAEroC,EAAEsoC,SAAStoC,EAAEooC,MAAMr+J,OAAO,EAAE,CAAC,GAAG,IAAIi2H,EAAE6nC,YAAY7nC,EAAEuoC,OAAO,IAAIj1F,EAAEk1F,KAAKv/I,GAAG+2G,EAAEyoC,SAAS,EAAEzoC,EAAE6nC,UAAU5+I,IAAG9hB,EAAEy0G,EAAE4tD,QAAQxpC,EAAE17F,EAAEglI,eAAgBhlI,EAAEmlI,aAAa/jJ,IAAIxN,EAAE,iBAAiBwN,EAAEzO,EAAEgxJ,WAAWviJ,GAAG,yBAAyBs9B,EAAEhG,KAAKt3B,GAAG,IAAIg7I,WAAWh7I,GAAGA,EAAEve,EAAEy0G,EAAE8tD,qBAAqB9lK,KAAKgkK,KAAK1vJ,IAAI/Q,IAAIm9B,EAAEqlI,cAAiB,IAAJ5+I,IAAS5jB,EAAEm9B,EAAE6kI,KAAKp+I,GAAE,GAAI5jB,IAAIm9B,EAAEslI,cAAcziK,IAAIm9B,EAAE6kI,KAAK,OAAOvlK,KAAK+kK,MAAMxhK,GAAGvD,KAAK+jK,OAAM,GAAG,EAAG3nC,EAAEyoC,WAAW,IAAIzoC,EAAE6nC,WAAW1gK,IAAIm9B,EAAEslI,eAAe,IAAI5pC,EAAEsoC,UAAU90I,IAAI8Q,EAAE+kI,UAAU71I,IAAI8Q,EAAEulI,gBAAgB,WAAWjmK,KAAKmC,QAAQmkC,IAAIj8B,EAAEgJ,EAAE6yJ,WAAW9pC,EAAEuoC,OAAOvoC,EAAEyoC,UAAU79J,EAAEo1H,EAAEyoC,SAASx6J,EAAEgK,EAAEhB,EAAE8yJ,WAAW/pC,EAAEuoC,OAAOt6J,GAAG+xH,EAAEyoC,SAAS79J,EAAEo1H,EAAE6nC,UAAU5+I,EAAEre,EAAEA,GAAG0oE,EAAE02F,SAAShqC,EAAEuoC,OAAOvoC,EAAEuoC,OAAOt6J,EAAErD,EAAE,GAAGhH,KAAKglK,OAAO3wJ,IAAIrU,KAAKglK,OAAOt1F,EAAEw1F,UAAU9oC,EAAEuoC,OAAOvoC,EAAEyoC,aAAa,IAAIzoC,EAAEsoC,UAAU,IAAItoC,EAAE6nC,YAAY98I,GAAE,EAAG,QAAQi1G,EAAEsoC,SAAS,GAAG,IAAItoC,EAAE6nC,YAAY1gK,IAAIm9B,EAAEslI,cAAc,OAAOziK,IAAIm9B,EAAEslI,eAAep2I,EAAE8Q,EAAE+kI,UAAU71I,IAAI8Q,EAAE+kI,UAAUliK,EAAEy0G,EAAEquD,WAAWrmK,KAAKgkK,MAAMhkK,KAAK+kK,MAAMxhK,GAAGvD,KAAK+jK,OAAM,EAAGxgK,IAAIm9B,EAAE6kI,MAAM31I,IAAI8Q,EAAEulI,eAAejmK,KAAK+kK,MAAMrkI,EAAE6kI,MAAMnpC,EAAE6nC,UAAU,GAAE,EAAG,EAAEr0I,EAAEupB,UAAU6rH,OAAO,SAASp3J,GAAG5N,KAAKikD,OAAO3/C,KAAKsJ,EAAE,EAAEgiB,EAAEupB,UAAU4rH,MAAM,SAASn3J,GAAGA,IAAI8yB,EAAE6kI,OAAO,WAAWvlK,KAAKmC,QAAQmkC,GAAGtmC,KAAK8N,OAAO9N,KAAKikD,OAAO31C,KAAK,IAAItO,KAAK8N,OAAO4hE,EAAE01F,cAAcplK,KAAKikD,SAASjkD,KAAKikD,OAAO,GAAGjkD,KAAKmI,IAAIyF,EAAE5N,KAAK+e,IAAI/e,KAAKgkK,KAAKjlJ,GAAG,EAAExb,EAAE+iK,QAAQ12I,EAAErsB,EAAEqiK,QAAQv7J,EAAE9G,EAAE45J,WAAjzD,SAAWvvJ,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAI8Q,KAAI,EAAGtU,EAAEuD,EAAEC,EAAE,EAAgxDtK,EAAEgjK,OAAOl8J,CAAC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAE,oBAAoBktI,YAAY,oBAAoBC,aAAa,oBAAoByJ,WAAWjjK,EAAEk3C,OAAO,SAAS7sC,GAAG,IAAI,IAAIC,EAAEV,MAAMgsC,UAAUjmC,MAAMkmC,KAAKrmC,UAAU,GAAGlF,EAAE1H,QAAQ,CAAC,IAAI5C,EAAEsK,EAAE0G,QAAQ,GAAGhR,EAAE,CAAC,GAAG,iBAAiBA,EAAE,MAAM,IAAIsyI,UAAUtyI,EAAE,sBAAsB,IAAI,IAAIqsB,KAAKrsB,EAAEA,EAAEyqE,eAAep+C,KAAKhiB,EAAEgiB,GAAGrsB,EAAEqsB,GAAG,CAAC,CAAC,OAAOhiB,CAAC,EAAErK,EAAE2hK,UAAU,SAASt3J,EAAEC,GAAG,OAAOD,EAAEzH,SAAS0H,EAAED,EAAEA,EAAE4yJ,SAAS5yJ,EAAE4yJ,SAAS,EAAE3yJ,IAAID,EAAEzH,OAAO0H,EAAED,EAAE,EAAE,IAAIvD,EAAE,CAAC+7J,SAAS,SAASx4J,EAAEC,EAAEtK,EAAEqsB,EAAEvlB,GAAG,GAAGwD,EAAE2yJ,UAAU5yJ,EAAE4yJ,SAAqB5yJ,EAAEiM,IAAIhM,EAAE2yJ,SAASj9J,EAAEA,EAAEqsB,GAAGvlB,QAAG,IAAI,IAAIrD,EAAE,EAAEA,EAAE4oB,EAAE5oB,IAAI4G,EAAEvD,EAAErD,GAAG6G,EAAEtK,EAAEyD,EAAE,EAAEo+J,cAAc,SAASx3J,GAAG,IAAIC,EAAEtK,EAAEqsB,EAAEvlB,EAAErD,EAAEgxG,EAAE,IAAIpoF,EAAE,EAAE/hB,EAAE,EAAEtK,EAAEqK,EAAEzH,OAAO0H,EAAEtK,EAAEsK,IAAI+hB,GAAGhiB,EAAEC,GAAG1H,OAAO,IAAI6xG,EAAE,IAAI8kD,WAAWltI,GAAGvlB,EAAE,EAAEwD,EAAE,EAAEtK,EAAEqK,EAAEzH,OAAO0H,EAAEtK,EAAEsK,IAAI7G,EAAE4G,EAAEC,GAAGmqG,EAAEn+F,IAAI7S,EAAEqD,GAAGA,GAAGrD,EAAEb,OAAO,OAAO6xG,CAAC,GAAGhxG,EAAE,CAACo/J,SAAS,SAASx4J,EAAEC,EAAEtK,EAAEqsB,EAAEvlB,GAAG,IAAI,IAAIrD,EAAE,EAAEA,EAAE4oB,EAAE5oB,IAAI4G,EAAEvD,EAAErD,GAAG6G,EAAEtK,EAAEyD,EAAE,EAAEo+J,cAAc,SAASx3J,GAAG,MAAM,GAAGkZ,OAAO6hB,MAAM,GAAG/6B,EAAE,GAAGrK,EAAEkjK,SAAS,SAAS74J,GAAGA,GAAGrK,EAAEqhK,KAAK9H,WAAWv5J,EAAEmjK,MAAM3J,YAAYx5J,EAAEojK,MAAMH,WAAWjjK,EAAEk3C,OAAOl3C,EAAE8G,KAAK9G,EAAEqhK,KAAKz3J,MAAM5J,EAAEmjK,MAAMv5J,MAAM5J,EAAEojK,MAAMx5J,MAAM5J,EAAEk3C,OAAOl3C,EAAEyD,GAAG,EAAEzD,EAAEkjK,SAAS72I,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShiB,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,EAAEC,GAAG,GAAGA,EAAE,QAAQD,EAAE4yJ,UAAUxoD,IAAIpqG,EAAE4yJ,UAAUx5J,GAAG,OAAOkU,OAAOg/H,aAAavxG,MAAM,KAAKt+B,EAAE66J,UAAUt3J,EAAEC,IAAI,IAAI,IAAItK,EAAE,GAAGqsB,EAAE,EAAEA,EAAE/hB,EAAE+hB,IAAIrsB,GAAG2X,OAAOg/H,aAAatsI,EAAEgiB,IAAI,OAAOrsB,CAAC,CAAC,IAAI8G,EAAEuD,EAAE,YAAY5G,GAAE,EAAGgxG,GAAE,EAAG,IAAI98F,OAAOg/H,aAAavxG,MAAM,KAAK,CAAC,GAAiB,CAAb,MAAM+mC,GAAG1oE,GAAE,CAAE,CAAC,IAAIkU,OAAOg/H,aAAavxG,MAAM,KAAK,IAAIm0H,WAAW,GAAiB,CAAb,MAAMptF,GAAGsoC,GAAE,CAAE,CAAC,IAAI,IAAI3kG,EAAE,IAAIhJ,EAAEu6J,KAAK,KAAKlkI,EAAE,EAAEA,EAAE,IAAIA,IAAIrtB,EAAEqtB,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAErtB,EAAE,KAAKA,EAAE,KAAK,EAAE9P,EAAE8gK,WAAW,SAASz2J,GAAG,IAAIC,EAAEtK,EAAEqsB,EAAE5oB,EAAEgxG,EAAEtoC,EAAE9hE,EAAEzH,OAAOkN,EAAE,EAAE,IAAIrM,EAAE,EAAEA,EAAE0oE,EAAE1oE,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAE0hJ,WAAWtoJ,MAAsBA,EAAE,EAAE0oE,GAAwB,QAAS,OAA7B9/C,EAAEhiB,EAAE0hJ,WAAWtoJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKqsB,EAAE,OAAO5oB,KAAMqM,GAAG9P,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIsK,EAAE,IAAIxD,EAAEu6J,KAAKvxJ,GAAG2kG,EAAE,EAAEhxG,EAAE,EAAEgxG,EAAE3kG,EAAErM,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAE0hJ,WAAWtoJ,MAAsBA,EAAE,EAAE0oE,GAAwB,QAAS,OAA7B9/C,EAAEhiB,EAAE0hJ,WAAWtoJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKqsB,EAAE,OAAO5oB,KAAMzD,EAAE,IAAIsK,EAAEmqG,KAAKz0G,EAAEA,EAAE,MAAMsK,EAAEmqG,KAAK,IAAIz0G,IAAI,EAAEsK,EAAEmqG,KAAK,IAAI,GAAGz0G,GAAGA,EAAE,OAAOsK,EAAEmqG,KAAK,IAAIz0G,IAAI,GAAGsK,EAAEmqG,KAAK,IAAIz0G,IAAI,EAAE,GAAGsK,EAAEmqG,KAAK,IAAI,GAAGz0G,IAAIsK,EAAEmqG,KAAK,IAAIz0G,IAAI,GAAGsK,EAAEmqG,KAAK,IAAIz0G,IAAI,GAAG,GAAGsK,EAAEmqG,KAAK,IAAIz0G,IAAI,EAAE,GAAGsK,EAAEmqG,KAAK,IAAI,GAAGz0G,GAAG,OAAOsK,CAAC,EAAEtK,EAAE0hK,cAAc,SAASr3J,GAAG,OAAOgiB,EAAEhiB,EAAEA,EAAEzH,OAAO,EAAE5C,EAAEoiK,cAAc,SAAS/3J,GAAG,IAAI,IAAIC,EAAE,IAAIxD,EAAEu6J,KAAKh3J,EAAEzH,QAAQ5C,EAAE,EAAEqsB,EAAE/hB,EAAE1H,OAAO5C,EAAEqsB,EAAErsB,IAAIsK,EAAEtK,GAAGqK,EAAE0hJ,WAAW/rJ,GAAG,OAAOsK,CAAC,EAAEtK,EAAE4iK,WAAW,SAASv4J,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAEgxG,EAAEtoC,EAAE7hE,GAAGD,EAAEzH,OAAOu6B,EAAE,IAAIvzB,MAAM,EAAEuiE,GAAG,IAAIrlE,EAAE,EAAE9G,EAAE,EAAEA,EAAEmsE,GAAG,IAAG1oE,EAAE4G,EAAErK,MAAO,IAAIm9B,EAAEr2B,KAAKrD,OAAO,IAAGgxG,EAAE3kG,EAAErM,IAAK,EAAE05B,EAAEr2B,KAAK,MAAM9G,GAAGy0G,EAAE,MAAM,CAAC,IAAIhxG,GAAG,IAAIgxG,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAGz0G,EAAEmsE,GAAG1oE,EAAEA,GAAG,EAAE,GAAG4G,EAAErK,KAAKy0G,IAAIA,EAAE,EAAEt3E,EAAEr2B,KAAK,MAAMrD,EAAE,MAAM05B,EAAEr2B,KAAKrD,GAAGA,GAAG,MAAM05B,EAAEr2B,KAAK,MAAMrD,GAAG,GAAG,KAAK05B,EAAEr2B,KAAK,MAAM,KAAKrD,EAAE,CAAC,OAAO4oB,EAAE8Q,EAAEr2B,EAAE,EAAE9G,EAAE2iK,WAAW,SAASt4J,EAAEC,GAAG,IAAItK,EAAE,KAAIsK,EAAEA,GAAGD,EAAEzH,QAASyH,EAAEzH,SAAS0H,EAAED,EAAEzH,QAAQ5C,EAAEsK,EAAE,EAAEtK,GAAG,GAAG,MAAO,IAAIqK,EAAErK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANsK,EAAUtK,EAAE8P,EAAEzF,EAAErK,IAAIsK,EAAEtK,EAAEsK,CAAC,CAAC,EAAE,CAAC,WAAW,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAA2KsK,EAAEnO,QAAhK,SAAWkO,EAAEC,EAAEtK,EAAEqsB,GAAG,IAAI,IAAIvlB,EAAE,MAAMuD,EAAE,EAAE5G,EAAE4G,IAAI,GAAG,MAAM,EAAEoqG,EAAE,EAAE,IAAIz0G,GAAG,CAAeA,GAAdy0G,EAAEz0G,EAAE,IAAI,IAAIA,EAAO,GAAgByD,EAAEA,GAAfqD,EAAEA,EAAEwD,EAAE+hB,KAAK,GAAQ,UAAUooF,GAAG3tG,GAAG,MAAMrD,GAAG,KAAK,CAAC,OAAOqD,EAAErD,GAAG,GAAG,CAAC,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS4G,EAAEC,EAAEtK,GAAG,aAAasK,EAAEnO,QAAQ,CAACgmK,WAAW,EAAEkB,gBAAgB,EAAEX,aAAa,EAAEY,aAAa,EAAEpB,SAAS,EAAEqB,QAAQ,EAAEC,QAAQ,EAAExB,KAAK,EAAES,aAAa,EAAEH,YAAY,EAAEmB,SAAS,EAAEC,gBAAgB,EAAEC,cAAc,EAAEnB,aAAa,EAAEoB,iBAAiB,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,uBAAuB,EAAEC,WAAW,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAASn6J,EAAEC,EAAEtK,GAAG,aAA6N,IAAIyD,EAApN,WAAa,IAAI,IAAI4G,EAAEC,EAAE,GAAGtK,EAAE,EAAEA,EAAE,IAAIA,IAAI,CAACqK,EAAErK,EAAE,IAAI,IAAIqsB,EAAE,EAAEA,EAAE,EAAEA,IAAIhiB,EAAE,EAAEA,EAAE,WAAWA,IAAI,EAAEA,IAAI,EAAEC,EAAEtK,GAAGqK,CAAC,CAAC,OAAOC,CAAC,CAAuG+hB,GAAI/hB,EAAEnO,QAA5G,SAAWkO,EAAEC,EAAEtK,EAAEqsB,GAAG,IAAIvlB,EAAErD,EAAEgxG,EAAEpoF,EAAErsB,EAAEqK,IAAI,EAAE,IAAI,IAAI8hE,EAAE9/C,EAAE8/C,EAAEsoC,EAAEtoC,IAAI9hE,EAAEA,IAAI,EAAEvD,EAAE,KAAKuD,EAAEC,EAAE6hE,KAAK,OAAU,EAAH9hE,CAAI,CAAsB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,EAAEC,GAAG,OAAOD,EAAEmR,IAAIipJ,EAAEn6J,GAAGA,CAAC,CAAC,SAASxD,EAAEuD,GAAG,OAAOA,GAAG,IAAIA,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS5G,EAAE4G,GAAG,IAAI,IAAIC,EAAED,EAAEzH,SAAS0H,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAASmqG,EAAEpqG,GAAG,IAAIC,EAAED,EAAE+4C,MAAMpjD,EAAEsK,EAAE8R,QAAQpc,EAAEqK,EAAEq2J,YAAY1gK,EAAEqK,EAAEq2J,WAAW,IAAI1gK,IAAIu7J,EAAEsH,SAASx4J,EAAE+2J,OAAO92J,EAAEo6J,YAAYp6J,EAAEq6J,YAAY3kK,EAAEqK,EAAEi3J,UAAUj3J,EAAEi3J,UAAUthK,EAAEsK,EAAEq6J,aAAa3kK,EAAEqK,EAAEu6J,WAAW5kK,EAAEqK,EAAEq2J,WAAW1gK,EAAEsK,EAAE8R,SAASpc,EAAE,IAAIsK,EAAE8R,UAAU9R,EAAEq6J,YAAY,GAAG,CAAC,SAASx4F,EAAE9hE,EAAEC,GAAG3J,EAAEkkK,gBAAgBx6J,EAAEA,EAAEy6J,aAAa,EAAEz6J,EAAEy6J,aAAa,EAAEz6J,EAAE06J,SAAS16J,EAAEy6J,YAAYx6J,GAAGD,EAAEy6J,YAAYz6J,EAAE06J,SAAStwD,EAAEpqG,EAAEo2J,KAAK,CAAC,SAAS3wJ,EAAEzF,EAAEC,GAAGD,EAAEq6J,YAAYr6J,EAAE+R,WAAW9R,CAAC,CAAC,SAAS6yB,EAAE9yB,EAAEC,GAAGD,EAAEq6J,YAAYr6J,EAAE+R,WAAW9R,IAAI,EAAE,IAAID,EAAEq6J,YAAYr6J,EAAE+R,WAAW,IAAI9R,CAAC,CAAC,SAASwG,EAAEzG,EAAEC,EAAEtK,EAAEqsB,GAAG,IAAIvlB,EAAEuD,EAAE82J,SAAS,OAAOr6J,EAAEulB,IAAIvlB,EAAEulB,GAAG,IAAIvlB,EAAE,GAAGuD,EAAE82J,UAAUr6J,EAAEy0J,EAAEsH,SAASv4J,EAAED,EAAE42J,MAAM52J,EAAE62J,QAAQp6J,EAAE9G,GAAG,IAAIqK,EAAE+4C,MAAM4hH,KAAK36J,EAAE46J,MAAMC,EAAE76J,EAAE46J,MAAM36J,EAAExD,EAAE9G,GAAG,IAAIqK,EAAE+4C,MAAM4hH,OAAO36J,EAAE46J,MAAME,EAAE96J,EAAE46J,MAAM36J,EAAExD,EAAE9G,IAAIqK,EAAE62J,SAASp6J,EAAEuD,EAAE+6J,UAAUt+J,EAAEA,EAAE,CAAC,SAASiK,EAAE1G,EAAEC,GAAG,IAAItK,EAAEqsB,EAAEvlB,EAAEuD,EAAEg7J,iBAAiB5hK,EAAE4G,EAAE06J,SAAStwD,EAAEpqG,EAAEi7J,YAAYn5F,EAAE9hE,EAAEk7J,WAAWz1J,EAAEzF,EAAE06J,SAAS16J,EAAEm7J,OAAOC,GAAGp7J,EAAE06J,UAAU16J,EAAEm7J,OAAOC,IAAI,EAAEtoI,EAAE9yB,EAAEoL,OAAO3E,EAAEzG,EAAEq7J,OAAO30J,EAAE1G,EAAEs7J,KAAK9sC,EAAExuH,EAAE06J,SAASa,GAAG/pH,EAAE1e,EAAE15B,EAAEgxG,EAAE,GAAG3yF,EAAEqb,EAAE15B,EAAEgxG,GAAGpqG,EAAEi7J,aAAaj7J,EAAEw7J,aAAa/+J,IAAI,GAAGqlE,EAAE9hE,EAAEy7J,YAAY35F,EAAE9hE,EAAEy7J,WAAW,MAAU3oI,GAAJn9B,EAAEsK,GAAMmqG,KAAK3yF,GAAGqb,EAAEn9B,EAAEy0G,EAAE,KAAK54D,GAAG1e,EAAEn9B,KAAKm9B,EAAE15B,IAAI05B,IAAIn9B,KAAKm9B,EAAE15B,EAAE,GAAG,CAACA,GAAG,EAAEzD,IAAI,UAASm9B,IAAI15B,KAAK05B,IAAIn9B,IAAIm9B,IAAI15B,KAAK05B,IAAIn9B,IAAIm9B,IAAI15B,KAAK05B,IAAIn9B,IAAIm9B,IAAI15B,KAAK05B,IAAIn9B,IAAIm9B,IAAI15B,KAAK05B,IAAIn9B,IAAIm9B,IAAI15B,KAAK05B,IAAIn9B,IAAIm9B,IAAI15B,KAAK05B,IAAIn9B,IAAIm9B,IAAI15B,KAAK05B,IAAIn9B,IAAIyD,EAAEo1H,GAAG,GAAGxsG,EAAEu5I,IAAI/sC,EAAEp1H,GAAGA,EAAEo1H,EAAE+sC,GAAGv5I,EAAEooF,EAAE,CAAC,GAAGpqG,EAAE07J,YAAYz7J,EAAEmqG,EAAEpoF,EAAEA,GAAG8/C,EAAE,MAAMtwB,EAAE1e,EAAE15B,EAAEgxG,EAAE,GAAG3yF,EAAEqb,EAAE15B,EAAEgxG,EAAE,CAAC,SAAQnqG,EAAEyG,EAAEzG,EAAEwG,IAAIhB,GAAG,KAAMhJ,GAAG,OAAO2tG,GAAGpqG,EAAEy7J,UAAUrxD,EAAEpqG,EAAEy7J,SAAS,CAAC,SAASjtC,EAAExuH,GAAG,IAAIC,EAAEtK,EAAEqsB,EAAEvlB,EAAErD,EAAEgxG,EAAEpqG,EAAEm7J,OAAO,EAAE,CAAC,GAAG1+J,EAAEuD,EAAE27J,YAAY37J,EAAEy7J,UAAUz7J,EAAE06J,SAAS16J,EAAE06J,UAAUtwD,GAAGA,EAAEgxD,IAAI,CAAClK,EAAEsH,SAASx4J,EAAEoL,OAAOpL,EAAEoL,OAAOg/F,EAAEA,EAAE,GAAGpqG,EAAE07J,aAAatxD,EAAEpqG,EAAE06J,UAAUtwD,EAAEpqG,EAAEy6J,aAAarwD,EAAgBnqG,EAAdtK,EAAEqK,EAAE47J,UAAc,GAAG55I,EAAEhiB,EAAE3M,OAAO4M,GAAGD,EAAE3M,KAAK4M,GAAG+hB,GAAGooF,EAAEpoF,EAAEooF,EAAE,UAAUz0G,GAAOsK,EAAJtK,EAAEy0G,EAAM,GAAGpoF,EAAEhiB,EAAEs7J,OAAOr7J,GAAGD,EAAEs7J,KAAKr7J,GAAG+hB,GAAGooF,EAAEpoF,EAAEooF,EAAE,UAAUz0G,GAAG8G,GAAG2tG,CAAC,CAAC,GAAG,IAAIpqG,EAAEo2J,KAAKU,SAAS,MAAM,GAAGnhK,EAAE8Q,EAAEzG,EAAEo2J,KAAKp2J,EAAEoL,OAAOpL,EAAE06J,SAAS16J,EAAEy7J,UAAUh/J,GAAGuD,EAAEy7J,WAAW9lK,EAAEqK,EAAEy7J,UAAUz7J,EAAE67J,QAAQC,GAAG,IAAI1iK,EAAE4G,EAAE06J,SAAS16J,EAAE67J,OAAO77J,EAAE+7J,MAAM/7J,EAAEoL,OAAOhS,GAAG4G,EAAE+7J,OAAO/7J,EAAE+7J,OAAO/7J,EAAEg8J,WAAWh8J,EAAEoL,OAAOhS,EAAE,IAAI4G,EAAEi8J,UAAUj8J,EAAE67J,SAAS77J,EAAE+7J,OAAO/7J,EAAE+7J,OAAO/7J,EAAEg8J,WAAWh8J,EAAEoL,OAAOhS,EAAE0iK,GAAG,IAAI97J,EAAEi8J,UAAUj8J,EAAEs7J,KAAKliK,EAAE4G,EAAEq7J,QAAQr7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE3M,KAAK2M,EAAE+7J,OAAO3iK,EAAEA,IAAI4G,EAAE67J,WAAW77J,EAAEy7J,UAAUz7J,EAAE67J,OAAOC,OAAO,OAAO97J,EAAEy7J,UAAUL,IAAI,IAAIp7J,EAAEo2J,KAAKU,SAAS,CAAwiB,SAASr/I,EAAEzX,EAAEC,GAAG,IAAI,IAAItK,EAAEqsB,IAAI,CAAC,GAAGhiB,EAAEy7J,UAAUL,GAAG,CAAC,GAAG5sC,EAAExuH,GAAGA,EAAEy7J,UAAUL,IAAIn7J,IAAIi8J,EAAE,OAAOC,GAAG,GAAG,IAAIn8J,EAAEy7J,UAAU,KAAK,CAAC,GAAG9lK,EAAE,EAAEqK,EAAEy7J,WAAWK,KAAK97J,EAAE+7J,OAAO/7J,EAAE+7J,OAAO/7J,EAAEg8J,WAAWh8J,EAAEoL,OAAOpL,EAAE06J,SAASoB,GAAG,IAAI97J,EAAEi8J,UAAUtmK,EAAEqK,EAAEs7J,KAAKt7J,EAAE06J,SAAS16J,EAAEq7J,QAAQr7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE06J,UAAU,IAAI/kK,GAAGqK,EAAE06J,SAAS/kK,GAAGqK,EAAEm7J,OAAOC,KAAKp7J,EAAEo8J,aAAa11J,EAAE1G,EAAErK,IAAIqK,EAAEo8J,cAAcN,GAAG,GAAG95I,EAAE1rB,EAAE+lK,UAAUr8J,EAAEA,EAAE06J,SAAS16J,EAAE07J,YAAY17J,EAAEo8J,aAAaN,IAAI97J,EAAEy7J,WAAWz7J,EAAEo8J,aAAap8J,EAAEo8J,cAAcp8J,EAAEs8J,gBAAgBt8J,EAAEy7J,WAAWK,GAAG,CAAC97J,EAAEo8J,eAAe,GAAGp8J,EAAE06J,WAAW16J,EAAE+7J,OAAO/7J,EAAE+7J,OAAO/7J,EAAEg8J,WAAWh8J,EAAEoL,OAAOpL,EAAE06J,SAASoB,GAAG,IAAI97J,EAAEi8J,UAAUtmK,EAAEqK,EAAEs7J,KAAKt7J,EAAE06J,SAAS16J,EAAEq7J,QAAQr7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE06J,eAAe,KAAM16J,EAAEo8J,cAAcp8J,EAAE06J,UAAU,MAAM16J,EAAE06J,UAAU16J,EAAEo8J,aAAap8J,EAAEo8J,aAAa,EAAEp8J,EAAE+7J,MAAM/7J,EAAEoL,OAAOpL,EAAE06J,UAAU16J,EAAE+7J,OAAO/7J,EAAE+7J,OAAO/7J,EAAEg8J,WAAWh8J,EAAEoL,OAAOpL,EAAE06J,SAAS,IAAI16J,EAAEi8J,eAAej6I,EAAE1rB,EAAE+lK,UAAUr8J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAE06J,WAAW16J,EAAEy7J,YAAYz7J,EAAE06J,WAAW,GAAG14I,IAAI8/C,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAOn8J,EAAE67J,OAAO77J,EAAE06J,SAASoB,GAAG,EAAE97J,EAAE06J,SAASoB,GAAG,EAAE77J,IAAIs8J,GAAGz6F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,UAAUmG,GAAGC,IAAIz8J,EAAE08J,WAAW56F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASzoJ,EAAElU,EAAEC,GAAG,IAAI,IAAItK,EAAEqsB,EAAEvlB,IAAI,CAAC,GAAGuD,EAAEy7J,UAAUL,GAAG,CAAC,GAAG5sC,EAAExuH,GAAGA,EAAEy7J,UAAUL,IAAIn7J,IAAIi8J,EAAE,OAAOC,GAAG,GAAG,IAAIn8J,EAAEy7J,UAAU,KAAK,CAAC,GAAG9lK,EAAE,EAAEqK,EAAEy7J,WAAWK,KAAK97J,EAAE+7J,OAAO/7J,EAAE+7J,OAAO/7J,EAAEg8J,WAAWh8J,EAAEoL,OAAOpL,EAAE06J,SAASoB,GAAG,IAAI97J,EAAEi8J,UAAUtmK,EAAEqK,EAAEs7J,KAAKt7J,EAAE06J,SAAS16J,EAAEq7J,QAAQr7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE06J,UAAU16J,EAAEi7J,YAAYj7J,EAAEo8J,aAAap8J,EAAE48J,WAAW58J,EAAE07J,YAAY17J,EAAEo8J,aAAaN,GAAG,EAAE,IAAInmK,GAAGqK,EAAEi7J,YAAYj7J,EAAEs8J,gBAAgBt8J,EAAE06J,SAAS/kK,GAAGqK,EAAEm7J,OAAOC,KAAKp7J,EAAEo8J,aAAa11J,EAAE1G,EAAErK,GAAGqK,EAAEo8J,cAAc,IAAIp8J,EAAEi2J,WAAW4G,GAAG78J,EAAEo8J,eAAeN,IAAI97J,EAAE06J,SAAS16J,EAAE07J,YAAY,QAAQ17J,EAAEo8J,aAAaN,GAAG,IAAI97J,EAAEi7J,aAAaa,IAAI97J,EAAEo8J,cAAcp8J,EAAEi7J,YAAY,CAACx+J,EAAEuD,EAAE06J,SAAS16J,EAAEy7J,UAAUK,GAAG95I,EAAE1rB,EAAE+lK,UAAUr8J,EAAEA,EAAE06J,SAAS,EAAE16J,EAAE48J,WAAW58J,EAAEi7J,YAAYa,IAAI97J,EAAEy7J,WAAWz7J,EAAEi7J,YAAY,EAAEj7J,EAAEi7J,aAAa,EAAE,KAAIj7J,EAAE06J,UAAUj+J,IAAIuD,EAAE+7J,OAAO/7J,EAAE+7J,OAAO/7J,EAAEg8J,WAAWh8J,EAAEoL,OAAOpL,EAAE06J,SAASoB,GAAG,IAAI97J,EAAEi8J,UAAUtmK,EAAEqK,EAAEs7J,KAAKt7J,EAAE06J,SAAS16J,EAAEq7J,QAAQr7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE3M,KAAK2M,EAAE+7J,OAAO/7J,EAAE06J,gBAAgB,KAAM16J,EAAEi7J,aAAa,GAAGj7J,EAAE88J,gBAAgB,EAAE98J,EAAEo8J,aAAaN,GAAG,EAAE97J,EAAE06J,WAAW14I,IAAI8/C,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW,OAAO8F,EAAE,MAAM,GAAGn8J,EAAE88J,iBAAiB,IAAG96I,EAAE1rB,EAAE+lK,UAAUr8J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAE06J,SAAS,MAAO54F,EAAE9hE,GAAE,GAAIA,EAAE06J,WAAW16J,EAAEy7J,YAAY,IAAIz7J,EAAEo2J,KAAKC,UAAU,OAAO8F,QAAQn8J,EAAE88J,gBAAgB,EAAE98J,EAAE06J,WAAW16J,EAAEy7J,WAAW,CAAC,OAAOz7J,EAAE88J,kBAAkB96I,EAAE1rB,EAAE+lK,UAAUr8J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAE06J,SAAS,IAAI16J,EAAE88J,gBAAgB,GAAG98J,EAAE67J,OAAO77J,EAAE06J,SAASoB,GAAG,EAAE97J,EAAE06J,SAASoB,GAAG,EAAE77J,IAAIs8J,GAAGz6F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,UAAUmG,GAAGC,IAAIz8J,EAAE08J,WAAW56F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASpjJ,EAAEvZ,EAAEC,GAAG,IAAI,IAAItK,EAAEqsB,EAAEvlB,EAAErD,EAAEgxG,EAAEpqG,EAAEoL,SAAS,CAAC,GAAGpL,EAAEy7J,WAAWF,GAAG,CAAC,GAAG/sC,EAAExuH,GAAGA,EAAEy7J,WAAWF,IAAIt7J,IAAIi8J,EAAE,OAAOC,GAAG,GAAG,IAAIn8J,EAAEy7J,UAAU,KAAK,CAAC,GAAGz7J,EAAEo8J,aAAa,EAAEp8J,EAAEy7J,WAAWK,IAAI97J,EAAE06J,SAAS,IAAmB14I,EAAEooF,EAAjB3tG,EAAEuD,EAAE06J,SAAS,MAAatwD,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,GAAI,CAACrD,EAAE4G,EAAE06J,SAASa,GAAG,UAASv5I,IAAIooF,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,IAAIulB,IAAIooF,IAAI3tG,IAAIA,EAAErD,GAAG4G,EAAEo8J,aAAab,IAAIniK,EAAEqD,GAAGuD,EAAEo8J,aAAap8J,EAAEy7J,YAAYz7J,EAAEo8J,aAAap8J,EAAEy7J,UAAU,CAAC,GAAGz7J,EAAEo8J,cAAcN,IAAInmK,EAAEW,EAAE+lK,UAAUr8J,EAAE,EAAEA,EAAEo8J,aAAaN,IAAI97J,EAAEy7J,WAAWz7J,EAAEo8J,aAAap8J,EAAE06J,UAAU16J,EAAEo8J,aAAap8J,EAAEo8J,aAAa,IAAIzmK,EAAEW,EAAE+lK,UAAUr8J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAE06J,WAAW16J,EAAEy7J,YAAYz7J,EAAE06J,YAAY/kK,IAAImsE,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAOn8J,EAAE67J,OAAO,EAAE57J,IAAIs8J,GAAGz6F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,UAAUmG,GAAGC,IAAIz8J,EAAE08J,WAAW56F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAAS36J,EAAEhC,EAAEC,GAAG,IAAI,IAAItK,IAAI,CAAC,GAAG,IAAIqK,EAAEy7J,YAAYjtC,EAAExuH,GAAG,IAAIA,EAAEy7J,WAAW,CAAC,GAAGx7J,IAAIi8J,EAAE,OAAOC,GAAG,KAAK,CAAC,GAAGn8J,EAAEo8J,aAAa,EAAEzmK,EAAEW,EAAE+lK,UAAUr8J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAE06J,WAAW16J,EAAEy7J,YAAYz7J,EAAE06J,WAAW/kK,IAAImsE,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAOn8J,EAAE67J,OAAO,EAAE57J,IAAIs8J,GAAGz6F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,UAAUmG,GAAGC,IAAIz8J,EAAE08J,WAAW56F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAAS39J,EAAEgB,EAAEC,EAAEtK,EAAEqsB,EAAEvlB,GAAGrK,KAAK2qK,YAAY/8J,EAAE5N,KAAK4qK,SAAS/8J,EAAE7N,KAAK6qK,YAAYtnK,EAAEvD,KAAK8qK,UAAUl7I,EAAE5vB,KAAKwgJ,KAAKn2I,CAAC,CAA6T,SAAS8rE,IAAIn2E,KAAKgkK,KAAK,KAAKhkK,KAAKqX,OAAO,EAAErX,KAAKioK,YAAY,KAAKjoK,KAAK+qK,iBAAiB,EAAE/qK,KAAKkoK,YAAY,EAAEloK,KAAK2f,QAAQ,EAAE3f,KAAKuoK,KAAK,EAAEvoK,KAAKgrK,OAAO,KAAKhrK,KAAKirK,QAAQ,EAAEjrK,KAAKgX,OAAOk0J,EAAElrK,KAAKmrK,YAAY,EAAEnrK,KAAK+oK,OAAO,EAAE/oK,KAAKorK,OAAO,EAAEprK,KAAKipK,OAAO,EAAEjpK,KAAKgZ,OAAO,KAAKhZ,KAAKupK,YAAY,EAAEvpK,KAAKkpK,KAAK,KAAKlpK,KAAKiB,KAAK,KAAKjB,KAAK2pK,MAAM,EAAE3pK,KAAKwpK,UAAU,EAAExpK,KAAKqrK,UAAU,EAAErrK,KAAK6pK,UAAU,EAAE7pK,KAAK4pK,WAAW,EAAE5pK,KAAKqoK,YAAY,EAAEroK,KAAKgqK,aAAa,EAAEhqK,KAAKwqK,WAAW,EAAExqK,KAAK0qK,gBAAgB,EAAE1qK,KAAKsoK,SAAS,EAAEtoK,KAAKspK,YAAY,EAAEtpK,KAAKqpK,UAAU,EAAErpK,KAAK6oK,YAAY,EAAE7oK,KAAK4oK,iBAAiB,EAAE5oK,KAAKkqK,eAAe,EAAElqK,KAAKk9J,MAAM,EAAEl9J,KAAK6jK,SAAS,EAAE7jK,KAAKopK,WAAW,EAAEppK,KAAK8oK,WAAW,EAAE9oK,KAAKsrK,UAAU,IAAIxM,EAAE4H,MAAM,EAAE6E,GAAIvrK,KAAKwrK,UAAU,IAAI1M,EAAE4H,MAAM,GAAG,EAAE+E,EAAG,IAAIzrK,KAAK0rK,QAAQ,IAAI5M,EAAE4H,MAAM,GAAG,EAAEiF,EAAG,IAAI3kK,EAAEhH,KAAKsrK,WAAWtkK,EAAEhH,KAAKwrK,WAAWxkK,EAAEhH,KAAK0rK,SAAS1rK,KAAK4rK,OAAO,KAAK5rK,KAAK6rK,OAAO,KAAK7rK,KAAK8rK,QAAQ,KAAK9rK,KAAK+rK,SAAS,IAAIjN,EAAE4H,MAAMsF,EAAG,GAAGhsK,KAAKisK,KAAK,IAAInN,EAAE4H,MAAM,EAAEwF,EAAG,GAAGllK,EAAEhH,KAAKisK,MAAMjsK,KAAKmsK,SAAS,EAAEnsK,KAAKosK,SAAS,EAAEpsK,KAAK4/E,MAAM,IAAIk/E,EAAE4H,MAAM,EAAEwF,EAAG,GAAGllK,EAAEhH,KAAK4/E,OAAO5/E,KAAKqsK,MAAM,EAAErsK,KAAKssK,YAAY,EAAEtsK,KAAKsqK,SAAS,EAAEtqK,KAAKusK,MAAM,EAAEvsK,KAAKwsK,QAAQ,EAAExsK,KAAKysK,WAAW,EAAEzsK,KAAK8/I,QAAQ,EAAE9/I,KAAKypK,OAAO,EAAEzpK,KAAK0sK,OAAO,EAAE1sK,KAAK2sK,SAAS,CAAC,CAAC,SAASv5J,EAAExF,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE+4C,OAAO/4C,EAAE+6J,SAAS/6J,EAAEu6J,UAAU,EAAEv6J,EAAEg/J,UAAUC,GAAEh/J,EAAED,EAAE+4C,OAAQhnC,QAAQ,EAAE9R,EAAEq6J,YAAY,EAAEr6J,EAAE06J,KAAK,IAAI16J,EAAE06J,MAAM16J,EAAE06J,MAAM16J,EAAEwJ,OAAOxJ,EAAE06J,KAAKuE,GAAGC,GAAGn/J,EAAE46J,MAAM,IAAI36J,EAAE06J,KAAK,EAAE,EAAE16J,EAAEs9J,WAAWrB,EAAE5lK,EAAE8oK,SAASn/J,GAAGo/J,GAAGr9I,EAAEhiB,EAAEs/J,EAAE,CAAC,SAAS31E,EAAE3pF,GAAG,IAAIC,EAAEuF,EAAExF,GAAG,OAAOC,IAAIo/J,GAAptD,SAAWr/J,GAAGA,EAAE27J,YAAY,EAAE37J,EAAEm7J,OAAO/hK,EAAE4G,EAAE3M,MAAM2M,EAAEs8J,eAAe7L,EAAEzwJ,EAAEsvJ,OAAO0N,SAASh9J,EAAEw7J,WAAW/K,EAAEzwJ,EAAEsvJ,OAAOyN,YAAY/8J,EAAEk7J,WAAWzK,EAAEzwJ,EAAEsvJ,OAAO2N,YAAYj9J,EAAEg7J,iBAAiBvK,EAAEzwJ,EAAEsvJ,OAAO4N,UAAUl9J,EAAE06J,SAAS,EAAE16J,EAAEy6J,YAAY,EAAEz6J,EAAEy7J,UAAU,EAAEz7J,EAAE67J,OAAO,EAAE77J,EAAEo8J,aAAap8J,EAAEi7J,YAAYa,GAAG,EAAE97J,EAAE88J,gBAAgB,EAAE98J,EAAE+7J,MAAM,CAAC,CAA45C1tI,CAAEruB,EAAE+4C,OAAO94C,CAAC,CAA6E,SAASyoD,EAAE1oD,EAAEC,EAAEtK,EAAE8G,EAAErD,EAAEgxG,GAAG,IAAIpqG,EAAE,OAAOs/J,EAAE,IAAIx9F,EAAE,EAAE,GAAG7hE,IAAIo0I,IAAIp0I,EAAE,GAAGxD,EAAE,GAAGqlE,EAAE,EAAErlE,GAAGA,GAAGA,EAAE,KAAKqlE,EAAE,EAAErlE,GAAG,IAAIrD,EAAE,GAAGA,EAAEw3H,GAAGj7H,IAAI2nK,GAAG7gK,EAAE,GAAGA,EAAE,IAAIwD,EAAE,GAAGA,EAAE,GAAGmqG,EAAE,GAAGA,EAAEm1D,EAAE,OAAOv9I,EAAEhiB,EAAEs/J,GAAG,IAAI7iK,IAAIA,EAAE,GAAG,IAAIgJ,EAAE,IAAI8iE,EAAE,OAAOvoE,EAAE+4C,MAAMtzC,EAAEA,EAAE2wJ,KAAKp2J,EAAEyF,EAAEk1J,KAAK74F,EAAEr8D,EAAE23J,OAAO,KAAK33J,EAAE+3J,OAAO/gK,EAAEgJ,EAAE01J,OAAO,GAAG11J,EAAE+3J,OAAO/3J,EAAE41J,OAAO51J,EAAE01J,OAAO,EAAE11J,EAAEg4J,UAAUrkK,EAAE,EAAEqM,EAAEm2J,UAAU,GAAGn2J,EAAEg4J,UAAUh4J,EAAEw2J,UAAUx2J,EAAEm2J,UAAU,EAAEn2J,EAAEu2J,eAAev2J,EAAEg4J,UAAU3B,GAAG,GAAGA,IAAIr2J,EAAE2F,OAAO,IAAI8lJ,EAAE8F,KAAK,EAAEvxJ,EAAE01J,QAAQ11J,EAAEpS,KAAK,IAAI69J,EAAE4H,MAAMrzJ,EAAEm2J,WAAWn2J,EAAE61J,KAAK,IAAIpK,EAAE4H,MAAMrzJ,EAAE01J,QAAQ11J,EAAEi5J,YAAY,GAAGtlK,EAAE,EAAEqM,EAAE03J,iBAAiB,EAAE13J,EAAEi5J,YAAYj5J,EAAE40J,YAAY,IAAInJ,EAAE8F,KAAKvxJ,EAAE03J,kBAAkB13J,EAAEk5J,MAAM,EAAEl5J,EAAEi5J,YAAYj5J,EAAEg5J,MAAM,EAAEh5J,EAAEi5J,YAAYj5J,EAAE6pJ,MAAMrvJ,EAAEwF,EAAEwwJ,SAAS7rD,EAAE3kG,EAAE2D,OAAOzT,EAAEg0F,EAAE3pF,EAAE,CAAy6I,IAAIywJ,EAAES,EAAElxJ,EAAE,mBAAmB1J,EAAE0J,EAAE,WAAW66J,EAAE76J,EAAE,aAAa86J,EAAE96J,EAAE,WAAWo6J,EAAEp6J,EAAE,cAAck8J,EAAE,EAAEsD,EAAE,EAAErtK,EAAE,EAAEoqK,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,GAAG,EAAEK,GAAG,EAAEC,GAAG,EAAEvrB,GAAG,EAAEwoB,EAAE,EAAEzhI,EAAE,EAAEykI,EAAE,EAAEN,EAAE,EAAEO,EAAE,EAAEb,EAAE,EAAE3B,EAAE,EAAE1sC,EAAE,EAAEmvC,EAAG,GAAGC,EAAG,EAAe1B,EAAG2B,IAAQpC,EAAG,GAAGE,EAAG,GAAGJ,EAAG,EAAEW,EAAG,EAAEF,EAAG,GAAGtC,GAAG,EAAEP,GAAG,IAAIH,GAAGG,GAAGO,GAAG,EAAEoE,GAAG,GAAGhB,GAAG,GAAGiB,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,IAAInB,GAAG,IAAIoB,GAAG,IAAIpE,GAAG,EAAEQ,GAAG,EAAEH,GAAG,EAAEC,GAAG,EAAE+D,GAAG,EAAE/P,EAAE,CAAC,IAAIzxJ,EAAE,EAAE,EAAE,EAAE,GAAl/W,SAAWgB,EAAEC,GAAG,IAAItK,EAAE,MAAM,IAAIA,EAAEqK,EAAEm9J,iBAAiB,IAAIxnK,EAAEqK,EAAEm9J,iBAAiB,KAAK,CAAC,GAAGn9J,EAAEy7J,WAAW,EAAE,CAAC,GAAGjtC,EAAExuH,GAAG,IAAIA,EAAEy7J,WAAWx7J,IAAIi8J,EAAE,OAAOC,GAAG,GAAG,IAAIn8J,EAAEy7J,UAAU,KAAK,CAACz7J,EAAE06J,UAAU16J,EAAEy7J,UAAUz7J,EAAEy7J,UAAU,EAAE,IAAIz5I,EAAEhiB,EAAEy6J,YAAY9kK,EAAE,IAAI,IAAIqK,EAAE06J,UAAU16J,EAAE06J,UAAU14I,KAAKhiB,EAAEy7J,UAAUz7J,EAAE06J,SAAS14I,EAAEhiB,EAAE06J,SAAS14I,EAAE8/C,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW,OAAO8F,GAAG,GAAGn8J,EAAE06J,SAAS16J,EAAEy6J,aAAaz6J,EAAEm7J,OAAOC,KAAKt5F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAOn8J,EAAE67J,OAAO,EAAE57J,IAAIs8J,GAAGz6F,EAAE9hE,GAAE,GAAI,IAAIA,EAAEo2J,KAAKC,UAAUmG,GAAGC,KAAIz8J,EAAE06J,SAAS16J,EAAEy6J,cAAc34F,EAAE9hE,GAAE,GAAQA,EAAEo2J,KAAKC,WAAW8F,GAAK,IAAi9V,IAAIn9J,EAAE,EAAE,EAAE,EAAE,EAAEyY,GAAG,IAAIzY,EAAE,EAAE,EAAE,GAAG,EAAEyY,GAAG,IAAIzY,EAAE,EAAE,EAAE,GAAG,GAAGyY,GAAG,IAAIzY,EAAE,EAAE,EAAE,GAAG,GAAGkV,GAAG,IAAIlV,EAAE,EAAE,GAAG,GAAG,GAAGkV,GAAG,IAAIlV,EAAE,EAAE,GAAG,IAAI,IAAIkV,GAAG,IAAIlV,EAAE,EAAE,GAAG,IAAI,IAAIkV,GAAG,IAAIlV,EAAE,GAAG,IAAI,IAAI,KAAKkV,GAAG,IAAIlV,EAAE,GAAG,IAAI,IAAI,KAAKkV,IAAIve,EAAE8qK,YAA18J,SAAWzgK,EAAEC,GAAG,OAAOyoD,EAAE1oD,EAAEC,EAAEq9J,EAAEyC,EAAGC,EAAGF,EAAE,EAAi7JnqK,EAAE2gK,aAAa5tG,EAAE/yD,EAAE+qK,aAAa/2E,EAAEh0F,EAAEgrK,iBAAiBn7J,EAAE7P,EAAE4gK,iBAA7vL,SAAWv2J,EAAEC,GAAG,OAAOD,GAAGA,EAAE+4C,MAAM,IAAI/4C,EAAE+4C,MAAM4hH,KAAK2E,GAAGt/J,EAAE+4C,MAAMqkH,OAAOn9J,EAAEo/J,GAAGC,CAAC,EAAqsL3pK,EAAEuhK,QAA9/J,SAAWl3J,EAAEC,GAAG,IAAItK,EAAEmsE,EAAEr7D,EAAEC,EAAE,IAAI1G,IAAIA,EAAE+4C,OAAO94C,EAAEw/J,GAAGx/J,EAAE,EAAE,OAAOD,EAAEgiB,EAAEhiB,EAAEs/J,GAAGA,EAAE,GAAGx9F,EAAE9hE,EAAE+4C,OAAO/4C,EAAE+2J,SAAS/2J,EAAE42J,OAAO,IAAI52J,EAAE82J,UAAUh1F,EAAEr4D,SAAS82J,IAAItgK,IAAIs8J,EAAE,OAAOv6I,EAAEhiB,EAAE,IAAIA,EAAEq2J,UAAUuJ,EAAEN,GAAG,GAAGx9F,EAAEs0F,KAAKp2J,EAAErK,EAAEmsE,EAAEy7F,WAAWz7F,EAAEy7F,WAAWt9J,EAAE6hE,EAAEr4D,SAASy1J,GAAG,GAAG,IAAIp9F,EAAE64F,KAAK36J,EAAE46J,MAAM,EAAEn1J,EAAEq8D,EAAE,IAAIr8D,EAAEq8D,EAAE,KAAKr8D,EAAEq8D,EAAE,GAAGA,EAAEs7F,QAAQ33J,EAAEq8D,GAAGA,EAAEs7F,OAAO38J,KAAK,EAAE,IAAIqhE,EAAEs7F,OAAOwD,KAAK,EAAE,IAAI9+F,EAAEs7F,OAAOyD,MAAM,EAAE,IAAI/+F,EAAEs7F,OAAO7jK,KAAK,EAAE,IAAIuoE,EAAEs7F,OAAOpjD,QAAQ,GAAG,IAAIv0G,EAAEq8D,EAAE,IAAIA,EAAEs7F,OAAO0D,MAAMr7J,EAAEq8D,EAAEA,EAAEs7F,OAAO0D,MAAM,EAAE,KAAKr7J,EAAEq8D,EAAEA,EAAEs7F,OAAO0D,MAAM,GAAG,KAAKr7J,EAAEq8D,EAAEA,EAAEs7F,OAAO0D,MAAM,GAAG,KAAKr7J,EAAEq8D,EAAE,IAAIA,EAAEwtF,MAAM,EAAExtF,EAAEm0F,UAAU76H,GAAG0mC,EAAEwtF,MAAM,EAAE,EAAE,GAAG7pJ,EAAEq8D,EAAE,IAAIA,EAAEs7F,OAAO2D,IAAIj/F,EAAEs7F,OAAOyD,OAAO/+F,EAAEs7F,OAAOyD,MAAMtoK,SAASkN,EAAEq8D,EAAE,IAAIA,EAAEs7F,OAAOyD,MAAMtoK,QAAQkN,EAAEq8D,EAAEA,EAAEs7F,OAAOyD,MAAMtoK,QAAQ,EAAE,MAAMupE,EAAEs7F,OAAOwD,OAAO5gK,EAAE46J,MAAME,EAAE96J,EAAE46J,MAAM94F,EAAEu4F,YAAYv4F,EAAE/vD,QAAQ,IAAI+vD,EAAEu7F,QAAQ,EAAEv7F,EAAEr4D,OAAO02J,KAAK16J,EAAEq8D,EAAE,GAAGr8D,EAAEq8D,EAAE,GAAGr8D,EAAEq8D,EAAE,GAAGr8D,EAAEq8D,EAAE,GAAGr8D,EAAEq8D,EAAE,GAAGr8D,EAAEq8D,EAAE,IAAIA,EAAEwtF,MAAM,EAAExtF,EAAEm0F,UAAU76H,GAAG0mC,EAAEwtF,MAAM,EAAE,EAAE,GAAG7pJ,EAAEq8D,EAAE0+F,IAAI1+F,EAAEr4D,OAAO01J,QAAQ,CAAC,IAAI3wC,EAAE8uC,GAAGx7F,EAAE07F,OAAO,GAAG,IAAI,EAAgEhvC,IAAvD1sD,EAAEm0F,UAAU76H,GAAG0mC,EAAEwtF,MAAM,EAAE,EAAExtF,EAAEwtF,MAAM,EAAE,EAAE,IAAIxtF,EAAEwtF,MAAM,EAAE,IAAQ,EAAE,IAAIxtF,EAAE44F,WAAWlsC,GAAG0xC,IAAI1xC,GAAG,GAAGA,EAAE,GAAG1sD,EAAEr4D,OAAO01J,GAAGrsI,EAAEgvC,EAAE0sD,GAAG,IAAI1sD,EAAE44F,WAAW5nI,EAAEgvC,EAAE9hE,EAAE46J,QAAQ,IAAI9nI,EAAEgvC,EAAE,MAAM9hE,EAAE46J,QAAQ56J,EAAE46J,MAAM,CAAC,CAAC,GAAG94F,EAAEr4D,SAAS02J,GAAG,GAAGr+F,EAAEs7F,OAAOyD,MAAM,CAAC,IAAIp6J,EAAEq7D,EAAE/vD,QAAQ+vD,EAAEu7F,SAAS,MAAMv7F,EAAEs7F,OAAOyD,MAAMtoK,UAAUupE,EAAE/vD,UAAU+vD,EAAEq7F,mBAAmBr7F,EAAEs7F,OAAOwD,MAAM9+F,EAAE/vD,QAAQtL,IAAIzG,EAAE46J,MAAME,EAAE96J,EAAE46J,MAAM94F,EAAEu4F,YAAYv4F,EAAE/vD,QAAQtL,EAAEA,IAAI2jG,EAAEpqG,GAAGyG,EAAEq7D,EAAE/vD,QAAQ+vD,EAAE/vD,UAAU+vD,EAAEq7F,oBAAoB13J,EAAEq8D,EAAE,IAAIA,EAAEs7F,OAAOyD,MAAM/+F,EAAEu7F,UAAUv7F,EAAEu7F,UAAUv7F,EAAEs7F,OAAOwD,MAAM9+F,EAAE/vD,QAAQtL,IAAIzG,EAAE46J,MAAME,EAAE96J,EAAE46J,MAAM94F,EAAEu4F,YAAYv4F,EAAE/vD,QAAQtL,EAAEA,IAAIq7D,EAAEu7F,UAAUv7F,EAAEs7F,OAAOyD,MAAMtoK,SAASupE,EAAEu7F,QAAQ,EAAEv7F,EAAEr4D,OAAO22J,GAAG,MAAMt+F,EAAEr4D,OAAO22J,GAAG,GAAGt+F,EAAEr4D,SAAS22J,GAAG,GAAGt+F,EAAEs7F,OAAO7jK,KAAK,CAACkN,EAAEq7D,EAAE/vD,QAAQ,EAAE,CAAC,GAAG+vD,EAAE/vD,UAAU+vD,EAAEq7F,mBAAmBr7F,EAAEs7F,OAAOwD,MAAM9+F,EAAE/vD,QAAQtL,IAAIzG,EAAE46J,MAAME,EAAE96J,EAAE46J,MAAM94F,EAAEu4F,YAAYv4F,EAAE/vD,QAAQtL,EAAEA,IAAI2jG,EAAEpqG,GAAGyG,EAAEq7D,EAAE/vD,QAAQ+vD,EAAE/vD,UAAU+vD,EAAEq7F,kBAAkB,CAACz2J,EAAE,EAAE,KAAK,CAACA,EAAEo7D,EAAEu7F,QAAQv7F,EAAEs7F,OAAO7jK,KAAKhB,OAAO,IAAIupE,EAAEs7F,OAAO7jK,KAAKmoJ,WAAW5/E,EAAEu7F,WAAW,EAAE53J,EAAEq8D,EAAEp7D,EAAE,OAAO,IAAIA,GAAGo7D,EAAEs7F,OAAOwD,MAAM9+F,EAAE/vD,QAAQtL,IAAIzG,EAAE46J,MAAME,EAAE96J,EAAE46J,MAAM94F,EAAEu4F,YAAYv4F,EAAE/vD,QAAQtL,EAAEA,IAAI,IAAIC,IAAIo7D,EAAEu7F,QAAQ,EAAEv7F,EAAEr4D,OAAO42J,GAAG,MAAMv+F,EAAEr4D,OAAO42J,GAAG,GAAGv+F,EAAEr4D,SAAS42J,GAAG,GAAGv+F,EAAEs7F,OAAOpjD,QAAQ,CAACvzG,EAAEq7D,EAAE/vD,QAAQ,EAAE,CAAC,GAAG+vD,EAAE/vD,UAAU+vD,EAAEq7F,mBAAmBr7F,EAAEs7F,OAAOwD,MAAM9+F,EAAE/vD,QAAQtL,IAAIzG,EAAE46J,MAAME,EAAE96J,EAAE46J,MAAM94F,EAAEu4F,YAAYv4F,EAAE/vD,QAAQtL,EAAEA,IAAI2jG,EAAEpqG,GAAGyG,EAAEq7D,EAAE/vD,QAAQ+vD,EAAE/vD,UAAU+vD,EAAEq7F,kBAAkB,CAACz2J,EAAE,EAAE,KAAK,CAACA,EAAEo7D,EAAEu7F,QAAQv7F,EAAEs7F,OAAOpjD,QAAQzhH,OAAO,IAAIupE,EAAEs7F,OAAOpjD,QAAQ0nC,WAAW5/E,EAAEu7F,WAAW,EAAE53J,EAAEq8D,EAAEp7D,EAAE,OAAO,IAAIA,GAAGo7D,EAAEs7F,OAAOwD,MAAM9+F,EAAE/vD,QAAQtL,IAAIzG,EAAE46J,MAAME,EAAE96J,EAAE46J,MAAM94F,EAAEu4F,YAAYv4F,EAAE/vD,QAAQtL,EAAEA,IAAI,IAAIC,IAAIo7D,EAAEr4D,OAAO62J,GAAG,MAAMx+F,EAAEr4D,OAAO62J,GAAG,GAAGx+F,EAAEr4D,SAAS62J,KAAKx+F,EAAEs7F,OAAOwD,MAAM9+F,EAAE/vD,QAAQ,EAAE+vD,EAAEq7F,kBAAkB/yD,EAAEpqG,GAAG8hE,EAAE/vD,QAAQ,GAAG+vD,EAAEq7F,mBAAmB13J,EAAEq8D,EAAE,IAAI9hE,EAAE46J,OAAOn1J,EAAEq8D,EAAE9hE,EAAE46J,OAAO,EAAE,KAAK56J,EAAE46J,MAAM,EAAE94F,EAAEr4D,OAAO01J,KAAKr9F,EAAEr4D,OAAO01J,IAAI,IAAIr9F,EAAE/vD,SAAS,GAAGq4F,EAAEpqG,GAAG,IAAIA,EAAEq2J,UAAU,OAAOv0F,EAAEy7F,YAAY,EAAE8B,OAAO,GAAG,IAAIr/J,EAAE82J,UAAUr6J,EAAEwD,IAAIxD,EAAE9G,IAAIsK,IAAIs8J,EAAE,OAAOv6I,EAAEhiB,EAAE4/J,GAAG,GAAG99F,EAAEr4D,SAAS82J,IAAI,IAAIvgK,EAAE82J,SAAS,OAAO90I,EAAEhiB,EAAE4/J,GAAG,GAAG,IAAI5/J,EAAE82J,UAAU,IAAIh1F,EAAE25F,WAAWx7J,IAAIi8J,GAAGp6F,EAAEr4D,SAAS82J,GAAG,CAAC,IAAI9oJ,EAAEqqD,EAAEm0F,WAAW76H,EAAEp5B,EAAE8/D,EAAE7hE,GAAG6hE,EAAEm0F,WAAW4J,EAAEtmJ,EAAEuoD,EAAE7hE,GAAGwwJ,EAAE3uF,EAAEwtF,OAAO1c,KAAK9wE,EAAE7hE,GAAG,GAAGwX,IAAI+kJ,IAAI/kJ,IAAIglJ,KAAK36F,EAAEr4D,OAAO82J,IAAI9oJ,IAAI0kJ,IAAI1kJ,IAAI+kJ,GAAG,OAAO,IAAIx8J,EAAEq2J,YAAYv0F,EAAEy7F,YAAY,GAAG8B,EAAE,GAAG5nJ,IAAIklJ,KAAK18J,IAAIu/J,EAAElpK,EAAE0qK,UAAUl/F,GAAG7hE,IAAIw/J,IAAInpK,EAAE2qK,iBAAiBn/F,EAAE,EAAE,GAAE,GAAI7hE,IAAI9N,IAAIiH,EAAE0oE,EAAEzuE,MAAM,IAAIyuE,EAAE25F,YAAY35F,EAAE44F,SAAS,EAAE54F,EAAE24F,YAAY,EAAE34F,EAAE+5F,OAAO,KAAKzxD,EAAEpqG,GAAG,IAAIA,EAAEq2J,WAAW,OAAOv0F,EAAEy7F,YAAY,EAAE8B,CAAC,CAAC,OAAOp/J,IAAIs8J,EAAE8C,EAAEv9F,EAAE64F,MAAM,EAAE+E,GAAG,IAAI59F,EAAE64F,MAAMl1J,EAAEq8D,EAAE,IAAI9hE,EAAE46J,OAAOn1J,EAAEq8D,EAAE9hE,EAAE46J,OAAO,EAAE,KAAKn1J,EAAEq8D,EAAE9hE,EAAE46J,OAAO,GAAG,KAAKn1J,EAAEq8D,EAAE9hE,EAAE46J,OAAO,GAAG,KAAKn1J,EAAEq8D,EAAE,IAAI9hE,EAAE+6J,UAAUt1J,EAAEq8D,EAAE9hE,EAAE+6J,UAAU,EAAE,KAAKt1J,EAAEq8D,EAAE9hE,EAAE+6J,UAAU,GAAG,KAAKt1J,EAAEq8D,EAAE9hE,EAAE+6J,UAAU,GAAG,OAAOjoI,EAAEgvC,EAAE9hE,EAAE46J,QAAQ,IAAI9nI,EAAEgvC,EAAE,MAAM9hE,EAAE46J,QAAQxwD,EAAEpqG,GAAG8hE,EAAE64F,KAAK,IAAI74F,EAAE64F,MAAM74F,EAAE64F,MAAM,IAAI74F,EAAE/vD,QAAQstJ,EAAEK,EAAE,EAA2lD/pK,EAAE4hK,WAA5lD,SAAWv3J,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE+4C,OAAO94C,EAAED,EAAE+4C,MAAMtvC,UAAWy1J,IAAIj/J,IAAIkgK,IAAIlgK,IAAImgK,IAAIngK,IAAIogK,IAAIpgK,IAAIqgK,IAAIrgK,IAAIk/J,IAAIl/J,IAAIsgK,GAAGv+I,EAAEhiB,EAAEs/J,IAAIt/J,EAAE+4C,MAAM,KAAK94C,IAAIk/J,GAAGn9I,EAAEhiB,EAAE2/J,GAAGN,GAAIC,CAAC,EAAk9C3pK,EAAE+gK,qBAAn9C,SAAW12J,EAAEC,GAAG,IAAItK,EAAEqsB,EAAEvlB,EAAE2tG,EAAEtoC,EAAEr8D,EAAEqtB,EAAErsB,EAAEC,EAAEzG,EAAE1H,OAAO,IAAIyH,IAAIA,EAAE+4C,MAAM,OAAOumH,EAAE,GAAsB,KAATl1D,GAAVz0G,EAAEqK,EAAE+4C,OAAU4hH,OAAY,IAAIvwD,GAAGz0G,EAAE8T,SAASy1J,IAAIvpK,EAAE8lK,UAAU,OAAO6D,EAAE,IAAI,IAAIl1D,IAAIpqG,EAAE46J,MAAMC,EAAE76J,EAAE46J,MAAM36J,EAAEyG,EAAE,IAAI/Q,EAAEglK,KAAK,EAAEj0J,GAAG/Q,EAAEwlK,SAAS,IAAI/wD,IAAIhxG,EAAEzD,EAAEtC,MAAMsC,EAAE+kK,SAAS,EAAE/kK,EAAE8kK,YAAY,EAAE9kK,EAAEkmK,OAAO,GAAGp1J,EAAE,IAAIyqJ,EAAE8F,KAAKrhK,EAAEwlK,QAAQjK,EAAEsH,SAAS/xJ,EAAExG,EAAEyG,EAAE/Q,EAAEwlK,OAAOxlK,EAAEwlK,OAAO,GAAGl7J,EAAEwG,EAAEC,EAAE/Q,EAAEwlK,QAAQr5F,EAAE9hE,EAAE82J,SAASrxJ,EAAEzF,EAAE62J,QAAQ/jI,EAAE9yB,EAAE42J,MAAM52J,EAAE82J,SAASpwJ,EAAE1G,EAAE62J,QAAQ,EAAE72J,EAAE42J,MAAM32J,EAAEuuH,EAAE74H,GAAGA,EAAE8lK,WAAWK,IAAI,CAAC95I,EAAErsB,EAAE+kK,SAASj+J,EAAE9G,EAAE8lK,WAAWK,GAAG,GAAG,GAAGnmK,EAAEomK,OAAOpmK,EAAEomK,OAAOpmK,EAAEqmK,WAAWrmK,EAAEyV,OAAO4W,EAAE85I,GAAG,IAAInmK,EAAEsmK,UAAUtmK,EAAE2lK,KAAKt5I,EAAErsB,EAAE0lK,QAAQ1lK,EAAEtC,KAAKsC,EAAEomK,OAAOpmK,EAAEtC,KAAKsC,EAAEomK,OAAO/5I,EAAEA,YAAYvlB,GAAG9G,EAAE+kK,SAAS14I,EAAErsB,EAAE8lK,UAAUK,GAAG,EAAEttC,EAAE74H,EAAE,CAAC,OAAOA,EAAE+kK,UAAU/kK,EAAE8lK,UAAU9lK,EAAE8kK,YAAY9kK,EAAE+kK,SAAS/kK,EAAEkmK,OAAOlmK,EAAE8lK,UAAU9lK,EAAE8lK,UAAU,EAAE9lK,EAAEymK,aAAazmK,EAAEslK,YAAYa,GAAG,EAAEnmK,EAAEmnK,gBAAgB,EAAE98J,EAAE62J,QAAQpxJ,EAAEzF,EAAE42J,MAAM9jI,EAAE9yB,EAAE82J,SAASh1F,EAAEnsE,EAAEglK,KAAKvwD,EAAEi1D,CAAC,EAAirB1pK,EAAEurK,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,UAAU,KAAK,GAAG,CAAC,SAASlhK,EAAEC,EAAEtK,GAAG,aAAiKsK,EAAEnO,QAAtJ,WAAaM,KAAKqO,KAAK,EAAErO,KAAK0uK,KAAK,EAAE1uK,KAAK+uK,OAAO,EAAE/uK,KAAK2uK,GAAG,EAAE3uK,KAAKyuK,MAAM,KAAKzuK,KAAKgvK,UAAU,EAAEhvK,KAAKmH,KAAK,GAAGnH,KAAK4nH,QAAQ,GAAG5nH,KAAKwuK,KAAK,EAAExuK,KAAK+tI,MAAK,CAAE,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAASngI,EAAEC,EAAEtK,GAAG,aAA2BsK,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,IAAItK,EAAEyD,EAAEgxG,EAAEtoC,EAAEr8D,EAAEqtB,EAAErsB,EAAEC,EAAE8nH,EAAEh9E,EAAE/5B,EAAEvD,EAAEqF,EAAEvX,EAAEhD,EAAEqvB,EAAEk6C,EAAE/iE,EAAEmkF,EAAErqF,EAAEopD,EAAEsoG,EAAEG,EAAEC,EAAEH,EAAEt7J,EAAEqK,EAAE+4C,MAAM3/C,EAAE4G,EAAE62J,QAAQzF,EAAEpxJ,EAAE42J,MAAMxsD,EAAEhxG,GAAG4G,EAAE82J,SAAS,GAAGh1F,EAAE9hE,EAAEi3J,SAAShG,EAAEjxJ,EAAE+2J,OAAOtxJ,EAAEq8D,GAAG7hE,EAAED,EAAEq2J,WAAWvjI,EAAEgvC,GAAG9hE,EAAEq2J,UAAU,KAAK5vJ,EAAE9Q,EAAE0rK,KAAK36J,EAAE/Q,EAAE2rK,MAAM9yC,EAAE74H,EAAE4rK,MAAM/vH,EAAE77C,EAAE6rK,MAAM/pJ,EAAE9hB,EAAEyV,OAAO8I,EAAEve,EAAE8rK,KAAKloJ,EAAE5jB,EAAE+rK,KAAK1/J,EAAErM,EAAEgsK,QAAQ3iK,EAAErJ,EAAEisK,SAASvzI,GAAG,GAAG14B,EAAEksK,SAAS,EAAEt5F,GAAG,GAAG5yE,EAAEmsK,UAAU,EAAE9hK,EAAE,EAAE,CAACuZ,EAAE,KAAKrF,GAAGk9I,EAAEh4J,MAAMmgB,EAAEA,GAAG,EAAErF,GAAGk9I,EAAEh4J,MAAMmgB,EAAEA,GAAG,GAAG/T,EAAExD,EAAEkS,EAAEma,GAAGpuB,EAAE,OAAO,CAAC,GAAYiU,KAATy1E,EAAEnkF,IAAI,GAAU+T,GAAGowE,EAAe,IAAbA,EAAEnkF,IAAI,GAAG,KAAUyrJ,EAAEnvF,KAAK,MAAMt8D,MAAM,CAAC,KAAK,GAAGmkF,GAAG,CAAC,GAAG,IAAK,GAAGA,GAAG,CAACnkF,EAAExD,GAAG,MAAMwD,IAAI0O,GAAG,GAAGy1E,GAAG,IAAI,SAAS1pF,CAAC,CAAC,GAAG,GAAG0pF,EAAE,CAACh0F,EAAEqxE,KAA1hB,GAAiiB,MAAMhnE,CAAC,CAACA,EAAEmR,IAAI,8BAA8Bxb,EAAEqxE,KAAplB,GAA2lB,MAAMhnE,CAAC,CAACV,EAAE,MAAMkG,GAAEmkF,GAAG,MAAOpwE,EAAEowE,IAAIz1E,GAAGk9I,EAAEh4J,MAAMmgB,EAAEA,GAAG,GAAGja,GAAG4U,GAAG,GAAGy1E,GAAG,EAAEz1E,KAAKy1E,EAAEpwE,GAAGowE,GAAGpwE,EAAE,KAAKrF,GAAGk9I,EAAEh4J,MAAMmgB,EAAEA,GAAG,EAAErF,GAAGk9I,EAAEh4J,MAAMmgB,EAAEA,GAAG,GAAG/T,EAAExG,EAAEkV,EAAEq0D,GAAG5yE,EAAE,OAAO,CAAC,GAAYue,KAATy1E,EAAEnkF,IAAI,GAAU+T,GAAGowE,IAAiB,IAAfA,EAAEnkF,IAAI,GAAG,MAAY,CAAC,GAAG,IAAK,GAAGmkF,GAAG,CAACnkF,EAAExG,GAAG,MAAMwG,IAAI0O,GAAG,GAAGy1E,GAAG,IAAI,SAASh0F,CAAC,CAACqK,EAAEmR,IAAI,wBAAwBxb,EAAEqxE,KAA92B,GAAq3B,MAAMhnE,CAAC,CAAC,GAAG0oD,EAAE,MAAMljD,EAAQ+T,GAANowE,GAAG,MAASz1E,GAAGk9I,EAAEh4J,MAAMmgB,GAAEA,GAAG,GAAIowE,IAAIz1E,GAAGk9I,EAAEh4J,MAAMmgB,EAAEA,GAAG,KAAImvC,GAAGx0C,GAAG,GAAGy1E,GAAG,GAAIljF,EAAE,CAACzG,EAAEmR,IAAI,gCAAgCxb,EAAEqxE,KAA7/B,GAAogC,MAAMhnE,CAAC,CAAC,GAAGkU,KAAKy1E,EAAEpwE,GAAGowE,EAAQjhC,GAANihC,EAAE7nB,EAAEr8D,GAAM,CAAC,IAAGkkF,EAAEjhC,EAAEihC,GAAI6kC,GAAG74H,EAAEosK,KAAK,CAAC/hK,EAAEmR,IAAI,gCAAgCxb,EAAEqxE,KAApmC,GAA2mC,MAAMhnE,CAAC,CAAC,GAAGgxJ,EAAE,EAAEG,EAAE15I,EAAE,IAAI+5B,GAAG,GAAGw/G,GAAGtqJ,EAAEijF,EAAEA,EAAErqF,EAAE,CAACA,GAAGqqF,EAAE,GAAGsnE,EAAEnvF,KAAKrqD,EAAEu5I,aAAarnE,GAAGqnE,EAAElvF,EAAEpZ,EAAEyoG,EAAEF,CAAC,OAAO,GAAGz/G,EAAEm4C,GAAG,GAAGqnE,GAAGtqJ,EAAE8qC,EAAEm4C,GAAEA,GAAGn4C,GAAIlyC,EAAE,CAACA,GAAGqqF,EAAE,GAAGsnE,EAAEnvF,KAAKrqD,EAAEu5I,aAAarnE,GAAG,GAAGqnE,EAAE,EAAEx/G,EAAElyC,EAAE,CAAKA,GAAJqqF,EAAEn4C,EAAO,GAAGy/G,EAAEnvF,KAAKrqD,EAAEu5I,aAAarnE,GAAGqnE,EAAElvF,EAAEpZ,EAAEyoG,EAAEF,CAAC,CAAC,OAAO,GAAGD,GAAGx/G,EAAEm4C,EAAEA,EAAErqF,EAAE,CAACA,GAAGqqF,EAAE,GAAGsnE,EAAEnvF,KAAKrqD,EAAEu5I,aAAarnE,GAAGqnE,EAAElvF,EAAEpZ,EAAEyoG,EAAEF,CAAC,CAAC,KAAK3xJ,EAAE,GAAG2xJ,EAAEnvF,KAAKqvF,EAAEH,KAAKC,EAAEnvF,KAAKqvF,EAAEH,KAAKC,EAAEnvF,KAAKqvF,EAAEH,KAAK1xJ,GAAG,EAAEA,IAAI2xJ,EAAEnvF,KAAKqvF,EAAEH,KAAK1xJ,EAAE,IAAI2xJ,EAAEnvF,KAAKqvF,EAAEH,MAAM,KAAK,CAACA,EAAElvF,EAAEpZ,EAAE,GAAGuoG,EAAEnvF,KAAKmvF,EAAED,KAAKC,EAAEnvF,KAAKmvF,EAAED,KAAKC,EAAEnvF,KAAKmvF,EAAED,KAAK1xJ,GAAG,QAAQA,EAAE,GAAGA,IAAI2xJ,EAAEnvF,KAAKmvF,EAAED,KAAK1xJ,EAAE,IAAI2xJ,EAAEnvF,KAAKmvF,EAAED,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO53J,EAAEgxG,GAAGtoC,EAAEhvC,GAAU15B,GAAPkG,EAAEia,GAAG,EAAerF,IAAI,IAAZqF,GAAGja,GAAG,IAAY,EAAEU,EAAE62J,QAAQz9J,EAAE4G,EAAEi3J,SAASn1F,EAAE9hE,EAAE82J,SAAS19J,EAAEgxG,EAAKA,EAAEhxG,EAAL,EAAQ,GAAGA,EAAEgxG,GAAGpqG,EAAEq2J,UAAUv0F,EAAEhvC,EAAOA,EAAEgvC,EAAP,IAAU,KAAKA,EAAEhvC,GAAGn9B,EAAE8rK,KAAKvtJ,EAAEve,EAAE+rK,KAAKnoJ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvZ,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAG,OAAOA,IAAI,GAAG,MAAMA,IAAI,EAAE,SAAS,MAAMA,IAAI,KAAK,IAAIA,IAAI,GAAG,CAAC,SAASvD,IAAIrK,KAAK40E,KAAK,EAAE50E,KAAKumJ,MAAK,EAAGvmJ,KAAKuoK,KAAK,EAAEvoK,KAAK4vK,UAAS,EAAG5vK,KAAK6vK,MAAM,EAAE7vK,KAAKivK,KAAK,EAAEjvK,KAAK8vK,MAAM,EAAE9vK,KAAKgkH,MAAM,EAAEhkH,KAAKiB,KAAK,KAAKjB,KAAK+vK,MAAM,EAAE/vK,KAAKkvK,MAAM,EAAElvK,KAAKmvK,MAAM,EAAEnvK,KAAKovK,MAAM,EAAEpvK,KAAKgZ,OAAO,KAAKhZ,KAAKqvK,KAAK,EAAErvK,KAAKsvK,KAAK,EAAEtvK,KAAKmG,OAAO,EAAEnG,KAAKi4I,OAAO,EAAEj4I,KAAKyuK,MAAM,EAAEzuK,KAAKuvK,QAAQ,KAAKvvK,KAAKwvK,SAAS,KAAKxvK,KAAKyvK,QAAQ,EAAEzvK,KAAK0vK,SAAS,EAAE1vK,KAAKgwK,MAAM,EAAEhwK,KAAKiwK,KAAK,EAAEjwK,KAAKkwK,MAAM,EAAElwK,KAAKmwK,KAAK,EAAEnwK,KAAK0qB,KAAK,KAAK1qB,KAAKowK,KAAK,IAAIxjK,EAAE85J,MAAM,KAAK1mK,KAAKqwK,KAAK,IAAIzjK,EAAE85J,MAAM,KAAK1mK,KAAKswK,OAAO,KAAKtwK,KAAKuwK,QAAQ,KAAKvwK,KAAK2vK,KAAK,EAAE3vK,KAAKwwK,KAAK,EAAExwK,KAAKywK,IAAI,CAAC,CAAC,SAASzpK,EAAE4G,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE+4C,OAAO94C,EAAED,EAAE+4C,MAAM/4C,EAAE+6J,SAAS/6J,EAAEu6J,UAAUt6J,EAAEm2G,MAAM,EAAEp2G,EAAEmR,IAAI,GAAGlR,EAAE06J,OAAO36J,EAAE46J,MAAM,EAAE36J,EAAE06J,MAAM16J,EAAE+mE,KAAK70E,EAAE8N,EAAE04I,KAAK,EAAE14I,EAAE+hK,SAAS,EAAE/hK,EAAEohK,KAAK,MAAMphK,EAAE5M,KAAK,KAAK4M,EAAEwhK,KAAK,EAAExhK,EAAEyhK,KAAK,EAAEzhK,EAAE0hK,QAAQ1hK,EAAEyiK,OAAO,IAAI1jK,EAAE+5J,MAAMqH,IAAIngK,EAAE2hK,SAAS3hK,EAAE0iK,QAAQ,IAAI3jK,EAAE+5J,MAAMsH,IAAIpgK,EAAE8hK,KAAK,EAAE9hK,EAAE2iK,MAAM,EAAEnS,GAAGoK,CAAC,CAAC,SAASzwD,EAAEpqG,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE+4C,QAAO94C,EAAED,EAAE+4C,OAAQuoH,MAAM,EAAErhK,EAAEshK,MAAM,EAAEthK,EAAEuhK,MAAM,EAAEpoK,EAAE4G,IAAI66J,CAAC,CAAC,SAAS/4F,EAAE9hE,EAAEC,GAAG,IAAItK,EAAEqsB,EAAE,OAAOhiB,GAAGA,EAAE+4C,OAAO/2B,EAAEhiB,EAAE+4C,MAAM94C,EAAE,GAAGtK,EAAE,EAAEsK,GAAGA,IAAItK,EAAS,GAANsK,GAAG,GAAKA,EAAE,KAAKA,GAAG,KAAKA,IAAIA,EAAE,GAAGA,EAAE,IAAI46J,GAAG,OAAO74I,EAAE5W,QAAQ4W,EAAEmgJ,QAAQliK,IAAI+hB,EAAE5W,OAAO,MAAM4W,EAAE24I,KAAKhlK,EAAEqsB,EAAEmgJ,MAAMliK,EAAEmqG,EAAEpqG,KAAK66J,CAAC,CAAC,SAASp1J,EAAEzF,EAAEC,GAAG,IAAItK,EAAEqsB,EAAE,OAAOhiB,GAAGgiB,EAAE,IAAIvlB,EAAEuD,EAAE+4C,MAAM/2B,EAAEA,EAAE5W,OAAO,MAAKzV,EAAEmsE,EAAE9hE,EAAEC,MAAOwwJ,IAAIzwJ,EAAE+4C,MAAM,MAAMpjD,GAAGklK,CAAC,CAA8B,SAASp0J,EAAEzG,GAAG,GAAGugK,GAAG,CAAC,IAAItgK,EAAE,IAAIsZ,EAAE,IAAIva,EAAE+5J,MAAM,KAAK/2J,EAAE,IAAIhD,EAAE+5J,MAAM,IAAI94J,EAAE,EAAEA,EAAE,KAAKD,EAAEwiK,KAAKviK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEwiK,KAAKviK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEwiK,KAAKviK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEwiK,KAAKviK,KAAK,EAAE,IAAI0pF,EAAEjhC,EAAE1oD,EAAEwiK,KAAK,EAAE,IAAIjpJ,EAAE,EAAEvZ,EAAEyiK,KAAK,CAACf,KAAK,IAAIzhK,EAAE,EAAEA,EAAE,IAAID,EAAEwiK,KAAKviK,KAAK,EAAE0pF,EAAEqnE,EAAEhxJ,EAAEwiK,KAAK,EAAE,GAAGxgK,EAAE,EAAEhC,EAAEyiK,KAAK,CAACf,KAAK,IAAInB,IAAG,CAAE,CAACvgK,EAAE2hK,QAAQpoJ,EAAEvZ,EAAE6hK,QAAQ,EAAE7hK,EAAE4hK,SAAS5/J,EAAEhC,EAAE8hK,SAAS,CAAC,CAAC,SAASp7J,EAAE1G,EAAEC,EAAEtK,EAAEqsB,GAAG,IAAIvlB,EAAErD,EAAE4G,EAAE+4C,MAAM,OAAO,OAAO3/C,EAAEgS,SAAShS,EAAEkoK,MAAM,GAAGloK,EAAE+oK,MAAM/oK,EAAEooK,MAAM,EAAEpoK,EAAEmoK,MAAM,EAAEnoK,EAAEgS,OAAO,IAAIpM,EAAEg4J,KAAK59J,EAAEkoK,QAAQt/I,GAAG5oB,EAAEkoK,OAAOtiK,EAAEw5J,SAASp/J,EAAEgS,OAAOnL,EAAEtK,EAAEyD,EAAEkoK,MAAMloK,EAAEkoK,MAAM,GAAGloK,EAAEooK,MAAM,EAAEpoK,EAAEmoK,MAAMnoK,EAAEkoK,SAAQ7kK,EAAErD,EAAEkoK,MAAMloK,EAAEooK,OAAQx/I,IAAIvlB,EAAEulB,GAAGhjB,EAAEw5J,SAASp/J,EAAEgS,OAAOnL,EAAEtK,EAAEqsB,EAAEvlB,EAAErD,EAAEooK,QAAOx/I,GAAGvlB,IAAKuC,EAAEw5J,SAASp/J,EAAEgS,OAAOnL,EAAEtK,EAAEqsB,EAAEA,EAAE,GAAG5oB,EAAEooK,MAAMx/I,EAAE5oB,EAAEmoK,MAAMnoK,EAAEkoK,QAAQloK,EAAEooK,OAAO/kK,EAAErD,EAAEooK,QAAQpoK,EAAEkoK,QAAQloK,EAAEooK,MAAM,GAAGpoK,EAAEmoK,MAAMnoK,EAAEkoK,QAAQloK,EAAEmoK,OAAO9kK,KAAK,CAAC,CAC78sB,IAAI8c,EAAEvX,EAAEhD,EAAEgB,EAAE,mBAAmBquB,EAAEruB,EAAE,aAAauoE,EAAEvoE,EAAE,WAAWwF,EAAExF,EAAE,aAAa2pF,EAAE3pF,EAAE,cAAcV,EAAE,EAAEopD,EAAE,EAAEsoG,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAEH,EAAE,EAAER,EAAE,EAAES,EAAE,EAAE56J,EAAE,EAAEukK,GAAG,EAAEC,GAAG,EAAEV,GAAG,EAAE8B,GAAG,EAAEsD,EAAE,EAAErtK,EAAE,EAAEoqK,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEC,EAAE,EAAEvrB,EAAE,EAAEwoB,EAAE,GAAGzhI,EAAE,GAAGykI,EAAE,GAAGN,EAAE,GAAGO,EAAE,GAAGb,EAAE,GAAG3B,EAAE,GAAG1sC,EAAE,GAAGmvC,EAAG,GAAGC,EAAG,GAAG8C,EAAG,GAAG7C,EAAG,GAAG3B,EAAG,GAAGT,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGS,GAAG,GAAGtC,GAAG,GAAGP,GAAG,GAAGH,GAAG,GAAG8E,GAAG,GAAGhB,GAAG,GAASkB,GAAG,IAAIC,GAAG,IAAUlB,GAAH,GAASoB,IAAG,EAAG5qK,EAAEotK,aAAa34D,EAAEz0G,EAAEqtK,cAAclhG,EAAEnsE,EAAEstK,iBAAiB7pK,EAAEzD,EAAEutK,YADmyqB,SAAWljK,GAAG,OAAOyF,EAAEzF,EAAEm/J,GAAG,EACjzqBxpK,EAAE+hK,aAAajyJ,EAAE9P,EAAEqiK,QAD+gsB,SAAWh4J,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAEgxG,EAAEtoC,EAAEr8D,EAAEqtB,EAAE07F,EAAEh9E,GAAE/5B,GAAEvD,GAAEqF,GAAEvX,GAAEo+J,GAAGC,GAAGC,GAAGnB,GAAGoB,GAAGpE,GAAGQ,GAAGH,GAAGC,GAAG+D,GAAG2C,GAAGC,GAAG,EAAEC,GAAG,IAAIrkK,EAAEg4J,KAAK,GAAGsM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,IAAItjK,IAAIA,EAAE+4C,QAAQ/4C,EAAE+2J,SAAS/2J,EAAE42J,OAAO,IAAI52J,EAAE82J,SAAS,OAAO+D,GAAEllK,EAAEqK,EAAE+4C,OAAQiuB,OAAO64F,IAAIlqK,EAAEqxE,KAAKu4F,GAAGz9F,EAAE9hE,EAAEi3J,SAAS79J,EAAE4G,EAAE+2J,OAAOjkI,EAAE9yB,EAAEq2J,UAAUjsD,EAAEpqG,EAAE62J,QAAQp6J,EAAEuD,EAAE42J,MAAMnxJ,EAAEzF,EAAE82J,SAAStoC,EAAE74H,EAAE8rK,KAAKjwH,GAAE77C,EAAE+rK,KAAKjqJ,GAAEhS,EAAEyO,GAAE4e,EAAE2pI,GAAGhM,EAAEzwJ,EAAE,OAAO,OAAOrK,EAAEqxE,MAAM,KAAK70E,EAAE,GAAG,IAAIwD,EAAEglK,KAAK,CAAChlK,EAAEqxE,KAAKu4F,EAAE,KAAK,CAAC,KAAK/tH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAG,EAAE77C,EAAEglK,MAAM,QAAQnsC,EAAE,CAAC74H,EAAEusK,MAAM,EAAEmB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAI74H,EAAEusK,MAAM35F,EAAE5yE,EAAEusK,MAAMmB,GAAG,EAAE,GAAG70C,EAAE,EAAEh9E,GAAE,EAAE77C,EAAEqxE,KAAKu1F,EAAE,KAAK,CAAC,GAAG5mK,EAAEssK,MAAM,EAAEtsK,EAAEtC,OAAOsC,EAAEtC,KAAK8sI,MAAK,KAAM,EAAExqI,EAAEglK,UAAU,IAAInsC,IAAI,IAAIA,GAAG,IAAI,GAAG,CAACxuH,EAAEmR,IAAI,yBAAyBxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC,IAAI,GAAG1xC,KAAKgxC,EAAE,CAACx/J,EAAEmR,IAAI,6BAA6Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC,GAAU1uH,IAAG,EAAEgrH,GAAU,GAAN,IAAhBhuC,KAAK,IAAmB,IAAI74H,EAAEwsK,MAAMxsK,EAAEwsK,MAAM3F,QAAQ,GAAGA,GAAG7mK,EAAEwsK,MAAM,CAACniK,EAAEmR,IAAI,sBAAsBxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAACvqK,EAAE0rK,KAAK,GAAG7E,GAAGx8J,EAAE46J,MAAMjlK,EAAEusK,MAAM,EAAEvsK,EAAEqxE,KAAK,IAAIwnD,EAAEquC,EAAEgD,EAAErxC,EAAE,EAAEh9E,GAAE,EAAE,MAAM,KAAK+qH,EAAE,KAAK/qH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAG77C,EAAEssK,MAAMzzC,GAAG,IAAI74H,EAAEssK,SAASzC,EAAE,CAACx/J,EAAEmR,IAAI,6BAA6Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC,GAAG,MAAMvqK,EAAEssK,MAAM,CAACjiK,EAAEmR,IAAI,2BAA2Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAACvqK,EAAEtC,OAAOsC,EAAEtC,KAAKoN,KAAK+tH,GAAG,EAAE,GAAG,IAAI74H,EAAEssK,QAAQoB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAI74H,EAAEusK,MAAM35F,EAAE5yE,EAAEusK,MAAMmB,GAAG,EAAE,IAAI70C,EAAE,EAAEh9E,GAAE,EAAE77C,EAAEqxE,KAAKy4F,EAAE,KAAKA,EAAE,KAAKjuH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC77C,EAAEtC,OAAOsC,EAAEtC,KAAKytK,KAAKtyC,GAAG,IAAI74H,EAAEssK,QAAQoB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAI60C,GAAG,GAAG70C,IAAI,GAAG,IAAI60C,GAAG,GAAG70C,IAAI,GAAG,IAAI74H,EAAEusK,MAAM35F,EAAE5yE,EAAEusK,MAAMmB,GAAG,EAAE,IAAI70C,EAAE,EAAEh9E,GAAE,EAAE77C,EAAEqxE,KAAKq4F,EAAE,KAAKA,EAAE,KAAK7tH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GACzw+BA,IAAG,CAAC,CAAC77C,EAAEtC,OAAOsC,EAAEtC,KAAK8tK,OAAO,IAAI3yC,EAAE74H,EAAEtC,KAAK0tK,GAAGvyC,GAAG,GAAG,IAAI74H,EAAEssK,QAAQoB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAI74H,EAAEusK,MAAM35F,EAAE5yE,EAAEusK,MAAMmB,GAAG,EAAE,IAAI70C,EAAE,EAAEh9E,GAAE,EAAE77C,EAAEqxE,KAAK04F,EAAE,KAAKA,EAAE,GAAG,KAAK/pK,EAAEssK,MAAM,CAAC,KAAKzwH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC77C,EAAE4C,OAAOi2H,EAAE74H,EAAEtC,OAAOsC,EAAEtC,KAAK+tK,UAAU5yC,GAAG,IAAI74H,EAAEssK,QAAQoB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAI74H,EAAEusK,MAAM35F,EAAE5yE,EAAEusK,MAAMmB,GAAG,EAAE,IAAI70C,EAAE,EAAEh9E,GAAE,CAAC,MAAM77C,EAAEtC,OAAOsC,EAAEtC,KAAKwtK,MAAM,MAAMlrK,EAAEqxE,KAAKs4F,EAAE,KAAKA,EAAE,GAAG,KAAK3pK,EAAEssK,SAAQ1oJ,GAAE5jB,EAAE4C,QAASkN,IAAI8T,GAAE9T,GAAG8T,KAAI5jB,EAAEtC,OAAOmpK,GAAG7mK,EAAEtC,KAAK+tK,UAAUzrK,EAAE4C,OAAO5C,EAAEtC,KAAKwtK,QAAQlrK,EAAEtC,KAAKwtK,MAAM,IAAIthK,MAAM5J,EAAEtC,KAAK+tK,YAAYpiK,EAAEw5J,SAAS7iK,EAAEtC,KAAKwtK,MAAMpkK,EAAE2tG,EAAE7wF,GAAEijJ,KAAK,IAAI7mK,EAAEssK,QAAQtsK,EAAEusK,MAAM35F,EAAE5yE,EAAEusK,MAAMzlK,EAAE8c,GAAE6wF,IAAI3kG,GAAG8T,GAAE6wF,GAAG7wF,GAAE5jB,EAAE4C,QAAQghB,IAAG5jB,EAAE4C,QAAQ,MAAMyH,EAAErK,EAAE4C,OAAO,EAAE5C,EAAEqxE,KAAK24F,EAAE,KAAKA,EAAE,GAAG,KAAKhqK,EAAEssK,MAAM,CAAC,GAAG,IAAIx8J,EAAE,MAAMzF,EAAEuZ,GAAE,EAAE,GAAGijJ,GAAG//J,EAAE2tG,EAAE7wF,MAAK5jB,EAAEtC,MAAMmpK,IAAI7mK,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAKkG,MAAM+T,OAAOg/H,aAAakwB,WAAWA,IAAIjjJ,GAAE9T,GAAG,GAAG,IAAI9P,EAAEssK,QAAQtsK,EAAEusK,MAAM35F,EAAE5yE,EAAEusK,MAAMzlK,EAAE8c,GAAE6wF,IAAI3kG,GAAG8T,GAAE6wF,GAAG7wF,GAAEijJ,GAAG,MAAMx8J,CAAC,MAAMrK,EAAEtC,OAAOsC,EAAEtC,KAAKkG,KAAK,MAAM5D,EAAE4C,OAAO,EAAE5C,EAAEqxE,KAAK44F,EAAE,KAAKA,EAAE,GAAG,KAAKjqK,EAAEssK,MAAM,CAAC,GAAG,IAAIx8J,EAAE,MAAMzF,EAAEuZ,GAAE,EAAE,GAAGijJ,GAAG//J,EAAE2tG,EAAE7wF,MAAK5jB,EAAEtC,MAAMmpK,IAAI7mK,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAK2mH,SAAS1sG,OAAOg/H,aAAakwB,WAAWA,IAAIjjJ,GAAE9T,GAAG,GAAG,IAAI9P,EAAEssK,QAAQtsK,EAAEusK,MAAM35F,EAAE5yE,EAAEusK,MAAMzlK,EAAE8c,GAAE6wF,IAAI3kG,GAAG8T,GAAE6wF,GAAG7wF,GAAEijJ,GAAG,MAAMx8J,CAAC,MAAMrK,EAAEtC,OAAOsC,EAAEtC,KAAK2mH,QAAQ,MAAMrkH,EAAEqxE,KAAKqtE,EAAE,KAAKA,EAAE,GAAG,IAAI1+I,EAAEssK,MAAM,CAAC,KAAKzwH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAGg9E,KAAK,MAAM74H,EAAEusK,OAAO,CAACliK,EAAEmR,IAAI,sBAAsBxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC1xC,EAAE,EAAEh9E,GAAE,CAAC,CAAC77C,EAAEtC,OAAOsC,EAAEtC,KAAKutK,KAAKjrK,EAAEssK,OAAO,EAAE,EAAEtsK,EAAEtC,KAAK8sI,MAAK,GAAIngI,EAAE46J,MAAMjlK,EAAEusK,MAAM,EAAEvsK,EAAEqxE,KAAK64F,EAAE,MAAM,KAAKhD,EAAE,KAAKrrH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAACxxC,EAAE46J,MAAMjlK,EAAEusK,MAAMlgJ,EAAEwsG,GAAGA,EAAE,EAAEh9E,GAAE,EAAE77C,EAAEqxE,KAAK5rC,EAAE,KAAKA,EAAE,GAAG,IAAIzlC,EAAEqsK,SAAS,OAAOhiK,EAAEi3J,SAASn1F,EAAE9hE,EAAEq2J,UAAUvjI,EAAE9yB,EAAE62J,QAAQzsD,EAAEpqG,EAAE82J,SAASrxJ,EAAE9P,EAAE8rK,KAAKjzC,EAAE74H,EAAE+rK,KAAKlwH,GAAEl7C,EAAE0J,EAAE46J,MAAMjlK,EAAEusK,MAAM,EAAEvsK,EAAEqxE,KAAK64F,EAAE,KAAKA,EAAE,GAAG5/J,IAAImxJ,GAAGnxJ,IAAIgxJ,EAAE,MAAMjxJ,EAAE,KAAKu/J,EAAE,GAAG5pK,EAAEgjJ,KAAK,CAACnqB,KAAK,EAAEh9E,GAAEA,IAAG,EAAEA,GAAE77C,EAAEqxE,KAAK80F,GAAG,KAAK,CAAC,KAAKtqH,GAAE,GAAG,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,OAAO77C,EAAEgjJ,KAAK,EAAEnqB,EAASh9E,IAAG,EAAE,GAAZg9E,KAAK,IAAY,KAAK,EAAE74H,EAAEqxE,KAAK84F,EAAE,MAAM,KAAK,EAAE,GAAGr5J,EAAE9Q,GAAGA,EAAEqxE,KAAK87F,EAAG7iK,IAAIgxJ,EAAE,CAACziC,KAAK,EAAEh9E,IAAG,EAAE,MAAMxxC,CAAC,CAAC,MAAM,KAAK,EAAErK,EAAEqxE,KAAK4pD,EAAE,MAAM,KAAK,EAAE5wH,EAAEmR,IAAI,qBAAqBxb,EAAEqxE,KAAKk5F,GAAG1xC,KAAK,EAAEh9E,IAAG,EAAE,MAAM,KAAKsuH,EAAE,IAAItxC,KAAK,EAAEh9E,GAAEA,IAAG,EAAEA,GAAEA,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,IAAI,MAAMg9E,KAAMA,IAAI,GAAG,OAAO,CAACxuH,EAAEmR,IAAI,+BAA+Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC,GAAGvqK,EAAE4C,OAAO,MAAMi2H,EAAEA,EAAE,EAAEh9E,GAAE,EAAE77C,EAAEqxE,KAAKi4F,EAAEh/J,IAAIgxJ,EAAE,MAAMjxJ,EAAE,KAAKi/J,EAAEtpK,EAAEqxE,KAAKs2F,EAAE,KAAKA,EAAE,GAAG/jJ,GAAE5jB,EAAE4C,OAAO,CAAC,GAAGghB,GAAE9T,IAAI8T,GAAE9T,GAAG8T,GAAEuZ,IAAIvZ,GAAEuZ,GAAG,IAAIvZ,GAAE,MAAMvZ,EAAEhB,EAAEw5J,SAASp/J,EAAEqD,EAAE2tG,EAAE7wF,GAAEuoD,GAAGr8D,GAAG8T,GAAE6wF,GAAG7wF,GAAEuZ,GAAGvZ,GAAEuoD,GAAGvoD,GAAE5jB,EAAE4C,QAAQghB,GAAE,KAAK,CAAC5jB,EAAEqxE,KAAK64F,EAAE,MAAM,KAAKjvC,EAAE,KAAKp/E,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAG77C,EAAE0sK,KAAY,KAAN,GAAG7zC,GAAOA,KAAK,EAAEh9E,IAAG,EAAE77C,EAAE2sK,MAAa,GAAN,GAAG9zC,GAAKA,KAAK,EAAEh9E,IAAG,EAAE77C,EAAEysK,MAAa,GAAN,GAAG5zC,GAAKA,KAAK,EAAEh9E,IAAG,EAAE77C,EAAE0sK,KAAK,KAAK1sK,EAAE2sK,MAAM,GAAG,CAACtiK,EAAEmR,IAAI,sCAAsCxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAACvqK,EAAE4sK,KAAK,EAAE5sK,EAAEqxE,KAAK+4F,EAAG,KAAKA,EAAG,KAAKpqK,EAAE4sK,KAAK5sK,EAAEysK,OAAO,CAAC,KAAK5wH,GAAE,GAAG,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC77C,EAAE6sK,KAAKc,GAAG3tK,EAAE4sK,SAAS,EAAE/zC,EAAEA,KAAK,EAAEh9E,IAAG,CAAC,CAAC,KAAK77C,EAAE4sK,KAAK,IAAI5sK,EAAE6sK,KAAKc,GAAG3tK,EAAE4sK,SAAS,EAAE,GAAG5sK,EAAEgsK,QAAQhsK,EAAE+sK,OAAO/sK,EAAEksK,QAAQ,EAAErB,GAAG,CAACkB,KAAK/rK,EAAEksK,SAASpF,GAAG9yE,EAAErqF,EAAE3J,EAAE6sK,KAAK,EAAE,GAAG7sK,EAAEgsK,QAAQ,EAAEhsK,EAAE8sK,KAAKjC,IAAI7qK,EAAEksK,QAAQrB,GAAGkB,KAAKjF,GAAG,CAACz8J,EAAEmR,IAAI,2BAA2Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAACvqK,EAAE4sK,KAAK,EAAE5sK,EAAEqxE,KAAKg5F,EAAG,KAAKA,EAAG,KAAKrqK,EAAE4sK,KAAK5sK,EAAE0sK,KAAK1sK,EAAE2sK,OAAO,CAAC,KAAiDhC,IAA5C8C,GAAGztK,EAAEgsK,QAAQnzC,GAAG,GAAG74H,EAAEksK,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC5xH,KAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAG2tH,GAAG,GAAG3wC,KAAK6xC,GAAG7uH,IAAG6uH,GAAG1qK,EAAE6sK,KAAK7sK,EAAE4sK,QAAQpD,OAAO,CAAC,GAAG,KAAKA,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAE7uH,GAAE2xH,IAAI,CAAC,GAAG,IAAI19J,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAGg9E,KAAK6xC,GAAG7uH,IAAG6uH,GAAG,IAAI1qK,EAAE4sK,KAAK,CAACviK,EAAEmR,IAAI,4BAA4Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC1D,GAAG7mK,EAAE6sK,KAAK7sK,EAAE4sK,KAAK,GAAGhpJ,GAAE,GAAG,EAAEi1G,GAAGA,KAAK,EAAEh9E,IAAG,CAAC,MAAM,GAAG,KAAK2tH,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAE7uH,GAAE2xH,IAAI,CAAC,GAAG,IAAI19J,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAASA,IAAG6uH,GAAG7D,GAAG,EAAEjjJ,GAAE,GAAG,GAAxBi1G,KAAK6xC,KAAwB7xC,KAAK,EAAEh9E,IAAG,CAAC,KAAK,CAAC,IAAI2xH,GAAG9C,GAAG,EAAE7uH,GAAE2xH,IAAI,CAAC,GAAG,IAAI19J,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAASA,IAAG6uH,GAAG7D,GAAG,EAAEjjJ,GAAE,IAAI,KAAzBi1G,KAAK6xC,KAA2B7xC,KAAK,EAAEh9E,IAAG,CAAC,CAAC,GAAG77C,EAAE4sK,KAAKhpJ,GAAE5jB,EAAE0sK,KAAK1sK,EAAE2sK,MAAM,CAACtiK,EAAEmR,IAAI,4BAA4Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC,KAAK3mJ,MAAK5jB,EAAE6sK,KAAK7sK,EAAE4sK,QAAQ/F,EAAE,CAAC,CAAC,GAAG7mK,EAAEqxE,OAAOk5F,GAAG,MAAM,GAAG,IAAIvqK,EAAE6sK,KAAK,KAAK,CAACxiK,EAAEmR,IAAI,uCAAuCxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC,GAAGvqK,EAAEksK,QAAQ,EAAErB,GAAG,CAACkB,KAAK/rK,EAAEksK,SAASpF,GAAG9yE,EAAEjhC,EAAE/yD,EAAE6sK,KAAK,EAAE7sK,EAAE0sK,KAAK1sK,EAAEgsK,QAAQ,EAAEhsK,EAAE8sK,KAAKjC,IAAI7qK,EAAEksK,QAAQrB,GAAGkB,KAAKjF,GAAG,CAACz8J,EAAEmR,IAAI,8BAA8Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC,GAAGvqK,EAAEmsK,SAAS,EAAEnsK,EAAEisK,SAASjsK,EAAEgtK,QAAQnC,GAAG,CAACkB,KAAK/rK,EAAEmsK,UAAUrF,GAAG9yE,EAAEqnE,EAAEr7J,EAAE6sK,KAAK7sK,EAAE0sK,KAAK1sK,EAAE2sK,MAAM3sK,EAAEisK,SAAS,EAAEjsK,EAAE8sK,KAAKjC,IAAI7qK,EAAEmsK,SAAStB,GAAGkB,KAAKjF,GAAG,CAACz8J,EAAEmR,IAAI,wBAAwBxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC,GAAGvqK,EAAEqxE,KAAK87F,EAAG7iK,IAAIgxJ,EAAE,MAAMjxJ,EAAE,KAAK8iK,EAAGntK,EAAEqxE,KAAKi5F,EAAG,KAAKA,EAAG,GAAGx6J,GAAG,GAAGqtB,GAAG,IAAI,CAAC9yB,EAAEi3J,SAASn1F,EAAE9hE,EAAEq2J,UAAUvjI,EAAE9yB,EAAE62J,QAAQzsD,EAAEpqG,EAAE82J,SAASrxJ,EAAE9P,EAAE8rK,KAAKjzC,EAAE74H,EAAE+rK,KAAKlwH,GAAEhsC,EAAExF,EAAEkU,IAAG4tD,EAAE9hE,EAAEi3J,SAAS79J,EAAE4G,EAAE+2J,OAAOjkI,EAAE9yB,EAAEq2J,UAAUjsD,EAAEpqG,EAAE62J,QAAQp6J,EAAEuD,EAAE42J,MAAMnxJ,EAAEzF,EAAE82J,SAAStoC,EAAE74H,EAAE8rK,KAAKjwH,GAAE77C,EAAE+rK,KAAK/rK,EAAEqxE,OAAO64F,IAAIlqK,EAAEitK,MAAM,GAAG,KAAK,CAAC,IAAIjtK,EAAEitK,KAAK,EAA8CtC,IAA5C8C,GAAGztK,EAAEgsK,QAAQnzC,GAAG,GAAG74H,EAAEksK,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC5xH,KAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAG8uH,IAAI,IAAK,IAAIA,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAsDmB,IAAnD8C,GAAGztK,EAAEgsK,QAAQhF,KAAKnuC,GAAG,GAAG+xC,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuC5xH,KAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAACg9E,KAAK+xC,GAAG/uH,IAAG+uH,GAAG5qK,EAAEitK,MAAMrC,EAAE,CAAC,GAAG/xC,KAAK6xC,GAAG7uH,IAAG6uH,GAAG1qK,EAAEitK,MAAMvC,GAAG1qK,EAAE4C,OAAO4mK,GAAG,IAAImB,GAAG,CAAC3qK,EAAEqxE,KAAKo3F,GAAG,KAAK,CAAC,GAAG,GAAGkC,GAAG,CAAC3qK,EAAEitK,MAAM,EAAEjtK,EAAEqxE,KAAK64F,EAAE,KAAK,CAAC,GAAG,GAAGS,GAAG,CAACtgK,EAAEmR,IAAI,8BAA8Bxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAACvqK,EAAEkrK,MAAM,GAAGP,GAAG3qK,EAAEqxE,KAAKs3F,EAAG,KAAKA,EAAG,GAAG3oK,EAAEkrK,MAAM,CAAC,IAAIsC,GAAGxtK,EAAEkrK,MAAMrvH,GAAE2xH,IAAI,CAAC,GAAG,IAAI19J,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC77C,EAAE4C,QAAQi2H,GAAG,GAAG74H,EAAEkrK,OAAO,EAAEryC,KAAK74H,EAAEkrK,MAAMrvH,IAAG77C,EAAEkrK,MAAMlrK,EAAEitK,MAAMjtK,EAAEkrK,KAAK,CAAClrK,EAAEktK,IAAIltK,EAAE4C,OAAO5C,EAAEqxE,KAAK62F,GAAG,KAAKA,GAAG,KAAmDyC,IAA9C8C,GAAGztK,EAAEisK,SAASpzC,GAAG,GAAG74H,EAAEmsK,UAAU,MAAsB,GAAG,IAAI3C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC5xH,KAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAG,IAAK,IAAI8uH,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAuDmB,IAApD8C,GAAGztK,EAAEisK,SAASjF,KAAKnuC,GAAG,GAAG+xC,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuC5xH,KAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAACg9E,KAAK+xC,GAAG/uH,IAAG+uH,GAAG5qK,EAAEitK,MAAMrC,EAAE,CAAC,GAAG/xC,KAAK6xC,GAAG7uH,IAAG6uH,GAAG1qK,EAAEitK,MAAMvC,GAAG,GAAGC,GAAG,CAACtgK,EAAEmR,IAAI,wBAAwBxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAACvqK,EAAE00I,OAAO80B,GAAGxpK,EAAEkrK,MAAM,GAAGP,GAAG3qK,EAAEqxE,KAAK+2F,GAAG,KAAKA,GAAG,GAAGpoK,EAAEkrK,MAAM,CAAC,IAAIsC,GAAGxtK,EAAEkrK,MAAMrvH,GAAE2xH,IAAI,CAAC,GAAG,IAAI19J,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC77C,EAAE00I,QAAQ7b,GAAG,GAAG74H,EAAEkrK,OAAO,EAAEryC,KAAK74H,EAAEkrK,MAAMrvH,IAAG77C,EAAEkrK,MAAMlrK,EAAEitK,MAAMjtK,EAAEkrK,KAAK,CAAC,GAAGlrK,EAAE00I,OAAO10I,EAAE0rK,KAAK,CAACrhK,EAAEmR,IAAI,gCAAgCxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAACvqK,EAAEqxE,KAAK22F,GAAG,KAAKA,GAAG,GAAG,IAAI7qI,EAAE,MAAM9yB,EAAE,GAAGuZ,GAAErF,GAAE4e,EAAEn9B,EAAE00I,OAAO9wH,GAAE,CAAC,IAAGA,GAAE5jB,EAAE00I,OAAO9wH,IAAI5jB,EAAE4rK,OAAO5rK,EAAEosK,KAAK,CAAC/hK,EAAEmR,IAAI,gCAAgCxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC3mJ,GAAE5jB,EAAE6rK,OAAOjoJ,IAAG5jB,EAAE6rK,MAAMx/J,GAAErM,EAAE2rK,MAAM/nJ,IAAGvX,GAAErM,EAAE6rK,MAAMjoJ,GAAEA,GAAE5jB,EAAE4C,SAASghB,GAAE5jB,EAAE4C,QAAQ6nK,GAAGzqK,EAAEyV,MAAM,MAAMg1J,GAAGhnK,EAAE4I,GAAE8/D,EAAEnsE,EAAE00I,OAAO9wH,GAAE5jB,EAAE4C,OAAOghB,GAAEuZ,IAAIvZ,GAAEuZ,GAAGA,GAAGvZ,GAAE5jB,EAAE4C,QAAQghB,GAAE,GAAGngB,EAAE0oE,KAAKs+F,GAAGp+J,cAAauX,IAAG,IAAI5jB,EAAE4C,SAAS5C,EAAEqxE,KAAKi5F,GAAI,MAAM,KAAK7B,GAAG,GAAG,IAAItrI,EAAE,MAAM9yB,EAAE5G,EAAE0oE,KAAKnsE,EAAE4C,OAAOu6B,IAAIn9B,EAAEqxE,KAAKi5F,EAAG,MAAM,KAAKnE,GAAG,GAAGnmK,EAAEglK,KAAK,CAAC,KAAKnpH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAGt9B,IAAG4e,EAAE9yB,EAAEu6J,WAAWrmJ,GAAEve,EAAEygH,OAAOliG,GAAEA,KAAIlU,EAAE46J,MAAMjlK,EAAEusK,MAAMvsK,EAAEssK,MAAM15F,EAAE5yE,EAAEusK,MAAM9oK,EAAE8a,GAAE4tD,EAAE5tD,IAAGma,EAAE14B,EAAEusK,MAAM9oK,EAAE8a,GAAE4tD,EAAE5tD,KAAIA,GAAE4e,GAAGn9B,EAAEssK,MAAMzzC,EAAExsG,EAAEwsG,MAAM74H,EAAEusK,MAAM,CAACliK,EAAEmR,IAAI,uBAAuBxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC1xC,EAAE,EAAEh9E,GAAE,CAAC,CAAC77C,EAAEqxE,KAAKu0F,GAAG,KAAKA,GAAG,GAAG5lK,EAAEglK,MAAMhlK,EAAEssK,MAAM,CAAC,KAAKzwH,GAAE,IAAI,CAAC,GAAG,IAAI/rC,EAAE,MAAMzF,EAAEyF,IAAI+oH,GAAG/xH,EAAE2tG,MAAM54D,GAAEA,IAAG,CAAC,CAAC,GAAGg9E,KAAK,WAAW74H,EAAEygH,OAAO,CAACp2G,EAAEmR,IAAI,yBAAyBxb,EAAEqxE,KAAKk5F,GAAG,KAAK,CAAC1xC,EAAE,EAAEh9E,GAAE,CAAC,CAAC77C,EAAEqxE,KAAKo0F,GAAG,KAAKA,GAAGqB,GAAGvL,EAAE,MAAMlxJ,EAAE,KAAKkgK,GAAGzD,GAAG3B,EAAE,MAAM96J,EAAE,KAAKk/J,GAAG,OAAO9E,EAAU,QAAQ,OAAOS,EAAE,OAAO76J,EAAEi3J,SAASn1F,EAAE9hE,EAAEq2J,UAAUvjI,EAAE9yB,EAAE62J,QAAQzsD,EAAEpqG,EAAE82J,SAASrxJ,EAAE9P,EAAE8rK,KAAKjzC,EAAE74H,EAAE+rK,KAAKlwH,IAAG77C,EAAE2rK,OAAOptJ,KAAIlU,EAAEq2J,WAAW1gK,EAAEqxE,KAAKk5F,KAAKvqK,EAAEqxE,KAAK80F,IAAI77J,IAAIkxJ,KAAKzqJ,EAAE1G,EAAEA,EAAE+2J,OAAO/2J,EAAEi3J,SAAS/iJ,GAAElU,EAAEq2J,YAAY1gK,EAAEqxE,KAAKk4F,GAAG9E,IAAI3iJ,IAAGzX,EAAE82J,SAAS5iJ,IAAGlU,EAAEq2J,UAAUr2J,EAAE+6J,UAAUtjJ,GAAEzX,EAAEu6J,WAAWrmJ,GAAEve,EAAEygH,OAAOliG,GAAEve,EAAEglK,MAAMzmJ,KAAIlU,EAAE46J,MAAMjlK,EAAEusK,MAAMvsK,EAAEssK,MAAM15F,EAAE5yE,EAAEusK,MAAM9oK,EAAE8a,GAAElU,EAAEi3J,SAAS/iJ,IAAGma,EAAE14B,EAAEusK,MAAM9oK,EAAE8a,GAAElU,EAAEi3J,SAAS/iJ,KAAIlU,EAAEg/J,UAAUrpK,EAAE+rK,MAAM/rK,EAAEgjJ,KAAK,GAAG,IAAIhjJ,EAAEqxE,OAAO64F,EAAE,IAAI,IAAIlqK,EAAEqxE,OAAO87F,GAAIntK,EAAEqxE,OAAOi4F,EAAE,IAAI,IAAI,IAAIxnJ,IAAG,IAAIvD,IAAGjU,IAAIkxJ,IAAIsL,KAAKhM,IAAIgM,GAAGP,GAAGO,GAAG,EAAs0B9mK,EAAE8iK,WAAv0B,SAAWz4J,GAAG,IAAIA,IAAIA,EAAE+4C,MAAM,OAAO8hH,EAAE,IAAI56J,EAAED,EAAE+4C,MAAM,OAAO94C,EAAEmL,SAASnL,EAAEmL,OAAO,MAAMpL,EAAE+4C,MAAM,KAAK03G,CAAC,EAAgvB96J,EAAEiiK,iBAAjvB,SAAW53J,EAAEC,GAAG,IAAItK,EAAE,OAAOqK,GAAGA,EAAE+4C,MAAiB,IAAK,GAAfpjD,EAAEqK,EAAE+4C,OAAe4hH,MAAME,GAAGllK,EAAEtC,KAAK4M,EAAEA,EAAEkgI,MAAK,EAAGswB,GAAIoK,CAAC,EAAuqBllK,EAAEuiK,qBAAxqB,SAAWl4J,EAAEC,GAAG,IAAItK,EAAMyD,EAAE6G,EAAE1H,OAAO,OAAOyH,GAAGA,EAAE+4C,MAAiB,KAAVpjD,EAAEqK,EAAE+4C,OAAY4hH,MAAMhlK,EAAEqxE,OAAO5rC,EAAEy/H,EAAEllK,EAAEqxE,OAAO5rC,GAAU/M,EAAJ,EAAQpuB,EAAE7G,EAAE,KAAOzD,EAAEusK,MAAOpH,EAAKp0J,EAAE1G,EAAEC,EAAE7G,EAAEA,IAAKzD,EAAEqxE,KAAKk4F,GAAG9E,IAAIzkK,EAAEqsK,SAAS,EAAEvR,GAAIoK,CAAC,EAAugBllK,EAAE4tK,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,YAAY,GAAG,aAAa,KAAK,GAAG,CAAC,SAASvjK,EAAEC,EAAEtK,GAAG,aAAa,IAAIqsB,EAAEhiB,EAAE,mBAAmBvD,EAAE,GAA2BgK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAGC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI8nH,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,EAAE,GAAGh9E,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIvxC,EAAEnO,QAAQ,SAASkO,EAAEC,EAAEtK,EAAE8hB,EAAEvD,EAAEqF,EAAEvX,EAAEhD,GAAG,IAAIqvB,EAAEk6C,EAAE/iE,EAAEmkF,EAAErqF,EAAEopD,EAAEsoG,EAAEG,EAAEC,EAAEH,EAAEjyJ,EAAE0iK,KAAKjR,EAAE,EAAES,EAAE,EAAE56J,EAAE,EAAEukK,EAAE,EAAEC,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAErtK,EAAE,EAAEoqK,EAAE,EAAEkD,EAAE,KAAKJ,EAAE,EAAEK,EAAE,IAAI19I,EAAE82I,MAAMr8J,IAAK6iK,EAAE,IAAIt9I,EAAE82I,MAAMr8J,IAAKkjK,EAAE,KAAKC,EAAE,EAAE,IAAInP,EAAE,EAAEA,GAAGh0J,EAAEg0J,IAAIiP,EAAEjP,GAAG,EAAE,IAAIS,EAAE,EAAEA,EAAEz5I,EAAEy5I,IAAIwO,EAAEz/J,EAAEtK,EAAEu7J,MAAM,IAAI4J,EAAE7J,EAAE4J,EAAEp+J,EAAEo+J,GAAG,GAAG,IAAI6E,EAAE7E,GAAGA,KAAK,GAAGC,EAAED,IAAIC,EAAED,GAAG,IAAIA,EAAE,OAAO3mJ,EAAEqF,KAAK,SAASrF,EAAEqF,KAAK,SAASva,EAAE0iK,KAAK,EAAE,EAAE,IAAIprK,EAAE,EAAEA,EAAEukK,GAAG,IAAI6E,EAAEppK,GAAGA,KAAK,IAAIwkK,EAAExkK,IAAIwkK,EAAExkK,GAAGkpK,EAAE,EAAE/O,EAAE,EAAEA,GAAGh0J,EAAEg0J,IAAI,GAAG+O,IAAI,GAAEA,GAAGE,EAAEjP,IAAK,EAAE,OAAO,EAAE,GAAG+O,EAAE,IAAp0B,IAAw0Bx/J,GAAO,IAAI66J,GAAG,OAAO,EAAE,IAAIyE,EAAE,GAAG,EAAE7O,EAAE,EAAEA,EAAEh0J,EAAEg0J,IAAI6O,EAAE7O,EAAE,GAAG6O,EAAE7O,GAAGiP,EAAEjP,GAAG,IAAIS,EAAE,EAAEA,EAAEz5I,EAAEy5I,IAAI,IAAIjxJ,EAAEtK,EAAEu7J,KAAKlvJ,EAAEs9J,EAAEr/J,EAAEtK,EAAEu7J,OAAOA,GAAG,GAAt7B,IAAy7BlxJ,GAAOy/J,EAAEE,EAAE39J,EAAE0mD,EAAE,IAAp8B,IAAw8B1oD,GAAOy/J,EAAEh5J,EAAE44J,GAAG,IAAIM,EAAEj5J,EAAEk5J,GAAG,IAAIl3G,EAAE,MAAM+2G,EAAEjxC,EAAEmxC,EAAEnuH,EAAEkX,GAAG,GAAG6zG,EAAE,EAAErL,EAAE,EAAET,EAAEn6J,EAAEgJ,EAAEia,EAAE6gJ,EAAEU,EAAEoB,EAAE,EAAE12J,GAAG,EAASmkF,GAAPx3F,EAAE,GAAG2oK,GAAM,EAAniC,IAAqiC96J,GAAO7N,EAA5jC,KAAoB,IAA6iC6N,GAAO7N,EAAlkC,IAAskC,OAAO,EAAE,OAAc,CAAK6+J,EAAEP,EAAEyL,EAAEl6J,EAAEkvJ,GAAGxoG,GAAGyoG,EAAE,EAAEC,EAAEpvJ,EAAEkvJ,IAAIlvJ,EAAEkvJ,GAAGxoG,GAAGyoG,EAAEwO,EAAEC,EAAE59J,EAAEkvJ,IAAIE,EAAEqO,EAAEJ,EAAEr9J,EAAEkvJ,MAAMC,EAAE,GAAGC,EAAE,GAAG/iI,EAAE,GAAGoiI,EAAEyL,EAAS5lK,EAAPiyE,EAAE,GAAG6xF,EAAM,GAAQlmJ,EAAE5U,GAAGi9J,GAAGL,IAAb3zF,GAAGl6C,IAAgB2iI,GAAG,GAAGG,GAAG,GAAGC,EAAE,QAAQ,IAAI7oF,GAAG,IAAIl6C,EAAE,GAAGoiI,EAAE,EAAE8L,EAAEluI,GAAGA,IAAI,EAAE,GAAG,IAAIA,GAAGkuI,GAAGluI,EAAE,EAAEkuI,GAAGluI,GAAGkuI,EAAE,EAAErL,IAAI,KAAMwO,EAAEjP,GAAG,CAAC,GAAGA,IAAIoK,EAAE,MAAMpK,EAAExwJ,EAAEtK,EAAEqM,EAAEkvJ,GAAG,CAAC,GAAGT,EAAEqK,IAAIyB,EAAE5yE,KAAKnkF,EAAE,CAAC,IAAI,IAAI02J,IAAIA,EAAEpB,GAAGx7J,GAAGhJ,EAAQkpK,EAAE,IAARpF,EAAE3J,EAAEyL,GAAS9B,EAAE8B,EAAErB,MAAI2E,GAAGE,EAAEtF,EAAE8B,KAAQ,IAAK9B,IAAIoF,IAAI,EAAE,GAAGrtK,GAAG,GAAGioK,EAAx6C,IAA06Cp6J,GAAO7N,EAAj8C,KAAoB,IAAk7C6N,GAAO7N,EAAv8C,IAA28C,OAAO,EAAQ+hB,EAAN1O,EAAE+2J,EAAE5yE,GAAOmxE,GAAG,GAAGV,GAAG,GAAG96J,EAAEia,EAAE,CAAC,CAAC,CAAC,OAAO,IAAIgjJ,IAAIroJ,EAAE5U,EAAEi9J,GAAG9L,EAAEyL,GAAG,GAAG,IAAI,GAAG,GAAGl9J,EAAE0iK,KAAK5G,EAAE,CAAC,CAAC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAAS96J,EAAEC,EAAEtK,GAAG,aAAasK,EAAEnO,QAAQ,CAAC,EAAE,kBAAkB,EAAE,aAAa,EAAE,GAAG,KAAK,aAAa,KAAK,eAAe,KAAK,aAAa,KAAK,sBAAsB,KAAK,eAAe,KAAK,uBAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASkO,EAAEC,EAAEtK,GAAG,aAAa,SAASqsB,EAAEhiB,GAAG,IAAI,IAAIC,EAAED,EAAEzH,SAAS0H,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAASxD,EAAEuD,EAAEC,EAAEtK,EAAEqsB,EAAEvlB,GAAGrK,KAAKoxK,YAAYxjK,EAAE5N,KAAKqxK,WAAWxjK,EAAE7N,KAAKsxK,WAAW/tK,EAAEvD,KAAK46H,MAAMhrG,EAAE5vB,KAAKgqF,WAAW3/E,EAAErK,KAAKuxK,UAAU3jK,GAAGA,EAAEzH,MAAM,CAAC,SAASa,EAAE4G,EAAEC,GAAG7N,KAAKwxK,SAAS5jK,EAAE5N,KAAKyxK,SAAS,EAAEzxK,KAAK0xK,UAAU7jK,CAAC,CAAC,SAASmqG,EAAEpqG,GAAG,OAAOA,EAAE,IAAIo+J,EAAGp+J,GAAGo+J,EAAG,KAAKp+J,IAAI,GAAG,CAAC,SAAS8hE,EAAE9hE,EAAEC,GAAGD,EAAEq6J,YAAYr6J,EAAE+R,WAAW,IAAI9R,EAAED,EAAEq6J,YAAYr6J,EAAE+R,WAAW9R,IAAI,EAAE,GAAG,CAAC,SAASwF,EAAEzF,EAAEC,EAAEtK,GAAGqK,EAAE++J,SAASQ,EAAE5pK,GAAGqK,EAAE8+J,QAAQ7+J,GAAGD,EAAE++J,SAAS,MAAMj9F,EAAE9hE,EAAEA,EAAE8+J,QAAQ9+J,EAAE8+J,OAAO7+J,GAAGs/J,EAAEv/J,EAAE++J,SAAS/+J,EAAE++J,UAAUppK,EAAE4pK,IAAIv/J,EAAE8+J,QAAQ7+J,GAAGD,EAAE++J,SAAS,MAAM/+J,EAAE++J,UAAUppK,EAAE,CAAC,SAASm9B,EAAE9yB,EAAEC,EAAEtK,GAAG8P,EAAEzF,EAAErK,EAAE,EAAEsK,GAAGtK,EAAE,EAAEsK,EAAE,GAAG,CAAC,SAASwG,EAAEzG,EAAEC,GAAG,IAAItK,EAAE,EAAE,GAAGA,GAAG,EAAEqK,EAAEA,KAAK,EAAErK,IAAI,UAAUsK,EAAE,GAAG,OAAOtK,IAAI,CAAC,CAAo0B,SAAS67C,EAAExxC,EAAEC,EAAEtK,GAAG,IAAIqsB,EAAEvlB,EAAErD,EAAE,IAAImG,MAAMsgK,EAAE,GAAGz1D,EAAE,EAAE,IAAIpoF,EAAE,EAAEA,GAAG69I,EAAE79I,IAAI5oB,EAAE4oB,GAAGooF,EAAEA,EAAEz0G,EAAEqsB,EAAE,IAAI,EAAE,IAAIvlB,EAAE,EAAEA,GAAGwD,EAAExD,IAAI,CAAC,IAAIqlE,EAAE9hE,EAAE,EAAEvD,EAAE,GAAG,IAAIqlE,IAAI9hE,EAAE,EAAEvD,GAAGgK,EAAErN,EAAE0oE,KAAKA,GAAG,CAAC,CAAwiB,SAAS5tD,EAAElU,GAAG,IAAIC,EAAE,IAAIA,EAAE,EAAEA,EAAE2/J,EAAE3/J,IAAID,EAAE09J,UAAU,EAAEz9J,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAEo0I,EAAEp0I,IAAID,EAAE49J,UAAU,EAAE39J,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAE48J,EAAE58J,IAAID,EAAE89J,QAAQ,EAAE79J,GAAG,EAAED,EAAE09J,UAAU,EAAEuB,GAAG,EAAEj/J,EAAE4+J,QAAQ5+J,EAAE6+J,WAAW,EAAE7+J,EAAE08J,SAAS18J,EAAEkyI,QAAQ,CAAC,CAAC,SAAS34H,EAAEvZ,GAAGA,EAAE++J,SAAS,EAAEj9F,EAAE9hE,EAAEA,EAAE8+J,QAAQ9+J,EAAE++J,SAAS,IAAI/+J,EAAEq6J,YAAYr6J,EAAE+R,WAAW/R,EAAE8+J,QAAQ9+J,EAAE8+J,OAAO,EAAE9+J,EAAE++J,SAAS,CAAC,CAA4G,SAAS//J,EAAEgB,EAAEC,EAAEtK,EAAEqsB,GAAG,IAAIvlB,EAAE,EAAEwD,EAAE7G,EAAE,EAAEzD,EAAE,OAAOqK,EAAEvD,GAAGuD,EAAE5G,IAAI4G,EAAEvD,KAAKuD,EAAE5G,IAAI4oB,EAAE/hB,IAAI+hB,EAAErsB,EAAE,CAAC,SAAS04B,EAAEruB,EAAEC,EAAEtK,GAAG,IAAI,IAAIqsB,EAAEhiB,EAAEq+J,KAAK1oK,GAAG8G,EAAE9G,GAAG,EAAE8G,GAAGuD,EAAEu+J,WAAW9hK,EAAEuD,EAAEu+J,UAAUv/J,EAAEiB,EAAED,EAAEq+J,KAAK5hK,EAAE,GAAGuD,EAAEq+J,KAAK5hK,GAAGuD,EAAEgyE,QAAQv1E,KAAKuC,EAAEiB,EAAE+hB,EAAEhiB,EAAEq+J,KAAK5hK,GAAGuD,EAAEgyE,SAAShyE,EAAEq+J,KAAK1oK,GAAGqK,EAAEq+J,KAAK5hK,GAAG9G,EAAE8G,EAAEA,IAAI,EAAEuD,EAAEq+J,KAAK1oK,GAAGqsB,CAAC,CAAC,SAASumD,EAAEvoE,EAAEC,EAAEtK,GAAG,IAAIqsB,EAAEvlB,EAAErD,EAAE0oE,EAAEr7D,EAAE,EAAE,GAAG,IAAIzG,EAAE08J,SAAS,GAAG16I,EAAEhiB,EAAEq6J,YAAYr6J,EAAE2+J,MAAM,EAAEl4J,IAAI,EAAEzG,EAAEq6J,YAAYr6J,EAAE2+J,MAAM,EAAEl4J,EAAE,GAAGhK,EAAEuD,EAAEq6J,YAAYr6J,EAAEy+J,MAAMh4J,GAAGA,IAAI,IAAIub,EAAE8Q,EAAE9yB,EAAEvD,EAAEwD,IAAY6yB,EAAE9yB,GAAV5G,EAAE0iK,EAAGr/J,IAASkjK,EAAE,EAAE1/J,GAAW,KAAR6hE,EAAEk+F,EAAG5mK,KAAoBqM,EAAEzF,EAAXvD,GAAG8+J,EAAGniK,GAAS0oE,GAAehvC,EAAE9yB,EAAT5G,EAAEgxG,IAANpoF,GAAiBrsB,GAAW,KAARmsE,EAAEghG,EAAG1pK,KAAoBqM,EAAEzF,EAAXgiB,GAAGo5I,EAAGhiK,GAAS0oE,UAAWr7D,EAAEzG,EAAE08J,UAAU5pI,EAAE9yB,EAAEi/J,EAAEh/J,EAAE,CAAC,SAASuF,EAAExF,EAAEC,GAAG,IAAItK,EAAEqsB,EAAEvlB,EAAErD,EAAE6G,EAAE2jK,SAASx5D,EAAEnqG,EAAE6jK,UAAUN,YAAY1hG,EAAE7hE,EAAE6jK,UAAUH,UAAUl+J,EAAExF,EAAE6jK,UAAU92C,MAAMl6F,GAAG,EAAE,IAAI9yB,EAAEu+J,SAAS,EAAEv+J,EAAEw+J,SAASpjI,EAAEzlC,EAAE,EAAEA,EAAE8P,EAAE9P,IAAI,IAAIyD,EAAE,EAAEzD,IAAIqK,EAAEq+J,OAAOr+J,EAAEu+J,UAAUzrI,EAAEn9B,EAAEqK,EAAEgyE,MAAMr8E,GAAG,GAAGyD,EAAE,EAAEzD,EAAE,GAAG,EAAE,KAAKqK,EAAEu+J,SAAS,GAAoCnlK,EAAE,GAAnCqD,EAAEuD,EAAEq+J,OAAOr+J,EAAEu+J,UAAUzrI,EAAE,IAAIA,EAAE,IAAS,EAAE9yB,EAAEgyE,MAAMv1E,GAAG,EAAEuD,EAAE4+J,UAAU98F,IAAI9hE,EAAE6+J,YAAYz0D,EAAE,EAAE3tG,EAAE,IAAI,IAAIwD,EAAE4jK,SAAS/wI,EAAEn9B,EAAEqK,EAAEu+J,UAAU,EAAE5oK,GAAG,EAAEA,IAAI04B,EAAEruB,EAAE5G,EAAEzD,GAAG8G,EAAEgJ,EAAE,GAAG9P,EAAEqK,EAAEq+J,KAAK,GAAGr+J,EAAEq+J,KAAK,GAAGr+J,EAAEq+J,KAAKr+J,EAAEu+J,YAAYlwI,EAAEruB,EAAE5G,EAAE,GAAG4oB,EAAEhiB,EAAEq+J,KAAK,GAAGr+J,EAAEq+J,OAAOr+J,EAAEw+J,UAAU7oK,EAAEqK,EAAEq+J,OAAOr+J,EAAEw+J,UAAUx8I,EAAE5oB,EAAE,EAAEqD,GAAGrD,EAAE,EAAEzD,GAAGyD,EAAE,EAAE4oB,GAAGhiB,EAAEgyE,MAAMv1E,IAAIuD,EAAEgyE,MAAMr8E,IAAIqK,EAAEgyE,MAAMhwD,GAAGhiB,EAAEgyE,MAAMr8E,GAAGqK,EAAEgyE,MAAMhwD,IAAI,EAAE5oB,EAAE,EAAEzD,EAAE,GAAGyD,EAAE,EAAE4oB,EAAE,GAAGvlB,EAAEuD,EAAEq+J,KAAK,GAAG5hK,IAAI4xB,EAAEruB,EAAE5G,EAAE,SAAS4G,EAAEu+J,UAAU,GAAGv+J,EAAEq+J,OAAOr+J,EAAEw+J,UAAUx+J,EAAEq+J,KAAK,GAAv9F,SAAWr+J,EAAEC,GAAG,IAAItK,EAAEqsB,EAAEvlB,EAAErD,EAAEgxG,EAAEtoC,EAAEr8D,EAAExF,EAAE2jK,SAAS9wI,EAAE7yB,EAAE4jK,SAASp9J,EAAExG,EAAE6jK,UAAUN,YAAY98J,EAAEzG,EAAE6jK,UAAUH,UAAUn1C,EAAEvuH,EAAE6jK,UAAUL,WAAWjyH,EAAEvxC,EAAE6jK,UAAUJ,WAAWjsJ,EAAExX,EAAE6jK,UAAU1nF,WAAWloE,EAAE,EAAE,IAAI9a,EAAE,EAAEA,GAAGymK,EAAEzmK,IAAI4G,EAAEm+J,SAAS/kK,GAAG,EAAE,IAAIqM,EAAE,EAAEzF,EAAEq+J,KAAKr+J,EAAEw+J,UAAU,GAAG,EAAE7oK,EAAEqK,EAAEw+J,SAAS,EAAE7oK,EAAEylC,EAAEzlC,KAAgByD,EAAEqM,EAAE,EAAEA,EAAE,GAApBuc,EAAEhiB,EAAEq+J,KAAK1oK,IAAe,GAAG,GAAG,GAAI8hB,IAAIre,EAAEqe,EAAEvD,KAAKzO,EAAE,EAAEuc,EAAE,GAAG5oB,EAAE4oB,EAAE8Q,IAAI9yB,EAAEm+J,SAAS/kK,KAAKgxG,EAAE,EAAEpoF,GAAGwvB,IAAI44D,EAAEokB,EAAExsG,EAAEwvB,IAAIswB,EAAEr8D,EAAE,EAAEuc,GAAGhiB,EAAE4+J,SAAS98F,GAAG1oE,EAAEgxG,GAAG1jG,IAAI1G,EAAE6+J,YAAY/8F,GAAGr7D,EAAE,EAAEub,EAAE,GAAGooF,KAAK,GAAG,IAAIl2F,EAAE,CAAC,EAAE,CAAC,IAAI9a,EAAEqe,EAAE,EAAE,IAAIzX,EAAEm+J,SAAS/kK,IAAIA,IAAI4G,EAAEm+J,SAAS/kK,KAAK4G,EAAEm+J,SAAS/kK,EAAE,IAAI,EAAE4G,EAAEm+J,SAAS1mJ,KAAKvD,GAAG,CAAC,OAAOA,EAAE,GAAG,IAAI9a,EAAEqe,EAAE,IAAIre,EAAEA,IAAI,IAAI4oB,EAAEhiB,EAAEm+J,SAAS/kK,GAAG,IAAI4oB,IAAGvlB,EAAEuD,EAAEq+J,OAAO1oK,IAAKm9B,IAAIrtB,EAAE,EAAEhJ,EAAE,KAAKrD,IAAI4G,EAAE4+J,UAAUxlK,EAAEqM,EAAE,EAAEhJ,EAAE,IAAIgJ,EAAE,EAAEhJ,GAAGgJ,EAAE,EAAEhJ,EAAE,GAAGrD,GAAG4oB,IAAI,CAAC,CAAkzEwsG,CAAExuH,EAAEC,GAAGuxC,EAAEp4C,EAAE05B,EAAE9yB,EAAEm+J,SAAS,CAAC,SAASx0E,EAAE3pF,EAAEC,EAAEtK,GAAG,IAAIqsB,EAAEvlB,EAAErD,GAAG,EAAEgxG,EAAEnqG,EAAE,GAAG6hE,EAAE,EAAEr8D,EAAE,EAAEqtB,EAAE,EAAE,IAAI,IAAIs3E,IAAI3kG,EAAE,IAAIqtB,EAAE,GAAG7yB,EAAE,GAAGtK,EAAE,GAAG,GAAG,MAAMqsB,EAAE,EAAEA,GAAGrsB,EAAEqsB,IAAIvlB,EAAE2tG,EAAEA,EAAEnqG,EAAE,GAAG+hB,EAAE,GAAG,KAAK8/C,EAAEr8D,GAAGhJ,IAAI2tG,IAAItoC,EAAEhvC,EAAE9yB,EAAE89J,QAAQ,EAAErhK,IAAIqlE,EAAE,IAAIrlE,GAAGA,IAAIrD,GAAG4G,EAAE89J,QAAQ,EAAErhK,KAAKuD,EAAE89J,QAAQ,EAAER,MAAMx7F,GAAG,GAAG9hE,EAAE89J,QAAQ,EAAEltC,KAAK5wH,EAAE89J,QAAQ,EAAEiC,KAAMj+F,EAAE,EAAE1oE,EAAEqD,EAAE,IAAI2tG,GAAG3kG,EAAE,IAAIqtB,EAAE,GAAGr2B,IAAI2tG,GAAG3kG,EAAE,EAAEqtB,EAAE,IAAIrtB,EAAE,EAAEqtB,EAAE,GAAG,CAAC,SAASxzB,EAAEU,EAAEC,EAAEtK,GAAG,IAAIqsB,EAAEvlB,EAAErD,GAAG,EAAEgxG,EAAEnqG,EAAE,GAAG6hE,EAAE,EAAEr7D,EAAE,EAAEC,EAAE,EAAE,IAAI,IAAI0jG,IAAI3jG,EAAE,IAAIC,EAAE,GAAGsb,EAAE,EAAEA,GAAGrsB,EAAEqsB,IAAI,GAAGvlB,EAAE2tG,EAAEA,EAAEnqG,EAAE,GAAG+hB,EAAE,GAAG,OAAO8/C,EAAEr7D,GAAGhK,IAAI2tG,GAAG,CAAC,GAAGtoC,EAAEp7D,EAAG,GAAGosB,EAAE9yB,EAAEvD,EAAEuD,EAAE89J,eAAe,KAAMh8F,QAAQ,IAAIrlE,GAAGA,IAAIrD,IAAI05B,EAAE9yB,EAAEvD,EAAEuD,EAAE89J,SAASh8F,KAAKhvC,EAAE9yB,EAAEs9J,EAAEt9J,EAAE89J,SAASr4J,EAAEzF,EAAE8hE,EAAE,EAAE,IAAIA,GAAG,IAAIhvC,EAAE9yB,EAAE4wH,EAAE5wH,EAAE89J,SAASr4J,EAAEzF,EAAE8hE,EAAE,EAAE,KAAKhvC,EAAE9yB,EAAE+/J,EAAG//J,EAAE89J,SAASr4J,EAAEzF,EAAE8hE,EAAE,GAAG,IAAIA,EAAE,EAAE1oE,EAAEqD,EAAE,IAAI2tG,GAAG3jG,EAAE,IAAIC,EAAE,GAAGjK,IAAI2tG,GAAG3jG,EAAE,EAAEC,EAAE,IAAID,EAAE,EAAEC,EAAE,EAAE,CAAC,CAAysB,SAASuqJ,EAAEjxJ,EAAEC,EAAEtK,EAAEqsB,GAAGvc,EAAEzF,GAAG7N,GAAG,IAAI6vB,EAAE,EAAE,GAAG,GAAtuF,SAAWhiB,EAAEC,EAAEtK,EAAEqsB,GAAGzI,EAAEvZ,GAAGgiB,IAAI8/C,EAAE9hE,EAAErK,GAAGmsE,EAAE9hE,GAAGrK,IAAIklK,EAAErC,SAASx4J,EAAEq6J,YAAYr6J,EAAEoL,OAAOnL,EAAEtK,EAAEqK,EAAE+R,SAAS/R,EAAE+R,SAASpc,CAAC,CAA+nFqM,CAAEhC,EAAEC,EAAEtK,GAAE,EAAG,CAA+sB,IAAIklK,EAAE76J,EAAE,mBAAmB86J,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAErtK,EAAE,EAAEoqK,EAAE,EAAEkD,EAAE,EAAYH,EAAE,GAAGK,EAAE,IAAIC,EAAED,EAAE,EAAEL,EAAEjrB,EAAE,GAAGwoB,EAAE,GAAGzhI,EAAE,EAAEwkI,EAAE,EAAEC,EAAE,GAAGN,EAAE,GAAGO,EAAE,EAAEb,EAAE,IAAI3B,EAAE,GAAG1sC,EAAE,GAAGmvx+J,MAAM,GAAGqgK,EAAE,IAAI59I,EAAE+7I,GAAI,IAAIJ,EAAG,IAAIp+J,MAAM,EAAE80I,GAAGryH,EAAE27I,GAAI,IAAIS,EAAG,IAAI7+J,MAAvE,KAAiFyiB,EAAEo8I,GAAI,IAAItC,EAAG,IAAIv8J,MAAMmgK,KAAO19I,EAAE85I,GAAI,IAAIP,EAAG,IAAIh8J,MAAM+/J,GAAGt9I,EAAEu5I,GAAI,IAAIH,EAAG,IAAI77J,MAAM80I,GAAGryH,EAAEo5I,GAAI,IAAI8E,EAAGhB,EAAGiB,GAAGC,IAAG,EAAGzqK,EAAEypK,SAA78C,SAAWp/J,GAAGogK,KAAh5G,WAAa,IAAIpgK,EAAEC,EAAEtK,EAAEqsB,EAAE5oB,EAAEgxG,EAAE,IAAI7qG,MAAMsgK,EAAE,GAAG,IAAIlqK,EAAE,EAAEqsB,EAAE,EAAEA,EAAEs9I,EAAE,EAAEt9I,IAAI,IAAIu5I,EAAGv5I,GAAGrsB,EAAEqK,EAAE,EAAEA,EAAE,GAAGggK,EAAGh+I,GAAGhiB,IAAI87J,EAAGnmK,KAAKqsB,EAAE,IAAI85I,EAAGnmK,EAAE,GAAGqsB,EAAE5oB,EAAE,EAAE4oB,EAAE,EAAEA,EAAE,GAAGA,IAAI,IAAIo5I,EAAGp5I,GAAG5oB,EAAE4G,EAAE,EAAEA,EAAE,GAAG8iK,EAAG9gJ,GAAGhiB,IAAIo+J,EAAGhlK,KAAK4oB,EAAE,IAAI5oB,IAAI,EAAE4oB,EAAEqyH,EAAEryH,IAAI,IAAIo5I,EAAGp5I,GAAG5oB,GAAG,EAAE4G,EAAE,EAAEA,EAAE,GAAG8iK,EAAG9gJ,GAAG,EAAEhiB,IAAIo+J,EAAG,IAAIhlK,KAAK4oB,EAAE,IAAI/hB,EAAE,EAAEA,GAAG4/J,EAAE5/J,IAAImqG,EAAEnqG,GAAG,EAAE,IAAID,EAAE,EAAEA,GAAG,KAAK+9J,EAAG,EAAE/9J,EAAE,GAAG,EAAEA,IAAIoqG,EAAE,KAAK,KAAKpqG,GAAG,KAAK+9J,EAAG,EAAE/9J,EAAE,GAAG,EAAEA,IAAIoqG,EAAE,KAAK,KAAKpqG,GAAG,KAAK+9J,EAAG,EAAE/9J,EAAE,GAAG,EAAEA,IAAIoqG,EAAE,KAAK,KAAKpqG,GAAG,KAAK+9J,EAAG,EAAE/9J,EAAE,GAAG,EAAEA,IAAIoqG,EAAE,KAAK,IAAI54D,EAAEusH,EAAG6B,EAAE,EAAEx1D,GAAGpqG,EAAE,EAAEA,EAAEq0I,EAAEr0I,IAAI29J,EAAG,EAAE39J,EAAE,GAAG,EAAE29J,EAAG,EAAE39J,GAAGyG,EAAEzG,EAAE,GAAGkgK,EAAG,IAAIzjK,EAAEshK,EAAGiC,EAAGL,EAAE,EAAEC,EAAEC,GAAGX,EAAG,IAAIziK,EAAEkhK,EAAGmF,EAAG,EAAEzuB,EAAEwrB,GAAGM,GAAG,IAAI1jK,EAAE,IAAI8C,MAAM,GAAG0gK,EAAG,EAAEpD,EAAEiD,EAAE,CAA+2FroJ,GAAI2oJ,IAAG,GAAIpgK,EAAEg+J,OAAO,IAAI5kK,EAAE4G,EAAE09J,UAAUwC,GAAIlgK,EAAEi+J,OAAO,IAAI7kK,EAAE4G,EAAE49J,UAAUsB,GAAIl/J,EAAEk+J,QAAQ,IAAI9kK,EAAE4G,EAAE89J,QAAQqC,IAAIngK,EAAE8+J,OAAO,EAAE9+J,EAAE++J,SAAS,EAAE7qJ,EAAElU,EAAE,EAAk0CrK,EAAEsrK,iBAAiBhQ,EAAEt7J,EAAE6kK,gBAAzvC,SAAWx6J,EAAEC,EAAEtK,EAAEqsB,GAAG,IAAIvlB,EAAErD,EAAEgxG,EAAE,EAAEpqG,EAAEsvJ,MAAM,GAAGtvJ,EAAEo2J,KAAK4I,YAAYQ,IAAIx/J,EAAEo2J,KAAK4I,UAApiB,SAAWh/J,GAAG,IAAIC,EAAEtK,EAAE,WAAW,IAAIsK,EAAE,EAAEA,GAAG,GAAGA,IAAItK,KAAK,EAAE,GAAG,EAAEA,GAAG,IAAIqK,EAAE09J,UAAU,EAAEz9J,GAAG,OAAOm6J,EAAE,GAAG,IAAIp6J,EAAE09J,UAAU,KAAK,IAAI19J,EAAE09J,UAAU,KAAK,IAAI19J,EAAE09J,UAAU,IAAI,OAAOxB,EAAE,IAAIj8J,EAAE,GAAGA,EAAE0/J,EAAE1/J,IAAI,GAAG,IAAID,EAAE09J,UAAU,EAAEz9J,GAAG,OAAOi8J,EAAE,OAAO9B,CAAC,CAA0UjJ,CAAEnxJ,IAAIwF,EAAExF,EAAEA,EAAEg+J,QAAQx4J,EAAExF,EAAEA,EAAEi+J,QAAQ7zD,EAA55B,SAAWpqG,GAAG,IAAIC,EAAE,IAAI0pF,EAAE3pF,EAAEA,EAAE09J,UAAU19J,EAAEg+J,OAAO6F,UAAUl6E,EAAE3pF,EAAEA,EAAE49J,UAAU59J,EAAEi+J,OAAO4F,UAAUr+J,EAAExF,EAAEA,EAAEk+J,SAASj+J,EAAE48J,EAAE,EAAE58J,GAAG,GAAG,IAAID,EAAE89J,QAAQ,EAAEQ,EAAGr+J,GAAG,GAAGA,KAAK,OAAOD,EAAE4+J,SAAS,GAAG3+J,EAAE,GAAG,EAAE,EAAE,EAAEA,CAAC,CAAsuByoD,CAAE1oD,GAAGvD,EAAEuD,EAAE4+J,QAAQ,EAAE,IAAI,GAAExlK,EAAE4G,EAAE6+J,WAAW,EAAE,IAAI,IAAKpiK,IAAIA,EAAErD,IAAIqD,EAAErD,EAAEzD,EAAE,EAAEA,EAAE,GAAG8G,IAAQ,IAALwD,EAAOgxJ,EAAEjxJ,EAAEC,EAAEtK,EAAEqsB,GAAGhiB,EAAEi2J,WAAW6E,GAAG1hK,IAAIqD,GAAGgJ,EAAEzF,GAAGu8J,GAAG,IAAIv6I,EAAE,EAAE,GAAG,GAAGumD,EAAEvoE,EAAE+9J,EAAGJ,KAAMl4J,EAAEzF,GAAGy/J,GAAG,IAAIz9I,EAAE,EAAE,GAAG,GAAj5B,SAAWhiB,EAAEC,EAAEtK,EAAEqsB,GAAG,IAAIvlB,EAAE,IAAIgJ,EAAEzF,EAAEC,EAAE,IAAI,GAAGwF,EAAEzF,EAAErK,EAAE,EAAE,GAAG8P,EAAEzF,EAAEgiB,EAAE,EAAE,GAAGvlB,EAAE,EAAEA,EAAEulB,EAAEvlB,IAAIgJ,EAAEzF,EAAEA,EAAE89J,QAAQ,EAAEQ,EAAG7hK,GAAG,GAAG,GAAG6C,EAAEU,EAAEA,EAAE09J,UAAUz9J,EAAE,GAAGX,EAAEU,EAAEA,EAAE49J,UAAUjoK,EAAE,EAAE,CAAkwBq7J,CAAEhxJ,EAAEA,EAAEg+J,OAAO6F,SAAS,EAAE7jK,EAAEi+J,OAAO4F,SAAS,EAAEz5D,EAAE,GAAG7hC,EAAEvoE,EAAEA,EAAE09J,UAAU19J,EAAE49J,YAAY1pJ,EAAElU,GAAGgiB,GAAGzI,EAAEvZ,EAAE,EAA04BrK,EAAE0mK,UAA34B,SAAWr8J,EAAEC,EAAEtK,GAAG,OAAOqK,EAAEq6J,YAAYr6J,EAAE2+J,MAAM,EAAE3+J,EAAE08J,UAAUz8J,IAAI,EAAE,IAAID,EAAEq6J,YAAYr6J,EAAE2+J,MAAM,EAAE3+J,EAAE08J,SAAS,GAAG,IAAIz8J,EAAED,EAAEq6J,YAAYr6J,EAAEy+J,MAAMz+J,EAAE08J,UAAU,IAAI/mK,EAAEqK,EAAE08J,WAAW,IAAIz8J,EAAED,EAAE09J,UAAU,EAAE/nK,MAAMqK,EAAEkyI,UAAUjyI,IAAID,EAAE09J,UAAU,GAAG5B,EAAGnmK,GAAGgqK,EAAE,MAAM3/J,EAAE49J,UAAU,EAAExzD,EAAEnqG,OAAOD,EAAE08J,WAAW18J,EAAE0+J,YAAY,CAAC,EAAqnB/oK,EAAEqrK,UAAp0C,SAAWhhK,GAAGyF,EAAEzF,EAAEu8J,GAAG,EAAE,GAAGzpI,EAAE9yB,EAAEi/J,EAAElB,GAAnkJ,SAAW/9J,GAAG,KAAKA,EAAE++J,UAAUj9F,EAAE9hE,EAAEA,EAAE8+J,QAAQ9+J,EAAE8+J,OAAO,EAAE9+J,EAAE++J,SAAS,GAAG/+J,EAAE++J,UAAU,IAAI/+J,EAAEq6J,YAAYr6J,EAAE+R,WAAW,IAAI/R,EAAE8+J,OAAO9+J,EAAE8+J,SAAS,EAAE9+J,EAAE++J,UAAU,EAAE,CAA86Ir4J,CAAE1G,EAAE,CAAuyC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAsNsK,EAAEnO,QAA3M,WAAaM,KAAKwkK,MAAM,KAAKxkK,KAAKykK,QAAQ,EAAEzkK,KAAK0kK,SAAS,EAAE1kK,KAAK2oK,SAAS,EAAE3oK,KAAK2kK,OAAO,KAAK3kK,KAAK6kK,SAAS,EAAE7kK,KAAKikK,UAAU,EAAEjkK,KAAKmoK,UAAU,EAAEnoK,KAAK+e,IAAI,GAAG/e,KAAK2mD,MAAM,KAAK3mD,KAAK4sK,UAAU,EAAE5sK,KAAKwoK,MAAM,CAAC,CAAY,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAF31gB,CAEg2gB,qBCbvohB,IAAIr6J,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASwjK,EAAet3I,GACvB,IAAIz5B,EAAKgxK,EAAsBv3I,GAC/B,OAAOw3I,EAAoBjxK,EAC5B,CACA,SAASgxK,EAAsBv3I,GAC9B,IAAIw3I,EAAoBxsJ,EAAElX,EAAKksB,GAAM,CACpC,IAAIhwB,EAAI,IAAI/B,MAAM,uBAAyB+xB,EAAM,KAEjD,MADAhwB,EAAEoM,KAAO,mBACHpM,CACP,CACA,OAAO8D,EAAIksB,EACZ,CACAs3I,EAAev9J,KAAO,WACrB,OAAOD,OAAOC,KAAKjG,EACpB,EACAwjK,EAAejiK,QAAUkiK,EACzBnyK,EAAOC,QAAUiyK,EACjBA,EAAe/wK,GAAK,iBC5RpBnB,EAAOC,QAAU,MACV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIg5F,EAAM,CACPl2F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMquK,QAAQz0E,EAAK55F,MAAMhD,GAAGwJ,KAAMxG,MAAMsuK,cAC3C,cCpCHtyK,EAAOC,QAAU,MACV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MASZD,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMhD,GAAGuxK,WAAWC,YAAcxuK,MAAMC,OACrC,CACGgB,QAAS,SAAUwtG,EAAW3vG,EAAMof,GACjC,IAAI7T,EAAS,GAECokG,EAAU7lF,KAAK,CAAC,IAAM,IAC5BpoB,SAASib,IACd,GAAW,MAAPA,EAAJ,CAEA,IAAIrV,EACDqV,EAAIyC,EAAKxW,WAAa+T,EAAIyC,EAAKxW,SAAW,cAGzCtB,GAAQsD,MAAMC,QAAQvD,GACvBiE,GAAUjE,EAAK1D,OAEP,MAAR0D,GACQ,IAARA,GACQ,GAARA,GACQ,SAARA,GACQ,KAARA,IAEAiE,GAAU,EAfU,CAgBvB,IAGHvL,EAAKknC,UAAY37B,CACpB,GAEHrK,MAAMhD,GAAGuxK,WAAWE,WAE1B,oBC1DH,IAAIv/G,EAAgB,CACjB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAIXlzD,EAAOC,QAAU,MACdC,cAAe,CAEfuqE,eAAetqE,GACZA,EAAIyoE,OAASzoE,EAAIyoE,QAAU,CAAC,EAE5B1V,EAAc1uD,SAAS2nI,IACpB,IAAIzrI,EAAY,IAAIyrI,EAAUhsI,GAC9BA,EAAIyoE,OAAOloE,EAAUkE,KAAOlE,CAAS,IAIxCP,EAAImC,GAAGsmE,OAASzoE,EAAIyoE,MACvB,cC7BH5oE,EAAOC,QAAU,MAGV2E,UACD,MAAO,gBACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAKrBzE,EAAIQ,OAAO,yBAEpBJ,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMkjF,QAAQi9B,OAAOuuD,SAAW,CAC7BzxK,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHf,KAAM,WACN0c,OAAO,EACPzb,YAAY,EACZo8D,YAAY,IAIlBt6D,MAAMkjF,QAAQwrF,SAAW1uK,MAAMC,OAC5B,CACG0uK,UAAW,YAEd3uK,MAAMkjF,QAAQlmE,KAEpB,cCxDHhhB,EAAOC,QAAU,MAGV2E,UACD,MAAO,UACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIg5F,EAAM,CACPl2F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMquK,QAAQz0E,EAAK55F,MAAM4uK,YAAa5uK,MAAMhD,GAAGwJ,KAClD,cCtCHxK,EAAOC,QAAU,MAGV2E,UACD,MAAO,UACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIg5F,EAAM,CACPl2F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMquK,QAAQz0E,EAAK55F,MAAM4uK,YAAa5uK,MAAMhD,GAAGgrF,KAClD,cCtCHhsF,EAAOC,QAAU,MAGV2E,UACD,MAAO,cACV,CAEA1E,YAAYC,GAoBT,IAAIy9F,EAAM,CACPl2F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMquK,QAAQz0E,EAAK55F,MAAM4uK,YAAa5uK,MAAMhD,GAAG6xK,SAClD,cCtCH7yK,EAAOC,QAAU,MACV2E,UACD,MAAO,mBACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIg5F,EAAM,CACPl2F,KAAMnH,KAAKqE,IACX4a,MAAO,WACJ,OAAO,CACV,GAEHjf,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMquK,QAAQz0E,EAAK55F,MAAMhD,GAAG4gE,SAAU59D,MAAMwsI,UAC/C,oBCxCH,IAAI10G,EAAY,EAAQ,OACxB97B,EAAOC,QAAU,cAAoC67B,EAC9Cl3B,UACD,MAAO,eACV,CAEA1E,YAAYC,GACTE,QAQQF,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAX9B,IAeIg5F,EAAM,CACPl2F,KAAMnH,KAAKqE,IACXD,SAAU,CACPlD,IAAK,UACLS,YAAY,GAEf4wK,MAAO,SAAUtwK,GACd,IAAIuwK,EAAiBvwK,EAAOuwK,eACvBvwK,EAAOuwK,eACP,CAAC,EACFx+C,EAAW/xH,EAAO+xH,SAAW/xH,EAAO+xH,SAAW,CAAC,EAEpD,IAAK,IAAInqH,KAAQmqH,EACd,GACG7mH,MAAMC,QAAQ4mH,EAASnqH,KACK,iBAArBmqH,EAASnqH,GAAM,GACvB,CACC,IAAI4oK,EAAO,GACXz+C,EAASnqH,GAAM5F,SAASmK,IACjBA,EAAKxN,IAAI6xK,EAAKnuK,KAAK8J,EAAKxN,GAAG,IAElCozH,EAASnqH,GAAQ4oK,CACpB,CAGHC,OAAOC,WAAW3yK,KAAK0N,MAAO8kK,EAAgB,CAM9C,GAAGh+J,MAAK,SAAUtK,GAIfA,EAAK0oK,WAAa,CACf/oK,KAAMmqH,IAERw+C,EAAezmH,YAAc,IAAI9nD,SAASkoD,IAExB,UAAbA,EAAKvqD,MACU,SAAfuqD,EAAKC,QACLD,EAAK18B,OAELvlB,EAAKojE,KAAKnhB,EAAK18B,OAAO,SAAUluB,GAC7BU,EAAO4wK,UAAW5wK,EAAO4wK,SAAS1mH,EAAK18B,MAE1C,GACH,GAqBN,GACH,GAEHzvB,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMquK,QAAQz0E,EAAK55F,MAAMhD,GAAGC,KAC/B,cC5GHjB,EAAOC,QAAU,MACV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIg5F,EAAM,CACPl2F,KAAMnH,KAAKqE,IAEXD,SAAU,CACPlD,IAAK,iBAIR4xK,UAAW,WACR,IAAI98J,EAAMhW,KAAKqjG,eAAe1gG,MAC9B,OAAIqT,EAAYnC,KAAK0D,MAAMvB,GAEf,EACf,GAEHhW,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMquK,QAAQz0E,EAAK55F,MAAMhD,GAAG4N,KAC/B,cChDH5O,EAAOC,QAAU,MAGV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAKrBzE,EAAIQ,OAAO,qBAEpBJ,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMkjF,QAAQi9B,OAAO8qD,KAAO,CACzBhuK,KAAM,QACNe,KAAM,CACHf,KAAM,WACNM,MAAO,IACPD,OAAQ,IACRa,KAAM,SAIZ6B,MAAMkjF,QAAQ+nF,KAAOjrK,MAAMC,OACxB,CACG0uK,UAAW,QAEd3uK,MAAMkjF,QAAQlmE,KAEpB,cCrDHhhB,EAAOC,QAAU,MACV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MASZD,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMhD,GAAGuxK,WAAWntG,YAAcphE,MAAMC,OACrC,CACGgB,QAAS,SAAUwtG,EAAW3vG,EAAMof,GACjC,IAAI7T,EAAS,EAEbokG,EAAU6gE,SAAQ,SAAU7zJ,GACzB,IAAI+N,EAASilF,EAAUlmF,QAAQ9M,GAE3BrV,EAAO8X,EAAK/b,MAAM0a,OAAO2M,GAGzBpjB,IACDiE,GAAU+nC,WAAWhsC,GAE3B,IAEAtH,EAAKknC,UAAY37B,CACpB,GAEHrK,MAAMhD,GAAGuxK,WAAWE,WAE1B,cChDHzyK,EAAOC,QAAU,MAGV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIg5F,EAAM,CACPl2F,KAAMnH,KAAKqE,IACXD,SAAU,CACPxC,KAAM,OACNZ,MAAO,EACPS,KAAM,CACHE,YAAY,EACZk3F,QAAQ,EACRx3B,SAAU,SAASvpD,EAAKixB,GACrB,MACG,UACCjxB,EAAIk7J,OAAS,MAAQl7J,EAAInV,MAAQ,OAASmV,EAAInV,OAC/C,SAEN,EACAo5E,MAAO,WACJ/7E,KAAKqrF,SACR,EACAjpF,GAAI,CACD0xG,cAAe,SAASlzG,EAAIyJ,GACrBrK,KAAKgsB,QAAQprB,GAAIoyK,SAClBhzK,KAAKyL,gBAAgBwnK,eAAe,IACpCjzK,KAAK4E,KACFjB,GAAG3D,KAAKyL,gBAAgBxJ,OAAOixK,QAAQ7vE,gBAGhD,MAKZrjG,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMquK,QAAQz0E,EAAK55F,MAAMhD,GAAGu3E,QAC/B","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      console.error(\n         \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      );\n      return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\")\n                        model.normalizeData(data.data);\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (value) {\n         this._config.options[key] = value;\n         return;\n      }\n      return this._config.options[key];\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.js\";\n// NOTE: moved to require() because using import with webix_debug.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix-debug.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      console.error(\"TODO: ABFactory.notify(): pass error off to analytics\");\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            this.AB.applications().then((apps) => {\n               // NOTE: apps is a webix datacollection\n\n               var allRemoves = [];\n\n               var appsWithObject = apps.filter((a) => {\n                  return a.datacollectionsIncluded((o) => o.id == this.id);\n               });\n               appsWithObject.forEach((app) => {\n                  allRemoves.push(app.datacollectionRemove(this));\n               });\n\n               return Promise.all(allRemoves).then(next).catch(err);\n            });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n                           model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {};\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(updateItemData);\n                     if (\n                        this.__treeCollection &&\n                        this.__treeCollection.exists(d.id)\n                     )\n                        this.__treeCollection.updateItem(d.id, updateItemData);\n\n                     if (\n                        this.__dataCollection &&\n                        this.__dataCollection.exists(d.id)\n                     ) {\n                        this.__dataCollection.updateItem(d.id, updateItemData);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(res.data[0]);\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal) &&\n                     relateVal.filter(\n                        (v) =>\n                           v == deleteId ||\n                           v.id == deleteId ||\n                           v[PK] == deleteId\n                     ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      var wheres = this.settings.objectWorkspace.filterConditions || null;\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      if (this.__filterCond) {\n         if (wheres.rules.length) {\n            // combine them together:\n            wheres = {\n               glue: \"and\",\n               rules: [wheres, this.__filterCond],\n            };\n         } else {\n            // simplify to just use filterCond\n            wheres = this.__filterCond;\n         }\n      }\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            this.__dataCollection.parse(data);\n         }\n\n         // In order to get the total_count updated I had to use .load()\n         queueOperation(() => {\n            this.__dataCollection.load(() => {\n               // If this dc loads all, then it has to filter data by the parent dc\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return data;\n            });\n         }, 1);\n\n         // In order to keep detail and graphs loading properly I had to keep .parse()\n         // queueOperation(() => {\n         //    this.__dataCollection.clearAll();\n         //    this.__dataCollection.parse(data);\n         // }, 50);\n\n         // this does nothing???\n         this.parseTreeCollection(data);\n\n         queueOperation(() => {\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n         }, 5);\n         queueOperation(() => {\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 20);\n         queueOperation(() => {\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n         }, 10);\n         queueOperation(() => {\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n         }, 5);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return null;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter((val) => (val.id || val[PK] || val) == linkCursor.id)\n               .length > 0\n         );\n      } else {\n         return (linkVal.id || linkVal[PK] || linkVal) == linkCursor.id;\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\"object\", \"query\", \"datacollection\", \"process\", \"application\"].forEach(\n         (type) => {\n            var objTypes = allDefinitions.filter((d) => d.type == type);\n            objTypes.forEach((def) => {\n               let { keyList, keyFn } = this.objectKeysByDef(def);\n               if (keyList) {\n                  this[keyList].push(this[keyFn](def.json));\n               }\n            });\n         }\n      );\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object.id;\n                  moreInfo.objectName = info[k].object.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this.emit(\n                  \"warning\",\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`,\n                  {\n                     index: this.id,\n                     field: f,\n                  }\n               );\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         this.emit(\n            \"warning\",\n            `Index[${this.name}][${this.id}] is not referencing any fields`,\n            {\n               index: this.id,\n               attributeFieldIDs: attributes.fieldIDs || [],\n            }\n         );\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, includeRelativeData: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            if (\n               objectLink &&\n               objectLink.PK() != \"id\" &&\n               d[relationName] &&\n               !d[relationName].id\n            ) {\n               // is array\n               if (d[relationName].forEach) {\n                  d[relationName].forEach((subData) => {\n                     if (subData[objectLink.PK()])\n                        subData.id = subData[objectLink.PK()];\n                  });\n               } else if (d[relationName][objectLink.PK()]) {\n                  d[relationName].id = d[relationName][objectLink.PK()];\n               }\n            }\n\n            var relatedMlFields = objectLink.multilingualFields();\n            if (relatedMlFields.length) {\n               objectLink.translate(\n                  d[relationName],\n                  d[relationName],\n                  relatedMlFields\n               );\n            }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) d[c.columnName] = d[relationName];\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(d[date.columnName], {\n                        format: \"MM/DD/YYYY\",\n                        ignoreTime: true,\n                     });\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(d[date.columnName]);\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this.emit(\n               \"warning\",\n               `O[${this.name}] is referenceing an unknown field id[${id}]`,\n               {\n                  obj: this.id,\n                  field: id,\n               }\n            );\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this.emit(\n               \"warning\",\n               `O[${this.name}] is referenceing an unknown index id[${id}]`,\n               {\n                  obj: this.id,\n                  index: id,\n               }\n            );\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this.emit(\n               \"warning\",\n               `O[${this.name}] is importing an unknown field id[${id}]`,\n               {\n                  obj: this.id,\n                  field: id,\n               }\n            );\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      // this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.emit(\n               \"warning\",\n               `IMPORT FIELDS: could not resolve object[${\n                  fieldInfo.objectID\n               }] for fieldSetting ${JSON.stringify(fieldInfo)}`,\n               {\n                  fieldInfo,\n               }\n            );\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.emit(\n               \"warning\",\n               `IMPORT FIELDS: Object[${object.id}] could not find field[${\n                  fieldInfo.fieldID\n               }] for fieldSetting ${JSON.stringify(fieldInfo)}`,\n               {\n                  object: object.toObj(),\n                  fieldInfo,\n               }\n            );\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.emit(\n               \"warning\",\n               `Field[${field.id}] referenced in fieldSetting[${JSON.stringify(\n                  fieldInfo\n               )}] did not pass .canFilterField`,\n               {\n                  field: field.toObj(),\n                  fieldInfo,\n               }\n            );\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.emit(\n               \"warning\",\n               `Field[${\n                  fieldInfo.fieldID\n               }] referenced in fieldSetting[${JSON.stringify(\n                  fieldInfo\n               )}] is a duplicate`,\n               {\n                  field: field.toObj(),\n                  fieldInfo,\n               }\n            );\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.emit(\"warning\", \"could not resolve our linkField\", {\n                  link,\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.emit(\n                  \"warning\",\n                  \"could not resolve our linked field -> linkObject\",\n                  {\n                     link,\n                  }\n               );\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.emit(\"warning\", \"could not resolve our base object\", {\n            objectID: this._joins?.objectID,\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      if (!fn)\n         fn = () => {\n            return true;\n         };\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      var task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         // get any field's it provides\n         var value = task[method].apply(task, param);\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (typeof value != \"undefined\") {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            const div = document.createElement(\"div\");\n            div.innerHTML = text;\n\n            return div.textContent || div.innerText || \"\";\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options?.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      const condition = this.condition;\n      const _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         condition == null ||\n         condition.rules == null ||\n         condition.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = value.indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = value.indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         switch (f.key) {\n            case \"boolean\":\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersBoolean(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"boolean\"];\n               break;\n            case \"connectObject\":\n               conditions = this.fieldsAddFiltersQuery(f);\n               processFieldKeys = [\"connectObject\"];\n               break;\n            case \"date\":\n            case \"datetime\":\n               type = \"date\";\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersDate(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"date\", \"datetime\"];\n               break;\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               type = \"number\";\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersNumber(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n               break;\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n            case \"AutoIndex\":\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersString(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"string\", \"LongText\", \"email\", \"AutoIndex\"];\n               break;\n            case \"list\":\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersList(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               break;\n            case \"user\":\n               conditions = conditions\n                  .concat(this.fieldsAddFiltersUser(f))\n                  .concat(this.fieldsAddFiltersQueryField(f));\n               processFieldKeys = [\"user\"];\n               break;\n            case \"uuid\":\n               conditions = conditions.concat(\n                  this.fieldsAddFiltersThisObject(f)\n               );\n               break;\n            default:\n               type = \"text\";\n               break;\n         }\n\n         if (this._isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.columnName || f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field) {\n      let connectConditions = {\n         in_query: {\n            batch: \"query\",\n            label: this.labels.component.inQuery,\n            handler: (a, b) => this.inQueryValid(a, \"in_query\", b),\n         },\n         not_in_query: {\n            batch: \"query\",\n            label: this.labels.component.notInQuery,\n            handler: (a, b) => this.inQueryValid(a, \"not_in_query\", b),\n         },\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      let result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      // Add filter options to Custom index\n      if (\n         field.settings.isCustomFK &&\n         // 1:M\n         ((field.settings.linkType == \"one\" &&\n            field.settings.linkViaType == \"many\") ||\n            // 1:1 isSource = true\n            (field.settings.linkType == \"one\" &&\n               field.settings.linkViaType == \"one\" &&\n               field.settings.isSource))\n      ) {\n         const stringResults = this.fieldsAddFiltersString(field);\n         result = stringResults.concat(result);\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQueryField(field) {\n      let queryFieldConditions = {\n         in_query_field: this.labels.component.inQueryField,\n         not_in_query_field: this.labels.component.notInQueryField,\n      };\n\n      let result = [];\n\n      for (let condKey in queryFieldConditions) {\n         result.push({\n            id: condKey,\n            value: queryFieldConditions[condKey],\n            batch: \"queryField\",\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_query: {\n            batch: \"query\",\n            label: this.labels.component.inQuery,\n         },\n         not_in_query: {\n            batch: \"query\",\n            label: this.labels.component.notInQuery,\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n            let columnName = field.columnName;\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f && f.fieldIsFilterable());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   warnings() {\n      this._warnings = [];\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.emit(\"warning\", \"dependent field not found\", {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n      // console.error(\"combinedFields:\", this.settings.combinedFields);\n\n      return this._warnings;\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   warnings() {\n      this._warnings = [];\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.emit(\n            \"warning\",\n            `ConnectField[${this.label}][${this.id}] is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.emit(\n            \"warning\",\n            `ConnectField[${this.label}][${this.id}] is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n\n      return this._warnings;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n\n      // 1:M\n      if (\n         this.settings.linkType == \"one\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         return this.datasourceLink.fields(\n            (f) => f.id == this.settings.indexField\n         )[0];\n      }\n      // 1:1\n      else if (\n         this.settings.linkType == \"one\" &&\n         this.settings.linkViaType == \"one\"\n      ) {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fields(\n               (f) => f.id == this.settings.indexField\n            )[0];\n         } else {\n            return this.object.fields(\n               (f) => f.id == this.settings.indexField\n            )[0];\n         }\n      }\n      // M:1\n      else if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"one\"\n      ) {\n         return this.object.fields((f) => f.id == this.settings.indexField)[0];\n      }\n      // M:N\n      else if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         let indexField = this.object.fields(\n            (f) => f.id == this.settings.indexField\n         )[0];\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fields(\n               (f) => f.id == this.settings.indexField\n            )[0];\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fields(\n            (f) => f.id == this.settings.indexField2\n         )[0];\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fields(\n               (f) => f.id == this.settings.indexField2\n            )[0];\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      // custom index\n      // M:N\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         ((this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"many\") ||\n            (this.settings.linkType == \"one\" &&\n               this.settings.linkViaType == \"one\" &&\n               this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"one\"\n      ) {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result = rowData[colName] || rowData.id || rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (rowData[this.columnName] != null && !reCalculate && isGrouped) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fields((f) => f.id == this.settings.field)[0];\n   }\n\n   get fieldLink() {\n      const obj = this.object.AB.objects(\n         (obj) => obj.id == this.settings.object\n      )[0];\n      if (!obj) return null;\n\n      const field = obj.fields((f) => f.id == this.settings.fieldLink)[0];\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      if (\n         ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n         this.AB.Label\n      ) {\n         const L = this.AB.Label();\n         ABFieldImageDefaults.menuName = L(\n            \"ab.dataField.image.menuName\",\n            \"*Image Attachment\"\n         );\n         ABFieldImageDefaults.description = L(\n            \"ab.dataField.image.description\",\n            \"*Attach an image to this object.\"\n         );\n      }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = this.process.elements(\n         (elem) => elem && elem.defaults && elem.defaults.category == \"start\"\n      )[0];\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      let dataFieldOpt = (this.process.processDataFields(this) || []).filter(\n         (opt) => opt.key == this.parameterId\n      )[0];\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      if (data == null)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null) data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: \"0\",\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (field.key == \"connectObject\") {\n                     return (\n                        myState[\"data\"][field.columnName] ||\n                        myState[\"data\"][field.relationName()]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this.prevOP.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      if (typeof this.settings.width != \"undefined\") {\n         this.settings.width = parseInt(this.settings.width);\n      } else {\n         this.settings.width = ABViewCarouselPropertyComponentDefaults.width;\n      }\n      if (typeof this.settings.height != \"undefined\") {\n         this.settings.height = parseInt(this.settings.height);\n      } else {\n         this.settings.height = ABViewCarouselPropertyComponentDefaults.height;\n      }\n      try {\n         this.settings.showLabel = JSON.parse(this.settings.showLabel);\n      } catch (e) {\n         this.settings.showLabel =\n            ABViewCarouselPropertyComponentDefaults.showLabel;\n      }\n      try {\n         this.settings.hideItem = JSON.parse(this.settings.hideItem);\n      } catch (e) {\n         this.settings.hideItem =\n            ABViewCarouselPropertyComponentDefaults.hideItem;\n      }\n      try {\n         this.settings.hideButton = JSON.parse(this.settings.hideButton);\n      } catch (e) {\n         this.settings.hideButton =\n            ABViewCarouselPropertyComponentDefaults.hideButton;\n      }\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n      try {\n         this.settings.filterByCursor = JSON.parse(\n            this.settings.filterByCursor\n         );\n      } catch (e) {\n         this.settings.filterByCursor =\n            ABViewCarouselPropertyComponentDefaults.filterByCursor;\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.field)[0];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n      this.refreshData();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"],\n         allComponents = this.application.viewAll(); // ABViewManager.allViews();\n\n      const ret = allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n      return ret;\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnLabel)[0];\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnValue)[0];\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnValue2)[0];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnUser)[0];\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnComment)[0];\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnDate)[0];\n   }\n\n   getUserData() {\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = \"/opsportal/image/UserProfile/\" + item.image;\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABObject\n      let obj = dv.datasource;\n      if (obj == null) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = true;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = true;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      console.error(\"!!! where is this being called???\");\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      ); // ABViewManager.newView({ key: this.common().key }, application, parent);\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.AB.notify.builder(\n               new Error(\n                  `Application[${this.application.name}][${this.application.id}].View[${this.name}][${this.id}] references unknown View[${id}]`\n               ),\n               {\n                  context:\"ABViewCore:fromValues():values.viewIDs for each\",\n                  id\n               }\n            );\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    *\n    * return an flatten array of all the ABViews parents\n    *\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if ([\"page\", \"viewcontainer\"].indexOf(this.key) == -1) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages = this.application._pages.filter(\n                              (p2) => p2.id != lookUpIds[p.id]\n                           );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datafitler\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n      console.warn(\n         new Error(\n            \"TODO: convert ABViewDocxBuilderCore.uploadUrl() to use common url code.\"\n         )\n      );\n      // let actionKey =\n      //    \"opstool.AB_\" + this.application.name.replace(\"_\", \"\") + \".view\";\n\n      // return (\n      //    \"/\" +\n      //    [\"opsportal\", \"file\", this.application.name, actionKey, \"1\"].join(\"/\")\n      // );\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of a field.\n      // TODO\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fields((f) => f.id == this.settings.field)[0];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.allowDelete || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   moduleList: [],\n   queryList: []\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\" // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.moduleList =\n         this.settings.moduleList ||\n         ABViewReportManagerPropertyComponentDefaults.moduleList;\n\n      this.settings.queryList =\n         this.settings.queryList ||\n         ABViewReportManagerPropertyComponentDefaults.queryList;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      this._warnings = [];\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.emit(\n                  \"warning\",\n                  `Application is referencing a missing ${checks[k]}`,\n                  {\n                     appID: this.id,\n                     id,\n                  }\n               );\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.emit(\n            \"warning\",\n            \"Application has no Role assigned, and is unaccessible.\"\n         );\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.emit(\n               \"warning\",\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *\t\t\t.resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it witht hat field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            // copy current wheres\n            var wheres = this.AB.cloneDeep(\n               this.settings.objectWorkspace.filterConditions\n            );\n            // add bind items data as a filter to wheres\n            if (value) {\n               // don't include an empty where condition in our .rules\n               // start by replacing it with null\n               if (!wheres.rules) {\n                  wheres = null;\n               }\n\n               wheres = {\n                  glue: \"and\",\n                  rules: [\n                     wheres,\n                     {\n                        alias: fieldLink.alias, // ABObjectQuery\n                        key: Object.keys(params)[0],\n                        rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n                        value: fieldLink.getRelationValue(\n                           dataCollectionLink.__dataCollection.getItem(value)\n                        ),\n                     },\n                  ],\n               };\n\n               // remove any null in the .rules\n               wheres.rules = wheres.rules.filter((r) => r);\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (\n               JSON.stringify(this.__reloadWheres) == JSON.stringify(wheres) ||\n               (wheres.rules && wheres.rules.length == 0)\n            ) {\n               return;\n            } else {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               this.reloadWheres(wheres);\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      if (\n         this.__bindComponentIds.indexOf(component.config.id) > -1 &&\n         $$(component.config.id).data &&\n         $$(component.config.id).data.find &&\n         $$(component.config.id).data.find({}).length > 0\n      )\n         return;\n      // keep component id to an array\n      else this.__bindComponentIds.push(component.config.id);\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      const allWarnings = [].concat(this._warnings);\n\n      if (!this.datasource) {\n         allWarnings.push({\n            message: `Datacollection[${this.label}][${this.id}] doesn't have a datasource.`,\n            data: {},\n         });\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (linkDC)\n            allWarnings.push({\n               message: `Datacollection[${this.label}][${this.id}] can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`,\n               data: {},\n            });\n      }\n\n      return allWarnings;\n   }\n\n   warningsEval() {\n      // our .fromValues() has already registered any missing fields.\n      // those should get reported from warnings()\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   warnings() {\n      return this._warnings;\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      // if (\n      //    [\"datacollection\", \"object\", \"query\", \"process\"].indexOf(this.type) >\n      //    -1\n      // ) {\n      //    console.warn(\n      //       `ABML Object [${this.type}][${this.label}] has not overwritten .warningsEval()`\n      //    );\n      // }\n\n      // many of our warnings are generated during the .fromValues() method\n      // when we initialize our Objects.  So, cause this process to repeat.\n      this.fromValues(this.toObj());\n   }\n\n   warningsAll() {\n      // console.warn(\n      //    `ABML Object [${this.label}] has not overwritten .warningsAll()`\n      // );\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      if (this.fields().length == 0) {\n         allWarnings.push({ message: \"I got no fields.\", data: {} });\n      }\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings;\n   }\n\n   // warningsEval() {\n   //    // our .fromValues() has already registered any missing fields.\n   //    // those should get reported from warnings()\n   // }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.emit(\n            \"warning\",\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.emit(\"warning\", \"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   /**\n    * @method warningsAll()\n    * Compile any warnings from this Query, or any of it's fields.\n    * @return {array}\n    *         An array of warning objects.\n    *         .message {string} message to display\n    *         .data {obj} associated debug info for this warning.\n    */\n   // warningsAll() {\n   //    // report both OUR warnings, and any warnings from any of our fields\n   //    // NOTE: this will get\n   //    var allWarnings = super.warningsAll();\n\n   //    return allWarnings;\n   // }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter(\n         (f) => f.id == cond.key || f.columnName == cond.key\n      )[0];\n      cond.field = field?.columnName ?? field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.columnName == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      // Convert multi-values to a string\n      let values = cond.includes ?? [];\n      if (cond.condition.filter && values.indexOf(cond.condition.filter) < 0)\n         values.push(cond.condition.filter);\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\")) {\n               return field.exportValue(v);\n            } else if (v instanceof Date) {\n               return v.toISOString();\n            } else {\n               return v;\n            }\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      this._isRecordRule = options?.isRecordRule ?? false;\n      this._recordRuleFieldOptions = options?.fieldOptions ?? [];\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.columnName == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init();\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            const $customValueElem = $viewItem.getChildViews()[4];\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox = $customValueElem.getChildViews()[0];\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker = $customValueElem.getChildViews()[1];\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView = formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return { id: e.text, value: e.text };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         const $customValueElem = $viewItem.getChildViews()[4];\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static clearEditor(ids) {\n      this._CurrentField = null;\n\n      const defaultValues = {\n         label: \"\",\n         columnName: \"\",\n         showIcon: 1,\n         required: 0,\n         unique: 0,\n         validationRules: \"\",\n      };\n\n      for (const f in defaultValues) {\n         const component = $$(ids[f]);\n         if (component) component.setValue(defaultValues[f]);\n      }\n\n      // reset the validation rules UI\n      const filterViews = $$(ids.filterComplex).queryView(\n         {\n            view: \"form\",\n            css: \"abValidationForm\",\n         },\n         \"all\"\n      );\n      if (filterViews.length) {\n         filterViews.forEach((v) => {\n            $$(ids.filterComplex).removeView(v);\n         });\n      }\n\n      $$(ids.addValidation).hide();\n\n      // hide warning message of null data\n      $$(ids.numberOfNull).hide();\n   }\n\n   /**\n    * @function editorPopulate\n    *\n    * populate the form with the given ABField instance provided.\n    *\n    * @param {object} ids\n    * @param {ABField} field\n    */\n   static editorPopulate(ids, field) {\n      this._CurrentField = field;\n\n      $$(ids.label).setValue(field.label);\n      $$(ids.columnName).setValue(field.columnName);\n      $$(ids.showIcon).setValue(field.settings.showIcon);\n      $$(ids.required).setValue(field.settings.required);\n      $$(ids.unique).setValue(field.settings.unique);\n\n      if (this._CurrentField) {\n         $$(ids.addValidation).show();\n      }\n\n      if (field.settings && field.settings.validationRules) {\n         let rules = field.settings.validationRules;\n         if (typeof rules == \"string\") {\n            try {\n               rules = JSON.parse(rules);\n            } catch (e) {\n               // continue regardless of error\n            }\n         }\n         (rules || []).forEach((settings) => {\n            field.addValidation(ids, settings);\n         });\n      }\n   }\n\n   /**\n    * @function definitionEditor\n    *\n    * Many DataFields share some base information for their usage\n    * in the AppBuilder.  The UI Editors have a common header\n    * and footer format, and this function allows child DataFields\n    * to not have to define those over and over.\n    *\n    * The common layout header contains:\n    *\t\t[Menu Label]\n    *\t\t[textBox: labelName]\n    *\t\t[text:    description]\n    *\n    * The defined DataField UI will be added at the end of this.\n    *\n    * This routine actually updated the live DataField definition\n    * with the common header info.\n    *\n    * @param {DataField} field  The DataField object to work with.\n    */\n   static definitionEditor(App, ids, _logic, Field) {\n      /// TODO: maybe just pass in onChange instead of _logic\n      /// if not onChange, then use our default:\n\n      // setup our default labelOnChange functionality:\n      let labelOnChange = function (newVal, oldVal) {\n         oldVal = oldVal || \"\";\n\n         if (\n            newVal != oldVal &&\n            oldVal == $$(ids.columnName).getValue() &&\n            $$(ids.columnName).isEnabled()\n         ) {\n            $$(ids.columnName).setValue(newVal);\n         }\n      };\n\n      // if they provided a labelOnChange() override, use that:\n      if (_logic.labelOnChange) {\n         labelOnChange = _logic.labelOnChange;\n      }\n\n      let requiredOnChange = function (newVal, oldVal, ids) {\n         console.warn(\n            \"Field has not implemented .requiredOnChange() is that okay?\"\n         );\n      };\n\n      const addValidation = (ids) => {\n         return this._CurrentField.addValidation(ids);\n      };\n\n      // if the provided a requriedOnChange() override, use that:\n      if (_logic.requiredOnChange) {\n         requiredOnChange = _logic.requiredOnChange;\n      }\n\n      const getNumberOfNullValue = async (isRequired) => {\n         if (\n            isRequired &&\n            this._CurrentField &&\n            this._CurrentField.id &&\n            this._CurrentField.settings.required != isRequired\n         ) {\n            // TODO: disable save button\n\n            // get count number\n            const data = await this._CurrentField.object.model().count({\n               where: {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: this._CurrentField.id,\n                        rule: \"is_null\",\n                     },\n                  ],\n               },\n            });\n\n            if (data.count > 0) {\n               const messageTemplate = L(\n                  \"** There are {0} rows that will be updated to default value\",\n                  [data.count]\n               );\n\n               $$(ids.numberOfNull).setValue(messageTemplate);\n               $$(ids.numberOfNull).show();\n            } else {\n               $$(ids.numberOfNull).hide();\n            }\n\n            // TODO: enable save button\n         } else {\n            $$(ids.numberOfNull).hide();\n         }\n      };\n\n      const _ui = {\n         // id: ids.component,\n         rows: [\n            // {\n            // \tview: \"label\",\n            // \tlabel: \"<span class='webix_icon fa fa-{0}'></span>{1}\".replace('{0}', Field.icon).replace('{1}', Field.menuName)\n            // },\n            {\n               view: \"text\",\n               id: ids.label,\n               name: \"label\",\n               label: L(\"Label\"),\n               placeholder: L(\"Label\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               css: \"ab-new-label-name\",\n               on: {\n                  onChange: function (newVal, oldVal) {\n                     labelOnChange(newVal, oldVal);\n                  },\n               },\n            },\n            {\n               view: \"text\",\n               id: ids.columnName,\n               name: \"columnName\",\n               disallowEdit: true,\n               label: L(\"Field Name\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               placeholder: L(\"Database field name\"),\n            },\n            {\n               view: \"label\",\n               id: ids.fieldDescription,\n               label: L(\"Description\"),\n               align: \"right\",\n            },\n            {\n               view: \"checkbox\",\n               id: ids.showIcon,\n               name: \"showIcon\",\n               labelRight: App.labels.dataFieldShowIcon, // 'Show icon',\n               labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n               value: true,\n            },\n            {\n               view: \"checkbox\",\n               id: ids.required,\n               name: \"required\",\n               hidden: !Field.supportRequire,\n               labelRight: App.labels.required,\n               // disallowEdit: true,\n               labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n               on: {\n                  onChange: async (newVal, oldVal) => {\n                     requiredOnChange(newVal, oldVal, ids);\n\n                     // If check require on edit field, then show warning message\n                     await getNumberOfNullValue(newVal);\n                  },\n               },\n            },\n            // warning message: number of null value rows\n            {\n               view: \"label\",\n               id: ids.numberOfNull,\n               css: { color: \"#f00\" },\n               label: \"\",\n               hidden: true,\n            },\n\n            {\n               view: \"checkbox\",\n               id: ids.unique,\n               name: \"unique\",\n               hidden: !Field.supportUnique,\n               labelRight: App.labels.unique,\n               disallowEdit: true,\n               labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n            },\n            {\n               id: ids.filterComplex,\n               rows: [],\n            },\n            {\n               id: ids.addValidation,\n               view: \"button\",\n               label: L(\"Add Field Validation\"),\n               css: \"webix_primary\",\n               click: () => {\n                  addValidation(ids);\n               },\n            },\n            // have a hidden field to contain the validationRules\n            // value we will parse out later\n            {\n               id: ids.validationRules,\n               view: \"text\",\n               hidden: true,\n               name: \"validationRules\",\n            },\n         ],\n      };\n\n      return _ui;\n   }\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Application)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // cache options if not a xxx->one connection\n                  if (this?.settings?.linkViaType != \"one\") {\n                     this.AB.Storage.set(storageID, this._options);\n                  }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(combineFilters, \"\", \"\", theEditor).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue && theEditor.getValue()) {\n         theEditor.setValue(theEditor.getValue());\n         // } else if (this._selectedData && this._selectedData.length) {\n         //    theEditor.setValue(this.editFormat(this._selectedData));\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (options[i].id == val || options[i].value == val) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor = \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            message: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\";\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      const L = App.Label;\n\n      options = options || {};\n\n      const idBase = App.unique(this.idCustomContainer(row, options.formId));\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} width:${options.width}; height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      const promise = new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n      return promise;\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return \"#columnName#-#id#-tree\"\n         .replace(\"#id#\", obj.id)\n         .replace(\"#columnName#\", this.columnName.replace(/ /g, \"_\"));\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         $$(idTree).blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $$(idTree).clearAll();\n         $$(idTree).parse(options);\n         $$(idTree).refresh();\n         $$(idTree).uncheckAll();\n         $$(idTree).openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($$(idTree).exists(id)) {\n                  $$(idTree).checkItem(id);\n                  const dom = $$(idTree).getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $$(idTree).unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/opsportal/image/UserProfile/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message, data = {}) {\n      this.emit(\n         \"warning\",\n         `${this.defaults.key}[${\n            this.label ? this.label : this.name\n         }]: ${message}`,\n         data\n      );\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   // /*\n   //  * @method isValid\n   //  * check the current values to make sure they are valid.\n   //  * Here we check the default values provided by ABView.\n   //  *\n   //  * @return {ABFactory.Validation.validator()}\n   //  */\n   // isValid() {\n   //    var validator = this.AB.Validation.validator();\n\n   //    // // labels must be unique among views on the same parent\n   //    var parent = this.parent;\n   //    // if (!parent) { parent = this.application; }\n\n   //    // if we have a parent component:\n   //    if (parent) {\n   //       var isNameUnique =\n   //          parent.views((v) => {\n   //             return (\n   //                v.id != this.id &&\n   //                v.label.toLowerCase() == this.label.toLowerCase()\n   //             );\n   //          }).length == 0;\n   //       if (!isNameUnique) {\n   //          validator.addError(\n   //             \"label\",\n   //             L(\"View label must be unique among peers.\")\n   //          );\n   //       }\n   //    }\n   //    return validator;\n   // }\n\n   // /**\n   //  * @method editorComponent\n   //  * return the Editor for this UI component.\n   //  * the editor should display either a \"block\" view or \"preview\" of\n   //  * the current layout of the view.\n   //  * @param {string} mode what mode are we in ['block', 'preview']\n   //  * @return {Component}\n   //  */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewEditorComponent\";\n   //    var ids = {\n   //       component: App.unique(idBase + \"_component\"),\n   //       view: App.unique(idBase + \"_view\"),\n   //    };\n\n   //    var _ui = {\n   //       rows: [\n   //          {\n   //             id: ids.component,\n   //             view: App.custom.savablelayout.view,\n   //             type: \"space\",\n   //             rows: [],\n   //          },\n   //       ],\n   //    };\n\n   //    var _init = (options) => {\n   //       var Layout = $$(ids.component);\n\n   //       var allComponents = [];\n\n   //       App.eventIds = App.eventIds || {};\n\n   //       // prevent .attachEvent multiple times\n   //       if (App.eventIds[\"onAfterPortletMove\"])\n   //          webix.detachEvent(\"onAfterPortletMove\");\n\n   //       // listen a event of the porlet when layout is changed\n   //       App.eventIds[\"onAfterPortletMove\"] = webix.attachEvent(\n   //          \"onAfterPortletMove\",\n   //          (source, parent, active, target, mode) => {\n   //             _logic.onAfterPortletMove();\n   //          }\n   //       );\n\n   //       // attach all the .UI views:\n   //       this.views().forEach((child) => {\n   //          var component = child.component(App);\n\n   //          var porletUI = {\n   //             viewId: child.id, // set id to .viewId, the layout template\n   //             view: \"portlet\",\n   //             css: \"ab-interface-component\",\n   //             // borderless: true,\n   //             layoutType: \"head\", // Drag on icon\n   //             body: {\n   //                rows: [\n   //                   {\n   //                      view: \"template\",\n   //                      height: 30,\n   //                      css: \"ab-porlet-header\",\n   //                      template: _logic.template(child),\n   //                      onClick: {\n   //                         \"ab-component-edit\": (e, id, trg) => {\n   //                            _logic.viewEdit(e, child.id, trg);\n   //                         },\n   //                         \"ab-component-remove\": (e, id, trg) => {\n   //                            _logic.viewDelete(e, child.id, trg);\n   //                         },\n   //                      },\n   //                   },\n   //                   mode == \"preview\"\n   //                      ? component.ui\n   //                      : {\n   //                           // empty element\n   //                           view: \"spacer\",\n   //                           hidden: true,\n   //                        },\n   //                ],\n   //             },\n   //          };\n\n   //          // get element in template\n   //          var elem = Layout.queryView({ viewId: child.id });\n\n   //          // If webix element is not exists in html, then destroy it.\n   //          // NOTE : webix does not know html is missing when we redraw layout at .setState\n   //          if (elem && !document.body.contains(elem.$view)) elem.destructor();\n\n   //          if (elem) {\n   //             // replace component to layout\n   //             webix.ui(porletUI, elem);\n   //          }\n   //          // add component to rows\n   //          else {\n   //             Layout.addView(porletUI);\n   //          }\n\n   //          allComponents.push(component);\n   //       });\n\n   //       // in preview mode, have each child render a preview\n   //       // of their content:\n   //       if (mode == \"preview\") {\n   //          // perform any init setups for the content:\n   //          allComponents.forEach((component) => {\n   //             component.init();\n   //          });\n   //       }\n   //    };\n\n   //    var _logic = {\n   //       /**\n   //        * @method template()\n   //        * render the list template for the View\n   //        * @param {obj} obj the current View instance\n   //        * @param {obj} common  Webix provided object with common UI tools\n   //        */\n   //       template: function (child) {\n   //          return (\n   //             \"<div>\" +\n   //             `<i class=\"fa fa-${child.icon} webix_icon_btn\"></i> ` +\n   //             ` ${child.label}` +\n   //             '<div class=\"ab-component-tools\">' +\n   //             '<i class=\"fa fa-trash ab-component-remove\"></i>' +\n   //             '<i class=\"fa fa-edit ab-component-edit\"></i>' +\n   //             \"</div>\" +\n   //             \"</div>\"\n   //          );\n   //       },\n\n   //       /**\n   //        * @method viewDelete()\n   //        * Called when the [delete] icon for a child View is clicked.\n   //        * @param {obj} e the onClick event object\n   //        * @param {integer} id the id of the element to delete\n   //        * @param {obj} trg  Webix provided object\n   //        */\n   //       viewDelete: (e, id, trg) => {\n   //          var deletedView = this.views((v) => v.id == id)[0];\n\n   //          if (!deletedView) return false;\n\n   //          this.AB.Dialog.Confirm({\n   //             title: L(\"Delete component\"),\n   //             text: L(\"Do you want to delete <b>{0}</b>?\", [\n   //                deletedView.label,\n   //             ]),\n   //             callback: function (result) {\n   //                if (result) {\n   //                   var Layout = $$(ids.component);\n\n   //                   // remove UI of this component in template\n   //                   var deletedElem = Layout.queryView({ viewId: id });\n   //                   if (deletedElem)\n   //                      $$(ids.component).destroyView(deletedElem);\n\n   //                   // update/refresh template to ABView\n   //                   _logic.refreshTemplate();\n\n   //                   deletedView\n   //                      .destroy()\n   //                      .then(() => {\n   //                         // signal the current view has been deleted.\n   //                         deletedView.emit(\"destroyed\", deletedView);\n\n   //                         // if we don't have any views, then place a \"drop here\" placeholder\n   //                         if ($$(ids.component).getChildViews().length == 0) {\n   //                            webix.extend($$(ids.component), webix.OverlayBox);\n   //                            $$(ids.component).showOverlay(\n   //                               \"<div class='drop-zone'><div>\" +\n   //                                  App.labels.componentDropZone +\n   //                                  \"</div></div>\"\n   //                            );\n   //                         }\n   //                      })\n   //                      .catch((err) => {\n   //                         this.AB.error(\n   //                            \"Error trying to delete selected View:\",\n   //                            { error: err, view: deletedView }\n   //                         );\n   //                      });\n   //                }\n   //             },\n   //          });\n   //          e.preventDefault();\n   //       },\n\n   //       /**\n   //        * @method viewEdit()\n   //        * Called when the [edit] icon for a child View is clicked.\n   //        * @param {obj} e the onClick event object\n   //        * @param {integer} id the id of the element to edit\n   //        * @param {obj} trg  Webix provided object\n   //        */\n   //       viewEdit: (e, id, trg) => {\n   //          var view = this.views((v) => v.id == id)[0];\n\n   //          if (!view) return false;\n\n   //          // yeah, if the empty placeholder fires an [edit] event,\n   //          // then ignore it.\n   //          if (view.id == \"del_me\") return false;\n\n   //          // NOTE: let webix finish this onClick event, before\n   //          // calling .populateInterfaceWorkspace() which will replace\n   //          // the interface elements with the edited view.  (apparently\n   //          // that causes errors.)\n   //          setTimeout(() => {\n   //             App.actions.populateInterfaceWorkspace(view);\n   //          }, 50);\n\n   //          e.preventDefault();\n\n   //          return false;\n   //       },\n\n   //       onAfterPortletMove: () => {\n   //          _logic.refreshTemplate();\n\n   //          // save template layout to ABPageView\n   //          this.save();\n\n   //          // // Reorder\n   //          // var viewId = active.config.id;\n   //          // var targetId = target.config.id;\n\n   //          // var toPosition = this._views.findIndex((v) => v.id == targetId);\n\n   //          // this.viewReorder(viewId, toPosition);\n   //       },\n\n   //       refreshTemplate: () => {\n   //          // get portlet template UI to ABView\n   //          this.template = $$(ids.component).getState();\n   //       },\n   //    };\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //    };\n   // }\n\n   // static propertyEditorComponent(App) {\n   //    var ABViewPropertyComponent = new ABPropertyComponent({\n   //       editObject: this, // ABView\n\n   //       fieldDefaults: this.common(), // ABViewDefaults,\n\n   //       elements: (App, field) => {\n   //          var ids = {\n   //             imageWidth: \"\",\n   //             imageHeight: \"\",\n   //          };\n   //          ids = field.idsUnique(ids, App);\n\n   //          return [];\n   //       },\n\n   //       // defaultValues: the keys must match a .name of your elements to set it's default value.\n   //       defaultValues: ABViewPropertyComponentDefaults,\n\n   //       // rules: basic form validation rules for webix form entry.\n   //       // the keys must match a .name of your .elements for it to apply\n   //       rules: {\n   //          // 'textDefault':webix.rules.isNotEmpty,\n   //          // 'supportMultilingual':webix.rules.isNotEmpty\n   //       },\n\n   //       // include additional behavior on default component operations here:\n   //       // The base routines will be processed first, then these.  Any results\n   //       // from the base routine, will be passed on to these:\n   //       //   @param {obj} ids  the list of ids used to generate the UI.  your\n   //       //           provided .elements will have matching .name keys\n   //       //           to access them here.\n   //       //  @param {obj} values the current set of values provided for this instance\n   //       //             of ABField:\n   //       //           {\n   //       //           id:'',      // if already .saved()\n   //       //             label:'',\n   //       //             columnName:'',\n   //       //           settings:{\n   //       //             showIcon:'',\n   //       //\n   //       //             your element key=>values here\n   //       //           }\n   //       //           }\n   //       //\n   //       //     .clear(ids)  : reset the display to an empty state\n   //       //     .isValid(ids, isValid): perform validation on the current editor values\n   //       //     .populate(ids, ABField) : populate the form with your current settings\n   //       //     .show(ids)   : display the form in the editor\n   //       //     .values(ids, values) : return the current values from the form\n   //       logic: {},\n\n   //       // perform any additional setup actions here.\n   //       // @param {obj} ids  the hash of id values for all the current form elements.\n   //       //          it should have your elements + the default Header elements:\n   //       //           .label, .columnName, .fieldDescription, .showIcon\n   //       init: function (ids) {\n   //          // want to hide the description? :\n   //          // $$(ids.fieldDescription).hide();\n   //       },\n   //    });\n\n   //    return ABViewPropertyComponent.component(App);\n   // }\n\n   // static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n   //    return [\n   //       // Component Label\n   //       {\n   //          view: \"text\",\n   //          // id: ids.label,\n   //          name: \"label\",\n   //          label: App.labels.dataFieldHeaderLabel,\n   //          placeholder: App.labels.dataFieldHeaderLabelPlaceholder,\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //          css: \"ab-new-label-name\",\n   //          //        on: {\n   //          //          onChange: function (newVal, oldVal) {\n   //          // console.warn('ABView.onChange()!!!');\n   //          //          }\n   //          //        }\n   //       },\n   //    ];\n   // }\n\n   // static propertyEditorPopulate(App, ids, view) {\n   //    if (!view) return;\n   //    $$(ids.label).setValue(view.label);\n   // }\n\n   // static propertyEditorValues(ids, view) {\n   //    if (!view) return;\n   //    view.label = $$(ids.label).getValue();\n   // }\n\n   // static propertyEditorSave(ids, view, includeSubViews = false) {\n   //    this.propertyEditorValues(ids, view);\n\n   //    return new Promise((resolve, reject) => {\n   //       view\n   //          .save(includeSubViews)\n   //          .then(function () {\n   //             // signal the current view has been updated.\n   //             view.emit(\"properties.updated\", view);\n\n   //             resolve();\n   //          })\n   //          .catch(function (err) {\n   //             this.AB.error(\"unable to save view:\", {\n   //                error: err,\n   //                view: view,\n   //             });\n   //             reject(err);\n   //          });\n   //    });\n   // }\n\n   // /**\n   //  * @method propertyDatacollections()\n   //  * a convience method to return a list of available Datacollections\n   //  * @param {bool} isGlobal\n   //  *        true : return a list of ALL available DataCollections\n   //  *        false: (default) only return a list of included DCs\n   //  * @return {array}\n   //  *        [ { id:dc.id, value:dc.label } ]\n   //  *        this format is used by the webix select lists to choose your\n   //  *        datasources.\n   //  */\n   // propertyDatacollections(\n   //    filter = () => true,\n   //    isGlobal = false,\n   //    defaultOption = null\n   // ) {\n   //    if (defaultOption == null) {\n   //       defaultOption = {\n   //          id: \"\",\n   //          value: L(\"Select a DataCollection\"),\n   //       };\n   //    }\n\n   //    var list = [];\n   //    if (isGlobal) {\n   //       list = this.AB.datacollections(filter);\n   //    } else {\n   //       list = this.application.datacollectionsIncluded(filter);\n   //    }\n   //    list = list.map((dc) => {\n   //       return {\n   //          id: dc.id,\n   //          value: dc.label,\n   //       };\n   //    });\n   //    list.unshift(defaultOption);\n   //    return list;\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    *\n    * @return {obj} UI component\n    */\n   component() {\n      const component = new ABViewComponent(this);\n\n      return component;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // if (this.parent) {\n      //  return this.parent.componentList(false);\n      // } else {\n\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n\n      // }\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   // removeField(field, cb) {\n   //    // if this view has matching field then destroy()\n   //    if (this.settings.fieldId == field.id) {\n   //       this.destroy()\n   //          .then(() => {\n   //             // signal the current view has been deleted.\n   //             this.emit(\"destroyed\", this);\n   //             cb(null, true);\n   //          })\n   //          .catch((err) => {\n   //             this.AB.error(\"Error trying to delete selected View:\", {\n   //                error: err,\n   //                view: this,\n   //             });\n   //             cb(err);\n   //          });\n   //    } else {\n   //       // if not check for subViews then call removeField on them\n\n   //       var shouldSave = false;\n\n   //       var finish = () => {\n   //          if (shouldSave) {\n   //             this.save()\n   //                .then(() => {\n   //                   cb();\n   //                })\n   //                .catch(cb);\n   //          } else {\n   //             cb();\n   //          }\n   //       };\n\n   //       // for each sub view, view.removeField(field);\n   //       var listViews = this.views();\n   //       var done = 0;\n   //       listViews.forEach((v) => {\n   //          v.removeField(field, (err, updateMade) => {\n   //             if (err) {\n   //                cb(err);\n   //             } else {\n   //                if (updateMade) {\n   //                   shouldSave = true;\n   //                }\n\n   //                done++;\n   //                if (done >= listViews.length) {\n   //                   finish();\n   //                }\n   //             }\n   //          });\n   //       });\n\n   //       if (listViews.length == 0) {\n   //          finish();\n   //       }\n   //    }\n   // }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewCSVExporterComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false, idBase) {\n      var component = new ABViewCSVImporterComponent(this, idBase);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      let component = new ABViewCarouselComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartAreaComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartBarComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   editorComponent(App, mode, options) {\n      let component = this.component(App);\n      let _ui = component.ui;\n      _ui.id = options.componentId;\n\n      let _init = () => {\n         component.init({\n            componentId: _ui.id,\n         });\n      };\n      let _logic = component.logic;\n      let _onShow = component.onShow;\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n         onShow: _onShow,\n      };\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewChartContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartLineComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartPieComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewCommentComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewConditionalContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $filter.disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewConnectDataFilterComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n      return component;\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n\n   component(v1App = false) {\n      let component = new ABViewContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewDataFilterComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n      return component;\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDataviewComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailCheckboxComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailConnectComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailCustomComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailImageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewDetailItemComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailTextComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      var component = new ABViewDetailTreeComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDocxBuilderComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormSelectMultiple\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               formVals[f.columnName] = f.format(cursorFormVals, true);\n            }\n         }\n      );\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: \"System could not save your data\",\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormButtonComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewFormCheckboxComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n         component._ui = newComponent._ui;\n      }\n\n      return component;\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      if (\n         !this.settings.objectWorkspace ||\n         !this.settings.objectWorkspace.filterConditions\n      ) {\n         this.AB.error(\"Error: filter conditions do not exist\", {\n            error: \"filterConditions do not exist\",\n            viewLocation: {\n               application: this.application.name,\n               id: this.id,\n               name: this.label,\n            },\n            view: this,\n         });\n         // manually place an empty filter\n         this.settings[\"objectWorkspace\"] = {};\n         this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      }\n\n      this.__filterComponent.setValue(\n         this.settings.objectWorkspace.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewFormConnectComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormCustomComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormDatepickerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormItemComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   // componentV1(App) {\n   //    // setup 'label' of the element\n   //    var form = this.parentFormComponent(),\n   //       field = this.field(),\n   //       label = \"\";\n\n   //    var settings = {};\n   //    if (form) settings = form.settings;\n\n   //    var _ui = {\n   //       labelPosition: settings.labelPosition,\n   //       labelWidth: settings.labelWidth,\n   //       label: label,\n   //    };\n\n   //    if (field != null) {\n   //       _ui.name = field.columnName;\n\n   //       // default value\n   //       var data = {};\n   //       field.defaultValue(data);\n   //       if (data[field.columnName]) _ui.value = data[field.columnName];\n\n   //       if (settings.showLabel == true) {\n   //          _ui.label = field.label;\n   //       }\n\n   //       if (\n   //          field.settings.required == true ||\n   //          this.settings.required == true\n   //       ) {\n   //          _ui.required = 1;\n   //       }\n\n   //       if (this.settings.disable == 1) {\n   //          _ui.disabled = true;\n   //       }\n\n   //       // add data-cy to form element for better testing code\n   //       _ui.on = {\n   //          onAfterRender() {\n   //             if (this.getList) {\n   //                var popup = this.getPopup();\n   //                if (!popup) return;\n   //                this.getList().data.each((option) => {\n   //                   if (!option) return;\n   //                   var node = popup.$view.querySelector(\n   //                      \"[webix_l_id='\" + option.id + \"']\"\n   //                   );\n   //                   if (!node) return;\n   //                   node.setAttribute(\n   //                      \"data-cy\",\n   //                      `${field.key} options ${option.id} ${field.id} ${form.id}`\n   //                   );\n   //                });\n   //             }\n   //             this.getInputNode().setAttribute(\n   //                \"data-cy\",\n   //                `${field.key} ${field.columnName} ${field.id} ${form.id}`\n   //             );\n   //          },\n   //       };\n\n   //       // this may be needed if we want to format data at this point\n   //       // if (field.format) data = field.format(data);\n\n   //       _ui.validate = (val, data, colName) => {\n   //          let validator = this.AB.Validation.validator();\n\n   //          field.isValidData(data, validator);\n\n   //          return validator.pass();\n   //       };\n   //    }\n\n   //    var _init = () => {};\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //    };\n   // }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormNumberComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormReadonlyComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormSelectMultipleComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormSelectSingleComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormTextboxComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormTreeComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n\n            break;\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n\n            break;\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n\n            break;\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewGanttComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (/* options, accessLevel*/) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeListener(\n         \"filter.data\",\n         this._handler_filterData\n      );\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n            };\n\n            this.__handler_dc_loadData = () => {\n               if (\n                  $DataTable.config.view === \"treetable\" &&\n                  CurrentObject &&\n                  !CurrentObject.isGroup\n               ) {\n                  $DataTable.clearAll();\n                  $DataTable.parse(dc.getData() || []);\n\n                  this.grouping();\n                  this.ready();\n               }\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n\n   component(v1App = false) {\n      var component = new ABViewGridComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow() {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      $$(this.ids.component).show($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewImageEditorComponent\";\n\n      var ImageComponent = this.component(App, idBase);\n\n      return ImageComponent;\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      _logic.validateType = (item) => {\n         // verify file type\n         var acceptableTypes = [\"jpg\", \"jpeg\", \"bmp\", \"png\", \"gif\"];\n         var type = item.type.toLowerCase();\n         if (acceptableTypes.indexOf(type) == -1) {\n            webix.message(\n               L(\"Only [{0}] images are supported\", [\n                  acceptableTypes.join(\", \"),\n               ])\n            );\n            return false;\n         } else {\n            // set upload url to uploader\n            var currView = _logic.currentEditObject();\n            let actionKey = `opstool.AB_${currView.application.name.replace(\n               \"_\",\n               \"\"\n            )}.view`;\n            let url = `/file/upload/${currView.application.name}/${actionKey}/1`;\n\n            $$(ids.file).define(\"upload\", url);\n            $$(ids.file).refresh();\n\n            return true;\n         }\n      };\n\n      _logic.uploadedFile = (fileInfo) => {\n         if (!fileInfo || !fileInfo.data) return;\n\n         var currView = _logic.currentEditObject();\n         currView.settings.filename = fileInfo.data.uuid;\n\n         // get width & height of images\n         if (fileInfo.file) {\n            let img = new Image();\n            img.onload = function () {\n               $$(ids.width).setValue(img.width);\n               $$(ids.height).setValue(img.height);\n            };\n            img.src = URL.createObjectURL(fileInfo.file);\n         }\n\n         // trigger a save()\n         this.propertyEditorSave(ids, currView);\n      };\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         {\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Image:\"),\n                  css: \"ab-text-bold\",\n                  width: this.AB.UISettings.config().labelWidthXLarge,\n               },\n               {\n                  view: \"uploader\",\n                  value: L(\"Upload image\"),\n                  name: \"file\",\n                  apiOnly: true,\n                  inputName: \"image\",\n                  multiple: false,\n                  on: {\n                     onBeforeFileAdd: (item) => {\n                        return _logic.validateType(item);\n                     },\n\n                     onFileUpload: (file, response) => {\n                        _logic.uploadedFile(file);\n                     },\n\n                     onFileUploadError: (file, response) => {},\n                  },\n               },\n            ],\n         },\n         {\n            view: \"counter\",\n            name: \"width\",\n            label: L(\"Width:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      $$(ids.width).setValue(view.settings.width);\n      $$(ids.height).setValue(view.settings.height);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.width = $$(ids.width).getValue();\n      view.settings.height = $$(ids.height).getValue();\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewImageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewKanbanEditorComponent\";\n\n      var Kanban = this.component(App, idBase);\n\n      return {\n         ui: Kanban.ui,\n         logic: Kanban.logic,\n         onShow: Kanban.onShow,\n\n         init: () => {\n            // remove id of the component in caching for refresh .bind of the data collection\n            let dv = this.datacollection;\n            if (dv) dv.removeComponent(Kanban.ui.id);\n\n            Kanban.init();\n         },\n      };\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n\n   component(v1App = false) {\n      let component = new ABViewKanbanComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui.rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewLabelComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewLayoutComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewListEditorComponent\";\n\n      var ListView = this.component(App, idBase);\n\n      return {\n         ui: ListView.ui,\n         logic: ListView.logic,\n         onShow: ListView.onShow,\n\n         init: () => {\n            // remove id of the component in caching for refresh .bind of the data collection\n            let dv = this.datacollection;\n            if (dv) dv.removeComponent(ListView.ui.id);\n\n            ListView.init();\n         },\n      };\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      // _logic functions\n\n      _logic.selectSource = (dcId, oldDcId) => {\n         var currView = _logic.currentEditObject();\n\n         // Update field options in property\n         this.propertyUpdateFieldOptions(ids, currView, dcId);\n      };\n\n      return commonUI.concat([\n         {\n            name: \"datacollection\",\n            view: \"richselect\",\n            label: L(\"Data Source\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            on: {\n               onChange: _logic.selectSource,\n            },\n         },\n         {\n            name: \"field\",\n            view: \"richselect\",\n            label: L(\"Field\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n      ]);\n   }\n\n   /**\n    * @method propertyUpdateFieldOptions\n    * Populate fields of object to select list in property\n    *\n    * @param {Object} ids\n    * @param {ABViewForm} view - the current component\n    * @param {string} dvId - id of ABDatacollection\n    */\n   static propertyUpdateFieldOptions(ids, view, dvId) {\n      var datacollection = view.AB.datacollectionByID(dvId);\n      var object = datacollection ? datacollection.datasource : null;\n\n      // Pull field list\n      var fieldOptions = [];\n      if (object != null) {\n         fieldOptions = object.fields().map((f) => {\n            return {\n               id: f.id,\n               value: f.label,\n            };\n         });\n      }\n\n      $$(ids.field).define(\"options\", fieldOptions);\n      $$(ids.field).refresh();\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      var datacollectionId = view.settings.dataviewID\n         ? view.settings.dataviewID\n         : null;\n      var SourceSelector = $$(ids.datacollection);\n\n      // Pull data collections to options\n      var dcOptions = view.propertyDatacollections();\n      SourceSelector.define(\"options\", dcOptions);\n      SourceSelector.define(\"value\", datacollectionId);\n      SourceSelector.refresh();\n\n      this.propertyUpdateFieldOptions(ids, view, datacollectionId);\n\n      $$(ids.field).setValue(view.settings.field);\n      $$(ids.height).setValue(view.settings.height);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n      view.settings.field = $$(ids.field).getValue();\n      view.settings.height = $$(ids.height).getValue();\n      view.settings.height =\n         parseInt(view.settings.height) || ABViewList.defaultValues().height;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewListComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewMenuComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n   /*\n   componentV1(App) {\n      var comp = super.component(App);\n      var _ui = {\n         view: \"scrollview\",\n         borderless: true,\n         css:\n            this.settings.pageBackground ||\n            ABPropertyComponentDefaults.pageBackground,\n         body: comp.ui,\n      };\n\n      var _init = (options) => {\n         var accessLevel = this.getUserAccess();\n         comp.init(options, accessLevel);\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: comp.logic,\n\n         onShow: comp.onShow,\n      };\n   }\n   */\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewPivotEditorComponent\";\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      var componentBase = this.component(App);\n      var component = App.AB.cloneDeep(componentBase);\n\n      component.ui.id = ids.component;\n      component.ui.readonly = false;\n      component.ui.on = {\n         onBeforeApply: (structure) => {\n            this.settings.structure = structure;\n            this.save();\n         },\n      };\n\n      component.init = (options) => {\n         componentBase.init({\n            componentId: ids.component,\n         });\n      };\n\n      return component;\n   }\n\n   //\n   // Property Editor\n   //\n\n   // static propertyEditorComponent(App) {\n   // \treturn ABViewPropertyComponent.component(App);\n   // }\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      let commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      return commonUI.concat([\n         {\n            name: \"datacollection\",\n            view: \"richselect\",\n            label: L(\"Data Source\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"checkbox\",\n            name: \"removeMissed\",\n            labelRight: L(\"Remove empty data.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"totalColumn\",\n            labelRight: L(\"Show a total column.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"separateLabel\",\n            labelRight: L(\"Separate header label.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"min\",\n            labelRight: L(\n               \"Highlighting of a cell(s) with the least value in a row.\"\n            ),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"max\",\n            labelRight: L(\n               \"Highlighting of a cell(s) with the biggest value in a row.\"\n            ),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            name: \"decimalPlaces\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Decimal Places\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      var datacollectionId = view.settings.dataviewID\n         ? view.settings.dataviewID\n         : null;\n      var SourceSelector = $$(ids.datacollection);\n\n      // Pull data collections to options\n      var dcOptions = view.propertyDatacollections();\n      SourceSelector.define(\"options\", dcOptions);\n      SourceSelector.define(\"value\", datacollectionId);\n      SourceSelector.refresh();\n\n      $$(ids.removeMissed).setValue(view.settings.removeMissed);\n      $$(ids.totalColumn).setValue(view.settings.totalColumn);\n      $$(ids.separateLabel).setValue(view.settings.separateLabel);\n      $$(ids.min).setValue(view.settings.min);\n      $$(ids.max).setValue(view.settings.max);\n      $$(ids.height).setValue(view.settings.height);\n      $$(ids.decimalPlaces).setValue(\n         view.settings.decimalPlaces == null ? 2 : view.settings.decimalPlaces\n      );\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n\n      view.settings.removeMissed = $$(ids.removeMissed).getValue();\n      view.settings.totalColumn = $$(ids.totalColumn).getValue();\n      view.settings.separateLabel = $$(ids.separateLabel).getValue();\n      view.settings.min = $$(ids.min).getValue();\n      view.settings.max = $$(ids.max).getValue();\n      view.settings.height = $$(ids.height).getValue();\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewPivotComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      let idBase = \"ABViewReportsManagerEditorComponent\";\n      let ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      let component = this.component(App);\n\n      component.ui.id = ids.component;\n\n      component.init = (options) => {};\n\n      return component;\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      return commonUI.concat([]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewReportsManagerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTextComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         {\n            name: \"columnSpan\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Column Span\"),\n\n            hidden: true, // TODO\n         },\n         {\n            name: \"rowSpan\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Row Span\"),\n\n            hidden: true, // TODO\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      $$(ids.columnSpan).setValue(\n         view.position.dx || ABPropertyComponentDefaults.columnSpan\n      );\n      $$(ids.rowSpan).setValue(\n         view.position.dy || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.position.dx = $$(ids.columnSpan).getValue();\n      view.position.dy = $$(ids.rowSpan).getValue();\n   }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               view: \"button\",\n               name: \"import\",\n               id: ids.importButton,\n               value: this.label(\"Import\"),\n               css: \"webix_primary\",\n               disabled: true,\n               click: () => {\n                  this.import();\n               },\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = {};\n\n         // Set parent's data collection cursor\n         if (objectLink && linkConnectFields.length && linkValues) {\n            linkConnectFields.forEach((f) => {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               newRowData[f.columnName] = {};\n               newRowData[f.columnName][linkColName] =\n                  linkValues[linkColName] || linkValues.id;\n            });\n         }\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % 50 == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, 50);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui();\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               // \tlet item = this.getItem(rowId);\n\n               // \t_logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n\n   onShow(viewId) {\n      super.onShow(viewId);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key]).hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component();\n         } catch (err) {\n            component = v.component(this.AB._App);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage.bind(this),\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               scrollview: \"\",\n               dataFlexView: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.scrollview,\n            view: \"scrollview\",\n            scroll: \"y\",\n            body: {\n               id: ids.dataFlexView,\n               view: \"flexlayout\",\n               paddingX: 15,\n               paddingY: 19,\n               type: \"space\",\n               cols: [],\n            },\n            on: {\n               onAfterScroll: async () => {\n                  const pos = $$(ids.scrollview).getScrollState();\n\n                  await this.scroll(pos);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      const dataView = $$(ids.dataFlexView);\n\n      // initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      // if (dc.datacollectionLink && dc.fieldLink) {\n      //    dc.bind(dataView, dc.datacollectionLink, dc.fieldLink);\n      // } else {\n      //    dc.bind(dataView);\n      // }\n      // track all flexlayout component IDs on the data collectino so we can notify them of changes\n      dc.attachFlexlayout(dataView);\n      dc.on(\"initializingData\", () => {\n         this.busy();\n      });\n      dc.on(\"initializedData\", () => {\n         this.ready();\n      });\n      dc.on(\"loadData\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"update\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"delete\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"create\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n\n      // this.eventClear();\n      //\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"loadData\",\n      //    listener: () => {\n      //       com.renderData();\n      //    },\n      // });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.initialized) this.renderData();\n   }\n\n   get yPosition() {\n      return this._yPosition ?? 0;\n   }\n\n   set yPosition(pos) {\n      this._yPosition = pos;\n   }\n\n   busy() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.disable();\n\n      const abWebix = this.AB.Webix;\n\n      if (!Scroll.showProgress) abWebix.extend(Scroll, abWebix.ProgressBar);\n\n      Scroll.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.enable();\n\n      const AB = this.AB;\n\n      if (Scroll && !Scroll.hideProgress)\n         AB.Webix.extend(Scroll, AB.Webix.ProgressBar);\n\n      Scroll.hideProgress();\n   }\n\n   renderData() {\n      const ids = this.ids;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      const records = [];\n      const dc = this.datacollection;\n\n      if (!dc) {\n         this.ready();\n\n         return;\n      }\n\n      const Layout = $$(ids.dataFlexView) || $$(ids.component);\n\n      if (!Layout || isNaN(Layout.$width)) {\n         this.ready();\n\n         return;\n      }\n\n      const baseView = this.view;\n      const xCount = parseInt(this.settings.xCount);\n      const recordWidth = Math.floor(\n         (Layout.$width - 20 - xCount * 20) / xCount\n      );\n\n      const rows = dc.getData();\n\n      // if this amount of data is already parsed just skip the rest.\n      if (Layout.currentLength === rows.length) {\n         this.ready();\n\n         return;\n      }\n\n      Layout.currentLength = rows.length;\n\n      // store total of rows\n      this._startPos = Layout.getChildViews ? Layout.getChildViews().length : 0;\n\n      let stopPos = rows.length;\n\n      if (dc.settings.loadAll || this._startPos === 0) stopPos = rows.length;\n      else if (rows.length - this._startPos > 20) stopPos = this._startPos + 20;\n\n      for (let i = this._startPos; i < stopPos; i++) {\n         // get the components configuation\n         const detailCom = new ABViewDetailComponent(baseView, rows[i].id);\n         const _ui = detailCom.ui();\n\n         // adjust the UI to make sure it will look like a \"card\"\n         _ui.type = \"space\";\n         _ui.css = \"ab-detail-view\";\n\n         if (detailsPage || editPage) {\n            _ui.css += ` ab-detail-hover ab-record-${rows[i].id}`;\n\n            if (detailsPage) _ui.css += \" ab-detail-page\";\n\n            if (editPage) _ui.css += \" ab-edit-page\";\n         }\n\n         _ui.paddingX = 10;\n         _ui.paddingY = 6;\n         _ui.minWidth = recordWidth - 10;\n         _ui.maxWidth = recordWidth;\n\n         if (Layout.addView) {\n            Layout.addView(_ui, -1);\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[i]), 0);\n         } else records.push(_ui);\n      }\n\n      if (records.length) {\n         const flexlayout = {\n            id: ids.dataFlexView,\n            view: \"flexlayout\",\n            paddingX: 15,\n            paddingY: 19,\n            type: \"space\",\n            cols: records,\n         };\n\n         this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n\n         for (let j = this._startPos; j < stopPos; j++) {\n            const detailCom = new ABViewDetailComponent(baseView, rows[j].id);\n\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[j]), 0);\n         }\n      }\n\n      if ($$(ids.scrollview)) {\n         $$(ids.scrollview).scrollTo(0, this.yPosition);\n\n         if (detailsPage || editPage) {\n            Layout.$view.onclick = (e) => {\n               let clicked = false;\n               let divs = e.path ?? [];\n\n               // NOTE: Some web browser clients do not support .path\n               if (!divs.length) {\n                  divs.push(e.target);\n                  divs.push(e.target.parentNode);\n               }\n\n               if (editPage) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem_header\") > -1\n                     ) {\n                        clicked = true;\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(editPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n                        break;\n                     }\n                  }\n               }\n\n               if (detailsPage && !clicked) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem\") > -1\n                     ) {\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(detailsPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n\n                        break;\n                     }\n                  }\n               }\n            };\n         }\n      }\n\n      //Add data-cy attributes for cypress tests\n      const name = baseView.name.replace(\".dataview\", \"\");\n\n      Layout.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n\n      Layout.getChildViews().forEach((child, i) => {\n         const uuid = rows[i + this._startPos][\"uuid\"];\n         const view = child.$view;\n\n         view\n            .querySelector(\".webix_accordionitem_body\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item ${name} ${uuid} ${baseView.id}`\n            );\n         view\n            .querySelector(\".webix_accordionitem_button\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item button ${name} ${uuid} ${baseView.id}`\n            );\n      });\n\n      this.ready();\n   }\n\n   emptyView() {\n      const ids = this.ids;\n      const flexlayout = {\n         id: ids.dataFlexView,\n         view: \"flexlayout\",\n         type: \"clean\",\n         padding: 10,\n         css: { background: \"#ebedf0 !important\" },\n         cols: [],\n      };\n\n      this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n   }\n\n   /**\n    * @method scroll\n    * @param pos - {\n    * \t\t\t\t\tx: {integer},\n    * \t\t\t\t\ty: {integer}\n    * \t\t\t\t}\n    */\n   async scroll(pos) {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n      const loadWhen = 40;\n      const y = pos.y;\n      const maxYPos = Layout.$height - Scroll.$height;\n\n      if (maxYPos - y <= loadWhen) {\n         if (this.loadMoreTimer) return;\n\n         this.yPosition = y;\n\n         const dc = this.datacollection;\n\n         if (!dc) return;\n\n         if (Layout.getChildViews().length >= dc.totalCount) return;\n\n         // loading cursor\n         this.busy();\n\n         await dc.loadData(Layout.getChildViews().length || 0);\n\n         this.loadMoreTimer = setTimeout(() => {\n            this.loadMoreTimer = null;\n         }, 1100);\n      }\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field || !b?.field) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field.key === \"formula\" && b.field.key === \"calculate\")\n            return -1;\n         else if (a.field.key === \"calculate\" && b.field.key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData[field.columnName];\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     const dv = this.datacollection;\n                     const ds = dv ? dv.datasource : null;\n                     const needRecalculate =\n                        !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(null, this.ids.detailItem);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let templateLabel = \"\";\n\n      if (detailView?.settings?.showLabel) {\n         if (detailView.settings.labelPosition === \"top\")\n            templateLabel =\n               \"<label style='display:block; text-align: left;' class='webix_inp_top_label'>#label#</label>\";\n         else\n            templateLabel =\n               \"<label style='width: #width#px; display: inline-block; float: left; line-height: 32px;'>#label#</label>\";\n      }\n\n      const template = (templateLabel + \"#result#\")\n         // let template = (templateLabel)\n         .replace(/#width#/g, detailView.settings.labelWidth)\n         .replace(/#label#/g, field ? field.label : \"\")\n         .replace(/#result#/g, field ? field.columnHeader().template({}) : \"\");\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n\n      let templateLabel = \"\";\n\n      if (settings.showLabel) {\n         if (settings.labelPosition === \"top\")\n            templateLabel =\n               \"<label style='display:block; text-align: left;' class='webix_inp_top_label'>#label#</label>#display#\";\n         else\n            templateLabel =\n               \"<label style='width: #width#px; display: inline-block; float: left; line-height: 32px;'>#label#</label><div class='ab-detail-component-holder' style='margin-left: #width#px;'>#display#</div>\";\n      }\n      // no label\n      else templateLabel = \"#display#\";\n\n      const field = baseView.field();\n      const template = templateLabel\n         .replace(/#width#/g, settings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\");\n\n      let height = 38;\n\n      if (settings.labelPosition === \"top\") height = height * 2;\n\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const _ui = super.ui([\n         Object.assign(\n            {\n               id: this.ids.detailItem,\n               view: \"template\",\n               borderless: true,\n               height: height,\n               isUsers: field?.key === \"user\",\n               template: template,\n               data: { display: \"\" }, // show empty data in template\n            },\n            uiDetailItemComponent\n         ),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            if (dcCursor) {\n               const treeCursor = dc.getCursor(true);\n\n               dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            } else dataList.push(...this.AB.cloneDeep(dc.getData()));\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = this.setReportValues(\n                     data,\n                     f,\n                     fieldLabels,\n                     mlFields\n                  );\n\n                  // Keep id of ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //\t\tfieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //\t\t\twe can buy newer version to support it\n            //\t\t\thttps://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         // \tif (imgBuffer) {\n         // \t\tvar maxWidth = 300;\n         // \t\tvar maxHeight = 160;\n\n         // \t\t// Find aspect ratio image dimensions\n         // \t\ttry {\n         // \t\t\tvar image = sizeOf(imgBuffer);\n         // \t\t\tvar ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         // \t\t\treturn [image.width * ratio, image.height * ratio];\n         // \t\t}\n         // \t\t// if invalid image, then should return 0, 0 sizes\n         // \t\tcatch (err) {\n         // \t\t\treturn [0, 0];\n         // \t\t}\n\n         // \t}\n         // \telse {\n         // \t\treturn [0, 0];\n         // \t}\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n               reloadView: `${\n                  idBase || `ABViewForm_${baseView.id}`\n               }_form_reloadView`,\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n      this.loadDcDataOfRecordRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   loadDcDataOfRecordRules() {\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollections(\n                  (dc) => dc.id === op.value\n               )[0];\n\n               if (\n                  pullDataDC &&\n                  pullDataDC.dataStatus === pullDataDC.dataStatusFlag.notInitial\n               )\n                  pullDataDC.loadData();\n            }\n         );\n      });\n   }\n\n   async onShow(data) {\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n\n      await superComponent.onShow();\n\n      const ids = this.ids;\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // if the cursor is cleared before or after we need to make\n         // sure the reload view button does not appear\n         if (settings.clearOnLoad || settings.clearOnSave)\n            $$(ids.reloadView)?.getParentView()?.removeView(ids.reloadView);\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n\n         if ($form) dc.bind($form);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox && comp.settings.type === \"rich\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field() && comp.field().id === relationField.id;\n      })[0];\n\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n};\n\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               let selectedValues;\n               if (Array.isArray(data)) {\n                  selectedValues = [];\n                  data.forEach((record) => {\n                     selectedValues.push(record.id || record);\n                     // let recordObj = record;\n                     // if (typeof record != \"object\") {\n                     //    // we need to convert either index or uuid to full data object\n                     //    recordObj = field.getItemFromVal(record);\n                     // }\n                     // if (recordObj?.id) selectedValues.push(recordObj.id);\n                  });\n               } else {\n                  selectedValues = data;\n                  if (typeof data != \"object\") {\n                     // we need to convert either index or uuid to full data object\n                     selectedValues = field.getItemFromVal(data);\n                  }\n                  // selectedValues = field.pullRecordRelationValues(selectedValues);\n                  if (selectedValues?.id) {\n                     selectedValues = selectedValues.id;\n                  } else {\n                     selectedValues = data;\n                  }\n               }\n\n               // We can now set the new value but we need to block event listening\n               // so it doesn't trigger onChange again\n               const $formItem = $$(ids.formItem);\n\n               // for xxx->one connections we need to populate again before setting\n               // values because we need to use the selected values to add options\n               // to the UI\n               if (this?.field?.settings?.linkViaType == \"one\") {\n                  field.getAndPopulateOptions(\n                     $formItem,\n                     baseView.options,\n                     field,\n                     baseView.parentFormComponent()\n                  );\n               }\n\n               if ($formItem) {\n                  $formItem.blockEvent();\n\n                  const prepedVals = selectedValues.join\n                     ? selectedValues.join()\n                     : selectedValues;\n\n                  $formItem.setValue(prepedVals);\n                  $formItem.unblockEvent();\n               }\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         const currentVals = $formItem.getValue();\n\n         let selectedItems;\n         if (currentVals.indexOf(saveData.id) === -1)\n            selectedItems = (currentVals ? `${currentVals},${saveData.id}` : saveData.id);\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData.id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.view.settings.filterConditions;\n      } else if (settings?.objectWorkspace?.filterConditions?.rules?.length) {\n         filterConditions = settings.objectWorkspace.filterConditions;\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField.settings.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         sort: settings.objectWorkspace.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      field.getAndPopulateOptions(\n         // $node,\n         $$(ids.formItem),\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n\n      node.setAttribute(\"data-cy\", dataCy);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || settings.required ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      const template =\n         `<div class=\"customField ${formSettings.labelPosition}\">${templateLabel}#template#</div>`\n            .replace(/#width#/g, formSettings.labelWidth)\n            .replace(\n               /#label#/g,\n               `${formSettings.labelPosition == \"top\" ? \"\" : field.label}`\n            )\n            .replace(\n               /#template#/g,\n               field\n                  ?.columnHeader({\n                     width: this.new_width,\n                     height: height,\n                     editable: true,\n                  })\n                  .template({}) ?? \"\"\n            );\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || this.new_width\n            : this.new_width;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings.required)\n            _uiFormItem.required = 1;\n\n         if (settings.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: () => {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        const $resizer = $$(ids.resizer);\n\n                        if (itemId) {\n                           const data = $$(ids.kanban).getItem(itemId);\n\n                           this.FormSide.show(data);\n\n                           $resizer?.show();\n                        } else {\n                           this.FormSide.hide();\n\n                           $resizer?.hide();\n                        }\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            if (!this.settings.template)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      const CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this._ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this._ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this._ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (\n                  CurrentHorizontalField instanceof this._ABFieldConnect\n               )\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this._ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this._ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            $menuUser.parse(\n               options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                  };\n               })\n            );\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         try {\n            viewComponents[v.id] = v.component();\n         } catch (err) {\n            // NOTE: The 'Layout' component supports only view component v2\n            console.error(\n               `View: [${v.key}] might need to be updated to new version`,\n               err\n            );\n         }\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id, e, node) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            id: this.ids.pivot,\n            view: \"pivot\",\n            readonly: true,\n            removeMissed: settings.removeMissed,\n            totalColumn: settings.totalColumn,\n            separateLabel: settings.separateLabel,\n            min: settings.min,\n            max: settings.max,\n            format: (value) => {\n               const decimalPlaces = settings.decimalPlaces || 2;\n\n               return value !== \"0\"\n                  ? parseFloat(value).toFixed(decimalPlaces || 0)\n                  : value;\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      const object = dc.datasource;\n\n      if (!object) return;\n\n      const $pivot = $$(ids.pivot);\n\n      if ($pivot && object instanceof ABObjectQuery) {\n         const customLabels = {};\n\n         object.fields().forEach((f) => {\n            customLabels[f.columnName] = f.label;\n         });\n\n         $pivot.define(\"fieldMap\", customLabels);\n      }\n\n      const populateData = () => {\n         const data = dc.getData();\n         const dataMapped = data.map((d) => {\n            const result = {};\n\n            object.fields().forEach((f) => {\n               if (\n                  f instanceof ABFieldCalculate ||\n                  f instanceof ABFieldFormula ||\n                  f instanceof ABFieldNumber\n               )\n                  result[f.columnName] = d[f.columnName];\n               else result[f.columnName] = f.format(d);\n            });\n\n            return result;\n         });\n\n         $pivot.parse(dataMapped);\n\n         const settings = this.settings;\n\n         // set pivot configuration\n         if (settings.structure) $pivot.setStructure(settings.structure);\n      };\n\n      this.view.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            populateData();\n         },\n      });\n\n      switch (dc.dataStatus) {\n         case dc.dataStatusFlag.notInitial:\n            dc.loadData();\n\n            break;\n\n         case dc.dataStatusFlag.initialized:\n            populateData();\n\n            break;\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign({ reportManager: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      const _uiReportManager = {\n         id: this.ids.reportManager,\n         view: \"reports\",\n         toolbar: true,\n         override: new Map([\n            [\n               reports.services.Backend,\n               class MyBackend extends reports.services.Backend {\n                  async getModules() {\n                     return settings.moduleList || [];\n                  }\n\n                  saveModule(id = abWebix.uid(), data) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     let indexOfModule = null;\n\n                     const module = settings.moduleList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfModule = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (module) settings.moduleList[indexOfModule] = data;\n                     // Add\n                     else settings.moduleList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteModule(id) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     settings.moduleList = settings.moduleList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getModels() {\n                     const reportModels = {};\n\n                     (ab.datacollections() || []).forEach((dc) => {\n                        const obj = dc.datasource;\n\n                        if (!obj) return;\n\n                        const reportFields = self.getReportFields(dc);\n\n                        // get connected data collections\n                        // let linkedFields = [];\n                        // (obj.connectFields() || []).forEach((f, index) => {\n                        //    let connectedDcs = ab.datacollections(\n                        //       (dColl) =>\n                        //          dColl &&\n                        //          dColl.datasource &&\n                        //          dColl.datasource.id === f.settings.linkObject\n                        //    );\n                        //    (connectedDcs || []).forEach((linkedDc) => {\n                        //       linkedFields.push({\n                        //          id: index + 1,\n                        //          name: linkedDc.label,\n                        //          source: dc.id,\n                        //          target: linkedDc.id\n                        //       });\n                        //    });\n                        // });\n\n                        // // MOCK UP for testing\n                        // let linkedFields = [\n                        //    {\n                        //       id: \"id\",\n                        //       name: \"id\",\n                        //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n                        //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n                        //    }\n                        // ];\n\n                        reportModels[dc.id] = {\n                           id: dc.id,\n                           name: dc.label,\n                           data: reportFields,\n                           refs: [],\n                        };\n                     });\n\n                     return reportModels;\n                  }\n\n                  async getQueries() {\n                     return settings.queryList || [];\n                  }\n\n                  saveQuery(id = abWebix.uid(), data) {\n                     settings.queryList = settings.queryList || [];\n\n                     let indexOfQuery = null;\n\n                     const query = settings.queryList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfQuery = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (query) settings.queryList[indexOfQuery] = data;\n                     // Add\n                     else settings.queryList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteQuery(id) {\n                     settings.queryList = settings.queryList || [];\n                     settings.queryList = settings.queryList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getData(config) {\n                     let result = [];\n                     let pullDataTasks = [];\n                     let dcIds = [];\n                     let dcData = {};\n                     let reportFields = [];\n\n                     // pull data of the base and join DCs\n                     dcIds.push(config.data);\n                     (config.joins || []).forEach((j) => {\n                        dcIds.push(j.sid);\n                        dcIds.push(j.tid);\n                     });\n                     dcIds = ab.uniq(dcIds);\n                     dcIds.forEach((dcId) => {\n                        pullDataTasks.push(\n                           new Promise((resolve, reject) => {\n                              const getData = async () => {\n                                 try {\n                                    dcData[dcId] =\n                                       (await self.getData(dcId)) || [];\n\n                                    resolve();\n                                 } catch (err) {\n                                    reject(err);\n                                 }\n                              };\n\n                              getData();\n                           })\n                        );\n                     });\n\n                     dcIds.forEach((dcId) => {\n                        const dataCol = ab.datacollectionByID(dcId);\n\n                        if (!dataCol) return;\n\n                        reportFields = reportFields.concat(\n                           self.getReportFields(dataCol).map((f) => {\n                              // change format of id to match the report widget\n                              f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                              return f;\n                           })\n                        );\n                     });\n\n                     await Promise.all(pullDataTasks);\n\n                     // the data result equals data of the base DC\n                     result = dcData[config.data] || [];\n\n                     if (config.joins?.length)\n                        (config.joins || []).forEach((j) => {\n                           const sourceDc = ab.datacollectionByID(j.sid);\n\n                           if (!sourceDc) return;\n\n                           const sourceObj = sourceDc.datasource;\n\n                           if (!sourceObj) return;\n\n                           const targetDc = ab.datacollectionByID(j.tid);\n\n                           if (!targetDc) return;\n\n                           const targetObj = targetDc.datasource;\n\n                           if (!targetObj) return;\n\n                           const sourceLinkField = sourceObj.fieldByID(j.sf);\n                           const targetLinkField = targetObj.fieldByID(j.tf);\n\n                           if (!sourceLinkField && !targetLinkField) return;\n\n                           const sourceData = dcData[j.sid] || [];\n                           const targetData = dcData[j.tid] || [];\n\n                           sourceData.forEach((sData) => {\n                              targetData.forEach((tData) => {\n                                 let sVal =\n                                    sData[\n                                       sourceLinkField\n                                          ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                          : `${j.sid}.id`\n                                    ] || [];\n\n                                 let tVal =\n                                    tData[\n                                       targetLinkField\n                                          ? `${j.tid}.${targetLinkField.columnName}.id`\n                                          : `${j.tid}.id`\n                                    ] || [];\n\n                                 if (!Array.isArray(sVal)) sVal = [sVal];\n\n                                 if (!Array.isArray(tVal)) tVal = [tVal];\n\n                                 // Add joined row to the result array\n                                 const matchedVal = sVal.filter(\n                                    (val) => tVal.indexOf(val) > -1\n                                 );\n\n                                 if (matchedVal?.length) {\n                                    const updateRows =\n                                       result.filter(\n                                          (r) =>\n                                             r[`${j.sid}.id`] ===\n                                                sData[`${j.sid}.id`] &&\n                                             !r[`${j.tid}.id`]\n                                       ) || [];\n\n                                    if (updateRows?.length)\n                                       (updateRows || []).forEach((r) => {\n                                          for (const key in tData)\n                                             if (key !== \"id\")\n                                                r[key] = tData[key];\n                                       });\n                                    else\n                                       result.push(\n                                          Object.assign(\n                                             ab.cloneDeep(sData),\n                                             ab.cloneDeep(tData)\n                                          )\n                                       );\n                                 }\n                              });\n                           });\n                        });\n\n                     // filter & sort\n                     const queryVal = JSON.parse(config.query || \"{}\");\n\n                     if (queryVal?.rules?.length)\n                        queryVal.rules.forEach((r) => {\n                           if (!r || !r.type || !r.condition) return;\n\n                           switch (r.type) {\n                              case \"date\":\n                              case \"datetime\":\n                                 // Convert string to Date object\n                                 if (r.condition.filter) {\n                                    if (ab.isString(r.condition.filter))\n                                       r.condition.filter = ab.rules.toDate(\n                                          r.condition.filter\n                                       );\n\n                                    if (\n                                       r.condition.filter.start &&\n                                       ab.isString(r.condition.filter.start)\n                                    )\n                                       r.condition.filter.start =\n                                          ab.rules.toDate(\n                                             r.condition.filter.start\n                                          );\n\n                                    if (\n                                       r.condition.filter.end &&\n                                       ab.isString(r.condition.filter.end)\n                                    )\n                                       r.condition.filter.end = ab.rules.toDate(\n                                          r.condition.filter.end\n                                       );\n                                 }\n\n                                 break;\n                           }\n                        });\n\n                     // create a new query widget to get the filter function\n                     const filterElem = abWebix.ui({\n                        view: \"query\",\n                        fields: reportFields,\n                        value: queryVal,\n                     });\n\n                     // create a new data collection and apply the query filter\n                     const tempDc = new abWebix.DataCollection();\n\n                     tempDc.parse(result);\n\n                     // filter\n                     let filterFn;\n\n                     try {\n                        filterFn = filterElem.getFilterFunction();\n                     } catch (error) {\n                        // continue regardless of error\n                     }\n\n                     if (filterFn) tempDc.filter(filterFn);\n\n                     // sorting\n                     (config.sort || []).forEach((sort) => {\n                        if (sort.id)\n                           tempDc.sort({\n                              as: \"string\",\n                              dir: sort.mod || \"asc\",\n                              by: `#${sort.id}#`,\n                           });\n                     });\n\n                     result = tempDc.serialize();\n\n                     // clear\n                     filterElem.destructor();\n                     tempDc.destructor();\n\n                     // group by\n                     if (config?.group?.length) {\n                        (config.group || []).forEach((groupProp) => {\n                           result = _(result).groupBy(groupProp);\n                        });\n\n                        result = result\n                           .map((groupedData, id) => {\n                              const groupedResult = {};\n\n                              (config.columns || []).forEach((col) => {\n                                 const agg = col.split(\".\")[0];\n                                 const rawCol = col.replace(\n                                    /sum.|avg.|count.|max.|min./g,\n                                    \"\"\n                                 );\n\n                                 switch (agg) {\n                                    case \"sum\":\n                                       groupedResult[col] = ab.sumBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"avg\":\n                                       groupedResult[col] = ab.meanBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"count\":\n                                       groupedResult[col] = (\n                                          groupedData || []\n                                       ).length;\n                                       break;\n                                    case \"max\":\n                                       groupedResult[col] =\n                                          (ab.maxBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    case \"min\":\n                                       groupedResult[col] =\n                                          (ab.minBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    default:\n                                       groupedResult[col] = groupedData[0][col];\n                                       break;\n                                 }\n                              });\n\n                              return groupedResult;\n                           })\n                           .value();\n                     }\n\n                     return result;\n                  }\n                  getOptions(fields) {\n                     return Promise.resolve([]);\n                  }\n                  getFieldData(fieldId) {\n                     return Promise.resolve([]);\n                  }\n               },\n            ],\n            [\n               reports.views.table,\n               class MyTable extends reports.views.table {\n                  // NOTE: fix format of date column type\n                  GetColumnConfig(a) {\n                     if (a.type === \"date\") {\n                        return {\n                           id: a.id,\n                           header:\n                              !a.meta.header || a.meta.header === \"none\"\n                                 ? a.meta.name || a.name\n                                 : [\n                                      a.meta.name || a.name,\n                                      {\n                                         content:\n                                            a.header === \"text\"\n                                               ? \"textFilter\"\n                                               : \"richSelectFilter\",\n                                      },\n                                   ],\n                           type: a.type,\n                           sort: \"date\",\n                           width: a.width || 200,\n                           format: (val) => {\n                              // check valid date\n                              if (val?.getTime && !isNaN(val.getTime()))\n                                 return abWebix.i18n.dateFormatStr(val);\n                              else return \"\";\n                           },\n                        };\n                     } else return super.GetColumnConfig(a);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      const _ui = super.ui([_uiReportManager]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         fields.push({\n            id: f.columnName,\n            name: f.label,\n            filter: f.fieldIsFilterable(),\n            edit: false,\n            type: columnFormat.editor || \"text\",\n            format: columnFormat.format,\n            options: columnFormat.options,\n            ref: \"\",\n            key: false,\n            show: true,\n            abField: f,\n         });\n\n         if (f.isConnection && f.settings.isSource) {\n            const linkedDcs = this.AB.datacollectionByID(f.settings.linkObject);\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n\n      if (!object) return [];\n\n      if (\n         datacollection.dataStatus === datacollection.dataStatusFlag.notInitial\n      )\n         await datacollection.loadData();\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            reportRow[col] = field ? field.format(row) : row[columnName];\n\n            // FK value of the connect field\n            if (field && field.isConnection) {\n               if (Array.isArray(row[columnName]))\n                  reportRow[`${col}.id`] = row[columnName].map(\n                     (link) =>\n                        link[field.datasourceLink.PK()] || link.id || link\n                  );\n               else if (row[columnName])\n                  reportRow[`${col}.id`] =\n                     row[columnName][field.datasourceLink.PK()] ||\n                     row[columnName].id ||\n                     row[columnName];\n            }\n\n            const rField = reportFields.filter((f) => f.id === columnName)[0];\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onAfterRender: () => {\n                        const $sidebar = $$(ids.sidebar);\n\n                        // set ids of controller buttons\n                        const collapseNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                        );\n\n                        if (collapseNode)\n                           collapseNode.setAttribute(\n                              \"data-cy\",\n                              `tab-collapseMenu-${ids.collapseMenu}`\n                           );\n\n                        const expandNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.expandMenu}\"]`\n                        );\n\n                        if (expandNode)\n                           expandNode.setAttribute(\n                              \"data-cy\",\n                              `tab-expandMenu-${ids.expandMenu}`\n                           );\n\n                        baseView.views((view) => {\n                           const node = $sidebar.$view.querySelector(\n                              `[webix_tm_id=\"${view.id}_menu\"]`\n                           );\n\n                           if (!node) return;\n\n                           node.setAttribute(\n                              \"data-cy\",\n                              `tab-${view.label.replace(\" \", \"\")}-${view.id}-${\n                                 baseView.id\n                              }`\n                           );\n                        });\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n\n      $tab.blockEvent();\n      this.view.changePage(pageId);\n      $tab.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const ids = this.ids;\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (\n         (view.key === \"tab\" || view.key === \"viewcontainer\") &&\n         $viewID?.show\n      ) {\n         $viewID.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const button = pageClone.views(\n                  (v) => v instanceof ABViewFormButton,\n                  true\n               )[0];\n               if (button) {\n                  button.parent.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               }\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      var id = \"hiddenQB_\" + webix.uid();\n\n      // if our data passes the QueryRules then tell Action to process\n      var ui = {\n         id: id,\n         hidden: true,\n         view: \"querybuilder\",\n      };\n      var hiddenQB = webix.ui(ui);\n\n      let currentAction = this.currentAction();\n      var QBCondition = currentAction.condition();\n\n      if (this.objectQB) {\n         this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      }\n\n      let query = QBCondition[0] || {},\n         fields = QBCondition[1] || [];\n\n      let convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.type == \"number\" ||\n               f.type == \"calculate\" ||\n               f.type == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (query && query.rules && Array.isArray(query.rules)) {\n                  query.rules.forEach((r) => {\n                     if (r.key != f.id) return;\n\n                     r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (data[f.id] && typeof data[f.id] === \"string\") {\n                  data[f.id] = convertToNumber(data[f.id]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      // hiddenQB.setValue(QBCondition);\n      hiddenQB.setValue({\n         query: query,\n         fields: fields,\n      });\n\n      var QBHelper = hiddenQB.getFilterHelper();\n      var isValid = QBHelper(data);\n\n      hiddenQB.destructor(); // remove the QB\n\n      return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings || {};\n      this.valueRules = settings.valueRules || {};\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: connObj.PK(),\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC = this.currentForm.AB.datacollectionByID(\n                                    newv\n                                 );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options = this.currentForm.datacollection.datasource\n                                 .fields()\n                                 .map(function (f) {\n                                    return {\n                                       id: f.id,\n                                       value: f.label,\n                                    };\n                                 });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 fieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection = this.currentForm.AB.datacollectionByID(\n                                 dcId\n                              );\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection = this.currentForm.AB.datacollectionByID(\n                        collectionId\n                     );\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return this.updateObject ? this.updateObject.fieldByID(fieldID) : null;\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue = clonedDataCollection.datasource.fieldByID(\n                           op.queryField\n                        );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue = clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone = this.currentForm.AB.cloneDeep(\n                                 objectToUpdate\n                              );\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue = clonedDataCollection.datasource.fieldByID(\n                           op.queryField\n                        );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","normalizeData","isConnected","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","jobID","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","QueuedOperations","_queueTimer","runQueue","op","queueOperation","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","applications","apps","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","waitForDataCollectionToInitialize","loadData","start","limit","wheres","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","__totalCount","total_count","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allProcesses","_allQueries","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","fieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","includeRelativeData","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","subData","relatedMlFields","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","colIds","match","colId","colIdNoBracket","ABModelQuery","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","canFilterField","isNew","clonedField","currFields","_joins","objectBase","objID","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","ele","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","showObjectName","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","unshift","fieldsToQB","conditions","processFieldKeys","fieldsAddFiltersBoolean","fieldsAddFiltersQueryField","fieldsAddFiltersQuery","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersString","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","_isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","in_query","inQuery","not_in_query","notInQuery","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryFieldConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","description","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","warnings","_warnings","ABFieldConnectDefaults","fieldDefaults","names","linkObj","configError","pullRelationValues","selectedData","dataValue","propName","getRelationValue","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","assign","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","toISOString","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","opt","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","isNaN","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","step","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldOpt","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","refreshData","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","imageURL","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","moduleList","queryList","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","_object","displayText","componentID","clearTemplateValue","fData","urlImage","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","allRoles","warningsAll","CustomComponentManager","custom","create","edit","export","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","dataCollectionLink","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","allWarnings","datacollectionById","ABDefinitionCore","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","h","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","allDestroy","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","_recordRuleFieldOptions","hidden","isSaveHidden","myPopup","isRecordRule","fieldOptions","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","_customOptions","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","recordRuleFieldOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","ABFieldCore","_CurrentField","filterViews","filterComplex","addValidation","numberOfNull","Field","labelOnChange","requiredOnChange","getNumberOfNullValue","isRequired","messageTemplate","color","Filter","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","storageID","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","each","option","querySelector","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","display","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","delay","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","querySelectorAll","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","w","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","v1App","idPrefix","newComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","componentId","_onShow","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormSelectMultiple","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","recordRulesReady","newFormVals","formError","formReady","$saveButton","invalidAttrs","sqlMessage","focusOnFirst","topPosition","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","viewLocation","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","csv","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","checked","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ObjectDefaults","commonUI","propertyEditorDefaultElements","validateType","currentEditObject","actionKey","uploadedFile","propertyEditorSave","propertyEditorPopulate","propertyEditorValues","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","Kanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewList","ListView","selectSource","dcId","oldDcId","propertyUpdateFieldOptions","dvId","SourceSelector","propertyDatacollections","ABViewMenuCore","ABViewMenuComponent","ABViewPageCore","ABViewPivotCore","ABViewPivotComponent","componentBase","readonly","onBeforeApply","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","parsedData","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","year","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","linkConnectFields","validRows","allValid","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","scrollview","dataFlexView","paddingX","paddingY","onAfterScroll","dataView","emptyView","renderData","_yPosition","Layout","Scroll","records","$width","recordWidth","currentLength","_startPos","stopPos","flexlayout","clicked","divs","background","loadMoreTimer","detailItem","createdRow","updatedRow","myVal","needRecalculate","templateLabel","$detailItem","parsedImageUrl","imageUrl","uiDetailItemComponent","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","reloadView","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","loadDcDataOfRecordRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","selectedValues","$formItem","prepedVals","initAddEditTool","selectAll","customField","trg","apcUI","inputId","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","currentVals","selectedItems","formBusy","__editFormDcEvent","$node","getFilterByConnectValues","filterByConnectValue","$ui","vc","linkedField","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","AB_App","uiFormItemComponent","_uiFormItem","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","$resizer","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","setInterval","clearInterval","parentElem","viewInfo","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","$pivot","customLabels","populateData","dataMapped","setStructure","reportManager","_uiReportManager","reports","saveModule","indexOfModule","m","viewSave","deleteModule","reportModels","reportFields","getReportFields","refs","saveQuery","indexOfQuery","deleteQuery","pullDataTasks","dcIds","dcData","sid","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","sData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","groupProp","_","groupedData","groupedResult","agg","rawCol","getFieldData","GetColumnConfig","meta","columnFormat","ref","abField","reportData","reportRow","rField","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","selectedItem","abStorage","$sidebar","toggle","collapseNode","expandNode","multiview","keepViews","onViewChange","prevId","nextId","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","linkedData","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilter","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","callEvent","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","notes","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","hiddenQB","QBCondition","convertToNumber","QBHelper","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","newValues","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","some","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","parsed","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","_this","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","version","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","ArrayBuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","eachRow","$count","setMasterValue","master"],"sourceRoot":""}